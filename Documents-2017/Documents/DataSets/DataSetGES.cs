using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Threading;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;

namespace Documents.DataSets
{


  //  [Serializable, DesignerCategory("code"), XmlSchemaProvider("GetTypedDataSetSchema"), XmlRoot("DataSetGES"), HelpKeyword("vs.data.DataSet"), ToolboxItem(true)]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetGES")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    internal partial class DataSetGES : global::System.Data.DataSet
    {
        private System.Data.SchemaSerializationMode _schemaSerializationMode;
        private DataRelation relationtJ_RequestForRepair_tJ_RequestForRepairDaily;
        private DataRelation relationvJ_RequestForRepair_tJ_RequestForRepairDaily;
        private dtAmountFreeCapasityDataTable tabledtAmountFreeCapasity;
        private dtBusesDataTable tabledtBuses;
        private dtBusesTransfDataTable tabledtBusesTransf;
        private dtCellsDataTable tabledtCells;
        private dtCoefficientLoadingAddlDataTable tabledtCoefficientLoadingAddl;
        private dtExcelessLoadAddlReportDataTable tabledtExcelessLoadAddlReport;
        private dtMeasCableRatioDataTable tabledtMeasCableRatio;
        private dtMeasCellRatioDataTable tabledtMeasCellRatio;
        private dtMeasTransfAmperageDopDataReportDataTable tabledtMeasTransfAmperageDopDataReport;
        private fn_J_ExcelessLoadReportDataTable tablefn_J_ExcelessLoadReport;
        private fn_J_GetBusLVByTransfDataTable tablefn_J_GetBusLVByTransf;
        private fn_J_GetBusMVByTransfDataTable tablefn_J_GetBusMVByTransf;
        private fn_J_GetCellCableLVByTransfDataTable tablefn_J_GetCellCableLVByTransf;
        private fn_J_GetCellLVByTransfDataTable tablefn_J_GetCellLVByTransf;
        private fn_J_GetCellTransfByBusHVDataTable tablefn_J_GetCellTransfByBusHV;
        private fn_J_GetCellTransfByBusLVDataTable tablefn_J_GetCellTransfByBusLV;
        private fn_J_GetTransfByBusLVDataTable tablefn_J_GetTransfByBusLV;
        private fn_J_MeasCableCalcResultsDataTable tablefn_J_MeasCableCalcResults;
        private fn_J_MeasTransfPassportDataTable tablefn_J_MeasTransfPassport;
        private tAbnDataTable tabletAbn;
        private tAbnContactDataTable tabletAbnContact;
        private tAbnDoc_DogovorDataTable tabletAbnDoc_Dogovor;
        private tAbnDoc_ListDataTable tabletAbnDoc_List;
        private tAbnObjDataTable tabletAbnObj;
        private tAbnObjDoc_AktRBPDataTable tabletAbnObjDoc_AktRBP;
        private tAbnObjDoc_FileDataTable tabletAbnObjDoc_File;
        private tAbnObjDoc_ImageDataTable tabletAbnObjDoc_Image;
        private tAbnObjDoc_ListDataTable tabletAbnObjDoc_List;
        private tG_AbnAddressDataTable tabletG_AbnAddress;
        private tG_AbnChiefDataTable tabletG_AbnChief;
        private tJ_BossUserDataTable tabletJ_BossUser;
        private tJ_BossUserGroupDataTable tabletJ_BossUserGroup;
        private tJ_MeasAmperageTransfDataTable tabletJ_MeasAmperageTransf;
        private tJ_MeasCableDataTable tabletJ_MeasCable;
        private tJ_MeasCellDataTable tabletJ_MeasCell;
        private tJ_MeasurementDataTable tabletJ_Measurement;
        private tJ_MeasVoltageTransfDataTable tabletJ_MeasVoltageTransf;
        private tJ_MemCommissionDataTable tabletJ_MemCommission;
        private tJ_MemFilesDataTable tabletJ_MemFiles;
        private tJ_MemorandumDataTable tabletJ_Memorandum;
        private tJ_MemWorkerDataTable tabletJ_MemWorker;
        private tJ_RelayProtectionAutomationDataTable tabletJ_RelayProtectionAutomation;
        private tJ_RelayProtectionAutomationValueDataTable tabletJ_RelayProtectionAutomationValue;
        private tJ_RequestDataTable tabletJ_Request;
        private tJ_RequestDocDataTable tabletJ_RequestDoc;
        private tJ_RequestForRepairDataTable tabletJ_RequestForRepair;
        private tJ_RequestForRepairDailyDataTable tabletJ_RequestForRepairDaily;
        private tJ_RequestForRepairDocDataTable tabletJ_RequestForRepairDoc;
        private tJ_UpdateProgramDataTable tabletJ_UpdateProgram;
        private tJ_UpdateProgramDocDataTable tabletJ_UpdateProgramDoc;
        private tJ_UpdateProgramUserCheckDataTable tabletJ_UpdateProgramUserCheck;
        private tL_RequestForRepairSchmObjListDataTable tabletL_RequestForRepairSchmObjList;
        private tL_SchmAbnDataTable tabletL_SchmAbn;
        private tP_ValueListsDataTable tabletP_ValueLists;
        private tR_CableAmperageDataTable tabletR_CableAmperage;
        private tR_CableMakeupDataTable tabletR_CableMakeup;
        private tR_CableVoltageDataTable tabletR_CableVoltage;
        private tR_CableWiresDataTable tabletR_CableWires;
        private tR_ClassifierDataTable tabletR_Classifier;
        private tR_CrossSectionDataTable tabletR_CrossSection;
        private tR_DocTemplateDataTable tabletR_DocTemplate;
        private tSchm_ObjListDataTable tabletSchm_ObjList;
        private tSchm_ObjList1DataTable tabletSchm_ObjList1;
        private tSchm_ObjList2DataTable tabletSchm_ObjList2;
        private tSchm_ObjList3DataTable tabletSchm_ObjList3;
        private tTC_ActTCDataTable tabletTC_ActTC;
        private tTC_DocDataTable tabletTC_Doc;
        private tUserDataTable tabletUser;
        private vAbnDataTable tablevAbn;
        private vJ_BossUserDataTable tablevJ_BossUser;
        private vJ_BusesTransfsDataTable tablevJ_BusesTransfs;
        private vJ_BusesTransfSchemaDataTable tablevJ_BusesTransfSchema;
        private vJ_CableByCellDataTable tablevJ_CableByCell;
        private vJ_CableByCellMeasDataTable tablevJ_CableByCellMeas;
        private vJ_CableMakeupDataTable tablevJ_CableMakeup;
        private vJ_CableReferenceDataTable tablevJ_CableReference;
        private vJ_CellByBusDataTable tablevJ_CellByBus;
        private vJ_CoefficientIrregularityDataTable tablevJ_CoefficientIrregularity;
        private vJ_CoefficientLoadingDataTable tablevJ_CoefficientLoading;
        private vJ_GetMeasYearsDataTable tablevJ_GetMeasYears;
        private vJ_LastCableInfoDataTable tablevJ_LastCableInfo;
        private vJ_MeasAbnObjDataTable tablevJ_MeasAbnObj;
        private vJ_MeasAmpSubTransf_TEMPDataTable tablevJ_MeasAmpSubTransf_TEMP;
        private vJ_MeasCableDataTable tablevJ_MeasCable;
        private vJ_MeasCableReportDataTable tablevJ_MeasCableReport;
        private vJ_MeasCableReport2DataTable tablevJ_MeasCableReport2;
        private vJ_MeasCellDataTable tablevJ_MeasCell;
        private vJ_MeasPeriodBySubstationDataTable tablevJ_MeasPeriodBySubstation;
        private vJ_MeasSubTransf_TEMPDataTable tablevJ_MeasSubTransf_TEMP;
        private vJ_MeasTransfPassportDataTable tablevJ_MeasTransfPassport;
        private vJ_MeasTransfVoltageDataTable tablevJ_MeasTransfVoltage;
        private vJ_MeasurementReportDataTable tablevJ_MeasurementReport;
        private vJ_MemCommissionDataTable tablevJ_MemCommission;
        private vJ_MemorandumDataTable tablevJ_Memorandum;
        private vJ_PowerISR_SSBusDataTable tablevJ_PowerISR_SSBus;
        private vJ_PowerISR_SSTransfDataTable tablevJ_PowerISR_SSTransf;
        private vJ_PowerISR_TransfDataTable tablevJ_PowerISR_Transf;
        private vJ_RelayProtectionAutomationDataTable tablevJ_RelayProtectionAutomation;
        private vJ_RequestDataTable tablevJ_Request;
        private vJ_RequestForRepairDataTable tablevJ_RequestForRepair;
        private vJ_RequestForRepairDailyDataTable tablevJ_RequestForRepairDaily;
        private vJ_TransfByCellDataTable tablevJ_TransfByCell;
        private vJ_TransfBySubstationDataTable tablevJ_TransfBySubstation;
        private vJ_TransfsDataTable tablevJ_Transfs;
        private vJ_UpdateProgramDataTable tablevJ_UpdateProgram;
        private vJ_WorkerDataTable tablevJ_Worker;
        private vP_SubstationBusDataTable tablevP_SubstationBus;
        private vP_SubstationTransfDataTable tablevP_SubstationTransf;
        private vP_TransfBySubstationDataTable tablevP_TransfBySubstation;
        private vP_WorkerDataTable tablevP_Worker;
        private vSchm_ObjListDataTable tablevSchm_ObjList;
        private vSchm_TreeCellLineDataTable tablevSchm_TreeCellLine;
        private vTC_TUPointAttachDataTable tablevTC_TUPointAttach;

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DataSetGES()
        {
            //this._schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            base.BeginInit();
            this.method_2();
            CollectionChangeEventHandler handler = new CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += handler;
            base.Relations.CollectionChanged += handler;
            base.EndInit();
            this.method_117();
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected DataSetGES(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0, false)
        {
            //this._schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            if (base.IsBinarySerialized(serializationInfo_0, streamingContext_0))
            {
                this.method_1(false);
                CollectionChangeEventHandler handler2 = new CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += handler2;
                this.Relations.CollectionChanged += handler2;
                if (base.DetermineSchemaSerializationMode(serializationInfo_0, streamingContext_0) == System.Data.SchemaSerializationMode.ExcludeSchema)
                {
                    this.method_117();
                }
            }
            else
            {
                string s = (string) serializationInfo_0.GetValue("XmlSchema", typeof(string));
                if (base.DetermineSchemaSerializationMode(serializationInfo_0, streamingContext_0) == System.Data.SchemaSerializationMode.IncludeSchema)
                {
                    DataSet dataSet = new DataSet();
                    dataSet.ReadXmlSchema(new XmlTextReader(new StringReader(s)));
                    if (dataSet.Tables["tUser"] != null)
                    {
                        base.Tables.Add(new tUserDataTable(dataSet.Tables["tUser"]));
                    }
                    if (dataSet.Tables["tJ_RequestDoc"] != null)
                    {
                        base.Tables.Add(new tJ_RequestDocDataTable(dataSet.Tables["tJ_RequestDoc"]));
                    }
                    if (dataSet.Tables["tJ_Request"] != null)
                    {
                        base.Tables.Add(new tJ_RequestDataTable(dataSet.Tables["tJ_Request"]));
                    }
                    if (dataSet.Tables["vJ_Request"] != null)
                    {
                        base.Tables.Add(new vJ_RequestDataTable(dataSet.Tables["vJ_Request"]));
                    }
                    if (dataSet.Tables["vJ_RequestForRepair"] != null)
                    {
                        base.Tables.Add(new vJ_RequestForRepairDataTable(dataSet.Tables["vJ_RequestForRepair"]));
                    }
                    if (dataSet.Tables["tJ_RequestForRepair"] != null)
                    {
                        base.Tables.Add(new tJ_RequestForRepairDataTable(dataSet.Tables["tJ_RequestForRepair"]));
                    }
                    if (dataSet.Tables["tR_Classifier"] != null)
                    {
                        base.Tables.Add(new tR_ClassifierDataTable(dataSet.Tables["tR_Classifier"]));
                    }
                    if (dataSet.Tables["tJ_RequestForRepairDaily"] != null)
                    {
                        base.Tables.Add(new tJ_RequestForRepairDailyDataTable(dataSet.Tables["tJ_RequestForRepairDaily"]));
                    }
                    if (dataSet.Tables["vJ_RequestForRepairDaily"] != null)
                    {
                        base.Tables.Add(new vJ_RequestForRepairDailyDataTable(dataSet.Tables["vJ_RequestForRepairDaily"]));
                    }
                    if (dataSet.Tables["tL_RequestForRepairSchmObjList"] != null)
                    {
                        base.Tables.Add(new tL_RequestForRepairSchmObjListDataTable(dataSet.Tables["tL_RequestForRepairSchmObjList"]));
                    }
                    if (dataSet.Tables["tJ_RequestForRepairDoc"] != null)
                    {
                        base.Tables.Add(new tJ_RequestForRepairDocDataTable(dataSet.Tables["tJ_RequestForRepairDoc"]));
                    }
                    if (dataSet.Tables["tJ_RelayProtectionAutomation"] != null)
                    {
                        base.Tables.Add(new tJ_RelayProtectionAutomationDataTable(dataSet.Tables["tJ_RelayProtectionAutomation"]));
                    }
                    if (dataSet.Tables["tJ_RelayProtectionAutomationValue"] != null)
                    {
                        base.Tables.Add(new tJ_RelayProtectionAutomationValueDataTable(dataSet.Tables["tJ_RelayProtectionAutomationValue"]));
                    }
                    if (dataSet.Tables["vJ_RelayProtectionAutomation"] != null)
                    {
                        base.Tables.Add(new vJ_RelayProtectionAutomationDataTable(dataSet.Tables["vJ_RelayProtectionAutomation"]));
                    }
                    if (dataSet.Tables["tJ_UpdateProgram"] != null)
                    {
                        base.Tables.Add(new tJ_UpdateProgramDataTable(dataSet.Tables["tJ_UpdateProgram"]));
                    }
                    if (dataSet.Tables["tJ_UpdateProgramDoc"] != null)
                    {
                        base.Tables.Add(new tJ_UpdateProgramDocDataTable(dataSet.Tables["tJ_UpdateProgramDoc"]));
                    }
                    if (dataSet.Tables["vJ_UpdateProgram"] != null)
                    {
                        base.Tables.Add(new vJ_UpdateProgramDataTable(dataSet.Tables["vJ_UpdateProgram"]));
                    }
                    if (dataSet.Tables["tJ_UpdateProgramUserCheck"] != null)
                    {
                        base.Tables.Add(new tJ_UpdateProgramUserCheckDataTable(dataSet.Tables["tJ_UpdateProgramUserCheck"]));
                    }
                    if (dataSet.Tables["tSchm_ObjList"] != null)
                    {
                        base.Tables.Add(new tSchm_ObjListDataTable(dataSet.Tables["tSchm_ObjList"]));
                    }
                    if (dataSet.Tables["vP_Worker"] != null)
                    {
                        base.Tables.Add(new vP_WorkerDataTable(dataSet.Tables["vP_Worker"]));
                    }
                    if (dataSet.Tables["tP_ValueLists"] != null)
                    {
                        base.Tables.Add(new tP_ValueListsDataTable(dataSet.Tables["tP_ValueLists"]));
                    }
                    if (dataSet.Tables["vJ_CableMakeup"] != null)
                    {
                        base.Tables.Add(new vJ_CableMakeupDataTable(dataSet.Tables["vJ_CableMakeup"]));
                    }
                    if (dataSet.Tables["vJ_MeasPeriodBySubstation"] != null)
                    {
                        base.Tables.Add(new vJ_MeasPeriodBySubstationDataTable(dataSet.Tables["vJ_MeasPeriodBySubstation"]));
                    }
                    if (dataSet.Tables["fn_J_GetCellCableLVByTransf"] != null)
                    {
                        base.Tables.Add(new fn_J_GetCellCableLVByTransfDataTable(dataSet.Tables["fn_J_GetCellCableLVByTransf"]));
                    }
                    if (dataSet.Tables["tL_SchmAbn"] != null)
                    {
                        base.Tables.Add(new tL_SchmAbnDataTable(dataSet.Tables["tL_SchmAbn"]));
                    }
                    if (dataSet.Tables["vJ_MeasAbnObj"] != null)
                    {
                        base.Tables.Add(new vJ_MeasAbnObjDataTable(dataSet.Tables["vJ_MeasAbnObj"]));
                    }
                    if (dataSet.Tables["vJ_GetMeasYears"] != null)
                    {
                        base.Tables.Add(new vJ_GetMeasYearsDataTable(dataSet.Tables["vJ_GetMeasYears"]));
                    }
                    if (dataSet.Tables["fn_J_GetCellLVByTransf"] != null)
                    {
                        base.Tables.Add(new fn_J_GetCellLVByTransfDataTable(dataSet.Tables["fn_J_GetCellLVByTransf"]));
                    }
                    if (dataSet.Tables["fn_J_MeasCableCalcResults"] != null)
                    {
                        base.Tables.Add(new fn_J_MeasCableCalcResultsDataTable(dataSet.Tables["fn_J_MeasCableCalcResults"]));
                    }
                    if (dataSet.Tables["tR_CableMakeup"] != null)
                    {
                        base.Tables.Add(new tR_CableMakeupDataTable(dataSet.Tables["tR_CableMakeup"]));
                    }
                    if (dataSet.Tables["tR_CrossSection"] != null)
                    {
                        base.Tables.Add(new tR_CrossSectionDataTable(dataSet.Tables["tR_CrossSection"]));
                    }
                    if (dataSet.Tables["tR_CableVoltage"] != null)
                    {
                        base.Tables.Add(new tR_CableVoltageDataTable(dataSet.Tables["tR_CableVoltage"]));
                    }
                    if (dataSet.Tables["tR_CableAmperage"] != null)
                    {
                        base.Tables.Add(new tR_CableAmperageDataTable(dataSet.Tables["tR_CableAmperage"]));
                    }
                    if (dataSet.Tables["tR_CableWires"] != null)
                    {
                        base.Tables.Add(new tR_CableWiresDataTable(dataSet.Tables["tR_CableWires"]));
                    }
                    if (dataSet.Tables["vJ_CableReference"] != null)
                    {
                        base.Tables.Add(new vJ_CableReferenceDataTable(dataSet.Tables["vJ_CableReference"]));
                    }
                    if (dataSet.Tables["vJ_Transfs"] != null)
                    {
                        base.Tables.Add(new vJ_TransfsDataTable(dataSet.Tables["vJ_Transfs"]));
                    }
                    if (dataSet.Tables["dtMeasCableRatio"] != null)
                    {
                        base.Tables.Add(new dtMeasCableRatioDataTable(dataSet.Tables["dtMeasCableRatio"]));
                    }
                    if (dataSet.Tables["fn_J_GetBusLVByTransf"] != null)
                    {
                        base.Tables.Add(new fn_J_GetBusLVByTransfDataTable(dataSet.Tables["fn_J_GetBusLVByTransf"]));
                    }
                    if (dataSet.Tables["vJ_MeasurementReport"] != null)
                    {
                        base.Tables.Add(new vJ_MeasurementReportDataTable(dataSet.Tables["vJ_MeasurementReport"]));
                    }
                    if (dataSet.Tables["dtMeasTransfAmperageDopDataReport"] != null)
                    {
                        base.Tables.Add(new dtMeasTransfAmperageDopDataReportDataTable(dataSet.Tables["dtMeasTransfAmperageDopDataReport"]));
                    }
                    if (dataSet.Tables["fn_J_ExcelessLoadReport"] != null)
                    {
                        base.Tables.Add(new fn_J_ExcelessLoadReportDataTable(dataSet.Tables["fn_J_ExcelessLoadReport"]));
                    }
                    if (dataSet.Tables["dtExcelessLoadAddlReport"] != null)
                    {
                        base.Tables.Add(new dtExcelessLoadAddlReportDataTable(dataSet.Tables["dtExcelessLoadAddlReport"]));
                    }
                    if (dataSet.Tables["vJ_CoefficientLoading"] != null)
                    {
                        base.Tables.Add(new vJ_CoefficientLoadingDataTable(dataSet.Tables["vJ_CoefficientLoading"]));
                    }
                    if (dataSet.Tables["dtCoefficientLoadingAddl"] != null)
                    {
                        base.Tables.Add(new dtCoefficientLoadingAddlDataTable(dataSet.Tables["dtCoefficientLoadingAddl"]));
                    }
                    if (dataSet.Tables["vJ_CoefficientIrregularity"] != null)
                    {
                        base.Tables.Add(new vJ_CoefficientIrregularityDataTable(dataSet.Tables["vJ_CoefficientIrregularity"]));
                    }
                    if (dataSet.Tables["vP_SubstationTransf"] != null)
                    {
                        base.Tables.Add(new vP_SubstationTransfDataTable(dataSet.Tables["vP_SubstationTransf"]));
                    }
                    if (dataSet.Tables["tR_DocTemplate"] != null)
                    {
                        base.Tables.Add(new tR_DocTemplateDataTable(dataSet.Tables["tR_DocTemplate"]));
                    }
                    if (dataSet.Tables["fn_J_GetCellTransfByBusLV"] != null)
                    {
                        base.Tables.Add(new fn_J_GetCellTransfByBusLVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusLV"]));
                    }
                    if (dataSet.Tables["dtBuses"] != null)
                    {
                        base.Tables.Add(new dtBusesDataTable(dataSet.Tables["dtBuses"]));
                    }
                    if (dataSet.Tables["dtCells"] != null)
                    {
                        base.Tables.Add(new dtCellsDataTable(dataSet.Tables["dtCells"]));
                    }
                    if (dataSet.Tables["tJ_Measurement"] != null)
                    {
                        base.Tables.Add(new tJ_MeasurementDataTable(dataSet.Tables["tJ_Measurement"]));
                    }
                    if (dataSet.Tables["vJ_MeasTransfPassport"] != null)
                    {
                        base.Tables.Add(new vJ_MeasTransfPassportDataTable(dataSet.Tables["vJ_MeasTransfPassport"]));
                    }
                    if (dataSet.Tables["fn_J_MeasTransfPassport"] != null)
                    {
                        base.Tables.Add(new fn_J_MeasTransfPassportDataTable(dataSet.Tables["fn_J_MeasTransfPassport"]));
                    }
                    if (dataSet.Tables["vJ_MeasCable"] != null)
                    {
                        base.Tables.Add(new vJ_MeasCableDataTable(dataSet.Tables["vJ_MeasCable"]));
                    }
                    if (dataSet.Tables["dtMeasCellRatio"] != null)
                    {
                        base.Tables.Add(new dtMeasCellRatioDataTable(dataSet.Tables["dtMeasCellRatio"]));
                    }
                    if (dataSet.Tables["tSchm_ObjList1"] != null)
                    {
                        base.Tables.Add(new tSchm_ObjList1DataTable(dataSet.Tables["tSchm_ObjList1"]));
                    }
                    if (dataSet.Tables["vJ_TransfBySubstation"] != null)
                    {
                        base.Tables.Add(new vJ_TransfBySubstationDataTable(dataSet.Tables["vJ_TransfBySubstation"]));
                    }
                    if (dataSet.Tables["vJ_PowerISR_Transf"] != null)
                    {
                        base.Tables.Add(new vJ_PowerISR_TransfDataTable(dataSet.Tables["vJ_PowerISR_Transf"]));
                    }
                    if (dataSet.Tables["vJ_PowerISR_SSTransf"] != null)
                    {
                        base.Tables.Add(new vJ_PowerISR_SSTransfDataTable(dataSet.Tables["vJ_PowerISR_SSTransf"]));
                    }
                    if (dataSet.Tables["dtAmountFreeCapasity"] != null)
                    {
                        base.Tables.Add(new dtAmountFreeCapasityDataTable(dataSet.Tables["dtAmountFreeCapasity"]));
                    }
                    if (dataSet.Tables["fn_J_GetCellTransfByBusHV"] != null)
                    {
                        base.Tables.Add(new fn_J_GetCellTransfByBusHVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusHV"]));
                    }
                    if (dataSet.Tables["tJ_MeasCable"] != null)
                    {
                        base.Tables.Add(new tJ_MeasCableDataTable(dataSet.Tables["tJ_MeasCable"]));
                    }
                    if (dataSet.Tables["vJ_LastCableInfo"] != null)
                    {
                        base.Tables.Add(new vJ_LastCableInfoDataTable(dataSet.Tables["vJ_LastCableInfo"]));
                    }
                    if (dataSet.Tables["vJ_TransfByCell"] != null)
                    {
                        base.Tables.Add(new vJ_TransfByCellDataTable(dataSet.Tables["vJ_TransfByCell"]));
                    }
                    if (dataSet.Tables["vJ_CableByCell"] != null)
                    {
                        base.Tables.Add(new vJ_CableByCellDataTable(dataSet.Tables["vJ_CableByCell"]));
                    }
                    if (dataSet.Tables["fn_J_GetBusMVByTransf"] != null)
                    {
                        base.Tables.Add(new fn_J_GetBusMVByTransfDataTable(dataSet.Tables["fn_J_GetBusMVByTransf"]));
                    }
                    if (dataSet.Tables["tJ_MeasAmperageTransf"] != null)
                    {
                        base.Tables.Add(new tJ_MeasAmperageTransfDataTable(dataSet.Tables["tJ_MeasAmperageTransf"]));
                    }
                    if (dataSet.Tables["tSchm_ObjList2"] != null)
                    {
                        base.Tables.Add(new tSchm_ObjList2DataTable(dataSet.Tables["tSchm_ObjList2"]));
                    }
                    if (dataSet.Tables["tSchm_ObjList3"] != null)
                    {
                        base.Tables.Add(new tSchm_ObjList3DataTable(dataSet.Tables["tSchm_ObjList3"]));
                    }
                    if (dataSet.Tables["vP_TransfBySubstation"] != null)
                    {
                        base.Tables.Add(new vP_TransfBySubstationDataTable(dataSet.Tables["vP_TransfBySubstation"]));
                    }
                    if (dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"] != null)
                    {
                        base.Tables.Add(new vJ_MeasAmpSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"]));
                    }
                    if (dataSet.Tables["vJ_MeasSubTransf_TEMP"] != null)
                    {
                        base.Tables.Add(new vJ_MeasSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasSubTransf_TEMP"]));
                    }
                    if (dataSet.Tables["fn_J_GetTransfByBusLV"] != null)
                    {
                        base.Tables.Add(new fn_J_GetTransfByBusLVDataTable(dataSet.Tables["fn_J_GetTransfByBusLV"]));
                    }
                    if (dataSet.Tables["vP_SubstationBus"] != null)
                    {
                        base.Tables.Add(new vP_SubstationBusDataTable(dataSet.Tables["vP_SubstationBus"]));
                    }
                    if (dataSet.Tables["vJ_CellByBus"] != null)
                    {
                        base.Tables.Add(new vJ_CellByBusDataTable(dataSet.Tables["vJ_CellByBus"]));
                    }
                    if (dataSet.Tables["vJ_PowerISR_SSBus"] != null)
                    {
                        base.Tables.Add(new vJ_PowerISR_SSBusDataTable(dataSet.Tables["vJ_PowerISR_SSBus"]));
                    }
                    if (dataSet.Tables["dtBusesTransf"] != null)
                    {
                        base.Tables.Add(new dtBusesTransfDataTable(dataSet.Tables["dtBusesTransf"]));
                    }
                    if (dataSet.Tables["vJ_BusesTransfSchema"] != null)
                    {
                        base.Tables.Add(new vJ_BusesTransfSchemaDataTable(dataSet.Tables["vJ_BusesTransfSchema"]));
                    }
                    if (dataSet.Tables["vJ_BusesTransfs"] != null)
                    {
                        base.Tables.Add(new vJ_BusesTransfsDataTable(dataSet.Tables["vJ_BusesTransfs"]));
                    }
                    if (dataSet.Tables["vJ_MeasCableReport"] != null)
                    {
                        base.Tables.Add(new vJ_MeasCableReportDataTable(dataSet.Tables["vJ_MeasCableReport"]));
                    }
                    if (dataSet.Tables["tJ_MeasVoltageTransf"] != null)
                    {
                        base.Tables.Add(new tJ_MeasVoltageTransfDataTable(dataSet.Tables["tJ_MeasVoltageTransf"]));
                    }
                    if (dataSet.Tables["vJ_MeasCableReport2"] != null)
                    {
                        base.Tables.Add(new vJ_MeasCableReport2DataTable(dataSet.Tables["vJ_MeasCableReport2"]));
                    }
                    if (dataSet.Tables["vJ_CableByCellMeas"] != null)
                    {
                        base.Tables.Add(new vJ_CableByCellMeasDataTable(dataSet.Tables["vJ_CableByCellMeas"]));
                    }
                    if (dataSet.Tables["tJ_MeasCell"] != null)
                    {
                        base.Tables.Add(new tJ_MeasCellDataTable(dataSet.Tables["tJ_MeasCell"]));
                    }
                    if (dataSet.Tables["vJ_MeasCell"] != null)
                    {
                        base.Tables.Add(new vJ_MeasCellDataTable(dataSet.Tables["vJ_MeasCell"]));
                    }
                    if (dataSet.Tables["vJ_MeasTransfVoltage"] != null)
                    {
                        base.Tables.Add(new vJ_MeasTransfVoltageDataTable(dataSet.Tables["vJ_MeasTransfVoltage"]));
                    }
                    if (dataSet.Tables["tAbnDoc_Dogovor"] != null)
                    {
                        base.Tables.Add(new tAbnDoc_DogovorDataTable(dataSet.Tables["tAbnDoc_Dogovor"]));
                    }
                    if (dataSet.Tables["tAbnObjDoc_AktRBP"] != null)
                    {
                        base.Tables.Add(new tAbnObjDoc_AktRBPDataTable(dataSet.Tables["tAbnObjDoc_AktRBP"]));
                    }
                    if (dataSet.Tables["tAbn"] != null)
                    {
                        base.Tables.Add(new tAbnDataTable(dataSet.Tables["tAbn"]));
                    }
                    if (dataSet.Tables["tAbnObj"] != null)
                    {
                        base.Tables.Add(new tAbnObjDataTable(dataSet.Tables["tAbnObj"]));
                    }
                    if (dataSet.Tables["tAbnObjDoc_Image"] != null)
                    {
                        base.Tables.Add(new tAbnObjDoc_ImageDataTable(dataSet.Tables["tAbnObjDoc_Image"]));
                    }
                    if (dataSet.Tables["tAbnObjDoc_List"] != null)
                    {
                        base.Tables.Add(new tAbnObjDoc_ListDataTable(dataSet.Tables["tAbnObjDoc_List"]));
                    }
                    if (dataSet.Tables["tAbnContact"] != null)
                    {
                        base.Tables.Add(new tAbnContactDataTable(dataSet.Tables["tAbnContact"]));
                    }
                    if (dataSet.Tables["tAbnDoc_List"] != null)
                    {
                        base.Tables.Add(new tAbnDoc_ListDataTable(dataSet.Tables["tAbnDoc_List"]));
                    }
                    if (dataSet.Tables["tG_AbnAddress"] != null)
                    {
                        base.Tables.Add(new tG_AbnAddressDataTable(dataSet.Tables["tG_AbnAddress"]));
                    }
                    if (dataSet.Tables["tG_AbnChief"] != null)
                    {
                        base.Tables.Add(new tG_AbnChiefDataTable(dataSet.Tables["tG_AbnChief"]));
                    }
                    if (dataSet.Tables["tAbnObjDoc_File"] != null)
                    {
                        base.Tables.Add(new tAbnObjDoc_FileDataTable(dataSet.Tables["tAbnObjDoc_File"]));
                    }
                    if (dataSet.Tables["tTC_ActTC"] != null)
                    {
                        base.Tables.Add(new tTC_ActTCDataTable(dataSet.Tables["tTC_ActTC"]));
                    }
                    if (dataSet.Tables["vTC_TUPointAttach"] != null)
                    {
                        base.Tables.Add(new vTC_TUPointAttachDataTable(dataSet.Tables["vTC_TUPointAttach"]));
                    }
                    if (dataSet.Tables["vAbn"] != null)
                    {
                        base.Tables.Add(new vAbnDataTable(dataSet.Tables["vAbn"]));
                    }
                    if (dataSet.Tables["tTC_Doc"] != null)
                    {
                        base.Tables.Add(new tTC_DocDataTable(dataSet.Tables["tTC_Doc"]));
                    }
                    if (dataSet.Tables["vSchm_ObjList"] != null)
                    {
                        base.Tables.Add(new vSchm_ObjListDataTable(dataSet.Tables["vSchm_ObjList"]));
                    }
                    if (dataSet.Tables["vSchm_TreeCellLine"] != null)
                    {
                        base.Tables.Add(new vSchm_TreeCellLineDataTable(dataSet.Tables["vSchm_TreeCellLine"]));
                    }
                    if (dataSet.Tables["tJ_BossUserGroup"] != null)
                    {
                        base.Tables.Add(new tJ_BossUserGroupDataTable(dataSet.Tables["tJ_BossUserGroup"]));
                    }
                    if (dataSet.Tables["vJ_BossUser"] != null)
                    {
                        base.Tables.Add(new vJ_BossUserDataTable(dataSet.Tables["vJ_BossUser"]));
                    }
                    if (dataSet.Tables["tJ_MemFiles"] != null)
                    {
                        base.Tables.Add(new tJ_MemFilesDataTable(dataSet.Tables["tJ_MemFiles"]));
                    }
                    if (dataSet.Tables["tJ_Memorandum"] != null)
                    {
                        base.Tables.Add(new tJ_MemorandumDataTable(dataSet.Tables["tJ_Memorandum"]));
                    }
                    if (dataSet.Tables["vJ_Memorandum"] != null)
                    {
                        base.Tables.Add(new vJ_MemorandumDataTable(dataSet.Tables["vJ_Memorandum"]));
                    }
                    if (dataSet.Tables["tJ_MemWorker"] != null)
                    {
                        base.Tables.Add(new tJ_MemWorkerDataTable(dataSet.Tables["tJ_MemWorker"]));
                    }
                    if (dataSet.Tables["vJ_Worker"] != null)
                    {
                        base.Tables.Add(new vJ_WorkerDataTable(dataSet.Tables["vJ_Worker"]));
                    }
                    if (dataSet.Tables["tJ_BossUser"] != null)
                    {
                        base.Tables.Add(new tJ_BossUserDataTable(dataSet.Tables["tJ_BossUser"]));
                    }
                    if (dataSet.Tables["tJ_MemCommission"] != null)
                    {
                        base.Tables.Add(new tJ_MemCommissionDataTable(dataSet.Tables["tJ_MemCommission"]));
                    }
                    if (dataSet.Tables["vJ_MemCommission"] != null)
                    {
                        base.Tables.Add(new vJ_MemCommissionDataTable(dataSet.Tables["vJ_MemCommission"]));
                    }
                    base.DataSetName = dataSet.DataSetName;
                    base.Prefix = dataSet.Prefix;
                    base.Namespace = dataSet.Namespace;
                    base.Locale = dataSet.Locale;
                    base.CaseSensitive = dataSet.CaseSensitive;
                    base.EnforceConstraints = dataSet.EnforceConstraints;
                    base.Merge(dataSet, false, MissingSchemaAction.Add);
                    this.method_0();
                }
                else
                {
                    base.ReadXmlSchema(new XmlTextReader(new StringReader(s)));
                    this.method_117();
                }
                base.GetSerializationData(serializationInfo_0, streamingContext_0);
                CollectionChangeEventHandler handler = new CollectionChangeEventHandler(this.SchemaChanged);
                base.Tables.CollectionChanged += handler;
                this.Relations.CollectionChanged += handler;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override DataSet Clone()
        {
            DataSetGES tges1 = (DataSetGES) base.Clone();
            tges1.method_0();
            tges1.method_117();
            tges1.SchemaSerializationMode = this.SchemaSerializationMode;
            return tges1;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected override XmlSchema GetSchemaSerializable()
        {
            MemoryStream w = new MemoryStream();
            base.WriteXmlSchema(new XmlTextWriter(w, null));
            w.Position = 0L;
            return XmlSchema.Read(new XmlTextReader(w), null);
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet()
        {
            base.BeginInit();
            this.method_2();
            base.EndInit();
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void method_0()
        {
            this.method_1(true);
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        internal void method_1(bool bool_0)
        {
            this.tabletUser = (tUserDataTable) base.Tables["tUser"];
            if (bool_0 && (this.tabletUser != null))
            {
                this.tabletUser.method_3();
            }
            this.tabletJ_RequestDoc = (tJ_RequestDocDataTable) base.Tables["tJ_RequestDoc"];
            if (bool_0 && (this.tabletJ_RequestDoc != null))
            {
                this.tabletJ_RequestDoc.method_3();
            }
            this.tabletJ_Request = (tJ_RequestDataTable) base.Tables["tJ_Request"];
            if (bool_0 && (this.tabletJ_Request != null))
            {
                this.tabletJ_Request.method_3();
            }
            this.tablevJ_Request = (vJ_RequestDataTable) base.Tables["vJ_Request"];
            if (bool_0 && (this.tablevJ_Request != null))
            {
                this.tablevJ_Request.method_3();
            }
            this.tablevJ_RequestForRepair = (vJ_RequestForRepairDataTable) base.Tables["vJ_RequestForRepair"];
            if (bool_0 && (this.tablevJ_RequestForRepair != null))
            {
                this.tablevJ_RequestForRepair.method_3();
            }
            this.tabletJ_RequestForRepair = (tJ_RequestForRepairDataTable) base.Tables["tJ_RequestForRepair"];
            if (bool_0 && (this.tabletJ_RequestForRepair != null))
            {
                this.tabletJ_RequestForRepair.method_3();
            }
            this.tabletR_Classifier = (tR_ClassifierDataTable) base.Tables["tR_Classifier"];
            if (bool_0 && (this.tabletR_Classifier != null))
            {
                this.tabletR_Classifier.method_3();
            }
            this.tabletJ_RequestForRepairDaily = (tJ_RequestForRepairDailyDataTable) base.Tables["tJ_RequestForRepairDaily"];
            if (bool_0 && (this.tabletJ_RequestForRepairDaily != null))
            {
                this.tabletJ_RequestForRepairDaily.method_3();
            }
            this.tablevJ_RequestForRepairDaily = (vJ_RequestForRepairDailyDataTable) base.Tables["vJ_RequestForRepairDaily"];
            if (bool_0 && (this.tablevJ_RequestForRepairDaily != null))
            {
                this.tablevJ_RequestForRepairDaily.method_2();
            }
            this.tabletL_RequestForRepairSchmObjList = (tL_RequestForRepairSchmObjListDataTable) base.Tables["tL_RequestForRepairSchmObjList"];
            if (bool_0 && (this.tabletL_RequestForRepairSchmObjList != null))
            {
                this.tabletL_RequestForRepairSchmObjList.method_3();
            }
            this.tabletJ_RequestForRepairDoc = (tJ_RequestForRepairDocDataTable) base.Tables["tJ_RequestForRepairDoc"];
            if (bool_0 && (this.tabletJ_RequestForRepairDoc != null))
            {
                this.tabletJ_RequestForRepairDoc.method_3();
            }
            this.tabletJ_RelayProtectionAutomation = (tJ_RelayProtectionAutomationDataTable) base.Tables["tJ_RelayProtectionAutomation"];
            if (bool_0 && (this.tabletJ_RelayProtectionAutomation != null))
            {
                this.tabletJ_RelayProtectionAutomation.method_3();
            }
            this.tabletJ_RelayProtectionAutomationValue = (tJ_RelayProtectionAutomationValueDataTable) base.Tables["tJ_RelayProtectionAutomationValue"];
            if (bool_0 && (this.tabletJ_RelayProtectionAutomationValue != null))
            {
                this.tabletJ_RelayProtectionAutomationValue.method_3();
            }
            this.tablevJ_RelayProtectionAutomation = (vJ_RelayProtectionAutomationDataTable) base.Tables["vJ_RelayProtectionAutomation"];
            if (bool_0 && (this.tablevJ_RelayProtectionAutomation != null))
            {
                this.tablevJ_RelayProtectionAutomation.method_3();
            }
            this.tabletJ_UpdateProgram = (tJ_UpdateProgramDataTable) base.Tables["tJ_UpdateProgram"];
            if (bool_0 && (this.tabletJ_UpdateProgram != null))
            {
                this.tabletJ_UpdateProgram.method_3();
            }
            this.tabletJ_UpdateProgramDoc = (tJ_UpdateProgramDocDataTable) base.Tables["tJ_UpdateProgramDoc"];
            if (bool_0 && (this.tabletJ_UpdateProgramDoc != null))
            {
                this.tabletJ_UpdateProgramDoc.method_3();
            }
            this.tablevJ_UpdateProgram = (vJ_UpdateProgramDataTable) base.Tables["vJ_UpdateProgram"];
            if (bool_0 && (this.tablevJ_UpdateProgram != null))
            {
                this.tablevJ_UpdateProgram.method_3();
            }
            this.tabletJ_UpdateProgramUserCheck = (tJ_UpdateProgramUserCheckDataTable) base.Tables["tJ_UpdateProgramUserCheck"];
            if (bool_0 && (this.tabletJ_UpdateProgramUserCheck != null))
            {
                this.tabletJ_UpdateProgramUserCheck.method_3();
            }
            this.tabletSchm_ObjList = (tSchm_ObjListDataTable) base.Tables["tSchm_ObjList"];
            if (bool_0 && (this.tabletSchm_ObjList != null))
            {
                this.tabletSchm_ObjList.method_3();
            }
            this.tablevP_Worker = (vP_WorkerDataTable) base.Tables["vP_Worker"];
            if (bool_0 && (this.tablevP_Worker != null))
            {
                this.tablevP_Worker.method_2();
            }
            this.tabletP_ValueLists = (tP_ValueListsDataTable) base.Tables["tP_ValueLists"];
            if (bool_0 && (this.tabletP_ValueLists != null))
            {
                this.tabletP_ValueLists.method_3();
            }
            this.tablevJ_CableMakeup = (vJ_CableMakeupDataTable) base.Tables["vJ_CableMakeup"];
            if (bool_0 && (this.tablevJ_CableMakeup != null))
            {
                this.tablevJ_CableMakeup.method_3();
            }
            this.tablevJ_MeasPeriodBySubstation = (vJ_MeasPeriodBySubstationDataTable) base.Tables["vJ_MeasPeriodBySubstation"];
            if (bool_0 && (this.tablevJ_MeasPeriodBySubstation != null))
            {
                this.tablevJ_MeasPeriodBySubstation.method_3();
            }
            this.tablefn_J_GetCellCableLVByTransf = (fn_J_GetCellCableLVByTransfDataTable) base.Tables["fn_J_GetCellCableLVByTransf"];
            if (bool_0 && (this.tablefn_J_GetCellCableLVByTransf != null))
            {
                this.tablefn_J_GetCellCableLVByTransf.method_2();
            }
            this.tabletL_SchmAbn = (tL_SchmAbnDataTable) base.Tables["tL_SchmAbn"];
            if (bool_0 && (this.tabletL_SchmAbn != null))
            {
                this.tabletL_SchmAbn.method_3();
            }
            this.tablevJ_MeasAbnObj = (vJ_MeasAbnObjDataTable) base.Tables["vJ_MeasAbnObj"];
            if (bool_0 && (this.tablevJ_MeasAbnObj != null))
            {
                this.tablevJ_MeasAbnObj.method_2();
            }
            this.tablevJ_GetMeasYears = (vJ_GetMeasYearsDataTable) base.Tables["vJ_GetMeasYears"];
            if (bool_0 && (this.tablevJ_GetMeasYears != null))
            {
                this.tablevJ_GetMeasYears.method_2();
            }
            this.tablefn_J_GetCellLVByTransf = (fn_J_GetCellLVByTransfDataTable) base.Tables["fn_J_GetCellLVByTransf"];
            if (bool_0 && (this.tablefn_J_GetCellLVByTransf != null))
            {
                this.tablefn_J_GetCellLVByTransf.method_2();
            }
            this.tablefn_J_MeasCableCalcResults = (fn_J_MeasCableCalcResultsDataTable) base.Tables["fn_J_MeasCableCalcResults"];
            if (bool_0 && (this.tablefn_J_MeasCableCalcResults != null))
            {
                this.tablefn_J_MeasCableCalcResults.method_2();
            }
            this.tabletR_CableMakeup = (tR_CableMakeupDataTable) base.Tables["tR_CableMakeup"];
            if (bool_0 && (this.tabletR_CableMakeup != null))
            {
                this.tabletR_CableMakeup.method_2();
            }
            this.tabletR_CrossSection = (tR_CrossSectionDataTable) base.Tables["tR_CrossSection"];
            if (bool_0 && (this.tabletR_CrossSection != null))
            {
                this.tabletR_CrossSection.method_2();
            }
            this.tabletR_CableVoltage = (tR_CableVoltageDataTable) base.Tables["tR_CableVoltage"];
            if (bool_0 && (this.tabletR_CableVoltage != null))
            {
                this.tabletR_CableVoltage.method_3();
            }
            this.tabletR_CableAmperage = (tR_CableAmperageDataTable) base.Tables["tR_CableAmperage"];
            if (bool_0 && (this.tabletR_CableAmperage != null))
            {
                this.tabletR_CableAmperage.method_2();
            }
            this.tabletR_CableWires = (tR_CableWiresDataTable) base.Tables["tR_CableWires"];
            if (bool_0 && (this.tabletR_CableWires != null))
            {
                this.tabletR_CableWires.method_2();
            }
            this.tablevJ_CableReference = (vJ_CableReferenceDataTable) base.Tables["vJ_CableReference"];
            if (bool_0 && (this.tablevJ_CableReference != null))
            {
                this.tablevJ_CableReference.method_2();
            }
            this.tablevJ_Transfs = (vJ_TransfsDataTable) base.Tables["vJ_Transfs"];
            if (bool_0 && (this.tablevJ_Transfs != null))
            {
                this.tablevJ_Transfs.method_2();
            }
            this.tabledtMeasCableRatio = (dtMeasCableRatioDataTable) base.Tables["dtMeasCableRatio"];
            if (bool_0 && (this.tabledtMeasCableRatio != null))
            {
                this.tabledtMeasCableRatio.method_2();
            }
            this.tablefn_J_GetBusLVByTransf = (fn_J_GetBusLVByTransfDataTable) base.Tables["fn_J_GetBusLVByTransf"];
            if (bool_0 && (this.tablefn_J_GetBusLVByTransf != null))
            {
                this.tablefn_J_GetBusLVByTransf.method_2();
            }
            this.tablevJ_MeasurementReport = (vJ_MeasurementReportDataTable) base.Tables["vJ_MeasurementReport"];
            if (bool_0 && (this.tablevJ_MeasurementReport != null))
            {
                this.tablevJ_MeasurementReport.method_2();
            }
            this.tabledtMeasTransfAmperageDopDataReport = (dtMeasTransfAmperageDopDataReportDataTable) base.Tables["dtMeasTransfAmperageDopDataReport"];
            if (bool_0 && (this.tabledtMeasTransfAmperageDopDataReport != null))
            {
                this.tabledtMeasTransfAmperageDopDataReport.method_2();
            }
            this.tablefn_J_ExcelessLoadReport = (fn_J_ExcelessLoadReportDataTable) base.Tables["fn_J_ExcelessLoadReport"];
            if (bool_0 && (this.tablefn_J_ExcelessLoadReport != null))
            {
                this.tablefn_J_ExcelessLoadReport.method_2();
            }
            this.tabledtExcelessLoadAddlReport = (dtExcelessLoadAddlReportDataTable) base.Tables["dtExcelessLoadAddlReport"];
            if (bool_0 && (this.tabledtExcelessLoadAddlReport != null))
            {
                this.tabledtExcelessLoadAddlReport.method_2();
            }
            this.tablevJ_CoefficientLoading = (vJ_CoefficientLoadingDataTable) base.Tables["vJ_CoefficientLoading"];
            if (bool_0 && (this.tablevJ_CoefficientLoading != null))
            {
                this.tablevJ_CoefficientLoading.method_2();
            }
            this.tabledtCoefficientLoadingAddl = (dtCoefficientLoadingAddlDataTable) base.Tables["dtCoefficientLoadingAddl"];
            if (bool_0 && (this.tabledtCoefficientLoadingAddl != null))
            {
                this.tabledtCoefficientLoadingAddl.method_2();
            }
            this.tablevJ_CoefficientIrregularity = (vJ_CoefficientIrregularityDataTable) base.Tables["vJ_CoefficientIrregularity"];
            if (bool_0 && (this.tablevJ_CoefficientIrregularity != null))
            {
                this.tablevJ_CoefficientIrregularity.method_2();
            }
            this.tablevP_SubstationTransf = (vP_SubstationTransfDataTable) base.Tables["vP_SubstationTransf"];
            if (bool_0 && (this.tablevP_SubstationTransf != null))
            {
                this.tablevP_SubstationTransf.method_2();
            }
            this.tabletR_DocTemplate = (tR_DocTemplateDataTable) base.Tables["tR_DocTemplate"];
            if (bool_0 && (this.tabletR_DocTemplate != null))
            {
                this.tabletR_DocTemplate.method_3();
            }
            this.tablefn_J_GetCellTransfByBusLV = (fn_J_GetCellTransfByBusLVDataTable) base.Tables["fn_J_GetCellTransfByBusLV"];
            if (bool_0 && (this.tablefn_J_GetCellTransfByBusLV != null))
            {
                this.tablefn_J_GetCellTransfByBusLV.method_2();
            }
            this.tabledtBuses = (dtBusesDataTable) base.Tables["dtBuses"];
            if (bool_0 && (this.tabledtBuses != null))
            {
                this.tabledtBuses.method_2();
            }
            this.tabledtCells = (dtCellsDataTable) base.Tables["dtCells"];
            if (bool_0 && (this.tabledtCells != null))
            {
                this.tabledtCells.method_2();
            }
            this.tabletJ_Measurement = (tJ_MeasurementDataTable) base.Tables["tJ_Measurement"];
            if (bool_0 && (this.tabletJ_Measurement != null))
            {
                this.tabletJ_Measurement.method_3();
            }
            this.tablevJ_MeasTransfPassport = (vJ_MeasTransfPassportDataTable) base.Tables["vJ_MeasTransfPassport"];
            if (bool_0 && (this.tablevJ_MeasTransfPassport != null))
            {
                this.tablevJ_MeasTransfPassport.method_2();
            }
            this.tablefn_J_MeasTransfPassport = (fn_J_MeasTransfPassportDataTable) base.Tables["fn_J_MeasTransfPassport"];
            if (bool_0 && (this.tablefn_J_MeasTransfPassport != null))
            {
                this.tablefn_J_MeasTransfPassport.method_2();
            }
            this.tablevJ_MeasCable = (vJ_MeasCableDataTable) base.Tables["vJ_MeasCable"];
            if (bool_0 && (this.tablevJ_MeasCable != null))
            {
                this.tablevJ_MeasCable.method_3();
            }
            this.tabledtMeasCellRatio = (dtMeasCellRatioDataTable) base.Tables["dtMeasCellRatio"];
            if (bool_0 && (this.tabledtMeasCellRatio != null))
            {
                this.tabledtMeasCellRatio.method_2();
            }
            this.tabletSchm_ObjList1 = (tSchm_ObjList1DataTable) base.Tables["tSchm_ObjList1"];
            if (bool_0 && (this.tabletSchm_ObjList1 != null))
            {
                this.tabletSchm_ObjList1.method_3();
            }
            this.tablevJ_TransfBySubstation = (vJ_TransfBySubstationDataTable) base.Tables["vJ_TransfBySubstation"];
            if (bool_0 && (this.tablevJ_TransfBySubstation != null))
            {
                this.tablevJ_TransfBySubstation.method_2();
            }
            this.tablevJ_PowerISR_Transf = (vJ_PowerISR_TransfDataTable) base.Tables["vJ_PowerISR_Transf"];
            if (bool_0 && (this.tablevJ_PowerISR_Transf != null))
            {
                this.tablevJ_PowerISR_Transf.method_2();
            }
            this.tablevJ_PowerISR_SSTransf = (vJ_PowerISR_SSTransfDataTable) base.Tables["vJ_PowerISR_SSTransf"];
            if (bool_0 && (this.tablevJ_PowerISR_SSTransf != null))
            {
                this.tablevJ_PowerISR_SSTransf.method_2();
            }
            this.tabledtAmountFreeCapasity = (dtAmountFreeCapasityDataTable) base.Tables["dtAmountFreeCapasity"];
            if (bool_0 && (this.tabledtAmountFreeCapasity != null))
            {
                this.tabledtAmountFreeCapasity.method_2();
            }
            this.tablefn_J_GetCellTransfByBusHV = (fn_J_GetCellTransfByBusHVDataTable) base.Tables["fn_J_GetCellTransfByBusHV"];
            if (bool_0 && (this.tablefn_J_GetCellTransfByBusHV != null))
            {
                this.tablefn_J_GetCellTransfByBusHV.method_2();
            }
            this.tabletJ_MeasCable = (tJ_MeasCableDataTable) base.Tables["tJ_MeasCable"];
            if (bool_0 && (this.tabletJ_MeasCable != null))
            {
                this.tabletJ_MeasCable.method_3();
            }
            this.tablevJ_LastCableInfo = (vJ_LastCableInfoDataTable) base.Tables["vJ_LastCableInfo"];
            if (bool_0 && (this.tablevJ_LastCableInfo != null))
            {
                this.tablevJ_LastCableInfo.method_2();
            }
            this.tablevJ_TransfByCell = (vJ_TransfByCellDataTable) base.Tables["vJ_TransfByCell"];
            if (bool_0 && (this.tablevJ_TransfByCell != null))
            {
                this.tablevJ_TransfByCell.method_3();
            }
            this.tablevJ_CableByCell = (vJ_CableByCellDataTable) base.Tables["vJ_CableByCell"];
            if (bool_0 && (this.tablevJ_CableByCell != null))
            {
                this.tablevJ_CableByCell.method_2();
            }
            this.tablefn_J_GetBusMVByTransf = (fn_J_GetBusMVByTransfDataTable) base.Tables["fn_J_GetBusMVByTransf"];
            if (bool_0 && (this.tablefn_J_GetBusMVByTransf != null))
            {
                this.tablefn_J_GetBusMVByTransf.method_2();
            }
            this.tabletJ_MeasAmperageTransf = (tJ_MeasAmperageTransfDataTable) base.Tables["tJ_MeasAmperageTransf"];
            if (bool_0 && (this.tabletJ_MeasAmperageTransf != null))
            {
                this.tabletJ_MeasAmperageTransf.method_3();
            }
            this.tabletSchm_ObjList2 = (tSchm_ObjList2DataTable) base.Tables["tSchm_ObjList2"];
            if (bool_0 && (this.tabletSchm_ObjList2 != null))
            {
                this.tabletSchm_ObjList2.method_3();
            }
            this.tabletSchm_ObjList3 = (tSchm_ObjList3DataTable) base.Tables["tSchm_ObjList3"];
            if (bool_0 && (this.tabletSchm_ObjList3 != null))
            {
                this.tabletSchm_ObjList3.method_3();
            }
            this.tablevP_TransfBySubstation = (vP_TransfBySubstationDataTable) base.Tables["vP_TransfBySubstation"];
            if (bool_0 && (this.tablevP_TransfBySubstation != null))
            {
                this.tablevP_TransfBySubstation.method_2();
            }
            this.tablevJ_MeasAmpSubTransf_TEMP = (vJ_MeasAmpSubTransf_TEMPDataTable) base.Tables["vJ_MeasAmpSubTransf_TEMP"];
            if (bool_0 && (this.tablevJ_MeasAmpSubTransf_TEMP != null))
            {
                this.tablevJ_MeasAmpSubTransf_TEMP.method_3();
            }
            this.tablevJ_MeasSubTransf_TEMP = (vJ_MeasSubTransf_TEMPDataTable) base.Tables["vJ_MeasSubTransf_TEMP"];
            if (bool_0 && (this.tablevJ_MeasSubTransf_TEMP != null))
            {
                this.tablevJ_MeasSubTransf_TEMP.method_3();
            }
            this.tablefn_J_GetTransfByBusLV = (fn_J_GetTransfByBusLVDataTable) base.Tables["fn_J_GetTransfByBusLV"];
            if (bool_0 && (this.tablefn_J_GetTransfByBusLV != null))
            {
                this.tablefn_J_GetTransfByBusLV.method_2();
            }
            this.tablevP_SubstationBus = (vP_SubstationBusDataTable) base.Tables["vP_SubstationBus"];
            if (bool_0 && (this.tablevP_SubstationBus != null))
            {
                this.tablevP_SubstationBus.method_3();
            }
            this.tablevJ_CellByBus = (vJ_CellByBusDataTable) base.Tables["vJ_CellByBus"];
            if (bool_0 && (this.tablevJ_CellByBus != null))
            {
                this.tablevJ_CellByBus.method_2();
            }
            this.tablevJ_PowerISR_SSBus = (vJ_PowerISR_SSBusDataTable) base.Tables["vJ_PowerISR_SSBus"];
            if (bool_0 && (this.tablevJ_PowerISR_SSBus != null))
            {
                this.tablevJ_PowerISR_SSBus.method_2();
            }
            this.tabledtBusesTransf = (dtBusesTransfDataTable) base.Tables["dtBusesTransf"];
            if (bool_0 && (this.tabledtBusesTransf != null))
            {
                this.tabledtBusesTransf.method_2();
            }
            this.tablevJ_BusesTransfSchema = (vJ_BusesTransfSchemaDataTable) base.Tables["vJ_BusesTransfSchema"];
            if (bool_0 && (this.tablevJ_BusesTransfSchema != null))
            {
                this.tablevJ_BusesTransfSchema.method_2();
            }
            this.tablevJ_BusesTransfs = (vJ_BusesTransfsDataTable) base.Tables["vJ_BusesTransfs"];
            if (bool_0 && (this.tablevJ_BusesTransfs != null))
            {
                this.tablevJ_BusesTransfs.method_2();
            }
            this.tablevJ_MeasCableReport = (vJ_MeasCableReportDataTable) base.Tables["vJ_MeasCableReport"];
            if (bool_0 && (this.tablevJ_MeasCableReport != null))
            {
                this.tablevJ_MeasCableReport.method_2();
            }
            this.tabletJ_MeasVoltageTransf = (tJ_MeasVoltageTransfDataTable) base.Tables["tJ_MeasVoltageTransf"];
            if (bool_0 && (this.tabletJ_MeasVoltageTransf != null))
            {
                this.tabletJ_MeasVoltageTransf.method_3();
            }
            this.tablevJ_MeasCableReport2 = (vJ_MeasCableReport2DataTable) base.Tables["vJ_MeasCableReport2"];
            if (bool_0 && (this.tablevJ_MeasCableReport2 != null))
            {
                this.tablevJ_MeasCableReport2.method_2();
            }
            this.tablevJ_CableByCellMeas = (vJ_CableByCellMeasDataTable) base.Tables["vJ_CableByCellMeas"];
            if (bool_0 && (this.tablevJ_CableByCellMeas != null))
            {
                this.tablevJ_CableByCellMeas.method_2();
            }
            this.tabletJ_MeasCell = (tJ_MeasCellDataTable) base.Tables["tJ_MeasCell"];
            if (bool_0 && (this.tabletJ_MeasCell != null))
            {
                this.tabletJ_MeasCell.method_3();
            }
            this.tablevJ_MeasCell = (vJ_MeasCellDataTable) base.Tables["vJ_MeasCell"];
            if (bool_0 && (this.tablevJ_MeasCell != null))
            {
                this.tablevJ_MeasCell.method_3();
            }
            this.tablevJ_MeasTransfVoltage = (vJ_MeasTransfVoltageDataTable) base.Tables["vJ_MeasTransfVoltage"];
            if (bool_0 && (this.tablevJ_MeasTransfVoltage != null))
            {
                this.tablevJ_MeasTransfVoltage.method_3();
            }
            this.tabletAbnDoc_Dogovor = (tAbnDoc_DogovorDataTable) base.Tables["tAbnDoc_Dogovor"];
            if (bool_0 && (this.tabletAbnDoc_Dogovor != null))
            {
                this.tabletAbnDoc_Dogovor.method_3();
            }
            this.tabletAbnObjDoc_AktRBP = (tAbnObjDoc_AktRBPDataTable) base.Tables["tAbnObjDoc_AktRBP"];
            if (bool_0 && (this.tabletAbnObjDoc_AktRBP != null))
            {
                this.tabletAbnObjDoc_AktRBP.method_3();
            }
            this.tabletAbn = (tAbnDataTable) base.Tables["tAbn"];
            if (bool_0 && (this.tabletAbn != null))
            {
                this.tabletAbn.method_3();
            }
            this.tabletAbnObj = (tAbnObjDataTable) base.Tables["tAbnObj"];
            if (bool_0 && (this.tabletAbnObj != null))
            {
                this.tabletAbnObj.method_3();
            }
            this.tabletAbnObjDoc_Image = (tAbnObjDoc_ImageDataTable) base.Tables["tAbnObjDoc_Image"];
            if (bool_0 && (this.tabletAbnObjDoc_Image != null))
            {
                this.tabletAbnObjDoc_Image.method_3();
            }
            this.tabletAbnObjDoc_List = (tAbnObjDoc_ListDataTable) base.Tables["tAbnObjDoc_List"];
            if (bool_0 && (this.tabletAbnObjDoc_List != null))
            {
                this.tabletAbnObjDoc_List.method_3();
            }
            this.tabletAbnContact = (tAbnContactDataTable) base.Tables["tAbnContact"];
            if (bool_0 && (this.tabletAbnContact != null))
            {
                this.tabletAbnContact.method_3();
            }
            this.tabletAbnDoc_List = (tAbnDoc_ListDataTable) base.Tables["tAbnDoc_List"];
            if (bool_0 && (this.tabletAbnDoc_List != null))
            {
                this.tabletAbnDoc_List.method_3();
            }
            this.tabletG_AbnAddress = (tG_AbnAddressDataTable) base.Tables["tG_AbnAddress"];
            if (bool_0 && (this.tabletG_AbnAddress != null))
            {
                this.tabletG_AbnAddress.method_3();
            }
            this.tabletG_AbnChief = (tG_AbnChiefDataTable) base.Tables["tG_AbnChief"];
            if (bool_0 && (this.tabletG_AbnChief != null))
            {
                this.tabletG_AbnChief.method_3();
            }
            this.tabletAbnObjDoc_File = (tAbnObjDoc_FileDataTable) base.Tables["tAbnObjDoc_File"];
            if (bool_0 && (this.tabletAbnObjDoc_File != null))
            {
                this.tabletAbnObjDoc_File.method_3();
            }
            this.tabletTC_ActTC = (tTC_ActTCDataTable) base.Tables["tTC_ActTC"];
            if (bool_0 && (this.tabletTC_ActTC != null))
            {
                this.tabletTC_ActTC.method_3();
            }
            this.tablevTC_TUPointAttach = (vTC_TUPointAttachDataTable) base.Tables["vTC_TUPointAttach"];
            if (bool_0 && (this.tablevTC_TUPointAttach != null))
            {
                this.tablevTC_TUPointAttach.method_3();
            }
            this.tablevAbn = (vAbnDataTable) base.Tables["vAbn"];
            if (bool_0 && (this.tablevAbn != null))
            {
                this.tablevAbn.method_3();
            }
            this.tabletTC_Doc = (tTC_DocDataTable) base.Tables["tTC_Doc"];
            if (bool_0 && (this.tabletTC_Doc != null))
            {
                this.tabletTC_Doc.method_3();
            }
            this.tablevSchm_ObjList = (vSchm_ObjListDataTable) base.Tables["vSchm_ObjList"];
            if (bool_0 && (this.tablevSchm_ObjList != null))
            {
                this.tablevSchm_ObjList.method_3();
            }
            this.tablevSchm_TreeCellLine = (vSchm_TreeCellLineDataTable) base.Tables["vSchm_TreeCellLine"];
            if (bool_0 && (this.tablevSchm_TreeCellLine != null))
            {
                this.tablevSchm_TreeCellLine.method_2();
            }
            this.tabletJ_BossUserGroup = (tJ_BossUserGroupDataTable) base.Tables["tJ_BossUserGroup"];
            if (bool_0 && (this.tabletJ_BossUserGroup != null))
            {
                this.tabletJ_BossUserGroup.method_3();
            }
            this.tablevJ_BossUser = (vJ_BossUserDataTable) base.Tables["vJ_BossUser"];
            if (bool_0 && (this.tablevJ_BossUser != null))
            {
                this.tablevJ_BossUser.method_2();
            }
            this.tabletJ_MemFiles = (tJ_MemFilesDataTable) base.Tables["tJ_MemFiles"];
            if (bool_0 && (this.tabletJ_MemFiles != null))
            {
                this.tabletJ_MemFiles.method_3();
            }
            this.tabletJ_Memorandum = (tJ_MemorandumDataTable) base.Tables["tJ_Memorandum"];
            if (bool_0 && (this.tabletJ_Memorandum != null))
            {
                this.tabletJ_Memorandum.method_3();
            }
            this.tablevJ_Memorandum = (vJ_MemorandumDataTable) base.Tables["vJ_Memorandum"];
            if (bool_0 && (this.tablevJ_Memorandum != null))
            {
                this.tablevJ_Memorandum.method_2();
            }
            this.tabletJ_MemWorker = (tJ_MemWorkerDataTable) base.Tables["tJ_MemWorker"];
            if (bool_0 && (this.tabletJ_MemWorker != null))
            {
                this.tabletJ_MemWorker.method_3();
            }
            this.tablevJ_Worker = (vJ_WorkerDataTable) base.Tables["vJ_Worker"];
            if (bool_0 && (this.tablevJ_Worker != null))
            {
                this.tablevJ_Worker.method_3();
            }
            this.tabletJ_BossUser = (tJ_BossUserDataTable) base.Tables["tJ_BossUser"];
            if (bool_0 && (this.tabletJ_BossUser != null))
            {
                this.tabletJ_BossUser.method_3();
            }
            this.tabletJ_MemCommission = (tJ_MemCommissionDataTable) base.Tables["tJ_MemCommission"];
            if (bool_0 && (this.tabletJ_MemCommission != null))
            {
                this.tabletJ_MemCommission.method_3();
            }
            this.tablevJ_MemCommission = (vJ_MemCommissionDataTable) base.Tables["vJ_MemCommission"];
            if (bool_0 && (this.tablevJ_MemCommission != null))
            {
                this.tablevJ_MemCommission.method_3();
            }
            this.relationtJ_RequestForRepair_tJ_RequestForRepairDaily = this.Relations["tJ_RequestForRepair_tJ_RequestForRepairDaily"];
            this.relationvJ_RequestForRepair_tJ_RequestForRepairDaily = this.Relations["vJ_RequestForRepair_tJ_RequestForRepairDaily"];
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_10()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_100()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_101()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_102()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_103()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_104()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_105()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_106()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_107()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_108()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_109()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_11()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_110()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_111()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_112()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_113()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_114()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_115()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, CollectionChangeEventArgs e)
        {
            if (e.Action == CollectionChangeAction.Remove)
            {
                this.method_0();
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void method_117()
        {
            this.vJ_RelayProtectionAutomation.coefTRColumn.Expression = "amp_primary + '/' + amp_secondary";
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_12()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_13()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_14()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_15()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_16()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_17()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_18()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_19()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private void method_2()
        {
            base.DataSetName = "DataSetGES";
            base.Prefix = "";
            base.Namespace = "http://tempuri.org/DataSetGES.xsd";
            base.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletUser = new tUserDataTable();
            base.Tables.Add(this.tabletUser);
            this.tabletJ_RequestDoc = new tJ_RequestDocDataTable();
            base.Tables.Add(this.tabletJ_RequestDoc);
            this.tabletJ_Request = new tJ_RequestDataTable();
            base.Tables.Add(this.tabletJ_Request);
            this.tablevJ_Request = new vJ_RequestDataTable();
            base.Tables.Add(this.tablevJ_Request);
            this.tablevJ_RequestForRepair = new vJ_RequestForRepairDataTable();
            base.Tables.Add(this.tablevJ_RequestForRepair);
            this.tabletJ_RequestForRepair = new tJ_RequestForRepairDataTable();
            base.Tables.Add(this.tabletJ_RequestForRepair);
            this.tabletR_Classifier = new tR_ClassifierDataTable();
            base.Tables.Add(this.tabletR_Classifier);
            this.tabletJ_RequestForRepairDaily = new tJ_RequestForRepairDailyDataTable();
            base.Tables.Add(this.tabletJ_RequestForRepairDaily);
            this.tablevJ_RequestForRepairDaily = new vJ_RequestForRepairDailyDataTable();
            base.Tables.Add(this.tablevJ_RequestForRepairDaily);
            this.tabletL_RequestForRepairSchmObjList = new tL_RequestForRepairSchmObjListDataTable();
            base.Tables.Add(this.tabletL_RequestForRepairSchmObjList);
            this.tabletJ_RequestForRepairDoc = new tJ_RequestForRepairDocDataTable();
            base.Tables.Add(this.tabletJ_RequestForRepairDoc);
            this.tabletJ_RelayProtectionAutomation = new tJ_RelayProtectionAutomationDataTable();
            base.Tables.Add(this.tabletJ_RelayProtectionAutomation);
            this.tabletJ_RelayProtectionAutomationValue = new tJ_RelayProtectionAutomationValueDataTable();
            base.Tables.Add(this.tabletJ_RelayProtectionAutomationValue);
            this.tablevJ_RelayProtectionAutomation = new vJ_RelayProtectionAutomationDataTable(false);
            base.Tables.Add(this.tablevJ_RelayProtectionAutomation);
            this.tabletJ_UpdateProgram = new tJ_UpdateProgramDataTable();
            base.Tables.Add(this.tabletJ_UpdateProgram);
            this.tabletJ_UpdateProgramDoc = new tJ_UpdateProgramDocDataTable();
            base.Tables.Add(this.tabletJ_UpdateProgramDoc);
            this.tablevJ_UpdateProgram = new vJ_UpdateProgramDataTable();
            base.Tables.Add(this.tablevJ_UpdateProgram);
            this.tabletJ_UpdateProgramUserCheck = new tJ_UpdateProgramUserCheckDataTable();
            base.Tables.Add(this.tabletJ_UpdateProgramUserCheck);
            this.tabletSchm_ObjList = new tSchm_ObjListDataTable();
            base.Tables.Add(this.tabletSchm_ObjList);
            this.tablevP_Worker = new vP_WorkerDataTable();
            base.Tables.Add(this.tablevP_Worker);
            this.tabletP_ValueLists = new tP_ValueListsDataTable();
            base.Tables.Add(this.tabletP_ValueLists);
            this.tablevJ_CableMakeup = new vJ_CableMakeupDataTable();
            base.Tables.Add(this.tablevJ_CableMakeup);
            this.tablevJ_MeasPeriodBySubstation = new vJ_MeasPeriodBySubstationDataTable();
            base.Tables.Add(this.tablevJ_MeasPeriodBySubstation);
            this.tablefn_J_GetCellCableLVByTransf = new fn_J_GetCellCableLVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetCellCableLVByTransf);
            this.tabletL_SchmAbn = new tL_SchmAbnDataTable();
            base.Tables.Add(this.tabletL_SchmAbn);
            this.tablevJ_MeasAbnObj = new vJ_MeasAbnObjDataTable();
            base.Tables.Add(this.tablevJ_MeasAbnObj);
            this.tablevJ_GetMeasYears = new vJ_GetMeasYearsDataTable();
            base.Tables.Add(this.tablevJ_GetMeasYears);
            this.tablefn_J_GetCellLVByTransf = new fn_J_GetCellLVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetCellLVByTransf);
            this.tablefn_J_MeasCableCalcResults = new fn_J_MeasCableCalcResultsDataTable();
            base.Tables.Add(this.tablefn_J_MeasCableCalcResults);
            this.tabletR_CableMakeup = new tR_CableMakeupDataTable();
            base.Tables.Add(this.tabletR_CableMakeup);
            this.tabletR_CrossSection = new tR_CrossSectionDataTable();
            base.Tables.Add(this.tabletR_CrossSection);
            this.tabletR_CableVoltage = new tR_CableVoltageDataTable();
            base.Tables.Add(this.tabletR_CableVoltage);
            this.tabletR_CableAmperage = new tR_CableAmperageDataTable();
            base.Tables.Add(this.tabletR_CableAmperage);
            this.tabletR_CableWires = new tR_CableWiresDataTable();
            base.Tables.Add(this.tabletR_CableWires);
            this.tablevJ_CableReference = new vJ_CableReferenceDataTable();
            base.Tables.Add(this.tablevJ_CableReference);
            this.tablevJ_Transfs = new vJ_TransfsDataTable();
            base.Tables.Add(this.tablevJ_Transfs);
            this.tabledtMeasCableRatio = new dtMeasCableRatioDataTable();
            base.Tables.Add(this.tabledtMeasCableRatio);
            this.tablefn_J_GetBusLVByTransf = new fn_J_GetBusLVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetBusLVByTransf);
            this.tablevJ_MeasurementReport = new vJ_MeasurementReportDataTable();
            base.Tables.Add(this.tablevJ_MeasurementReport);
            this.tabledtMeasTransfAmperageDopDataReport = new dtMeasTransfAmperageDopDataReportDataTable();
            base.Tables.Add(this.tabledtMeasTransfAmperageDopDataReport);
            this.tablefn_J_ExcelessLoadReport = new fn_J_ExcelessLoadReportDataTable();
            base.Tables.Add(this.tablefn_J_ExcelessLoadReport);
            this.tabledtExcelessLoadAddlReport = new dtExcelessLoadAddlReportDataTable();
            base.Tables.Add(this.tabledtExcelessLoadAddlReport);
            this.tablevJ_CoefficientLoading = new vJ_CoefficientLoadingDataTable();
            base.Tables.Add(this.tablevJ_CoefficientLoading);
            this.tabledtCoefficientLoadingAddl = new dtCoefficientLoadingAddlDataTable();
            base.Tables.Add(this.tabledtCoefficientLoadingAddl);
            this.tablevJ_CoefficientIrregularity = new vJ_CoefficientIrregularityDataTable();
            base.Tables.Add(this.tablevJ_CoefficientIrregularity);
            this.tablevP_SubstationTransf = new vP_SubstationTransfDataTable();
            base.Tables.Add(this.tablevP_SubstationTransf);
            this.tabletR_DocTemplate = new tR_DocTemplateDataTable();
            base.Tables.Add(this.tabletR_DocTemplate);
            this.tablefn_J_GetCellTransfByBusLV = new fn_J_GetCellTransfByBusLVDataTable();
            base.Tables.Add(this.tablefn_J_GetCellTransfByBusLV);
            this.tabledtBuses = new dtBusesDataTable();
            base.Tables.Add(this.tabledtBuses);
            this.tabledtCells = new dtCellsDataTable();
            base.Tables.Add(this.tabledtCells);
            this.tabletJ_Measurement = new tJ_MeasurementDataTable();
            base.Tables.Add(this.tabletJ_Measurement);
            this.tablevJ_MeasTransfPassport = new vJ_MeasTransfPassportDataTable();
            base.Tables.Add(this.tablevJ_MeasTransfPassport);
            this.tablefn_J_MeasTransfPassport = new fn_J_MeasTransfPassportDataTable();
            base.Tables.Add(this.tablefn_J_MeasTransfPassport);
            this.tablevJ_MeasCable = new vJ_MeasCableDataTable();
            base.Tables.Add(this.tablevJ_MeasCable);
            this.tabledtMeasCellRatio = new dtMeasCellRatioDataTable();
            base.Tables.Add(this.tabledtMeasCellRatio);
            this.tabletSchm_ObjList1 = new tSchm_ObjList1DataTable();
            base.Tables.Add(this.tabletSchm_ObjList1);
            this.tablevJ_TransfBySubstation = new vJ_TransfBySubstationDataTable();
            base.Tables.Add(this.tablevJ_TransfBySubstation);
            this.tablevJ_PowerISR_Transf = new vJ_PowerISR_TransfDataTable();
            base.Tables.Add(this.tablevJ_PowerISR_Transf);
            this.tablevJ_PowerISR_SSTransf = new vJ_PowerISR_SSTransfDataTable();
            base.Tables.Add(this.tablevJ_PowerISR_SSTransf);
            this.tabledtAmountFreeCapasity = new dtAmountFreeCapasityDataTable();
            base.Tables.Add(this.tabledtAmountFreeCapasity);
            this.tablefn_J_GetCellTransfByBusHV = new fn_J_GetCellTransfByBusHVDataTable();
            base.Tables.Add(this.tablefn_J_GetCellTransfByBusHV);
            this.tabletJ_MeasCable = new tJ_MeasCableDataTable();
            base.Tables.Add(this.tabletJ_MeasCable);
            this.tablevJ_LastCableInfo = new vJ_LastCableInfoDataTable();
            base.Tables.Add(this.tablevJ_LastCableInfo);
            this.tablevJ_TransfByCell = new vJ_TransfByCellDataTable();
            base.Tables.Add(this.tablevJ_TransfByCell);
            this.tablevJ_CableByCell = new vJ_CableByCellDataTable();
            base.Tables.Add(this.tablevJ_CableByCell);
            this.tablefn_J_GetBusMVByTransf = new fn_J_GetBusMVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetBusMVByTransf);
            this.tabletJ_MeasAmperageTransf = new tJ_MeasAmperageTransfDataTable();
            base.Tables.Add(this.tabletJ_MeasAmperageTransf);
            this.tabletSchm_ObjList2 = new tSchm_ObjList2DataTable();
            base.Tables.Add(this.tabletSchm_ObjList2);
            this.tabletSchm_ObjList3 = new tSchm_ObjList3DataTable();
            base.Tables.Add(this.tabletSchm_ObjList3);
            this.tablevP_TransfBySubstation = new vP_TransfBySubstationDataTable();
            base.Tables.Add(this.tablevP_TransfBySubstation);
            this.tablevJ_MeasAmpSubTransf_TEMP = new vJ_MeasAmpSubTransf_TEMPDataTable();
            base.Tables.Add(this.tablevJ_MeasAmpSubTransf_TEMP);
            this.tablevJ_MeasSubTransf_TEMP = new vJ_MeasSubTransf_TEMPDataTable();
            base.Tables.Add(this.tablevJ_MeasSubTransf_TEMP);
            this.tablefn_J_GetTransfByBusLV = new fn_J_GetTransfByBusLVDataTable();
            base.Tables.Add(this.tablefn_J_GetTransfByBusLV);
            this.tablevP_SubstationBus = new vP_SubstationBusDataTable();
            base.Tables.Add(this.tablevP_SubstationBus);
            this.tablevJ_CellByBus = new vJ_CellByBusDataTable();
            base.Tables.Add(this.tablevJ_CellByBus);
            this.tablevJ_PowerISR_SSBus = new vJ_PowerISR_SSBusDataTable();
            base.Tables.Add(this.tablevJ_PowerISR_SSBus);
            this.tabledtBusesTransf = new dtBusesTransfDataTable();
            base.Tables.Add(this.tabledtBusesTransf);
            this.tablevJ_BusesTransfSchema = new vJ_BusesTransfSchemaDataTable();
            base.Tables.Add(this.tablevJ_BusesTransfSchema);
            this.tablevJ_BusesTransfs = new vJ_BusesTransfsDataTable();
            base.Tables.Add(this.tablevJ_BusesTransfs);
            this.tablevJ_MeasCableReport = new vJ_MeasCableReportDataTable();
            base.Tables.Add(this.tablevJ_MeasCableReport);
            this.tabletJ_MeasVoltageTransf = new tJ_MeasVoltageTransfDataTable();
            base.Tables.Add(this.tabletJ_MeasVoltageTransf);
            this.tablevJ_MeasCableReport2 = new vJ_MeasCableReport2DataTable();
            base.Tables.Add(this.tablevJ_MeasCableReport2);
            this.tablevJ_CableByCellMeas = new vJ_CableByCellMeasDataTable();
            base.Tables.Add(this.tablevJ_CableByCellMeas);
            this.tabletJ_MeasCell = new tJ_MeasCellDataTable();
            base.Tables.Add(this.tabletJ_MeasCell);
            this.tablevJ_MeasCell = new vJ_MeasCellDataTable();
            base.Tables.Add(this.tablevJ_MeasCell);
            this.tablevJ_MeasTransfVoltage = new vJ_MeasTransfVoltageDataTable();
            base.Tables.Add(this.tablevJ_MeasTransfVoltage);
            this.tabletAbnDoc_Dogovor = new tAbnDoc_DogovorDataTable();
            base.Tables.Add(this.tabletAbnDoc_Dogovor);
            this.tabletAbnObjDoc_AktRBP = new tAbnObjDoc_AktRBPDataTable();
            base.Tables.Add(this.tabletAbnObjDoc_AktRBP);
            this.tabletAbn = new tAbnDataTable();
            base.Tables.Add(this.tabletAbn);
            this.tabletAbnObj = new tAbnObjDataTable();
            base.Tables.Add(this.tabletAbnObj);
            this.tabletAbnObjDoc_Image = new tAbnObjDoc_ImageDataTable();
            base.Tables.Add(this.tabletAbnObjDoc_Image);
            this.tabletAbnObjDoc_List = new tAbnObjDoc_ListDataTable();
            base.Tables.Add(this.tabletAbnObjDoc_List);
            this.tabletAbnContact = new tAbnContactDataTable();
            base.Tables.Add(this.tabletAbnContact);
            this.tabletAbnDoc_List = new tAbnDoc_ListDataTable();
            base.Tables.Add(this.tabletAbnDoc_List);
            this.tabletG_AbnAddress = new tG_AbnAddressDataTable();
            base.Tables.Add(this.tabletG_AbnAddress);
            this.tabletG_AbnChief = new tG_AbnChiefDataTable();
            base.Tables.Add(this.tabletG_AbnChief);
            this.tabletAbnObjDoc_File = new tAbnObjDoc_FileDataTable();
            base.Tables.Add(this.tabletAbnObjDoc_File);
            this.tabletTC_ActTC = new tTC_ActTCDataTable();
            base.Tables.Add(this.tabletTC_ActTC);
            this.tablevTC_TUPointAttach = new vTC_TUPointAttachDataTable();
            base.Tables.Add(this.tablevTC_TUPointAttach);
            this.tablevAbn = new vAbnDataTable();
            base.Tables.Add(this.tablevAbn);
            this.tabletTC_Doc = new tTC_DocDataTable();
            base.Tables.Add(this.tabletTC_Doc);
            this.tablevSchm_ObjList = new vSchm_ObjListDataTable();
            base.Tables.Add(this.tablevSchm_ObjList);
            this.tablevSchm_TreeCellLine = new vSchm_TreeCellLineDataTable();
            base.Tables.Add(this.tablevSchm_TreeCellLine);
            this.tabletJ_BossUserGroup = new tJ_BossUserGroupDataTable();
            base.Tables.Add(this.tabletJ_BossUserGroup);
            this.tablevJ_BossUser = new vJ_BossUserDataTable();
            base.Tables.Add(this.tablevJ_BossUser);
            this.tabletJ_MemFiles = new tJ_MemFilesDataTable();
            base.Tables.Add(this.tabletJ_MemFiles);
            this.tabletJ_Memorandum = new tJ_MemorandumDataTable();
            base.Tables.Add(this.tabletJ_Memorandum);
            this.tablevJ_Memorandum = new vJ_MemorandumDataTable();
            base.Tables.Add(this.tablevJ_Memorandum);
            this.tabletJ_MemWorker = new tJ_MemWorkerDataTable();
            base.Tables.Add(this.tabletJ_MemWorker);
            this.tablevJ_Worker = new vJ_WorkerDataTable();
            base.Tables.Add(this.tablevJ_Worker);
            this.tabletJ_BossUser = new tJ_BossUserDataTable();
            base.Tables.Add(this.tabletJ_BossUser);
            this.tabletJ_MemCommission = new tJ_MemCommissionDataTable();
            base.Tables.Add(this.tabletJ_MemCommission);
            this.tablevJ_MemCommission = new vJ_MemCommissionDataTable();
            base.Tables.Add(this.tablevJ_MemCommission);
            DataColumn[] parentColumns = new DataColumn[] { this.tabletJ_RequestForRepair.idColumn };
            DataColumn[] childColumns = new DataColumn[] { this.tabletJ_RequestForRepairDaily.idRequestColumn };
            this.relationtJ_RequestForRepair_tJ_RequestForRepairDaily = new DataRelation("tJ_RequestForRepair_tJ_RequestForRepairDaily", parentColumns, childColumns, false);
            this.Relations.Add(this.relationtJ_RequestForRepair_tJ_RequestForRepairDaily);
            DataColumn[] columnArray3 = new DataColumn[] { this.tablevJ_RequestForRepair.idColumn };
            DataColumn[] columnArray4 = new DataColumn[] { this.tabletJ_RequestForRepairDaily.idRequestColumn };
            this.relationvJ_RequestForRepair_tJ_RequestForRepairDaily = new DataRelation("vJ_RequestForRepair_tJ_RequestForRepairDaily", columnArray3, columnArray4, false);
            this.Relations.Add(this.relationvJ_RequestForRepair_tJ_RequestForRepairDaily);
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_20()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_21()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_22()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_23()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_24()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_25()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_26()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_27()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_28()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_29()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_3()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_30()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_31()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_32()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_33()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_34()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_35()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_36()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_37()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_38()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_39()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_4()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_40()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_41()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_42()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_43()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_44()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_45()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_46()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_47()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_48()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_49()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_5()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_50()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_51()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_52()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_53()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_54()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_55()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_56()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_57()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_58()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_59()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_6()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_60()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_61()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_62()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_63()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_64()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_65()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_66()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_67()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_68()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_69()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_7()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_70()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_71()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_72()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_73()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_74()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_75()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_76()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_77()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_78()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_79()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_8()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_80()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_81()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_82()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_83()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_84()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_85()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_86()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_87()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_88()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_89()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_9()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_90()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool method_91()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_92()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_93()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_94()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_95()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_96()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_97()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_98()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool method_99()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(XmlReader reader)
        {
            if (base.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)
            {
                this.Reset();
                DataSet dataSet = new DataSet();
                dataSet.ReadXml(reader);
                if (dataSet.Tables["tUser"] != null)
                {
                    base.Tables.Add(new tUserDataTable(dataSet.Tables["tUser"]));
                }
                if (dataSet.Tables["tJ_RequestDoc"] != null)
                {
                    base.Tables.Add(new tJ_RequestDocDataTable(dataSet.Tables["tJ_RequestDoc"]));
                }
                if (dataSet.Tables["tJ_Request"] != null)
                {
                    base.Tables.Add(new tJ_RequestDataTable(dataSet.Tables["tJ_Request"]));
                }
                if (dataSet.Tables["vJ_Request"] != null)
                {
                    base.Tables.Add(new vJ_RequestDataTable(dataSet.Tables["vJ_Request"]));
                }
                if (dataSet.Tables["vJ_RequestForRepair"] != null)
                {
                    base.Tables.Add(new vJ_RequestForRepairDataTable(dataSet.Tables["vJ_RequestForRepair"]));
                }
                if (dataSet.Tables["tJ_RequestForRepair"] != null)
                {
                    base.Tables.Add(new tJ_RequestForRepairDataTable(dataSet.Tables["tJ_RequestForRepair"]));
                }
                if (dataSet.Tables["tR_Classifier"] != null)
                {
                    base.Tables.Add(new tR_ClassifierDataTable(dataSet.Tables["tR_Classifier"]));
                }
                if (dataSet.Tables["tJ_RequestForRepairDaily"] != null)
                {
                    base.Tables.Add(new tJ_RequestForRepairDailyDataTable(dataSet.Tables["tJ_RequestForRepairDaily"]));
                }
                if (dataSet.Tables["vJ_RequestForRepairDaily"] != null)
                {
                    base.Tables.Add(new vJ_RequestForRepairDailyDataTable(dataSet.Tables["vJ_RequestForRepairDaily"]));
                }
                if (dataSet.Tables["tL_RequestForRepairSchmObjList"] != null)
                {
                    base.Tables.Add(new tL_RequestForRepairSchmObjListDataTable(dataSet.Tables["tL_RequestForRepairSchmObjList"]));
                }
                if (dataSet.Tables["tJ_RequestForRepairDoc"] != null)
                {
                    base.Tables.Add(new tJ_RequestForRepairDocDataTable(dataSet.Tables["tJ_RequestForRepairDoc"]));
                }
                if (dataSet.Tables["tJ_RelayProtectionAutomation"] != null)
                {
                    base.Tables.Add(new tJ_RelayProtectionAutomationDataTable(dataSet.Tables["tJ_RelayProtectionAutomation"]));
                }
                if (dataSet.Tables["tJ_RelayProtectionAutomationValue"] != null)
                {
                    base.Tables.Add(new tJ_RelayProtectionAutomationValueDataTable(dataSet.Tables["tJ_RelayProtectionAutomationValue"]));
                }
                if (dataSet.Tables["vJ_RelayProtectionAutomation"] != null)
                {
                    base.Tables.Add(new vJ_RelayProtectionAutomationDataTable(dataSet.Tables["vJ_RelayProtectionAutomation"]));
                }
                if (dataSet.Tables["tJ_UpdateProgram"] != null)
                {
                    base.Tables.Add(new tJ_UpdateProgramDataTable(dataSet.Tables["tJ_UpdateProgram"]));
                }
                if (dataSet.Tables["tJ_UpdateProgramDoc"] != null)
                {
                    base.Tables.Add(new tJ_UpdateProgramDocDataTable(dataSet.Tables["tJ_UpdateProgramDoc"]));
                }
                if (dataSet.Tables["vJ_UpdateProgram"] != null)
                {
                    base.Tables.Add(new vJ_UpdateProgramDataTable(dataSet.Tables["vJ_UpdateProgram"]));
                }
                if (dataSet.Tables["tJ_UpdateProgramUserCheck"] != null)
                {
                    base.Tables.Add(new tJ_UpdateProgramUserCheckDataTable(dataSet.Tables["tJ_UpdateProgramUserCheck"]));
                }
                if (dataSet.Tables["tSchm_ObjList"] != null)
                {
                    base.Tables.Add(new tSchm_ObjListDataTable(dataSet.Tables["tSchm_ObjList"]));
                }
                if (dataSet.Tables["vP_Worker"] != null)
                {
                    base.Tables.Add(new vP_WorkerDataTable(dataSet.Tables["vP_Worker"]));
                }
                if (dataSet.Tables["tP_ValueLists"] != null)
                {
                    base.Tables.Add(new tP_ValueListsDataTable(dataSet.Tables["tP_ValueLists"]));
                }
                if (dataSet.Tables["vJ_CableMakeup"] != null)
                {
                    base.Tables.Add(new vJ_CableMakeupDataTable(dataSet.Tables["vJ_CableMakeup"]));
                }
                if (dataSet.Tables["vJ_MeasPeriodBySubstation"] != null)
                {
                    base.Tables.Add(new vJ_MeasPeriodBySubstationDataTable(dataSet.Tables["vJ_MeasPeriodBySubstation"]));
                }
                if (dataSet.Tables["fn_J_GetCellCableLVByTransf"] != null)
                {
                    base.Tables.Add(new fn_J_GetCellCableLVByTransfDataTable(dataSet.Tables["fn_J_GetCellCableLVByTransf"]));
                }
                if (dataSet.Tables["tL_SchmAbn"] != null)
                {
                    base.Tables.Add(new tL_SchmAbnDataTable(dataSet.Tables["tL_SchmAbn"]));
                }
                if (dataSet.Tables["vJ_MeasAbnObj"] != null)
                {
                    base.Tables.Add(new vJ_MeasAbnObjDataTable(dataSet.Tables["vJ_MeasAbnObj"]));
                }
                if (dataSet.Tables["vJ_GetMeasYears"] != null)
                {
                    base.Tables.Add(new vJ_GetMeasYearsDataTable(dataSet.Tables["vJ_GetMeasYears"]));
                }
                if (dataSet.Tables["fn_J_GetCellLVByTransf"] != null)
                {
                    base.Tables.Add(new fn_J_GetCellLVByTransfDataTable(dataSet.Tables["fn_J_GetCellLVByTransf"]));
                }
                if (dataSet.Tables["fn_J_MeasCableCalcResults"] != null)
                {
                    base.Tables.Add(new fn_J_MeasCableCalcResultsDataTable(dataSet.Tables["fn_J_MeasCableCalcResults"]));
                }
                if (dataSet.Tables["tR_CableMakeup"] != null)
                {
                    base.Tables.Add(new tR_CableMakeupDataTable(dataSet.Tables["tR_CableMakeup"]));
                }
                if (dataSet.Tables["tR_CrossSection"] != null)
                {
                    base.Tables.Add(new tR_CrossSectionDataTable(dataSet.Tables["tR_CrossSection"]));
                }
                if (dataSet.Tables["tR_CableVoltage"] != null)
                {
                    base.Tables.Add(new tR_CableVoltageDataTable(dataSet.Tables["tR_CableVoltage"]));
                }
                if (dataSet.Tables["tR_CableAmperage"] != null)
                {
                    base.Tables.Add(new tR_CableAmperageDataTable(dataSet.Tables["tR_CableAmperage"]));
                }
                if (dataSet.Tables["tR_CableWires"] != null)
                {
                    base.Tables.Add(new tR_CableWiresDataTable(dataSet.Tables["tR_CableWires"]));
                }
                if (dataSet.Tables["vJ_CableReference"] != null)
                {
                    base.Tables.Add(new vJ_CableReferenceDataTable(dataSet.Tables["vJ_CableReference"]));
                }
                if (dataSet.Tables["vJ_Transfs"] != null)
                {
                    base.Tables.Add(new vJ_TransfsDataTable(dataSet.Tables["vJ_Transfs"]));
                }
                if (dataSet.Tables["dtMeasCableRatio"] != null)
                {
                    base.Tables.Add(new dtMeasCableRatioDataTable(dataSet.Tables["dtMeasCableRatio"]));
                }
                if (dataSet.Tables["fn_J_GetBusLVByTransf"] != null)
                {
                    base.Tables.Add(new fn_J_GetBusLVByTransfDataTable(dataSet.Tables["fn_J_GetBusLVByTransf"]));
                }
                if (dataSet.Tables["vJ_MeasurementReport"] != null)
                {
                    base.Tables.Add(new vJ_MeasurementReportDataTable(dataSet.Tables["vJ_MeasurementReport"]));
                }
                if (dataSet.Tables["dtMeasTransfAmperageDopDataReport"] != null)
                {
                    base.Tables.Add(new dtMeasTransfAmperageDopDataReportDataTable(dataSet.Tables["dtMeasTransfAmperageDopDataReport"]));
                }
                if (dataSet.Tables["fn_J_ExcelessLoadReport"] != null)
                {
                    base.Tables.Add(new fn_J_ExcelessLoadReportDataTable(dataSet.Tables["fn_J_ExcelessLoadReport"]));
                }
                if (dataSet.Tables["dtExcelessLoadAddlReport"] != null)
                {
                    base.Tables.Add(new dtExcelessLoadAddlReportDataTable(dataSet.Tables["dtExcelessLoadAddlReport"]));
                }
                if (dataSet.Tables["vJ_CoefficientLoading"] != null)
                {
                    base.Tables.Add(new vJ_CoefficientLoadingDataTable(dataSet.Tables["vJ_CoefficientLoading"]));
                }
                if (dataSet.Tables["dtCoefficientLoadingAddl"] != null)
                {
                    base.Tables.Add(new dtCoefficientLoadingAddlDataTable(dataSet.Tables["dtCoefficientLoadingAddl"]));
                }
                if (dataSet.Tables["vJ_CoefficientIrregularity"] != null)
                {
                    base.Tables.Add(new vJ_CoefficientIrregularityDataTable(dataSet.Tables["vJ_CoefficientIrregularity"]));
                }
                if (dataSet.Tables["vP_SubstationTransf"] != null)
                {
                    base.Tables.Add(new vP_SubstationTransfDataTable(dataSet.Tables["vP_SubstationTransf"]));
                }
                if (dataSet.Tables["tR_DocTemplate"] != null)
                {
                    base.Tables.Add(new tR_DocTemplateDataTable(dataSet.Tables["tR_DocTemplate"]));
                }
                if (dataSet.Tables["fn_J_GetCellTransfByBusLV"] != null)
                {
                    base.Tables.Add(new fn_J_GetCellTransfByBusLVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusLV"]));
                }
                if (dataSet.Tables["dtBuses"] != null)
                {
                    base.Tables.Add(new dtBusesDataTable(dataSet.Tables["dtBuses"]));
                }
                if (dataSet.Tables["dtCells"] != null)
                {
                    base.Tables.Add(new dtCellsDataTable(dataSet.Tables["dtCells"]));
                }
                if (dataSet.Tables["tJ_Measurement"] != null)
                {
                    base.Tables.Add(new tJ_MeasurementDataTable(dataSet.Tables["tJ_Measurement"]));
                }
                if (dataSet.Tables["vJ_MeasTransfPassport"] != null)
                {
                    base.Tables.Add(new vJ_MeasTransfPassportDataTable(dataSet.Tables["vJ_MeasTransfPassport"]));
                }
                if (dataSet.Tables["fn_J_MeasTransfPassport"] != null)
                {
                    base.Tables.Add(new fn_J_MeasTransfPassportDataTable(dataSet.Tables["fn_J_MeasTransfPassport"]));
                }
                if (dataSet.Tables["vJ_MeasCable"] != null)
                {
                    base.Tables.Add(new vJ_MeasCableDataTable(dataSet.Tables["vJ_MeasCable"]));
                }
                if (dataSet.Tables["dtMeasCellRatio"] != null)
                {
                    base.Tables.Add(new dtMeasCellRatioDataTable(dataSet.Tables["dtMeasCellRatio"]));
                }
                if (dataSet.Tables["tSchm_ObjList1"] != null)
                {
                    base.Tables.Add(new tSchm_ObjList1DataTable(dataSet.Tables["tSchm_ObjList1"]));
                }
                if (dataSet.Tables["vJ_TransfBySubstation"] != null)
                {
                    base.Tables.Add(new vJ_TransfBySubstationDataTable(dataSet.Tables["vJ_TransfBySubstation"]));
                }
                if (dataSet.Tables["vJ_PowerISR_Transf"] != null)
                {
                    base.Tables.Add(new vJ_PowerISR_TransfDataTable(dataSet.Tables["vJ_PowerISR_Transf"]));
                }
                if (dataSet.Tables["vJ_PowerISR_SSTransf"] != null)
                {
                    base.Tables.Add(new vJ_PowerISR_SSTransfDataTable(dataSet.Tables["vJ_PowerISR_SSTransf"]));
                }
                if (dataSet.Tables["dtAmountFreeCapasity"] != null)
                {
                    base.Tables.Add(new dtAmountFreeCapasityDataTable(dataSet.Tables["dtAmountFreeCapasity"]));
                }
                if (dataSet.Tables["fn_J_GetCellTransfByBusHV"] != null)
                {
                    base.Tables.Add(new fn_J_GetCellTransfByBusHVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusHV"]));
                }
                if (dataSet.Tables["tJ_MeasCable"] != null)
                {
                    base.Tables.Add(new tJ_MeasCableDataTable(dataSet.Tables["tJ_MeasCable"]));
                }
                if (dataSet.Tables["vJ_LastCableInfo"] != null)
                {
                    base.Tables.Add(new vJ_LastCableInfoDataTable(dataSet.Tables["vJ_LastCableInfo"]));
                }
                if (dataSet.Tables["vJ_TransfByCell"] != null)
                {
                    base.Tables.Add(new vJ_TransfByCellDataTable(dataSet.Tables["vJ_TransfByCell"]));
                }
                if (dataSet.Tables["vJ_CableByCell"] != null)
                {
                    base.Tables.Add(new vJ_CableByCellDataTable(dataSet.Tables["vJ_CableByCell"]));
                }
                if (dataSet.Tables["fn_J_GetBusMVByTransf"] != null)
                {
                    base.Tables.Add(new fn_J_GetBusMVByTransfDataTable(dataSet.Tables["fn_J_GetBusMVByTransf"]));
                }
                if (dataSet.Tables["tJ_MeasAmperageTransf"] != null)
                {
                    base.Tables.Add(new tJ_MeasAmperageTransfDataTable(dataSet.Tables["tJ_MeasAmperageTransf"]));
                }
                if (dataSet.Tables["tSchm_ObjList2"] != null)
                {
                    base.Tables.Add(new tSchm_ObjList2DataTable(dataSet.Tables["tSchm_ObjList2"]));
                }
                if (dataSet.Tables["tSchm_ObjList3"] != null)
                {
                    base.Tables.Add(new tSchm_ObjList3DataTable(dataSet.Tables["tSchm_ObjList3"]));
                }
                if (dataSet.Tables["vP_TransfBySubstation"] != null)
                {
                    base.Tables.Add(new vP_TransfBySubstationDataTable(dataSet.Tables["vP_TransfBySubstation"]));
                }
                if (dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"] != null)
                {
                    base.Tables.Add(new vJ_MeasAmpSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"]));
                }
                if (dataSet.Tables["vJ_MeasSubTransf_TEMP"] != null)
                {
                    base.Tables.Add(new vJ_MeasSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasSubTransf_TEMP"]));
                }
                if (dataSet.Tables["fn_J_GetTransfByBusLV"] != null)
                {
                    base.Tables.Add(new fn_J_GetTransfByBusLVDataTable(dataSet.Tables["fn_J_GetTransfByBusLV"]));
                }
                if (dataSet.Tables["vP_SubstationBus"] != null)
                {
                    base.Tables.Add(new vP_SubstationBusDataTable(dataSet.Tables["vP_SubstationBus"]));
                }
                if (dataSet.Tables["vJ_CellByBus"] != null)
                {
                    base.Tables.Add(new vJ_CellByBusDataTable(dataSet.Tables["vJ_CellByBus"]));
                }
                if (dataSet.Tables["vJ_PowerISR_SSBus"] != null)
                {
                    base.Tables.Add(new vJ_PowerISR_SSBusDataTable(dataSet.Tables["vJ_PowerISR_SSBus"]));
                }
                if (dataSet.Tables["dtBusesTransf"] != null)
                {
                    base.Tables.Add(new dtBusesTransfDataTable(dataSet.Tables["dtBusesTransf"]));
                }
                if (dataSet.Tables["vJ_BusesTransfSchema"] != null)
                {
                    base.Tables.Add(new vJ_BusesTransfSchemaDataTable(dataSet.Tables["vJ_BusesTransfSchema"]));
                }
                if (dataSet.Tables["vJ_BusesTransfs"] != null)
                {
                    base.Tables.Add(new vJ_BusesTransfsDataTable(dataSet.Tables["vJ_BusesTransfs"]));
                }
                if (dataSet.Tables["vJ_MeasCableReport"] != null)
                {
                    base.Tables.Add(new vJ_MeasCableReportDataTable(dataSet.Tables["vJ_MeasCableReport"]));
                }
                if (dataSet.Tables["tJ_MeasVoltageTransf"] != null)
                {
                    base.Tables.Add(new tJ_MeasVoltageTransfDataTable(dataSet.Tables["tJ_MeasVoltageTransf"]));
                }
                if (dataSet.Tables["vJ_MeasCableReport2"] != null)
                {
                    base.Tables.Add(new vJ_MeasCableReport2DataTable(dataSet.Tables["vJ_MeasCableReport2"]));
                }
                if (dataSet.Tables["vJ_CableByCellMeas"] != null)
                {
                    base.Tables.Add(new vJ_CableByCellMeasDataTable(dataSet.Tables["vJ_CableByCellMeas"]));
                }
                if (dataSet.Tables["tJ_MeasCell"] != null)
                {
                    base.Tables.Add(new tJ_MeasCellDataTable(dataSet.Tables["tJ_MeasCell"]));
                }
                if (dataSet.Tables["vJ_MeasCell"] != null)
                {
                    base.Tables.Add(new vJ_MeasCellDataTable(dataSet.Tables["vJ_MeasCell"]));
                }
                if (dataSet.Tables["vJ_MeasTransfVoltage"] != null)
                {
                    base.Tables.Add(new vJ_MeasTransfVoltageDataTable(dataSet.Tables["vJ_MeasTransfVoltage"]));
                }
                if (dataSet.Tables["tAbnDoc_Dogovor"] != null)
                {
                    base.Tables.Add(new tAbnDoc_DogovorDataTable(dataSet.Tables["tAbnDoc_Dogovor"]));
                }
                if (dataSet.Tables["tAbnObjDoc_AktRBP"] != null)
                {
                    base.Tables.Add(new tAbnObjDoc_AktRBPDataTable(dataSet.Tables["tAbnObjDoc_AktRBP"]));
                }
                if (dataSet.Tables["tAbn"] != null)
                {
                    base.Tables.Add(new tAbnDataTable(dataSet.Tables["tAbn"]));
                }
                if (dataSet.Tables["tAbnObj"] != null)
                {
                    base.Tables.Add(new tAbnObjDataTable(dataSet.Tables["tAbnObj"]));
                }
                if (dataSet.Tables["tAbnObjDoc_Image"] != null)
                {
                    base.Tables.Add(new tAbnObjDoc_ImageDataTable(dataSet.Tables["tAbnObjDoc_Image"]));
                }
                if (dataSet.Tables["tAbnObjDoc_List"] != null)
                {
                    base.Tables.Add(new tAbnObjDoc_ListDataTable(dataSet.Tables["tAbnObjDoc_List"]));
                }
                if (dataSet.Tables["tAbnContact"] != null)
                {
                    base.Tables.Add(new tAbnContactDataTable(dataSet.Tables["tAbnContact"]));
                }
                if (dataSet.Tables["tAbnDoc_List"] != null)
                {
                    base.Tables.Add(new tAbnDoc_ListDataTable(dataSet.Tables["tAbnDoc_List"]));
                }
                if (dataSet.Tables["tG_AbnAddress"] != null)
                {
                    base.Tables.Add(new tG_AbnAddressDataTable(dataSet.Tables["tG_AbnAddress"]));
                }
                if (dataSet.Tables["tG_AbnChief"] != null)
                {
                    base.Tables.Add(new tG_AbnChiefDataTable(dataSet.Tables["tG_AbnChief"]));
                }
                if (dataSet.Tables["tAbnObjDoc_File"] != null)
                {
                    base.Tables.Add(new tAbnObjDoc_FileDataTable(dataSet.Tables["tAbnObjDoc_File"]));
                }
                if (dataSet.Tables["tTC_ActTC"] != null)
                {
                    base.Tables.Add(new tTC_ActTCDataTable(dataSet.Tables["tTC_ActTC"]));
                }
                if (dataSet.Tables["vTC_TUPointAttach"] != null)
                {
                    base.Tables.Add(new vTC_TUPointAttachDataTable(dataSet.Tables["vTC_TUPointAttach"]));
                }
                if (dataSet.Tables["vAbn"] != null)
                {
                    base.Tables.Add(new vAbnDataTable(dataSet.Tables["vAbn"]));
                }
                if (dataSet.Tables["tTC_Doc"] != null)
                {
                    base.Tables.Add(new tTC_DocDataTable(dataSet.Tables["tTC_Doc"]));
                }
                if (dataSet.Tables["vSchm_ObjList"] != null)
                {
                    base.Tables.Add(new vSchm_ObjListDataTable(dataSet.Tables["vSchm_ObjList"]));
                }
                if (dataSet.Tables["vSchm_TreeCellLine"] != null)
                {
                    base.Tables.Add(new vSchm_TreeCellLineDataTable(dataSet.Tables["vSchm_TreeCellLine"]));
                }
                if (dataSet.Tables["tJ_BossUserGroup"] != null)
                {
                    base.Tables.Add(new tJ_BossUserGroupDataTable(dataSet.Tables["tJ_BossUserGroup"]));
                }
                if (dataSet.Tables["vJ_BossUser"] != null)
                {
                    base.Tables.Add(new vJ_BossUserDataTable(dataSet.Tables["vJ_BossUser"]));
                }
                if (dataSet.Tables["tJ_MemFiles"] != null)
                {
                    base.Tables.Add(new tJ_MemFilesDataTable(dataSet.Tables["tJ_MemFiles"]));
                }
                if (dataSet.Tables["tJ_Memorandum"] != null)
                {
                    base.Tables.Add(new tJ_MemorandumDataTable(dataSet.Tables["tJ_Memorandum"]));
                }
                if (dataSet.Tables["vJ_Memorandum"] != null)
                {
                    base.Tables.Add(new vJ_MemorandumDataTable(dataSet.Tables["vJ_Memorandum"]));
                }
                if (dataSet.Tables["tJ_MemWorker"] != null)
                {
                    base.Tables.Add(new tJ_MemWorkerDataTable(dataSet.Tables["tJ_MemWorker"]));
                }
                if (dataSet.Tables["vJ_Worker"] != null)
                {
                    base.Tables.Add(new vJ_WorkerDataTable(dataSet.Tables["vJ_Worker"]));
                }
                if (dataSet.Tables["tJ_BossUser"] != null)
                {
                    base.Tables.Add(new tJ_BossUserDataTable(dataSet.Tables["tJ_BossUser"]));
                }
                if (dataSet.Tables["tJ_MemCommission"] != null)
                {
                    base.Tables.Add(new tJ_MemCommissionDataTable(dataSet.Tables["tJ_MemCommission"]));
                }
                if (dataSet.Tables["vJ_MemCommission"] != null)
                {
                    base.Tables.Add(new vJ_MemCommissionDataTable(dataSet.Tables["vJ_MemCommission"]));
                }
                base.DataSetName = dataSet.DataSetName;
                base.Prefix = dataSet.Prefix;
                base.Namespace = dataSet.Namespace;
                base.Locale = dataSet.Locale;
                base.CaseSensitive = dataSet.CaseSensitive;
                base.EnforceConstraints = dataSet.EnforceConstraints;
                base.Merge(dataSet, false, MissingSchemaAction.Add);
                this.method_0();
            }
            else
            {
                base.ReadXml(reader);
                this.method_0();
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
        {
            DataSetGES tges = new DataSetGES();
            XmlSchemaComplexType type = new XmlSchemaComplexType();
            XmlSchemaSequence sequence = new XmlSchemaSequence();
            XmlSchemaAny item = new XmlSchemaAny {
                Namespace = tges.Namespace
            };
            sequence.Items.Add(item);
            type.Particle = sequence;
            XmlSchema schemaSerializable = tges.GetSchemaSerializable();
            if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
            {
                XmlSchemaComplexType type2;
                MemoryStream stream = new MemoryStream();
                MemoryStream stream2 = new MemoryStream();
                try
                {
                    schemaSerializable.Write(stream);
                    IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                    while (enumerator.MoveNext())
                    {
                        stream2.SetLength(0L);
                        ((XmlSchema) enumerator.Current).Write(stream2);
                        if (stream.Length == stream2.Length)
                        {
                            stream.Position = 0L;
                            stream2.Position = 0L;
                            while (stream.Position != stream.Length)
                            {
                                if (stream.ReadByte() != stream2.ReadByte())
                                {
                                    break;
                                }
                            }
                            if (stream.Position == stream.Length)
                            {
                                goto Label_011B;
                            }
                        }
                    }
                    goto Label_013A;
                Label_011B:
                    type2 = type;
                }
                finally
                {
                    if (stream != null)
                    {
                        stream.Close();
                    }
                    if (stream2 != null)
                    {
                        stream2.Close();
                    }
                }
                return type2;
            }
        Label_013A:
            xmlSchemaSet_0.Add(schemaSerializable);
            return type;
        }

        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public dtAmountFreeCapasityDataTable dtAmountFreeCapasity
        {
            get
            {
                return this.tabledtAmountFreeCapasity;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public dtBusesDataTable dtBuses
        {
            get
            {
                return this.tabledtBuses;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public dtBusesTransfDataTable dtBusesTransf
        {
            get
            {
                return this.tabledtBusesTransf;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dtCellsDataTable dtCells
        {
            get
            {
                return this.tabledtCells;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public dtCoefficientLoadingAddlDataTable dtCoefficientLoadingAddl
        {
            get
            {
                return this.tabledtCoefficientLoadingAddl;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dtExcelessLoadAddlReportDataTable dtExcelessLoadAddlReport
        {
            get
            {
                return this.tabledtExcelessLoadAddlReport;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public dtMeasCableRatioDataTable dtMeasCableRatio
        {
            get
            {
                return this.tabledtMeasCableRatio;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public dtMeasCellRatioDataTable dtMeasCellRatio
        {
            get
            {
                return this.tabledtMeasCellRatio;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public dtMeasTransfAmperageDopDataReportDataTable dtMeasTransfAmperageDopDataReport
        {
            get
            {
                return this.tabledtMeasTransfAmperageDopDataReport;
            }
        }

        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public fn_J_ExcelessLoadReportDataTable fn_J_ExcelessLoadReport
        {
            get
            {
                return this.tablefn_J_ExcelessLoadReport;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public fn_J_GetBusLVByTransfDataTable fn_J_GetBusLVByTransf
        {
            get
            {
                return this.tablefn_J_GetBusLVByTransf;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public fn_J_GetBusMVByTransfDataTable fn_J_GetBusMVByTransf
        {
            get
            {
                return this.tablefn_J_GetBusMVByTransf;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public fn_J_GetCellCableLVByTransfDataTable fn_J_GetCellCableLVByTransf
        {
            get
            {
                return this.tablefn_J_GetCellCableLVByTransf;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public fn_J_GetCellLVByTransfDataTable fn_J_GetCellLVByTransf
        {
            get
            {
                return this.tablefn_J_GetCellLVByTransf;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public fn_J_GetCellTransfByBusHVDataTable fn_J_GetCellTransfByBusHV
        {
            get
            {
                return this.tablefn_J_GetCellTransfByBusHV;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public fn_J_GetCellTransfByBusLVDataTable fn_J_GetCellTransfByBusLV
        {
            get
            {
                return this.tablefn_J_GetCellTransfByBusLV;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public fn_J_GetTransfByBusLVDataTable fn_J_GetTransfByBusLV
        {
            get
            {
                return this.tablefn_J_GetTransfByBusLV;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public fn_J_MeasCableCalcResultsDataTable fn_J_MeasCableCalcResults
        {
            get
            {
                return this.tablefn_J_MeasCableCalcResults;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public fn_J_MeasTransfPassportDataTable fn_J_MeasTransfPassport
        {
            get
            {
                return this.tablefn_J_MeasTransfPassport;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden), DebuggerNonUserCode]
        public new DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [DebuggerNonUserCode, Browsable(true), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden), DebuggerNonUserCode]
        public DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public tAbnDataTable tAbn
        {
            get
            {
                return this.tabletAbn;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public tAbnContactDataTable tAbnContact
        {
            get
            {
                return this.tabletAbnContact;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tAbnDoc_DogovorDataTable tAbnDoc_Dogovor
        {
            get
            {
                return this.tabletAbnDoc_Dogovor;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public tAbnDoc_ListDataTable tAbnDoc_List
        {
            get
            {
                return this.tabletAbnDoc_List;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tAbnObjDataTable tAbnObj
        {
            get
            {
                return this.tabletAbnObj;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tAbnObjDoc_AktRBPDataTable tAbnObjDoc_AktRBP
        {
            get
            {
                return this.tabletAbnObjDoc_AktRBP;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tAbnObjDoc_FileDataTable tAbnObjDoc_File
        {
            get
            {
                return this.tabletAbnObjDoc_File;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tAbnObjDoc_ImageDataTable tAbnObjDoc_Image
        {
            get
            {
                return this.tabletAbnObjDoc_Image;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tAbnObjDoc_ListDataTable tAbnObjDoc_List
        {
            get
            {
                return this.tabletAbnObjDoc_List;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tG_AbnAddressDataTable tG_AbnAddress
        {
            get
            {
                return this.tabletG_AbnAddress;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public tG_AbnChiefDataTable tG_AbnChief
        {
            get
            {
                return this.tabletG_AbnChief;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public tJ_BossUserDataTable tJ_BossUser
        {
            get
            {
                return this.tabletJ_BossUser;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public tJ_BossUserGroupDataTable tJ_BossUserGroup
        {
            get
            {
                return this.tabletJ_BossUserGroup;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tJ_MeasAmperageTransfDataTable tJ_MeasAmperageTransf
        {
            get
            {
                return this.tabletJ_MeasAmperageTransf;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public tJ_MeasCableDataTable tJ_MeasCable
        {
            get
            {
                return this.tabletJ_MeasCable;
            }
        }

        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tJ_MeasCellDataTable tJ_MeasCell
        {
            get
            {
                return this.tabletJ_MeasCell;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public tJ_MeasurementDataTable tJ_Measurement
        {
            get
            {
                return this.tabletJ_Measurement;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public tJ_MeasVoltageTransfDataTable tJ_MeasVoltageTransf
        {
            get
            {
                return this.tabletJ_MeasVoltageTransf;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tJ_MemCommissionDataTable tJ_MemCommission
        {
            get
            {
                return this.tabletJ_MemCommission;
            }
        }

        [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tJ_MemFilesDataTable tJ_MemFiles
        {
            get
            {
                return this.tabletJ_MemFiles;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public tJ_MemorandumDataTable tJ_Memorandum
        {
            get
            {
                return this.tabletJ_Memorandum;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public tJ_MemWorkerDataTable tJ_MemWorker
        {
            get
            {
                return this.tabletJ_MemWorker;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tJ_RelayProtectionAutomationDataTable tJ_RelayProtectionAutomation
        {
            get
            {
                return this.tabletJ_RelayProtectionAutomation;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public tJ_RelayProtectionAutomationValueDataTable tJ_RelayProtectionAutomationValue
        {
            get
            {
                return this.tabletJ_RelayProtectionAutomationValue;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public tJ_RequestDataTable tJ_Request
        {
            get
            {
                return this.tabletJ_Request;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public tJ_RequestDocDataTable tJ_RequestDoc
        {
            get
            {
                return this.tabletJ_RequestDoc;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public tJ_RequestForRepairDataTable tJ_RequestForRepair
        {
            get
            {
                return this.tabletJ_RequestForRepair;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public tJ_RequestForRepairDailyDataTable tJ_RequestForRepairDaily
        {
            get
            {
                return this.tabletJ_RequestForRepairDaily;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tJ_RequestForRepairDocDataTable tJ_RequestForRepairDoc
        {
            get
            {
                return this.tabletJ_RequestForRepairDoc;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public tJ_UpdateProgramDataTable tJ_UpdateProgram
        {
            get
            {
                return this.tabletJ_UpdateProgram;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public tJ_UpdateProgramDocDataTable tJ_UpdateProgramDoc
        {
            get
            {
                return this.tabletJ_UpdateProgramDoc;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tJ_UpdateProgramUserCheckDataTable tJ_UpdateProgramUserCheck
        {
            get
            {
                return this.tabletJ_UpdateProgramUserCheck;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public tL_RequestForRepairSchmObjListDataTable tL_RequestForRepairSchmObjList
        {
            get
            {
                return this.tabletL_RequestForRepairSchmObjList;
            }
        }

        [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tL_SchmAbnDataTable tL_SchmAbn
        {
            get
            {
                return this.tabletL_SchmAbn;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tP_ValueListsDataTable tP_ValueLists
        {
            get
            {
                return this.tabletP_ValueLists;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tR_CableAmperageDataTable tR_CableAmperage
        {
            get
            {
                return this.tabletR_CableAmperage;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tR_CableMakeupDataTable tR_CableMakeup
        {
            get
            {
                return this.tabletR_CableMakeup;
            }
        }

        [Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tR_CableVoltageDataTable tR_CableVoltage
        {
            get
            {
                return this.tabletR_CableVoltage;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tR_CableWiresDataTable tR_CableWires
        {
            get
            {
                return this.tabletR_CableWires;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public tR_ClassifierDataTable tR_Classifier
        {
            get
            {
                return this.tabletR_Classifier;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tR_CrossSectionDataTable tR_CrossSection
        {
            get
            {
                return this.tabletR_CrossSection;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tR_DocTemplateDataTable tR_DocTemplate
        {
            get
            {
                return this.tabletR_DocTemplate;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public tSchm_ObjListDataTable tSchm_ObjList
        {
            get
            {
                return this.tabletSchm_ObjList;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tSchm_ObjList1DataTable tSchm_ObjList1
        {
            get
            {
                return this.tabletSchm_ObjList1;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tSchm_ObjList2DataTable tSchm_ObjList2
        {
            get
            {
                return this.tabletSchm_ObjList2;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public tSchm_ObjList3DataTable tSchm_ObjList3
        {
            get
            {
                return this.tabletSchm_ObjList3;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tTC_ActTCDataTable tTC_ActTC
        {
            get
            {
                return this.tabletTC_ActTC;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public tTC_DocDataTable tTC_Doc
        {
            get
            {
                return this.tabletTC_Doc;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tUserDataTable tUser
        {
            get
            {
                return this.tabletUser;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public vAbnDataTable vAbn
        {
            get
            {
                return this.tablevAbn;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_BossUserDataTable vJ_BossUser
        {
            get
            {
                return this.tablevJ_BossUser;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public vJ_BusesTransfsDataTable vJ_BusesTransfs
        {
            get
            {
                return this.tablevJ_BusesTransfs;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public vJ_BusesTransfSchemaDataTable vJ_BusesTransfSchema
        {
            get
            {
                return this.tablevJ_BusesTransfSchema;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_CableByCellDataTable vJ_CableByCell
        {
            get
            {
                return this.tablevJ_CableByCell;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public vJ_CableByCellMeasDataTable vJ_CableByCellMeas
        {
            get
            {
                return this.tablevJ_CableByCellMeas;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_CableMakeupDataTable vJ_CableMakeup
        {
            get
            {
                return this.tablevJ_CableMakeup;
            }
        }

        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_CableReferenceDataTable vJ_CableReference
        {
            get
            {
                return this.tablevJ_CableReference;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public vJ_CellByBusDataTable vJ_CellByBus
        {
            get
            {
                return this.tablevJ_CellByBus;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_CoefficientIrregularityDataTable vJ_CoefficientIrregularity
        {
            get
            {
                return this.tablevJ_CoefficientIrregularity;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public vJ_CoefficientLoadingDataTable vJ_CoefficientLoading
        {
            get
            {
                return this.tablevJ_CoefficientLoading;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public vJ_GetMeasYearsDataTable vJ_GetMeasYears
        {
            get
            {
                return this.tablevJ_GetMeasYears;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public vJ_LastCableInfoDataTable vJ_LastCableInfo
        {
            get
            {
                return this.tablevJ_LastCableInfo;
            }
        }

        [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_MeasAbnObjDataTable vJ_MeasAbnObj
        {
            get
            {
                return this.tablevJ_MeasAbnObj;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_MeasAmpSubTransf_TEMPDataTable vJ_MeasAmpSubTransf_TEMP
        {
            get
            {
                return this.tablevJ_MeasAmpSubTransf_TEMP;
            }
        }

        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_MeasCableDataTable vJ_MeasCable
        {
            get
            {
                return this.tablevJ_MeasCable;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public vJ_MeasCableReportDataTable vJ_MeasCableReport
        {
            get
            {
                return this.tablevJ_MeasCableReport;
            }
        }

        [Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_MeasCableReport2DataTable vJ_MeasCableReport2
        {
            get
            {
                return this.tablevJ_MeasCableReport2;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public vJ_MeasCellDataTable vJ_MeasCell
        {
            get
            {
                return this.tablevJ_MeasCell;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_MeasPeriodBySubstationDataTable vJ_MeasPeriodBySubstation
        {
            get
            {
                return this.tablevJ_MeasPeriodBySubstation;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_MeasSubTransf_TEMPDataTable vJ_MeasSubTransf_TEMP
        {
            get
            {
                return this.tablevJ_MeasSubTransf_TEMP;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_MeasTransfPassportDataTable vJ_MeasTransfPassport
        {
            get
            {
                return this.tablevJ_MeasTransfPassport;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_MeasTransfVoltageDataTable vJ_MeasTransfVoltage
        {
            get
            {
                return this.tablevJ_MeasTransfVoltage;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_MeasurementReportDataTable vJ_MeasurementReport
        {
            get
            {
                return this.tablevJ_MeasurementReport;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public vJ_MemCommissionDataTable vJ_MemCommission
        {
            get
            {
                return this.tablevJ_MemCommission;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public vJ_MemorandumDataTable vJ_Memorandum
        {
            get
            {
                return this.tablevJ_Memorandum;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_PowerISR_SSBusDataTable vJ_PowerISR_SSBus
        {
            get
            {
                return this.tablevJ_PowerISR_SSBus;
            }
        }

        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_PowerISR_SSTransfDataTable vJ_PowerISR_SSTransf
        {
            get
            {
                return this.tablevJ_PowerISR_SSTransf;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_PowerISR_TransfDataTable vJ_PowerISR_Transf
        {
            get
            {
                return this.tablevJ_PowerISR_Transf;
            }
        }

        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_RelayProtectionAutomationDataTable vJ_RelayProtectionAutomation
        {
            get
            {
                return this.tablevJ_RelayProtectionAutomation;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public vJ_RequestDataTable vJ_Request
        {
            get
            {
                return this.tablevJ_Request;
            }
        }

        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_RequestForRepairDataTable vJ_RequestForRepair
        {
            get
            {
                return this.tablevJ_RequestForRepair;
            }
        }

        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_RequestForRepairDailyDataTable vJ_RequestForRepairDaily
        {
            get
            {
                return this.tablevJ_RequestForRepairDaily;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vJ_TransfByCellDataTable vJ_TransfByCell
        {
            get
            {
                return this.tablevJ_TransfByCell;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public vJ_TransfBySubstationDataTable vJ_TransfBySubstation
        {
            get
            {
                return this.tablevJ_TransfBySubstation;
            }
        }

        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_TransfsDataTable vJ_Transfs
        {
            get
            {
                return this.tablevJ_Transfs;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_UpdateProgramDataTable vJ_UpdateProgram
        {
            get
            {
                return this.tablevJ_UpdateProgram;
            }
        }

        [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vJ_WorkerDataTable vJ_Worker
        {
            get
            {
                return this.tablevJ_Worker;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public vP_SubstationBusDataTable vP_SubstationBus
        {
            get
            {
                return this.tablevP_SubstationBus;
            }
        }

        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vP_SubstationTransfDataTable vP_SubstationTransf
        {
            get
            {
                return this.tablevP_SubstationTransf;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public vP_TransfBySubstationDataTable vP_TransfBySubstation
        {
            get
            {
                return this.tablevP_TransfBySubstation;
            }
        }

        [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public vP_WorkerDataTable vP_Worker
        {
            get
            {
                return this.tablevP_Worker;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vSchm_ObjListDataTable vSchm_ObjList
        {
            get
            {
                return this.tablevSchm_ObjList;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public vSchm_TreeCellLineDataTable vSchm_TreeCellLine
        {
            get
            {
                return this.tablevSchm_TreeCellLine;
            }
        }

        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public vTC_TUPointAttachDataTable vTC_TUPointAttach
        {
            get
            {
                return this.tablevTC_TUPointAttach;
            }
        }

        public class Class100 : DataRow
        {
            private DataSetGES.vJ_TransfBySubstationDataTable vJ_TransfBySubstationDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class100(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_TransfBySubstationDataTable_0 = (DataSetGES.vJ_TransfBySubstationDataTable) base.Table;
            }

            public string method_0()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_TransfBySubstationDataTable_0.NameSSColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameSS' in table 'vJ_TransfBySubstation' is DBNull.", exception);
                }
                return str;
            }

            public void method_1(string string_0)
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameSSColumn] = string_0;
            }

            public int method_10()
            {
                return (int) base[this.vJ_TransfBySubstationDataTable_0.idCellColumn];
            }

            public void method_11(int int_0)
            {
                base[this.vJ_TransfBySubstationDataTable_0.idCellColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_TransfBySubstationDataTable_0.NameSSColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameSSColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_TransfBySubstationDataTable_0.NameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_TransfBySubstationDataTable_0.NameCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vJ_TransfBySubstationDataTable_0.NameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_TransfBySubstationDataTable_0.NameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameBus' in table 'vJ_TransfBySubstation' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.vJ_TransfBySubstationDataTable_0.idTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_TransfBySubstationDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameBusColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_TransfBySubstationDataTable_0.NameCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_TransfBySubstation' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameCellColumn] = string_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_TransfBySubstationDataTable_0.NameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_TransfBySubstation' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_TransfBySubstationDataTable_0.NameTransfColumn] = string_0;
            }

            public int method_8()
            {
                return (int) base[this.vJ_TransfBySubstationDataTable_0.idSSColumn];
            }

            public void method_9(int int_0)
            {
                base[this.vJ_TransfBySubstationDataTable_0.idSSColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int) base[this.vJ_TransfBySubstationDataTable_0.idBusColumn];
                }
                set
                {
                    base[this.vJ_TransfBySubstationDataTable_0.idBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_TransfBySubstationDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_TransfBySubstation' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_TransfBySubstationDataTable_0.idTransfColumn] = value;
                }
            }
        }

        public class Class101 : DataRow
        {
            private DataSetGES.vJ_PowerISR_TransfDataTable vJ_PowerISR_TransfDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class101(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_PowerISR_TransfDataTable_0 = (DataSetGES.vJ_PowerISR_TransfDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_PowerISR_TransfDataTable_0.IsrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Isr' in table 'vJ_PowerISR_Transf' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.vJ_PowerISR_TransfDataTable_0.IsrColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vJ_PowerISR_TransfDataTable_0.PowerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vJ_PowerISR_TransfDataTable_0.PowerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_PowerISR_TransfDataTable_0.IsrColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vJ_PowerISR_TransfDataTable_0.IsrColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_PowerISR_TransfDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_PowerISR_TransfDataTable_0.idTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Power
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_PowerISR_TransfDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_PowerISR_Transf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_PowerISR_TransfDataTable_0.PowerColumn] = value;
                }
            }
        }

        public class Class102 : DataRow
        {
            private DataSetGES.vJ_PowerISR_SSTransfDataTable vJ_PowerISR_SSTransfDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class102(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_PowerISR_SSTransfDataTable_0 = (DataSetGES.vJ_PowerISR_SSTransfDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vJ_PowerISR_SSTransfDataTable_0.NameSubColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.vJ_PowerISR_SSTransfDataTable_0.NameSubColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vJ_PowerISR_SSTransfDataTable_0.idTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vJ_PowerISR_SSTransfDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_PowerISR_SSTransfDataTable_0.NameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vJ_PowerISR_SSTransfDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_PowerISR_SSTransfDataTable_0.PowerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.vJ_PowerISR_SSTransfDataTable_0.PowerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_PowerISR_SSTransfDataTable_0.IsrColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.vJ_PowerISR_SSTransfDataTable_0.IsrColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSub
            {
                get
                {
                    return (int) base[this.vJ_PowerISR_SSTransfDataTable_0.idSubColumn];
                }
                set
                {
                    base[this.vJ_PowerISR_SSTransfDataTable_0.idSubColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_PowerISR_SSTransfDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_PowerISR_SSTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_PowerISR_SSTransfDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Isr
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_PowerISR_SSTransfDataTable_0.IsrColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Isr' in table 'vJ_PowerISR_SSTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_PowerISR_SSTransfDataTable_0.IsrColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameSub
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_PowerISR_SSTransfDataTable_0.NameSubColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameSub' in table 'vJ_PowerISR_SSTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_PowerISR_SSTransfDataTable_0.NameSubColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransf
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_PowerISR_SSTransfDataTable_0.NameTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_PowerISR_SSTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_PowerISR_SSTransfDataTable_0.NameTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Power
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_PowerISR_SSTransfDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_PowerISR_SSTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_PowerISR_SSTransfDataTable_0.PowerColumn] = value;
                }
            }
        }

        public class Class103 : DataRow
        {
            private DataSetGES.dtAmountFreeCapasityDataTable dtAmountFreeCapasityDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class103(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtAmountFreeCapasityDataTable_0 = (DataSetGES.dtAmountFreeCapasityDataTable) base.Table;
            }

            public string method_0()
            {
                string str;
                try
                {
                    str = (string) base[this.dtAmountFreeCapasityDataTable_0.NameSubstationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameSubstation' in table 'dtAmountFreeCapasity' is DBNull.", exception);
                }
                return str;
            }

            public void method_1(string string_0)
            {
                base[this.dtAmountFreeCapasityDataTable_0.NameSubstationColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.dtAmountFreeCapasityDataTable_0.AmountFreeCapasityColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.dtAmountFreeCapasityDataTable_0.AmountFreeCapasityColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.dtAmountFreeCapasityDataTable_0.NameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameBus' in table 'dtAmountFreeCapasity' is DBNull.", exception);
                }
                return str;
            }

            public void method_3(string string_0)
            {
                base[this.dtAmountFreeCapasityDataTable_0.NameBusColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.dtAmountFreeCapasityDataTable_0.AmountFreeCapasityColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'AmountFreeCapasity' in table 'dtAmountFreeCapasity' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.dtAmountFreeCapasityDataTable_0.AmountFreeCapasityColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.dtAmountFreeCapasityDataTable_0.NameSubstationColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.dtAmountFreeCapasityDataTable_0.NameSubstationColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.dtAmountFreeCapasityDataTable_0.NameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.dtAmountFreeCapasityDataTable_0.NameBusColumn] = Convert.DBNull;
            }
        }

        public class Class104 : DataRow
        {
            private DataSetGES.fn_J_GetCellTransfByBusHVDataTable fn_J_GetCellTransfByBusHVDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class104(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_GetCellTransfByBusHVDataTable_0 = (DataSetGES.fn_J_GetCellTransfByBusHVDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdBus' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdBusColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransf' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", exception);
                }
                return str;
            }

            public void method_11(string string_0)
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameTransfColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusHVDataTable_0.IdBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdBusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusHVDataTable_0.NameBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusHVDataTable_0.IdCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusHVDataTable_0.NameCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameBus' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusHVDataTable_0.IdTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdTransfColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusHVDataTable_0.NameTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameBusColumn] = string_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdCell' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", exception);
                }
                return num;
            }

            public void method_5(int int_0)
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdCellColumn] = int_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameCell' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.NameCellColumn] = string_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdTransf' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.fn_J_GetCellTransfByBusHVDataTable_0.IdTransfColumn] = int_0;
            }
        }

        public class Class105 : DataRow
        {
            private DataSetGES.tJ_MeasCableDataTable tJ_MeasCableDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class105(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MeasCableDataTable_0 = (DataSetGES.tJ_MeasCableDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.idBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tJ_MeasCableDataTable_0.idBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.NameCableColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tJ_MeasCableDataTable_0.NameCableColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.AddressColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.tJ_MeasCableDataTable_0.AddressColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.CompanyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.tJ_MeasCableDataTable_0.CompanyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.idSchmAbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.tJ_MeasCableDataTable_0.idSchmAbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.MakeupColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.tJ_MeasCableDataTable_0.MakeupColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.idCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.VoltageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tJ_MeasCableDataTable_0.VoltageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.WiresColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.tJ_MeasCableDataTable_0.WiresColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.CrossSectionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_25()
            {
                base[this.tJ_MeasCableDataTable_0.CrossSectionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.PermisAmperageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.tJ_MeasCableDataTable_0.PermisAmperageColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IadColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_29()
            {
                base[this.tJ_MeasCableDataTable_0.IadColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tJ_MeasCableDataTable_0.idCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IanColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_31()
            {
                base[this.tJ_MeasCableDataTable_0.IanColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IbdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_33()
            {
                base[this.tJ_MeasCableDataTable_0.IbdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IbnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_35()
            {
                base[this.tJ_MeasCableDataTable_0.IbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IcdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.tJ_MeasCableDataTable_0.IcdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IcnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.tJ_MeasCableDataTable_0.IcnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.NameCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_40()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IodColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_41()
            {
                base[this.tJ_MeasCableDataTable_0.IodColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_42()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.IonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_43()
            {
                base[this.tJ_MeasCableDataTable_0.IonColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_44()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_45()
            {
                base[this.tJ_MeasCableDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_46()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.idOldMeasurementCableColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.tJ_MeasCableDataTable_0.idOldMeasurementCableColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_48()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.DeletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_49()
            {
                base[this.tJ_MeasCableDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tJ_MeasCableDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.OldCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tJ_MeasCableDataTable_0.OldCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tJ_MeasCableDataTable_0.idCableColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tJ_MeasCableDataTable_0.idCableColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasCableDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.AddressColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasCableDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasCableDataTable_0.CompanyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.CompanyColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.tJ_MeasCableDataTable_0.CrossSectionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.CrossSectionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tJ_MeasCableDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IadColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IadColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ian
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IanColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IanColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IbdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IbdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IcdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IcdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IcnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IcnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCable
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.idCableColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idCableColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCell
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.idCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idCellColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int) base[this.tJ_MeasCableDataTable_0.idMeasurementColumn];
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idMeasurementColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idOldMeasurementCable
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.idOldMeasurementCableColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idOldMeasurementCable' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idOldMeasurementCableColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSchmAbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.idSchmAbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idSchmAbn' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idSchmAbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.tJ_MeasCableDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MeasCableDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Iod' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IodColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ion
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.IonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ion' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.IonColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Makeup
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasCableDataTable_0.MakeupColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.MakeupColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCable
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasCableDataTable_0.NameCableColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameCable' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.NameCableColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCell
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasCableDataTable_0.NameCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.NameCellColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OldCell
            {
                get
                {
                    short num;
                    try
                    {
                        num = (short) base[this.tJ_MeasCableDataTable_0.OldCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OldCell' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.OldCellColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.tJ_MeasCableDataTable_0.PermisAmperageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.PermisAmperageColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Voltage
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.VoltageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.VoltageColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Wires
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCableDataTable_0.WiresColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'tJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCableDataTable_0.WiresColumn] = value;
                }
            }
        }

        public class Class106 : DataRow
        {
            private DataSetGES.vJ_LastCableInfoDataTable vJ_LastCableInfoDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class106(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_LastCableInfoDataTable_0 = (DataSetGES.vJ_LastCableInfoDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.YearColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.vJ_LastCableInfoDataTable_0.YearColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.CompanyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vJ_LastCableInfoDataTable_0.CompanyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.MakeupColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_LastCableInfoDataTable_0.MakeupColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.VoltageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vJ_LastCableInfoDataTable_0.VoltageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.WiresColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_LastCableInfoDataTable_0.WiresColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.CrossSectionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_LastCableInfoDataTable_0.CrossSectionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.idSubstationColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.PermisAmperageColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_LastCableInfoDataTable_0.PermisAmperageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vJ_LastCableInfoDataTable_0.idSubstationColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.idCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vJ_LastCableInfoDataTable_0.idCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.idCableColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vJ_LastCableInfoDataTable_0.idCableColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_LastCableInfoDataTable_0.AddressColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.vJ_LastCableInfoDataTable_0.AddressColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_LastCableInfoDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.AddressColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_LastCableInfoDataTable_0.CompanyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.CompanyColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_LastCableInfoDataTable_0.CrossSectionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.CrossSectionColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCable
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_LastCableInfoDataTable_0.idCableColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.idCableColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCell
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_LastCableInfoDataTable_0.idCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.idCellColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int) base[this.vJ_LastCableInfoDataTable_0.idMeasurementColumn];
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.idMeasurementColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSubstation
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_LastCableInfoDataTable_0.idSubstationColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idSubstation' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.idSubstationColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Makeup
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_LastCableInfoDataTable_0.MakeupColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.MakeupColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PermisAmperage
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_LastCableInfoDataTable_0.PermisAmperageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.PermisAmperageColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Voltage
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_LastCableInfoDataTable_0.VoltageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.VoltageColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Wires
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_LastCableInfoDataTable_0.WiresColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.WiresColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Year
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_LastCableInfoDataTable_0.YearColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_LastCableInfo' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_LastCableInfoDataTable_0.YearColumn] = value;
                }
            }
        }

        public class Class107 : DataRow
        {
            private DataSetGES.vJ_TransfByCellDataTable vJ_TransfByCellDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class107(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_TransfByCellDataTable_0 = (DataSetGES.vJ_TransfByCellDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vJ_TransfByCellDataTable_0.idCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.vJ_TransfByCellDataTable_0.idCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_TransfByCellDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.vJ_TransfByCellDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_TransfByCellDataTable_0.idParentAddlColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vJ_TransfByCellDataTable_0.idParentAddlColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_TransfByCellDataTable_0.idCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_TransfByCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_TransfByCellDataTable_0.idCellColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idParentAddl
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_TransfByCellDataTable_0.idParentAddlColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'vJ_TransfByCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_TransfByCellDataTable_0.idParentAddlColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_TransfByCellDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_TransfByCellDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_TransfByCellDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_TransfByCell' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_TransfByCellDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class108 : DataRow
        {
            private DataSetGES.vJ_CableByCellDataTable vJ_CableByCellDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class108(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_CableByCellDataTable_0 = (DataSetGES.vJ_CableByCellDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vJ_CableByCellDataTable_0.idCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.vJ_CableByCellDataTable_0.idCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_CableByCellDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.vJ_CableByCellDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CableByCellDataTable_0.idCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_CableByCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableByCellDataTable_0.idCellColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_CableByCellDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_CableByCellDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_CableByCellDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_CableByCell' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_CableByCellDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class109 : DataRow
        {
            private DataSetGES.fn_J_GetBusMVByTransfDataTable fn_J_GetBusMVByTransfDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class109(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_GetBusMVByTransfDataTable_0 = (DataSetGES.fn_J_GetBusMVByTransfDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.fn_J_GetBusMVByTransfDataTable_0.IdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.fn_J_GetBusMVByTransfDataTable_0.IdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.fn_J_GetBusMVByTransfDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.fn_J_GetBusMVByTransfDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.fn_J_GetBusMVByTransfDataTable_0.TypeCodeIdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.fn_J_GetBusMVByTransfDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_GetBusMVByTransfDataTable_0.IdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetBusMVByTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_GetBusMVByTransfDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_GetBusMVByTransfDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetBusMVByTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_GetBusMVByTransfDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_GetBusMVByTransfDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'fn_J_GetBusMVByTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_GetBusMVByTransfDataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class110 : DataRow
        {
            private DataSetGES.tJ_MeasAmperageTransfDataTable tJ_MeasAmperageTransfDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class110(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MeasAmperageTransfDataTable_0 = (DataSetGES.tJ_MeasAmperageTransfDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MeasAmperageTransfDataTable_0.IdBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tJ_MeasAmperageTransfDataTable_0.IdBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tJ_MeasAmperageTransfDataTable_0.DeletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tJ_MeasAmperageTransfDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MeasAmperageTransfDataTable_0.IaColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tJ_MeasAmperageTransfDataTable_0.IaColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MeasAmperageTransfDataTable_0.IbColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tJ_MeasAmperageTransfDataTable_0.IbColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tJ_MeasAmperageTransfDataTable_0.IcColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tJ_MeasAmperageTransfDataTable_0.IcColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.tJ_MeasAmperageTransfDataTable_0.IoColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tJ_MeasAmperageTransfDataTable_0.IoColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tJ_MeasAmperageTransfDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_MeasAmperageTransf' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ia
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasAmperageTransfDataTable_0.IaColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ia' in table 'tJ_MeasAmperageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.IaColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ib
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasAmperageTransfDataTable_0.IbColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ib' in table 'tJ_MeasAmperageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.IbColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ic
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasAmperageTransfDataTable_0.IcColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ic' in table 'tJ_MeasAmperageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.IcColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasAmperageTransfDataTable_0.IdBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IdBus' in table 'tJ_MeasAmperageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.IdBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int) base[this.tJ_MeasAmperageTransfDataTable_0.idMeasurementColumn];
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.idMeasurementColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idObjList
            {
                get
                {
                    return (int) base[this.tJ_MeasAmperageTransfDataTable_0.idObjListColumn];
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.idObjListColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MeasAmperageTransfDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Io
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasAmperageTransfDataTable_0.IoColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Io' in table 'tJ_MeasAmperageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasAmperageTransfDataTable_0.IoColumn] = value;
                }
            }
        }

        public class Class111 : DataRow
        {
            private DataSetGES.tSchm_ObjList2DataTable tSchm_ObjList2DataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class111(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tSchm_ObjList2DataTable_0 = (DataSetGES.tSchm_ObjList2DataTable) base.Table;
            }

            public bool method_0()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tSchm_ObjList2DataTable_0.OnOffColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'OnOff' in table 'tSchm_ObjList2' is DBNull.", exception);
                }
                return flag;
            }

            public void method_1(bool bool_0)
            {
                base[this.tSchm_ObjList2DataTable_0.OnOffColumn] = bool_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tSchm_ObjList2DataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.TypeCodeIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tSchm_ObjList2DataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.IdParentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.tSchm_ObjList2DataTable_0.IdParentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.OnOffColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.tSchm_ObjList2DataTable_0.OnOffColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.LocationColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.tSchm_ObjList2DataTable_0.LocationColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList2DataTable_0.LocationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Location' in table 'tSchm_ObjList2' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.NamePColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tSchm_ObjList2DataTable_0.NamePColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.idParentAddlColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.tSchm_ObjList2DataTable_0.idParentAddlColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.tSchm_ObjList2DataTable_0.idGroupColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_25()
            {
                base[this.tSchm_ObjList2DataTable_0.idGroupColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.tSchm_ObjList2DataTable_0.LocationColumn] = int_0;
            }

            public bool method_4()
            {
                return (bool) base[this.tSchm_ObjList2DataTable_0.DeletedColumn];
            }

            public void method_5(bool bool_0)
            {
                base[this.tSchm_ObjList2DataTable_0.DeletedColumn] = bool_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList2DataTable_0.NamePColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameP' in table 'tSchm_ObjList2' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.tSchm_ObjList2DataTable_0.NamePColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList2DataTable_0.idGroupColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idGroup' in table 'tSchm_ObjList2' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.tSchm_ObjList2DataTable_0.idGroupColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.tSchm_ObjList2DataTable_0.IdColumn];
                }
                set
                {
                    base[this.tSchm_ObjList2DataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList2DataTable_0.IdParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'tSchm_ObjList2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList2DataTable_0.IdParentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idParentAddl
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList2DataTable_0.idParentAddlColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'tSchm_ObjList2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList2DataTable_0.idParentAddlColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tSchm_ObjList2DataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList2' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tSchm_ObjList2DataTable_0.NameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList2DataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'tSchm_ObjList2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList2DataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class112 : DataRow
        {
            private DataSetGES.tSchm_ObjList3DataTable tSchm_ObjList3DataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class112(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tSchm_ObjList3DataTable_0 = (DataSetGES.tSchm_ObjList3DataTable) base.Table;
            }

            public bool method_0()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tSchm_ObjList3DataTable_0.OnOffColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'OnOff' in table 'tSchm_ObjList3' is DBNull.", exception);
                }
                return flag;
            }

            public void method_1(bool bool_0)
            {
                base[this.tSchm_ObjList3DataTable_0.OnOffColumn] = bool_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tSchm_ObjList3DataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.TypeCodeIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tSchm_ObjList3DataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.IdParentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tSchm_ObjList3DataTable_0.IdParentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.OnOffColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.tSchm_ObjList3DataTable_0.OnOffColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.LocationColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.tSchm_ObjList3DataTable_0.LocationColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList3DataTable_0.LocationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Location' in table 'tSchm_ObjList3' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.NamePColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.tSchm_ObjList3DataTable_0.NamePColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.idParentAddlColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.tSchm_ObjList3DataTable_0.idParentAddlColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.tSchm_ObjList3DataTable_0.idGroupColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tSchm_ObjList3DataTable_0.idGroupColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.tSchm_ObjList3DataTable_0.LocationColumn] = int_0;
            }

            public bool method_4()
            {
                return (bool) base[this.tSchm_ObjList3DataTable_0.DeletedColumn];
            }

            public void method_5(bool bool_0)
            {
                base[this.tSchm_ObjList3DataTable_0.DeletedColumn] = bool_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList3DataTable_0.NamePColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameP' in table 'tSchm_ObjList3' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.tSchm_ObjList3DataTable_0.NamePColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList3DataTable_0.idGroupColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idGroup' in table 'tSchm_ObjList3' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.tSchm_ObjList3DataTable_0.idGroupColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int) base[this.tSchm_ObjList3DataTable_0.IdColumn];
                }
                set
                {
                    base[this.tSchm_ObjList3DataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList3DataTable_0.IdParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'tSchm_ObjList3' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList3DataTable_0.IdParentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idParentAddl
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList3DataTable_0.idParentAddlColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'tSchm_ObjList3' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList3DataTable_0.idParentAddlColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tSchm_ObjList3DataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList3' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tSchm_ObjList3DataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList3DataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'tSchm_ObjList3' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList3DataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class113 : DataRow
        {
            private DataSetGES.vP_TransfBySubstationDataTable vP_TransfBySubstationDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class113(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vP_TransfBySubstationDataTable_0 = (DataSetGES.vP_TransfBySubstationDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vP_TransfBySubstationDataTable_0.idSubstationColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vP_TransfBySubstationDataTable_0.idSubstationColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vP_TransfBySubstationDataTable_0.idNetRegionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vP_TransfBySubstationDataTable_0.idNetRegionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vP_TransfBySubstationDataTable_0.NetRegionValueColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vP_TransfBySubstationDataTable_0.NetRegionValueColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vP_TransfBySubstationDataTable_0.NameSubstationColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vP_TransfBySubstationDataTable_0.NameSubstationColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vP_TransfBySubstationDataTable_0.NameTransfNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vP_TransfBySubstationDataTable_0.NameTransfNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vP_TransfBySubstationDataTable_0.idPassportColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vP_TransfBySubstationDataTable_0.idPassportColumn] = Convert.DBNull;
            }

            public decimal method_2()
            {
                decimal num;
                try
                {
                    num = (decimal) base[this.vP_TransfBySubstationDataTable_0.NetRegionValueColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NetRegionValue' in table 'vP_TransfBySubstation' is DBNull.", exception);
                }
                return num;
            }

            public void method_3(decimal decimal_0)
            {
                base[this.vP_TransfBySubstationDataTable_0.NetRegionValueColumn] = decimal_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vP_TransfBySubstationDataTable_0.NameSubstationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameSubstation' in table 'vP_TransfBySubstation' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vP_TransfBySubstationDataTable_0.NameSubstationColumn] = string_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vP_TransfBySubstationDataTable_0.NameTransfNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransfName' in table 'vP_TransfBySubstation' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vP_TransfBySubstationDataTable_0.NameTransfNameColumn] = string_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vP_TransfBySubstationDataTable_0.idPassportColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idPassport' in table 'vP_TransfBySubstation' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.vP_TransfBySubstationDataTable_0.idPassportColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idNetRegion
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vP_TransfBySubstationDataTable_0.idNetRegionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idNetRegion' in table 'vP_TransfBySubstation' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vP_TransfBySubstationDataTable_0.idNetRegionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vP_TransfBySubstationDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vP_TransfBySubstationDataTable_0.idTransfColumn] = value;
                }
            }
        }

        public class Class114 : DataRow
        {
            private DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable vJ_MeasAmpSubTransf_TEMPDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class114(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasAmpSubTransf_TEMPDataTable_0 = (DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.idSubColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.idSubColumn] = int_0;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.NameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_MeasAmpSubTransf_TEMP' is DBNull.", exception);
                }
                return str;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.NameTransfColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vJ_MeasAmpSubTransf_TEMPDataTable_0.NameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasAmpSubTransf_TEMPDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class115 : DataRow
        {
            private DataSetGES.vJ_MeasSubTransf_TEMPDataTable vJ_MeasSubTransf_TEMPDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class115(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasSubTransf_TEMPDataTable_0 = (DataSetGES.vJ_MeasSubTransf_TEMPDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MeasSubTransf_TEMPDataTable_0.idSubColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasSubTransf_TEMPDataTable_0.idSubColumn] = int_0;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasSubTransf_TEMPDataTable_0.NameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_MeasSubTransf_TEMP' is DBNull.", exception);
                }
                return str;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_MeasSubTransf_TEMPDataTable_0.NameTransfColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_MeasSubTransf_TEMPDataTable_0.NameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vJ_MeasSubTransf_TEMPDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_MeasSubTransf_TEMPDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_MeasSubTransf_TEMPDataTable_0.idTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasSubTransf_TEMPDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasSubTransf_TEMPDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class116 : DataRow
        {
            private DataSetGES.fn_J_GetTransfByBusLVDataTable fn_J_GetTransfByBusLVDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class116(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_GetTransfByBusLVDataTable_0 = (DataSetGES.fn_J_GetTransfByBusLVDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.fn_J_GetTransfByBusLVDataTable_0.IdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.fn_J_GetTransfByBusLVDataTable_0.IdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.fn_J_GetTransfByBusLVDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.fn_J_GetTransfByBusLVDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.fn_J_GetTransfByBusLVDataTable_0.TypeCodeIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.fn_J_GetTransfByBusLVDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_GetTransfByBusLVDataTable_0.IdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetTransfByBusLV' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_GetTransfByBusLVDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_GetTransfByBusLVDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetTransfByBusLV' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_GetTransfByBusLVDataTable_0.NameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_GetTransfByBusLVDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'fn_J_GetTransfByBusLV' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_GetTransfByBusLVDataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class117 : DataRow
        {
            private DataSetGES.vP_SubstationBusDataTable vP_SubstationBusDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class117(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vP_SubstationBusDataTable_0 = (DataSetGES.vP_SubstationBusDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.vP_SubstationBusDataTable_0.IdParentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.vP_SubstationBusDataTable_0.IdParentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vP_SubstationBusDataTable_0.TypeCodeIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vP_SubstationBusDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vP_SubstationBusDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vP_SubstationBusDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int) base[this.vP_SubstationBusDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vP_SubstationBusDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vP_SubstationBusDataTable_0.IdParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'vP_SubstationBus' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vP_SubstationBusDataTable_0.IdParentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vP_SubstationBusDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vP_SubstationBus' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vP_SubstationBusDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vP_SubstationBusDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vP_SubstationBus' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vP_SubstationBusDataTable_0.TypeCodeIdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeName
            {
                get
                {
                    return (string) base[this.vP_SubstationBusDataTable_0.TypeNameColumn];
                }
                set
                {
                    base[this.vP_SubstationBusDataTable_0.TypeNameColumn] = value;
                }
            }
        }

        public class Class118 : DataRow
        {
            private DataSetGES.vJ_CellByBusDataTable vJ_CellByBusDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class118(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_CellByBusDataTable_0 = (DataSetGES.vJ_CellByBusDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vJ_CellByBusDataTable_0.NameBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.vJ_CellByBusDataTable_0.NameBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_CellByBusDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.vJ_CellByBusDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_CellByBusDataTable_0.TypeCodeIdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_CellByBusDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_CellByBusDataTable_0.idParentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.vJ_CellByBusDataTable_0.idParentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int) base[this.vJ_CellByBusDataTable_0.idBusColumn];
                }
                set
                {
                    base[this.vJ_CellByBusDataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CellByBusDataTable_0.idParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idParent' in table 'vJ_CellByBus' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CellByBusDataTable_0.idParentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_CellByBusDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_CellByBusDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_CellByBusDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_CellByBus' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_CellByBusDataTable_0.NameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_CellByBusDataTable_0.NameBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'vJ_CellByBus' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_CellByBusDataTable_0.NameBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CellByBusDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vJ_CellByBus' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CellByBusDataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class119 : DataRow
        {
            private DataSetGES.vJ_PowerISR_SSBusDataTable vJ_PowerISR_SSBusDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class119(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_PowerISR_SSBusDataTable_0 = (DataSetGES.vJ_PowerISR_SSBusDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_PowerISR_SSBusDataTable_0.idSubColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.idSubColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vJ_PowerISR_SSBusDataTable_0.NameSubColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.NameSubColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_PowerISR_SSBusDataTable_0.nameBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.nameBusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_PowerISR_SSBusDataTable_0.idTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_PowerISR_SSBusDataTable_0.NameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vJ_PowerISR_SSBusDataTable_0.PowerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.PowerColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_PowerISR_SSBusDataTable_0.NameSubColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameSub' in table 'vJ_PowerISR_SSBus' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_PowerISR_SSBusDataTable_0.IsrColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.IsrColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.NameSubColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_PowerISR_SSBusDataTable_0.nameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'nameBus' in table 'vJ_PowerISR_SSBus' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.nameBusColumn] = string_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_PowerISR_SSBusDataTable_0.NameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_PowerISR_SSBus' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.NameTransfColumn] = string_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_PowerISR_SSBusDataTable_0.IsrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Isr' in table 'vJ_PowerISR_SSBus' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_PowerISR_SSBusDataTable_0.IsrColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    return (int) base[this.vJ_PowerISR_SSBusDataTable_0.idBusColumn];
                }
                set
                {
                    base[this.vJ_PowerISR_SSBusDataTable_0.idBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_PowerISR_SSBusDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_PowerISR_SSBus' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_PowerISR_SSBusDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_PowerISR_SSBusDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_PowerISR_SSBus' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_PowerISR_SSBusDataTable_0.PowerColumn] = value;
                }
            }
        }

        public class Class120 : DataRow
        {
            private DataSetGES.dtBusesTransfDataTable dtBusesTransfDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class120(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtBusesTransfDataTable_0 = (DataSetGES.dtBusesTransfDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.dtBusesTransfDataTable_0.idBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.dtBusesTransfDataTable_0.idBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.dtBusesTransfDataTable_0.NameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.dtBusesTransfDataTable_0.NameBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.dtBusesTransfDataTable_0.idTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.dtBusesTransfDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.dtBusesTransfDataTable_0.NameTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.dtBusesTransfDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.dtBusesTransfDataTable_0.NameBusTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.dtBusesTransfDataTable_0.NameBusTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.dtBusesTransfDataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'dtBusesTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.dtBusesTransfDataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.dtBusesTransfDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'dtBusesTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.dtBusesTransfDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameBus
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.dtBusesTransfDataTable_0.NameBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'dtBusesTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.dtBusesTransfDataTable_0.NameBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBusTransf
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.dtBusesTransfDataTable_0.NameBusTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameBusTransf' in table 'dtBusesTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.dtBusesTransfDataTable_0.NameBusTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameTransf
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.dtBusesTransfDataTable_0.NameTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'dtBusesTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.dtBusesTransfDataTable_0.NameTransfColumn] = value;
                }
            }
        }

        public class Class121 : DataRow
        {
            private DataSetGES.vJ_BusesTransfSchemaDataTable vJ_BusesTransfSchemaDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class121(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_BusesTransfSchemaDataTable_0 = (DataSetGES.vJ_BusesTransfSchemaDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vJ_BusesTransfSchemaDataTable_0.nameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.vJ_BusesTransfSchemaDataTable_0.nameBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_BusesTransfSchemaDataTable_0.nameBusTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vJ_BusesTransfSchemaDataTable_0.nameBusTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_BusesTransfSchemaDataTable_0.tagBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.vJ_BusesTransfSchemaDataTable_0.tagBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vJ_BusesTransfSchemaDataTable_0.parentKeyBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_BusesTransfSchemaDataTable_0.parentKeyBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_BusesTransfSchemaDataTable_0.idTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.vJ_BusesTransfSchemaDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.vJ_BusesTransfSchemaDataTable_0.NameTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.vJ_BusesTransfSchemaDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    return (int) base[this.vJ_BusesTransfSchemaDataTable_0.idBusColumn];
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSub
            {
                get
                {
                    return (int) base[this.vJ_BusesTransfSchemaDataTable_0.idSubColumn];
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.idSubColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_BusesTransfSchemaDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_BusesTransfSchema' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.idTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string nameBus
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BusesTransfSchemaDataTable_0.nameBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'nameBus' in table 'vJ_BusesTransfSchema' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.nameBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nameBusTransf
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BusesTransfSchemaDataTable_0.nameBusTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'nameBusTransf' in table 'vJ_BusesTransfSchema' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.nameBusTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransf
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BusesTransfSchemaDataTable_0.NameTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_BusesTransfSchema' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.NameTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string parentKeyBus
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BusesTransfSchemaDataTable_0.parentKeyBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'parentKeyBus' in table 'vJ_BusesTransfSchema' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.parentKeyBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int tagBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_BusesTransfSchemaDataTable_0.tagBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'tagBus' in table 'vJ_BusesTransfSchema' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_BusesTransfSchemaDataTable_0.tagBusColumn] = value;
                }
            }
        }

        public class Class122 : DataRow
        {
            private DataSetGES.vJ_BusesTransfsDataTable vJ_BusesTransfsDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class122(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_BusesTransfsDataTable_0 = (DataSetGES.vJ_BusesTransfsDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_BusesTransfsDataTable_0.idmeasurementColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_BusesTransfsDataTable_0.idmeasurementColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_BusesTransfsDataTable_0.idBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_BusesTransfsDataTable_0.idBusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_BusesTransfsDataTable_0.nameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vJ_BusesTransfsDataTable_0.nameBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_BusesTransfsDataTable_0.idTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_BusesTransfsDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_BusesTransfsDataTable_0.nameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_BusesTransfsDataTable_0.nameTransfColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_BusesTransfsDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.vJ_BusesTransfsDataTable_0.NameColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                return (int) base[this.vJ_BusesTransfsDataTable_0.idSubstationColumn];
            }

            public void method_3(int int_0)
            {
                base[this.vJ_BusesTransfsDataTable_0.idSubstationColumn] = int_0;
            }

            public int method_4()
            {
                return (int) base[this.vJ_BusesTransfsDataTable_0.TypeDocColumn];
            }

            public void method_5(int int_0)
            {
                base[this.vJ_BusesTransfsDataTable_0.TypeDocColumn] = int_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_BusesTransfsDataTable_0.nameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'nameBus' in table 'vJ_BusesTransfs' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_BusesTransfsDataTable_0.nameBusColumn] = string_0;
            }

            public string method_8()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_BusesTransfsDataTable_0.nameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'nameTransf' in table 'vJ_BusesTransfs' is DBNull.", exception);
                }
                return str;
            }

            public void method_9(string string_0)
            {
                base[this.vJ_BusesTransfsDataTable_0.nameTransfColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_BusesTransfsDataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_BusesTransfs' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_BusesTransfsDataTable_0.idBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_BusesTransfsDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_BusesTransfs' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_BusesTransfsDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BusesTransfsDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_BusesTransfs' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BusesTransfsDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class123 : DataRow
        {
            private DataSetGES.vJ_MeasCableReportDataTable vJ_MeasCableReportDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class123(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasCableReportDataTable_0 = (DataSetGES.vJ_MeasCableReportDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MeasCableReportDataTable_0.idMeasurementColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.idMeasurementColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasCableReportDataTable_0.MakeupColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return str;
            }

            public void method_11(string string_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.MakeupColumn] = string_0;
            }

            public double method_12()
            {
                double num;
                try
                {
                    num = (double) base[this.vJ_MeasCableReportDataTable_0.PermisAmperageColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(double double_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.PermisAmperageColumn] = double_0;
            }

            public int method_14()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IadColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_15(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IadColumn] = int_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IanColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IanColumn] = int_0;
            }

            public int method_18()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IbdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_19(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IbdColumn] = int_0;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.idCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idCell' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public int method_20()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IbnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_21(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IbnColumn] = int_0;
            }

            public int method_22()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IcdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_23(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IcdColumn] = int_0;
            }

            public int method_24()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IcnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_25(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IcnColumn] = int_0;
            }

            public int method_26()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IodColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Iod' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_27(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IodColumn] = int_0;
            }

            public int method_28()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.IonColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ion' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_29(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.IonColumn] = int_0;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.idCellColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_30()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.idBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_31()
            {
                base[this.vJ_MeasCableReportDataTable_0.idBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_32()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.idCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_33()
            {
                base[this.vJ_MeasCableReportDataTable_0.idCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_34()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.CellNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_35()
            {
                base[this.vJ_MeasCableReportDataTable_0.CellNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_36()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.idCableColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.vJ_MeasCableReportDataTable_0.idCableColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_38()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.AddressColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.vJ_MeasCableReportDataTable_0.AddressColumn] = Convert.DBNull;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasCableReportDataTable_0.CellNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CellName' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_40()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.idSchmAbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.vJ_MeasCableReportDataTable_0.idSchmAbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_42()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.MakeupColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.vJ_MeasCableReportDataTable_0.MakeupColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_44()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.VoltageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.vJ_MeasCableReportDataTable_0.VoltageColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_46()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.WiresColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.vJ_MeasCableReportDataTable_0.WiresColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_48()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.CrossSectionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_49()
            {
                base[this.vJ_MeasCableReportDataTable_0.CrossSectionColumn] = Convert.DBNull;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.CellNameColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_50()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.PermisAmperageColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_51()
            {
                base[this.vJ_MeasCableReportDataTable_0.PermisAmperageColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_52()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IadColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_53()
            {
                base[this.vJ_MeasCableReportDataTable_0.IadColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_54()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IanColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.vJ_MeasCableReportDataTable_0.IanColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_56()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IbdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_57()
            {
                base[this.vJ_MeasCableReportDataTable_0.IbdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IbnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_59()
            {
                base[this.vJ_MeasCableReportDataTable_0.IbnColumn] = Convert.DBNull;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.idCableColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idCable' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IcdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_61()
            {
                base[this.vJ_MeasCableReportDataTable_0.IcdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_62()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IcnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_63()
            {
                base[this.vJ_MeasCableReportDataTable_0.IcnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_64()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IodColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_65()
            {
                base[this.vJ_MeasCableReportDataTable_0.IodColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_66()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.IonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_67()
            {
                base[this.vJ_MeasCableReportDataTable_0.IonColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_68()
            {
                return base.IsNull(this.vJ_MeasCableReportDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_69()
            {
                base[this.vJ_MeasCableReportDataTable_0.CommentColumn] = Convert.DBNull;
            }

            public void method_7(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.idCableColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasCableReportDataTable_0.idSchmAbnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idSchmAbn' in table 'vJ_MeasCableReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_MeasCableReportDataTable_0.idSchmAbnColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReportDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_MeasCableReport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.AddressColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReportDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCableReport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_MeasCableReportDataTable_0.CrossSectionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_MeasCableReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.CrossSectionColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReportDataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_MeasCableReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_MeasCableReportDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.idTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasCableReportDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Voltage
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReportDataTable_0.VoltageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_MeasCableReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.VoltageColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Wires
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReportDataTable_0.WiresColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_MeasCableReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReportDataTable_0.WiresColumn] = value;
                }
            }
        }

        public class Class124 : DataRow
        {
            private DataSetGES.tJ_MeasVoltageTransfDataTable tJ_MeasVoltageTransfDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class124(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MeasVoltageTransfDataTable_0 = (DataSetGES.tJ_MeasVoltageTransfDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.idBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.idBusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UbcnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UbcnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UcadColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UcadColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UcanColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UcanColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UaodColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UaodColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UaonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UaonColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.idSwitchPositionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UbodColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UbodColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UbonColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UbonColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UcodColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UcodColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_26()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UconColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UconColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIadColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIadColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.idSwitchPositionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIanColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_31()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIanColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_32()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIbdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_33()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIbdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_35()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIcdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIcdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_38()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIcnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_39()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIcnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UabdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_40()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIodColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_41()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIodColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_42()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.SumIonColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.SumIonColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_44()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.IsrdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_45()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.IsrdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_46()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.IsrnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.IsrnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_48()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.KntdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_49()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.KntdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UabdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_50()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.KntnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.KntnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_52()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.KpfdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_53()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.KpfdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_54()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.KpfnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.KpfnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.idOldMeasurementTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_57()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.idOldMeasurementTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.DeletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_59()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UabnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UabnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tJ_MeasVoltageTransfDataTable_0.UbcdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tJ_MeasVoltageTransfDataTable_0.UbcdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tJ_MeasVoltageTransfDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int) base[this.tJ_MeasVoltageTransfDataTable_0.idMeasurementColumn];
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.idMeasurementColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idObjList
            {
                get
                {
                    return (int) base[this.tJ_MeasVoltageTransfDataTable_0.idObjListColumn];
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.idObjListColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idOldMeasurementTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.idOldMeasurementTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idOldMeasurementTransf' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.idOldMeasurementTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSwitchPosition
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.idSwitchPositionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idSwitchPosition' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.idSwitchPositionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MeasVoltageTransfDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Isrd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.IsrdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Isrd' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.IsrdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Isrn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.IsrnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Isrn' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.IsrnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Kntd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.KntdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Kntd' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.KntdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kntn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.KntnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Kntn' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.KntnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kpfd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.KpfdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Kpfd' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.KpfdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kpfn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.KpfnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Kpfn' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.KpfnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIad
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIadColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIad' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIadColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIan
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIanColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIan' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIanColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIbd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIbdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIbd' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIbdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIbn' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIcd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIcdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIcd' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIcdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIcn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIcnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIcn' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIcnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIod' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIodColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIon
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.SumIonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SumIon' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.SumIonColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uabd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UabdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uabd' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UabdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uabn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UabnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uabn' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UabnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uaod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UaodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uaod' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UaodColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uaon
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UaonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uaon' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UaonColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubcd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UbcdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubcd' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UbcdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubcn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UbcnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubcn' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UbcnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ubod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UbodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubod' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UbodColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubon
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UbonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubon' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UbonColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ucad
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UcadColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucad' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UcadColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucan
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UcanColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucan' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UcanColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UcodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucod' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UcodColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucon
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasVoltageTransfDataTable_0.UconColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucon' in table 'tJ_MeasVoltageTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasVoltageTransfDataTable_0.UconColumn] = value;
                }
            }
        }

        public class Class125 : DataRow
        {
            private DataSetGES.vJ_MeasCableReport2DataTable vJ_MeasCableReport2DataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class125(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasCableReport2DataTable_0 = (DataSetGES.vJ_MeasCableReport2DataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.idBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.vJ_MeasCableReport2DataTable_0.idBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.StreetColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_MeasCableReport2DataTable_0.StreetColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.HouseColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vJ_MeasCableReport2DataTable_0.HouseColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.FullHouseColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_MeasCableReport2DataTable_0.FullHouseColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.idSchmAbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_MeasCableReport2DataTable_0.idSchmAbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.MakeupColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_MeasCableReport2DataTable_0.MakeupColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.idCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.VoltageColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_MeasCableReport2DataTable_0.VoltageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.WiresColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vJ_MeasCableReport2DataTable_0.WiresColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.CrossSectionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_25()
            {
                base[this.vJ_MeasCableReport2DataTable_0.CrossSectionColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_26()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.PermisAmperageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.vJ_MeasCableReport2DataTable_0.PermisAmperageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IadColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_29()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IadColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vJ_MeasCableReport2DataTable_0.idCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_30()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IanColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IanColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IbdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_33()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IbdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IbnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_35()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IbnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_36()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IcdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_37()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IcdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IcnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IcnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.CellNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_40()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IodColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IodColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_42()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.IonColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.vJ_MeasCableReport2DataTable_0.IonColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_44()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.vJ_MeasCableReport2DataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_MeasCableReport2DataTable_0.CellNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.idCableColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vJ_MeasCableReport2DataTable_0.idCableColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_MeasCableReport2DataTable_0.CompanyColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.vJ_MeasCableReport2DataTable_0.CompanyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CellName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReport2DataTable_0.CellNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CellName' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.CellNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReport2DataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReport2DataTable_0.CompanyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.CompanyColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSection
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_MeasCableReport2DataTable_0.CrossSectionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.CrossSectionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullHouse
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReport2DataTable_0.FullHouseColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FullHouse' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.FullHouseColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int House
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.HouseColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'House' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.HouseColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IadColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IadColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ian
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IanColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IanColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IbdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IbdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Icd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IcdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IcdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IcnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IcnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCable
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.idCableColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.idCableColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.idCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.idCellColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int) base[this.vJ_MeasCableReport2DataTable_0.idMeasurementColumn];
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.idMeasurementColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSchmAbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.idSchmAbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idSchmAbn' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.idSchmAbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_MeasCableReport2DataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasCableReport2DataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Iod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Iod' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IodColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ion
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.IonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ion' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.IonColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Makeup
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReport2DataTable_0.MakeupColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.MakeupColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_MeasCableReport2DataTable_0.PermisAmperageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.PermisAmperageColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Street
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableReport2DataTable_0.StreetColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Street' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.StreetColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Voltage
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.VoltageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.VoltageColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Wires
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableReport2DataTable_0.WiresColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_MeasCableReport2' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableReport2DataTable_0.WiresColumn] = value;
                }
            }
        }

        public class Class126 : DataRow
        {
            private DataSetGES.vJ_CableByCellMeasDataTable vJ_CableByCellMeasDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class126(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_CableByCellMeasDataTable_0 = (DataSetGES.vJ_CableByCellMeasDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_CableByCellMeasDataTable_0.idMeasurementColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_CableByCellMeasDataTable_0.idMeasurementColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CableByCellMeasDataTable_0.idCableColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idCable' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.vJ_CableByCellMeasDataTable_0.idCableColumn] = int_0;
            }

            public string method_12()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CableByCellMeasDataTable_0.NameCableColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameCable' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                }
                return str;
            }

            public void method_13(string string_0)
            {
                base[this.vJ_CableByCellMeasDataTable_0.NameCableColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.idBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_CableByCellMeasDataTable_0.idBusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_CableByCellMeasDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.idCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_CableByCellMeasDataTable_0.idCellColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CableByCellMeasDataTable_0.idCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idCell' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                }
                return num;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.NameCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.vJ_CableByCellMeasDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.TypeCodeIdCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vJ_CableByCellMeasDataTable_0.TypeCodeIdCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.idParentCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_25()
            {
                base[this.vJ_CableByCellMeasDataTable_0.idParentCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.idCableColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_27()
            {
                base[this.vJ_CableByCellMeasDataTable_0.idCableColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.vJ_CableByCellMeasDataTable_0.NameCableColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.vJ_CableByCellMeasDataTable_0.NameCableColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_CableByCellMeasDataTable_0.idCellColumn] = int_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CableByCellMeasDataTable_0.NameCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_CableByCellMeasDataTable_0.NameCellColumn] = string_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CableByCellMeasDataTable_0.TypeCodeIdCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TypeCodeIdCell' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.vJ_CableByCellMeasDataTable_0.TypeCodeIdCellColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CableByCellMeasDataTable_0.idParentCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idParentCell' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_CableByCellMeasDataTable_0.idParentCellColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CableByCellMeasDataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableByCellMeasDataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_CableByCellMeasDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_CableByCellMeasDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_CableByCellMeasDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_CableByCellMeas' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_CableByCellMeasDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class127 : DataRow
        {
            private DataSetGES.tJ_MeasCellDataTable tJ_MeasCellDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class127(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MeasCellDataTable_0 = (DataSetGES.tJ_MeasCellDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_MeasCellDataTable_0.idMeasurementColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.idMeasurementColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_MeasCellDataTable_0.IbdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ibd' in table 'tJ_MeasCell' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.IbdColumn] = int_0;
            }

            public int method_12()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_MeasCellDataTable_0.IbnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ibn' in table 'tJ_MeasCell' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.IbnColumn] = int_0;
            }

            public int method_14()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_MeasCellDataTable_0.IcdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Icd' in table 'tJ_MeasCell' is DBNull.", exception);
                }
                return num;
            }

            public void method_15(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.IcdColumn] = int_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_MeasCellDataTable_0.IcnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Icn' in table 'tJ_MeasCell' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.IcnColumn] = int_0;
            }

            public bool method_18()
            {
                return (bool) base[this.tJ_MeasCellDataTable_0.DeletedColumn];
            }

            public void method_19(bool bool_0)
            {
                base[this.tJ_MeasCellDataTable_0.DeletedColumn] = bool_0;
            }

            public int method_2()
            {
                return (int) base[this.tJ_MeasCellDataTable_0.idCellColumn];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.idTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.tJ_MeasCellDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.PermissAmperageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.tJ_MeasCellDataTable_0.PermissAmperageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.IadColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tJ_MeasCellDataTable_0.IadColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.IanColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.tJ_MeasCellDataTable_0.IanColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.IbdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.tJ_MeasCellDataTable_0.IbdColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.idCellColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.IbnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.tJ_MeasCellDataTable_0.IbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.IcdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_33()
            {
                base[this.tJ_MeasCellDataTable_0.IcdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.IcnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_35()
            {
                base[this.tJ_MeasCellDataTable_0.IcnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_36()
            {
                return base.IsNull(this.tJ_MeasCellDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_37()
            {
                base[this.tJ_MeasCellDataTable_0.CommentColumn] = Convert.DBNull;
            }

            public double method_4()
            {
                double num;
                try
                {
                    num = (double) base[this.tJ_MeasCellDataTable_0.PermissAmperageColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'PermissAmperage' in table 'tJ_MeasCell' is DBNull.", exception);
                }
                return num;
            }

            public void method_5(double double_0)
            {
                base[this.tJ_MeasCellDataTable_0.PermissAmperageColumn] = double_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_MeasCellDataTable_0.IadColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Iad' in table 'tJ_MeasCell' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.IadColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_MeasCellDataTable_0.IanColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ian' in table 'tJ_MeasCell' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.tJ_MeasCellDataTable_0.IanColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasCellDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_MeasCell' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasCellDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int) base[this.tJ_MeasCellDataTable_0.idBusColumn];
                }
                set
                {
                    base[this.tJ_MeasCellDataTable_0.idBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasCellDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'tJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasCellDataTable_0.idTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MeasCellDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MeasCellDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class128 : DataRow
        {
            private DataSetGES.vJ_MeasCellDataTable vJ_MeasCellDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class128(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasCellDataTable_0 = (DataSetGES.vJ_MeasCellDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.idTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.vJ_MeasCellDataTable_0.idTransfColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.IanColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_MeasCellDataTable_0.IanColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.IbdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vJ_MeasCellDataTable_0.IbdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.IbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_MeasCellDataTable_0.IbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.IcdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vJ_MeasCellDataTable_0.IcdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.IcnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.vJ_MeasCellDataTable_0.IcnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.NameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_MeasCellDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vJ_MeasCellDataTable_0.NameBusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.NameCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_MeasCellDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.PermissAmperageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vJ_MeasCellDataTable_0.PermissAmperageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_MeasCellDataTable_0.IadColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.vJ_MeasCellDataTable_0.IadColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCellDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.vJ_MeasCellDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.DeletedColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Iad
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCellDataTable_0.IadColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.IadColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ian
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCellDataTable_0.IanColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.IanColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCellDataTable_0.IbdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.IbdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCellDataTable_0.IbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.IbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCellDataTable_0.IcdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.IcdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCellDataTable_0.IcnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.IcnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int) base[this.vJ_MeasCellDataTable_0.idBusColumn];
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.idBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int) base[this.vJ_MeasCellDataTable_0.idMeasurementColumn];
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.idMeasurementColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCellDataTable_0.idTransfColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.idTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasCellDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCellDataTable_0.NameBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.NameBusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCell
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCellDataTable_0.NameCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.NameCellColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermissAmperage
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_MeasCellDataTable_0.PermissAmperageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PermissAmperage' in table 'vJ_MeasCell' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCellDataTable_0.PermissAmperageColumn] = value;
                }
            }
        }

        public class Class129 : DataRow
        {
            private DataSetGES.vJ_MeasTransfVoltageDataTable vJ_MeasTransfVoltageDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class129(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasTransfVoltageDataTable_0 = (DataSetGES.vJ_MeasTransfVoltageDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MeasTransfVoltageDataTable_0.idMeasurementColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.idMeasurementColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.SwitchPositionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.SwitchPositionColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.idSwitchPositionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.idSwitchPositionColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UabdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UabdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UabnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UabnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UbcdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UbcdColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                return (int) base[this.vJ_MeasTransfVoltageDataTable_0.idObjListColumn];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UbcnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UbcnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UcadColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UcadColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UcanColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UcanColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_26()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UaodColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UaodColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UaonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_29()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UaonColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.idObjListColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_30()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UbodColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UbodColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UbonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_33()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UbonColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UcodColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_35()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UcodColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.UconColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_37()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.UconColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.idOldMeasurementTransfColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.idOldMeasurementTransfColumn] = Convert.DBNull;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasTransfVoltageDataTable_0.SwitchPositionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SwitchPosition' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_40()
            {
                return base.IsNull(this.vJ_MeasTransfVoltageDataTable_0.DeletedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_41()
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.SwitchPositionColumn] = string_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.idOldMeasurementTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idOldMeasurementTransf' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.idOldMeasurementTransfColumn] = int_0;
            }

            public bool method_8()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_MeasTransfVoltageDataTable_0.DeletedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Deleted' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                }
                return flag;
            }

            public void method_9(bool bool_0)
            {
                base[this.vJ_MeasTransfVoltageDataTable_0.DeletedColumn] = bool_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSwitchPosition
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.idSwitchPositionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idSwitchPosition' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.idSwitchPositionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasTransfVoltageDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uabd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UabdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uabd' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UabdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uabn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UabnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uabn' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UabnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uaod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UaodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uaod' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UaodColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uaon
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UaonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Uaon' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UaonColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ubcd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UbcdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubcd' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UbcdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ubcn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UbcnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubcn' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UbcnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ubod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UbodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubod' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UbodColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ubon
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UbonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ubon' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UbonColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ucad
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UcadColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucad' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UcadColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucan
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UcanColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucan' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UcanColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ucod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UcodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucod' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UcodColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucon
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasTransfVoltageDataTable_0.UconColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ucon' in table 'vJ_MeasTransfVoltage' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasTransfVoltageDataTable_0.UconColumn] = value;
                }
            }
        }

        public class Class130 : DataRow
        {
            private DataSetGES.tAbnDoc_DogovorDataTable tAbnDoc_DogovorDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class130(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnDoc_DogovorDataTable_0 = (DataSetGES.tAbnDoc_DogovorDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.DogDateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tAbnDoc_DogovorDataTable_0.DogDateColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.DateSendColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tAbnDoc_DogovorDataTable_0.DateSendColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.SignatureColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.tAbnDoc_DogovorDataTable_0.SignatureColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.BasisOFColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.tAbnDoc_DogovorDataTable_0.BasisOFColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.DifferenceColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.tAbnDoc_DogovorDataTable_0.DifferenceColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.idDifferColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.tAbnDoc_DogovorDataTable_0.idDifferColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.DateBeginColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tAbnDoc_DogovorDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.TrebovColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.tAbnDoc_DogovorDataTable_0.TrebovColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.AkceptColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_25()
            {
                base[this.tAbnDoc_DogovorDataTable_0.AkceptColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_26()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.MethodFirstColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.tAbnDoc_DogovorDataTable_0.MethodFirstColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.MethodNextColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.tAbnDoc_DogovorDataTable_0.MethodNextColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tAbnDoc_DogovorDataTable_0.DateBeginColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_30()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.ManSignatureColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.tAbnDoc_DogovorDataTable_0.ManSignatureColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.DateEndColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tAbnDoc_DogovorDataTable_0.DateEndColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.FlagBreakColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tAbnDoc_DogovorDataTable_0.FlagBreakColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tAbnDoc_DogovorDataTable_0.DateBreakColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tAbnDoc_DogovorDataTable_0.DateBreakColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Akcept
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tAbnDoc_DogovorDataTable_0.AkceptColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Akcept' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.AkceptColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string BasisOF
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnDoc_DogovorDataTable_0.BasisOFColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'BasisOF' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.BasisOFColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnDoc_DogovorDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateBegin
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnDoc_DogovorDataTable_0.DateBeginColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateBegin' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.DateBeginColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateBreak
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnDoc_DogovorDataTable_0.DateBreakColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateBreak' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.DateBreakColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateEnd
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnDoc_DogovorDataTable_0.DateEndColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateEnd' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.DateEndColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateSend
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnDoc_DogovorDataTable_0.DateSendColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateSend' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.DateSendColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Difference
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tAbnDoc_DogovorDataTable_0.DifferenceColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Difference' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.DifferenceColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DogDate
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnDoc_DogovorDataTable_0.DogDateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DogDate' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.DogDateColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int DogNumber
            {
                get
                {
                    return (int) base[this.tAbnDoc_DogovorDataTable_0.DogNumberColumn];
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.DogNumberColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FlagBreak
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tAbnDoc_DogovorDataTable_0.FlagBreakColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FlagBreak' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.FlagBreakColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idAbn
            {
                get
                {
                    return (int) base[this.tAbnDoc_DogovorDataTable_0.idAbnColumn];
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.idAbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idDiffer
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnDoc_DogovorDataTable_0.idDifferColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idDiffer' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.idDifferColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idList
            {
                get
                {
                    return (int) base[this.tAbnDoc_DogovorDataTable_0.idListColumn];
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.idListColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnDoc_DogovorDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ManSignature
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnDoc_DogovorDataTable_0.ManSignatureColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ManSignature' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.ManSignatureColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MethodFirst
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnDoc_DogovorDataTable_0.MethodFirstColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'MethodFirst' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.MethodFirstColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MethodNext
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnDoc_DogovorDataTable_0.MethodNextColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'MethodNext' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.MethodNextColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Signature
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tAbnDoc_DogovorDataTable_0.SignatureColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Signature' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.SignatureColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Trebov
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tAbnDoc_DogovorDataTable_0.TrebovColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Trebov' in table 'tAbnDoc_Dogovor' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tAbnDoc_DogovorDataTable_0.TrebovColumn] = value;
                }
            }
        }

        public class Class131 : DataRow
        {
            private DataSetGES.tAbnObjDoc_AktRBPDataTable tAbnObjDoc_AktRBPDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class131(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnObjDoc_AktRBPDataTable_0 = (DataSetGES.tAbnObjDoc_AktRBPDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.idActTehConnectionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.idActTehConnectionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.NetRegionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.NetRegionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.DataNumberColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.DataNumberColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OrgFaceColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OrgFaceColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OrgBaseColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OrgBaseColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OrgBalanceColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OrgBalanceColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.idTUColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.PotrBalanceColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.PotrBalanceColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.BorderBalanceColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.BorderBalanceColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OrgExplColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OrgExplColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_26()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.PotrExplColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_27()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.PotrExplColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.ResponsibilityColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_29()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.ResponsibilityColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.idTUColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.AdmissionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.AdmissionColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.PotrSignatureColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_33()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.PotrSignatureColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OtherColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_35()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OtherColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerNameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerChiefColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_39()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChiefColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.DataColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_40()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerBaseColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerBaseColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_42()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OrganizExplColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OrganizExplColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_44()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.PotrebExplColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_45()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.PotrebExplColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_46()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.BorderExplColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.BorderExplColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_48()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2Column);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_49()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2Column] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.DataColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_50()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.tbDogByOTONumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.tbDogByOTONumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_52()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.tbTO2Column);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.tbTO2Column] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_54()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.tbTO1Column);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.tbTO1Column] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_56()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerName_FourColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_57()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerName_FourColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief_FourColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_59()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief_FourColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_60()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerBase_FourColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_61()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerBase_FourColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_62()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OrganizExpl_FourColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_63()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OrganizExpl_FourColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_64()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.Border2Expl_FourColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_65()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.Border2Expl_FourColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_66()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerExpl_FourColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_67()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerExpl_FourColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_68()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2_FourColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_69()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2_FourColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_70()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.idActRebindingColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_71()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.idActRebindingColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.tAbnObjDoc_AktRBPDataTable_0.ActDataColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tAbnObjDoc_AktRBPDataTable_0.ActDataColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ActData
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.ActDataColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ActData' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.ActDataColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Admission
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.AdmissionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Admission' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.AdmissionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Border2Expl_Four
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.Border2Expl_FourColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Border2Expl_Four' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.Border2Expl_FourColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string BorderBalance
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.BorderBalanceColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'BorderBalance' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.BorderBalanceColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string BorderExpl
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.BorderExplColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'BorderExpl' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.BorderExplColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Data
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.DataColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Data' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.DataColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DataNumber
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.DataNumberColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DataNumber' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.DataNumberColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idActRebinding
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDoc_AktRBPDataTable_0.idActRebindingColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idActRebinding' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.idActRebindingColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idActTehConnection
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDoc_AktRBPDataTable_0.idActTehConnectionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idActTehConnection' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.idActTehConnectionColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idList
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_AktRBPDataTable_0.idListColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.idListColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTU
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDoc_AktRBPDataTable_0.idTUColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTU' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.idTUColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_AktRBPDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int NetRegion
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDoc_AktRBPDataTable_0.NetRegionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NetRegion' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.NetRegionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrganizExpl
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OrganizExplColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OrganizExpl' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OrganizExplColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string OrganizExpl_Four
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OrganizExpl_FourColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OrganizExpl_Four' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OrganizExpl_FourColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgBalance
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OrgBalanceColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OrgBalance' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OrgBalanceColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string OrgBase
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OrgBaseColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OrgBase' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OrgBaseColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgExpl
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OrgExplColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OrgExpl' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OrgExplColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgFace
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OrgFaceColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OrgFace' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OrgFaceColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Other
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OtherColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Other' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OtherColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string OwnerBase
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerBaseColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerBase' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerBaseColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerBase_Four
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerBase_FourColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerBase_Four' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerBase_FourColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string OwnerChief
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChiefColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerChief' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChiefColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerChief_Four
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief_FourColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerChief_Four' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief_FourColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerChief2
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2Column];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerChief2' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2Column] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerChief2_Four
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2_FourColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerChief2_Four' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerChief2_FourColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerExpl_Four
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerExpl_FourColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerExpl_Four' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerExpl_FourColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string OwnerName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerName' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string OwnerName_Four
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerName_FourColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OwnerName_Four' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.OwnerName_FourColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string PotrBalance
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.PotrBalanceColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PotrBalance' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.PotrBalanceColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string PotrebExpl
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.PotrebExplColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PotrebExpl' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.PotrebExplColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string PotrExpl
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.PotrExplColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PotrExpl' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.PotrExplColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PotrSignature
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.PotrSignatureColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PotrSignature' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.PotrSignatureColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Responsibility
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.ResponsibilityColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Responsibility' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.ResponsibilityColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string tbDogByOTONum
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.tbDogByOTONumColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'tbDogByOTONum' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.tbDogByOTONumColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string tbTO1
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.tbTO1Column];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'tbTO1' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.tbTO1Column] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string tbTO2
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDoc_AktRBPDataTable_0.tbTO2Column];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'tbTO2' in table 'tAbnObjDoc_AktRBP' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDoc_AktRBPDataTable_0.tbTO2Column] = value;
                }
            }
        }

        public class Class132 : DataRow
        {
            private DataSetGES.tAbnDataTable tAbnDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class132(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnDataTable_0 = (DataSetGES.tAbnDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tAbnDataTable_0.CodeAbonentColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tAbnDataTable_0.CodeAbonentColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tAbnDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tAbnDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tAbnDataTable_0.CodeAbnIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tAbnDataTable_0.CodeAbnIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tAbnDataTable_0.CodeAbnStrColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tAbnDataTable_0.CodeAbnStrColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                return (int) base[this.tAbnDataTable_0.TypeAbnColumn];
            }

            public void method_3(int int_0)
            {
                base[this.tAbnDataTable_0.TypeAbnColumn] = int_0;
            }

            public bool method_4()
            {
                return (bool) base[this.tAbnDataTable_0.DeletedColumn];
            }

            public void method_5(bool bool_0)
            {
                base[this.tAbnDataTable_0.DeletedColumn] = bool_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.tAbnDataTable_0.CodeAbnIdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CodeAbnId' in table 'tAbn' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.tAbnDataTable_0.CodeAbnIdColumn] = int_0;
            }

            public string method_8()
            {
                string str;
                try
                {
                    str = (string) base[this.tAbnDataTable_0.CodeAbnStrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CodeAbnStr' in table 'tAbn' is DBNull.", exception);
                }
                return str;
            }

            public void method_9(string string_0)
            {
                base[this.tAbnDataTable_0.CodeAbnStrColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorker
            {
                get
                {
                    return (int) base[this.tAbnDataTable_0.idWorkerColumn];
                }
                set
                {
                    base[this.tAbnDataTable_0.idWorkerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tAbn' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class133 : DataRow
        {
            private DataSetGES.tAbnObjDataTable tAbnObjDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class133(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnObjDataTable_0 = (DataSetGES.tAbnObjDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.tAbnObjDataTable_0.idMapColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idMap' in table 'tAbnObj' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.tAbnObjDataTable_0.idMapColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tAbnObjDataTable_0.idMapColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tAbnObjDataTable_0.idMapColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tAbnObjDataTable_0.idWorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.tAbnObjDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.tAbnObjDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tAbnObjDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.tAbnObjDataTable_0.IdObjParentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.tAbnObjDataTable_0.IdObjParentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.tAbnObjDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.tAbnObjDataTable_0.CommentColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tAbnObjDataTable_0.IdObjParentColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdObjParent' in table 'tAbnObj' is DBNull.", exception);
                }
                return num;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.tAbnObjDataTable_0.typeObjColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tAbnObjDataTable_0.typeObjColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.tAbnObjDataTable_0.ShortNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.tAbnObjDataTable_0.ShortNameColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.tAbnObjDataTable_0.IdObjParentColumn] = int_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.tAbnObjDataTable_0.typeObjColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'typeObj' in table 'tAbnObj' is DBNull.", exception);
                }
                return num;
            }

            public void method_5(int int_0)
            {
                base[this.tAbnObjDataTable_0.typeObjColumn] = int_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.tAbnObjDataTable_0.ShortNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'ShortName' in table 'tAbnObj' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.tAbnObjDataTable_0.ShortNameColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tAbnObjDataTable_0.idAbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tAbnObjDataTable_0.idAbnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tAbnObj' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idAbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDataTable_0.idAbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idAbn' in table 'tAbnObj' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDataTable_0.idAbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tAbnObj' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDataTable_0.idWorkerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnObjDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnObjDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnObjDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tAbnObj' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnObjDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class134 : DataRow
        {
            private DataSetGES.tAbnObjDoc_ImageDataTable tAbnObjDoc_ImageDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class134(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnObjDoc_ImageDataTable_0 = (DataSetGES.tAbnObjDoc_ImageDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tAbnObjDoc_ImageDataTable_0.idListColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tAbnObjDoc_ImageDataTable_0.idListColumn] = int_0;
            }

            public byte[] method_2()
            {
                byte[] buffer;
                try
                {
                    buffer = (byte[]) base[this.tAbnObjDoc_ImageDataTable_0.ScanColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Scan' in table 'tAbnObjDoc_Image' is DBNull.", exception);
                }
                return buffer;
            }

            public void method_3(byte[] byte_0)
            {
                base[this.tAbnObjDoc_ImageDataTable_0.ScanColumn] = byte_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tAbnObjDoc_ImageDataTable_0.ScanColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tAbnObjDoc_ImageDataTable_0.ScanColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_ImageDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ImageDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class135 : DataRow
        {
            private DataSetGES.tAbnObjDoc_ListDataTable tAbnObjDoc_ListDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class135(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnObjDoc_ListDataTable_0 = (DataSetGES.tAbnObjDoc_ListDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tAbnObjDoc_ListDataTable_0.idAbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tAbnObjDoc_ListDataTable_0.idAbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.tAbnObjDoc_ListDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DocDate
            {
                get
                {
                    return (DateTime) base[this.tAbnObjDoc_ListDataTable_0.DocDateColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.DocDateColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DocNumber
            {
                get
                {
                    return (string) base[this.tAbnObjDoc_ListDataTable_0.DocNumberColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.DocNumberColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idAbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDoc_ListDataTable_0.idAbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idAbn' in table 'tAbnObjDoc_List' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.idAbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idAbnObj
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_ListDataTable_0.idAbnObjColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.idAbnObjColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idDocType
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_ListDataTable_0.idDocTypeColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.idDocTypeColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_ListDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool isActive
            {
                get
                {
                    return (bool) base[this.tAbnObjDoc_ListDataTable_0.isActiveColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_ListDataTable_0.isActiveColumn] = value;
                }
            }
        }

        public class Class136 : DataRow
        {
            private DataSetGES.tAbnContactDataTable tAbnContactDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class136(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnContactDataTable_0 = (DataSetGES.tAbnContactDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tAbnContactDataTable_0.FColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tAbnContactDataTable_0.FColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tAbnContactDataTable_0.DateChangeColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tAbnContactDataTable_0.DateChangeColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tAbnContactDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tAbnContactDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tAbnContactDataTable_0.emailColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tAbnContactDataTable_0.emailColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tAbnContactDataTable_0.IColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tAbnContactDataTable_0.IColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tAbnContactDataTable_0.OColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tAbnContactDataTable_0.OColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tAbnContactDataTable_0.PostColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tAbnContactDataTable_0.PostColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.tAbnContactDataTable_0.PhoneColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tAbnContactDataTable_0.PhoneColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnContactDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateChange
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnContactDataTable_0.DateChangeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateChange' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.DateChangeColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string email
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnContactDataTable_0.emailColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'email' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.emailColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnContactDataTable_0.FColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'F' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.FColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string I
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnContactDataTable_0.IColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'I' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.IColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idAbn
            {
                get
                {
                    return (int) base[this.tAbnContactDataTable_0.idAbnColumn];
                }
                set
                {
                    base[this.tAbnContactDataTable_0.idAbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnContactDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnContactDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string O
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnContactDataTable_0.OColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'O' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.OColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Phone
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnContactDataTable_0.PhoneColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Phone' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.PhoneColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Post
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnContactDataTable_0.PostColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Post' in table 'tAbnContact' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnContactDataTable_0.PostColumn] = value;
                }
            }
        }

        public class Class137 : DataRow
        {
            private DataSetGES.tAbnDoc_ListDataTable tAbnDoc_ListDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class137(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnDoc_ListDataTable_0 = (DataSetGES.tAbnDoc_ListDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tAbnDoc_ListDataTable_0.idAbnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tAbnDoc_ListDataTable_0.idAbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tAbnDoc_ListDataTable_0.DocNumberColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tAbnDoc_ListDataTable_0.DocNumberColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tAbnDoc_ListDataTable_0.DocDateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tAbnDoc_ListDataTable_0.DocDateColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tAbnDoc_ListDataTable_0.idDocTypeColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tAbnDoc_ListDataTable_0.idDocTypeColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.tAbnDoc_ListDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.tAbnDoc_ListDataTable_0.DeletedColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DocDate
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnDoc_ListDataTable_0.DocDateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DocDate' in table 'tAbnDoc_List' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnDoc_ListDataTable_0.DocDateColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string DocNumber
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tAbnDoc_ListDataTable_0.DocNumberColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DocNumber' in table 'tAbnDoc_List' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tAbnDoc_ListDataTable_0.DocNumberColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idAbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnDoc_ListDataTable_0.idAbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idAbn' in table 'tAbnDoc_List' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnDoc_ListDataTable_0.idAbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idDocType
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnDoc_ListDataTable_0.idDocTypeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idDocType' in table 'tAbnDoc_List' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnDoc_ListDataTable_0.idDocTypeColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnDoc_ListDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnDoc_ListDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isActive
            {
                get
                {
                    return (bool) base[this.tAbnDoc_ListDataTable_0.isActiveColumn];
                }
                set
                {
                    base[this.tAbnDoc_ListDataTable_0.isActiveColumn] = value;
                }
            }
        }

        public class Class138 : DataRow
        {
            private DataSetGES.tG_AbnAddressDataTable tG_AbnAddressDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class138(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tG_AbnAddressDataTable_0 = (DataSetGES.tG_AbnAddressDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tG_AbnAddressDataTable_0.idStreetColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tG_AbnAddressDataTable_0.idStreetColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tG_AbnAddressDataTable_0.DateChangeColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tG_AbnAddressDataTable_0.DateChangeColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tG_AbnAddressDataTable_0.HouseColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tG_AbnAddressDataTable_0.HouseColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tG_AbnAddressDataTable_0.HousingColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tG_AbnAddressDataTable_0.HousingColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tG_AbnAddressDataTable_0.ApartmentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tG_AbnAddressDataTable_0.ApartmentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tG_AbnAddressDataTable_0.RepresentationColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tG_AbnAddressDataTable_0.RepresentationColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Apartment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnAddressDataTable_0.ApartmentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Apartment' in table 'tG_AbnAddress' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.ApartmentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateChange
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tG_AbnAddressDataTable_0.DateChangeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateChange' in table 'tG_AbnAddress' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.DateChangeColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string House
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnAddressDataTable_0.HouseColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'House' in table 'tG_AbnAddress' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.HouseColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Housing
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnAddressDataTable_0.HousingColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Housing' in table 'tG_AbnAddress' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.HousingColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idAbn
            {
                get
                {
                    return (int) base[this.tG_AbnAddressDataTable_0.idAbnColumn];
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.idAbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idStreet
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tG_AbnAddressDataTable_0.idStreetColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idStreet' in table 'tG_AbnAddress' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.idStreetColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTypeAddress
            {
                get
                {
                    return (int) base[this.tG_AbnAddressDataTable_0.idTypeAddressColumn];
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.idTypeAddressColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tG_AbnAddressDataTable_0.idColumn];
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Representation
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnAddressDataTable_0.RepresentationColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Representation' in table 'tG_AbnAddress' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnAddressDataTable_0.RepresentationColumn] = value;
                }
            }
        }

        public class Class139 : DataRow
        {
            private DataSetGES.tG_AbnChiefDataTable tG_AbnChiefDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class139(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tG_AbnChiefDataTable_0 = (DataSetGES.tG_AbnChiefDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.DocBaseColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tG_AbnChiefDataTable_0.DocBaseColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.R_PostColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tG_AbnChiefDataTable_0.R_PostColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.R_FColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.tG_AbnChiefDataTable_0.R_FColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.R_IColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.tG_AbnChiefDataTable_0.R_IColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.R_OColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.tG_AbnChiefDataTable_0.R_OColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.D_PostColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.tG_AbnChiefDataTable_0.D_PostColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.I_PostColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.D_FColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.tG_AbnChiefDataTable_0.D_FColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.D_IColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.tG_AbnChiefDataTable_0.D_IColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.D_OColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tG_AbnChiefDataTable_0.D_OColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_26()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.T_PostColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.tG_AbnChiefDataTable_0.T_PostColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.T_FColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_29()
            {
                base[this.tG_AbnChiefDataTable_0.T_FColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tG_AbnChiefDataTable_0.I_PostColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.T_IColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.tG_AbnChiefDataTable_0.T_IColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.T_OColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_33()
            {
                base[this.tG_AbnChiefDataTable_0.T_OColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.I_FColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tG_AbnChiefDataTable_0.I_FColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.I_IColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tG_AbnChiefDataTable_0.I_IColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.tG_AbnChiefDataTable_0.I_OColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tG_AbnChiefDataTable_0.I_OColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_F
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.D_FColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'D_F' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.D_FColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string D_I
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.D_IColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'D_I' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.D_IColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string D_O
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.D_OColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'D_O' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.D_OColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_Post
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.D_PostColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'D_Post' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.D_PostColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateChange
            {
                get
                {
                    return (DateTime) base[this.tG_AbnChiefDataTable_0.DateChangeColumn];
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.DateChangeColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string DocBase
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.DocBaseColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DocBase' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.DocBaseColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string I_F
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.I_FColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'I_F' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.I_FColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string I_I
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.I_IColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'I_I' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.I_IColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string I_O
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.I_OColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'I_O' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.I_OColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string I_Post
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.I_PostColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'I_Post' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.I_PostColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idAbn
            {
                get
                {
                    return (int) base[this.tG_AbnChiefDataTable_0.idAbnColumn];
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.idAbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tG_AbnChiefDataTable_0.idColumn];
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string R_F
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.R_FColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'R_F' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.R_FColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string R_I
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.R_IColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'R_I' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.R_IColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string R_O
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.R_OColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'R_O' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.R_OColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string R_Post
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.R_PostColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'R_Post' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.R_PostColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string T_F
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.T_FColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'T_F' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.T_FColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string T_I
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.T_IColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'T_I' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.T_IColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string T_O
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.T_OColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'T_O' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.T_OColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string T_Post
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tG_AbnChiefDataTable_0.T_PostColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'T_Post' in table 'tG_AbnChief' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tG_AbnChiefDataTable_0.T_PostColumn] = value;
                }
            }
        }

        public class Class140 : DataRow
        {
            private DataSetGES.tAbnObjDoc_FileDataTable tAbnObjDoc_FileDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class140(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tAbnObjDoc_FileDataTable_0 = (DataSetGES.tAbnObjDoc_FileDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tAbnObjDoc_FileDataTable_0.FileColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tAbnObjDoc_FileDataTable_0.FileColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tAbnObjDoc_FileDataTable_0.dateChangeColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tAbnObjDoc_FileDataTable_0.dateChangeColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tAbnObjDoc_FileDataTable_0.idTemplateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tAbnObjDoc_FileDataTable_0.idTemplateColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateChange
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tAbnObjDoc_FileDataTable_0.dateChangeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'dateChange' in table 'tAbnObjDoc_File' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tAbnObjDoc_FileDataTable_0.dateChangeColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] File
            {
                get
                {
                    byte[] buffer;
                    try
                    {
                        buffer = (byte[]) base[this.tAbnObjDoc_FileDataTable_0.FileColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'File' in table 'tAbnObjDoc_File' is DBNull.", exception);
                    }
                    return buffer;
                }
                set
                {
                    base[this.tAbnObjDoc_FileDataTable_0.FileColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileName
            {
                get
                {
                    return (string) base[this.tAbnObjDoc_FileDataTable_0.FileNameColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_FileDataTable_0.FileNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idList
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_FileDataTable_0.idListColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_FileDataTable_0.idListColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTemplate
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tAbnObjDoc_FileDataTable_0.idTemplateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTemplate' in table 'tAbnObjDoc_File' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tAbnObjDoc_FileDataTable_0.idTemplateColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tAbnObjDoc_FileDataTable_0.idColumn];
                }
                set
                {
                    base[this.tAbnObjDoc_FileDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class141 : DataRow
        {
            private DataSetGES.tTC_ActTCDataTable tTC_ActTCDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class141(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tTC_ActTCDataTable_0 = (DataSetGES.tTC_ActTCDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.LabelReturnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tTC_ActTCDataTable_0.LabelReturnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.PowerSumColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tTC_ActTCDataTable_0.PowerSumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.VoltageLevelColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tTC_ActTCDataTable_0.VoltageLevelColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.CategoryColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tTC_ActTCDataTable_0.CategoryColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.PerformerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.tTC_ActTCDataTable_0.PerformerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.IsRegularColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tTC_ActTCDataTable_0.IsRegularColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.DateTemporaryColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tTC_ActTCDataTable_0.DateTemporaryColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.PowerCurrentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tTC_ActTCDataTable_0.PowerCurrentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tTC_ActTCDataTable_0.PowerAddColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tTC_ActTCDataTable_0.PowerAddColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Category
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tTC_ActTCDataTable_0.CategoryColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Category' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.CategoryColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateTemporary
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tTC_ActTCDataTable_0.DateTemporaryColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateTemporary' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.DateTemporaryColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tTC_ActTCDataTable_0.idColumn];
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegular
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tTC_ActTCDataTable_0.IsRegularColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IsRegular' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.IsRegularColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime LabelReturn
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tTC_ActTCDataTable_0.LabelReturnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'LabelReturn' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.LabelReturnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Performer
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tTC_ActTCDataTable_0.PerformerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Performer' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.PerformerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal PowerAdd
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.tTC_ActTCDataTable_0.PowerAddColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PowerAdd' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.PowerAddColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal PowerCurrent
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.tTC_ActTCDataTable_0.PowerCurrentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PowerCurrent' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.PowerCurrentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal PowerSum
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.tTC_ActTCDataTable_0.PowerSumColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PowerSum' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.PowerSumColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VoltageLevel
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tTC_ActTCDataTable_0.VoltageLevelColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'VoltageLevel' in table 'tTC_ActTC' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tTC_ActTCDataTable_0.VoltageLevelColumn] = value;
                }
            }
        }

        public class Class142 : DataRow
        {
            private DataSetGES.vTC_TUPointAttachDataTable vTC_TUPointAttachDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class142(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vTC_TUPointAttachDataTable_0 = (DataSetGES.vTC_TUPointAttachDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vTC_TUPointAttachDataTable_0.idTUColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.idTUColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.BusPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'BusPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_11(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.BusPointColumn] = string_0;
            }

            public string method_12()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.BusFullPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'BusFullPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_13(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.BusFullPointColumn] = string_0;
            }

            public int method_14()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.idCellPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idCellPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public void method_15(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.idCellPointColumn] = int_0;
            }

            public string method_16()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.CellPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CellPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_17(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.CellPointColumn] = string_0;
            }

            public string method_18()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.CellFullPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CellFullPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_19(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.CellFullPointColumn] = string_0;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.numColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'num' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public int method_20()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.idSubCPColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idSubCP' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public void method_21(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.idSubCPColumn] = int_0;
            }

            public string method_22()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.SubCPColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SubCP' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_23(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.SubCPColumn] = string_0;
            }

            public int method_24()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.idBusCPColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idBusCP' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public void method_25(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.idBusCPColumn] = int_0;
            }

            public string method_26()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.BusCPColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'BusCP' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_27(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.BusCPColumn] = string_0;
            }

            public int method_28()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.idCellCPColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idCellCP' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public void method_29(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.idCellCPColumn] = int_0;
            }

            public void method_3(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.numColumn] = int_0;
            }

            public string method_30()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.CellCPColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CellCP' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_31(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.CellCPColumn] = string_0;
            }

            public string method_32()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.AttachmentPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'AttachmentPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_33(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.AttachmentPointColumn] = string_0;
            }

            public string method_34()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.PowerSupplyColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'PowerSupply' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_35(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.PowerSupplyColumn] = string_0;
            }

            public int method_36()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.voltagelevelColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'voltagelevel' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public void method_37(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.voltagelevelColumn] = int_0;
            }

            public string method_38()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.voltagelevelnameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'voltagelevelname' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_39(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.voltagelevelnameColumn] = string_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.idSubPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idSubPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public decimal method_40()
            {
                decimal num;
                try
                {
                    num = (decimal) base[this.vTC_TUPointAttachDataTable_0.powersumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'powersum' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public void method_41(decimal decimal_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.powersumColumn] = decimal_0;
            }

            public string method_42()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.CategoryColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Category' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            public void method_43(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.CategoryColumn] = string_0;
            }

            public int method_44()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.TypeDocColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TypeDoc' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            public void method_45(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.TypeDocColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_46()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.numColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.vTC_TUPointAttachDataTable_0.numColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_48()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.idSubPointColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_49()
            {
                base[this.vTC_TUPointAttachDataTable_0.idSubPointColumn] = Convert.DBNull;
            }

            public void method_5(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.idSubPointColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_50()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.SubPointColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.vTC_TUPointAttachDataTable_0.SubPointColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_52()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.idBusPointColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.vTC_TUPointAttachDataTable_0.idBusPointColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_54()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.BusPointColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.vTC_TUPointAttachDataTable_0.BusPointColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.BusFullPointColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_57()
            {
                base[this.vTC_TUPointAttachDataTable_0.BusFullPointColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_58()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.idCellPointColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_59()
            {
                base[this.vTC_TUPointAttachDataTable_0.idCellPointColumn] = Convert.DBNull;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vTC_TUPointAttachDataTable_0.SubPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SubPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.CellPointColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_61()
            {
                base[this.vTC_TUPointAttachDataTable_0.CellPointColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_62()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.CellFullPointColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_63()
            {
                base[this.vTC_TUPointAttachDataTable_0.CellFullPointColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_64()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.idSubCPColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_65()
            {
                base[this.vTC_TUPointAttachDataTable_0.idSubCPColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_66()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.SubCPColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_67()
            {
                base[this.vTC_TUPointAttachDataTable_0.SubCPColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_68()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.idBusCPColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_69()
            {
                base[this.vTC_TUPointAttachDataTable_0.idBusCPColumn] = Convert.DBNull;
            }

            public void method_7(string string_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.SubPointColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_70()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.BusCPColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_71()
            {
                base[this.vTC_TUPointAttachDataTable_0.BusCPColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_72()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.idCellCPColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_73()
            {
                base[this.vTC_TUPointAttachDataTable_0.idCellCPColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_74()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.CellCPColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_75()
            {
                base[this.vTC_TUPointAttachDataTable_0.CellCPColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_76()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.AttachmentPointColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_77()
            {
                base[this.vTC_TUPointAttachDataTable_0.AttachmentPointColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_78()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.PowerSupplyColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_79()
            {
                base[this.vTC_TUPointAttachDataTable_0.PowerSupplyColumn] = Convert.DBNull;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vTC_TUPointAttachDataTable_0.idBusPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idBusPoint' in table 'vTC_TUPointAttach' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_80()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.voltagelevelColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_81()
            {
                base[this.vTC_TUPointAttachDataTable_0.voltagelevelColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_82()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.voltagelevelnameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_83()
            {
                base[this.vTC_TUPointAttachDataTable_0.voltagelevelnameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_84()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.powersumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_85()
            {
                base[this.vTC_TUPointAttachDataTable_0.powersumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_86()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.CategoryColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_87()
            {
                base[this.vTC_TUPointAttachDataTable_0.CategoryColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_88()
            {
                return base.IsNull(this.vTC_TUPointAttachDataTable_0.TypeDocColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_89()
            {
                base[this.vTC_TUPointAttachDataTable_0.TypeDocColumn] = Convert.DBNull;
            }

            public void method_9(int int_0)
            {
                base[this.vTC_TUPointAttachDataTable_0.idBusPointColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vTC_TUPointAttachDataTable_0.idColumn];
                }
                set
                {
                    base[this.vTC_TUPointAttachDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class143 : DataRow
        {
            private DataSetGES.vAbnDataTable vAbnDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class143(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vAbnDataTable_0 = (DataSetGES.vAbnDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vAbnDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.vAbnDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vAbnDataTable_0.ReasonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vAbnDataTable_0.ReasonColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vAbnDataTable_0.datechangeColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vAbnDataTable_0.datechangeColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vAbnDataTable_0.idReasonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vAbnDataTable_0.idReasonColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vAbnDataTable_0.CodeAbnStrColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vAbnDataTable_0.CodeAbnStrColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vAbnDataTable_0.TypeNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vAbnDataTable_0.TypeNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vAbnDataTable_0.TypeNameSocrColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vAbnDataTable_0.TypeNameSocrColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vAbnDataTable_0.WorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vAbnDataTable_0.WorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.vAbnDataTable_0.isActiveColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.vAbnDataTable_0.isActiveColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string CodeAbnStr
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vAbnDataTable_0.CodeAbnStrColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CodeAbnStr' in table 'vAbn' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vAbnDataTable_0.CodeAbnStrColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int CodeAbonent
            {
                get
                {
                    return (int) base[this.vAbnDataTable_0.CodeAbonentColumn];
                }
                set
                {
                    base[this.vAbnDataTable_0.CodeAbonentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime datechange
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.vAbnDataTable_0.datechangeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'datechange' in table 'vAbn' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.vAbnDataTable_0.datechangeColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.vAbnDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.vAbnDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idReason
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vAbnDataTable_0.idReasonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idReason' in table 'vAbn' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vAbnDataTable_0.idReasonColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorker
            {
                get
                {
                    return (int) base[this.vAbnDataTable_0.idWorkerColumn];
                }
                set
                {
                    base[this.vAbnDataTable_0.idWorkerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vAbnDataTable_0.idColumn];
                }
                set
                {
                    base[this.vAbnDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool isActive
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.vAbnDataTable_0.isActiveColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'isActive' in table 'vAbn' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.vAbnDataTable_0.isActiveColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vAbnDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vAbn' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vAbnDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Reason
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vAbnDataTable_0.ReasonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Reason' in table 'vAbn' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vAbnDataTable_0.ReasonColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeAbn
            {
                get
                {
                    return (int) base[this.vAbnDataTable_0.TypeAbnColumn];
                }
                set
                {
                    base[this.vAbnDataTable_0.TypeAbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vAbnDataTable_0.TypeNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeName' in table 'vAbn' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vAbnDataTable_0.TypeNameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeNameSocr
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vAbnDataTable_0.TypeNameSocrColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeNameSocr' in table 'vAbn' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vAbnDataTable_0.TypeNameSocrColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Worker
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vAbnDataTable_0.WorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Worker' in table 'vAbn' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vAbnDataTable_0.WorkerColumn] = value;
                }
            }
        }

        public class Class144 : DataRow
        {
            private DataSetGES.tTC_DocDataTable tTC_DocDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class144(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tTC_DocDataTable_0 = (DataSetGES.tTC_DocDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tTC_DocDataTable_0.numDocColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tTC_DocDataTable_0.numDocColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tTC_DocDataTable_0.dateDocColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tTC_DocDataTable_0.dateDocColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tTC_DocDataTable_0.BodyColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tTC_DocDataTable_0.BodyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tTC_DocDataTable_0.IdParentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tTC_DocDataTable_0.IdParentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.tTC_DocDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tTC_DocDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Body
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tTC_DocDataTable_0.BodyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Body' in table 'tTC_Doc' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tTC_DocDataTable_0.BodyColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tTC_DocDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tTC_Doc' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tTC_DocDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateDoc
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tTC_DocDataTable_0.dateDocColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'dateDoc' in table 'tTC_Doc' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tTC_DocDataTable_0.dateDocColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tTC_DocDataTable_0.IdParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'tTC_Doc' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tTC_DocDataTable_0.IdParentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tTC_DocDataTable_0.idColumn];
                }
                set
                {
                    base[this.tTC_DocDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string numDoc
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tTC_DocDataTable_0.numDocColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'numDoc' in table 'tTC_Doc' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tTC_DocDataTable_0.numDocColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeDoc
            {
                get
                {
                    return (int) base[this.tTC_DocDataTable_0.TypeDocColumn];
                }
                set
                {
                    base[this.tTC_DocDataTable_0.TypeDocColumn] = value;
                }
            }
        }

        public class Class145 : DataRow
        {
            private DataSetGES.vSchm_ObjListDataTable vSchm_ObjListDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class145(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vSchm_ObjListDataTable_0 = (DataSetGES.vSchm_ObjListDataTable) base.Table;
            }

            public string method_0()
            {
                string str;
                try
                {
                    str = (string) base[this.vSchm_ObjListDataTable_0.typecodeColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'typecode' in table 'vSchm_ObjList' is DBNull.", exception);
                }
                return str;
            }

            public void method_1(string string_0)
            {
                base[this.vSchm_ObjListDataTable_0.typecodeColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vSchm_ObjListDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vSchm_ObjListDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vSchm_ObjListDataTable_0.TypeCodeIdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vSchm_ObjListDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vSchm_ObjListDataTable_0.typecodeColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vSchm_ObjListDataTable_0.typecodeColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vSchm_ObjListDataTable_0.typeCodeSocrColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vSchm_ObjListDataTable_0.typeCodeSocrColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vSchm_ObjListDataTable_0.IdParentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vSchm_ObjListDataTable_0.IdParentColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vSchm_ObjListDataTable_0.typeCodeSocrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'typeCodeSocr' in table 'vSchm_ObjList' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vSchm_ObjListDataTable_0.OnOffColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.vSchm_ObjListDataTable_0.OnOffColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vSchm_ObjListDataTable_0.NamePColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vSchm_ObjListDataTable_0.NamePColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vSchm_ObjListDataTable_0.typeCodeSocrColumn] = string_0;
            }

            public bool method_4()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vSchm_ObjListDataTable_0.OnOffColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'OnOff' in table 'vSchm_ObjList' is DBNull.", exception);
                }
                return flag;
            }

            public void method_5(bool bool_0)
            {
                base[this.vSchm_ObjListDataTable_0.OnOffColumn] = bool_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.vSchm_ObjListDataTable_0.NamePColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameP' in table 'vSchm_ObjList' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.vSchm_ObjListDataTable_0.NamePColumn] = int_0;
            }

            public bool method_8()
            {
                return (bool) base[this.vSchm_ObjListDataTable_0.DeletedColumn];
            }

            public void method_9(bool bool_0)
            {
                base[this.vSchm_ObjListDataTable_0.DeletedColumn] = bool_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.vSchm_ObjListDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vSchm_ObjListDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vSchm_ObjListDataTable_0.IdParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'vSchm_ObjList' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vSchm_ObjListDataTable_0.IdParentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vSchm_ObjListDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vSchm_ObjList' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vSchm_ObjListDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vSchm_ObjListDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vSchm_ObjList' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vSchm_ObjListDataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class146 : DataRow
        {
            private DataSetGES.vSchm_TreeCellLineDataTable vSchm_TreeCellLineDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class146(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vSchm_TreeCellLineDataTable_0 = (DataSetGES.vSchm_TreeCellLineDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vSchm_TreeCellLineDataTable_0.ParentLinkColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vSchm_TreeCellLineDataTable_0.ParentLinkColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vSchm_TreeCellLineDataTable_0.TypeCodeIdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.vSchm_TreeCellLineDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vSchm_TreeCellLineDataTable_0.ParentKeyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vSchm_TreeCellLineDataTable_0.ParentKeyColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.vSchm_TreeCellLineDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vSchm_TreeCellLineDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vSchm_TreeCellLineDataTable_0.FullNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.vSchm_TreeCellLineDataTable_0.FullNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vSchm_TreeCellLineDataTable_0.FullNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FullName' in table 'vSchm_TreeCellLine' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vSchm_TreeCellLineDataTable_0.FullNameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.vSchm_TreeCellLineDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vSchm_TreeCellLineDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vSchm_TreeCellLineDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vSchm_TreeCellLine' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vSchm_TreeCellLineDataTable_0.NameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ParentKey
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vSchm_TreeCellLineDataTable_0.ParentKeyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'vSchm_TreeCellLine' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vSchm_TreeCellLineDataTable_0.ParentKeyColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vSchm_TreeCellLineDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vSchm_TreeCellLine' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vSchm_TreeCellLineDataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class147 : DataRow
        {
            private DataSetGES.tJ_BossUserGroupDataTable tJ_BossUserGroupDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class147(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_BossUserGroupDataTable_0 = (DataSetGES.tJ_BossUserGroupDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tJ_BossUserGroupDataTable_0.idParentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tJ_BossUserGroupDataTable_0.idParentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tJ_BossUserGroupDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tJ_BossUserGroupDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.tJ_BossUserGroupDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.tJ_BossUserGroupDataTable_0.DeletedColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_BossUserGroupDataTable_0.idParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idParent' in table 'tJ_BossUserGroup' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_BossUserGroupDataTable_0.idParentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_BossUserGroupDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_BossUserGroupDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_BossUserGroupDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tJ_BossUserGroup' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_BossUserGroupDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class148 : DataRow
        {
            private DataSetGES.vJ_BossUserDataTable vJ_BossUserDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class148(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_BossUserDataTable_0 = (DataSetGES.vJ_BossUserDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.FirstNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.vJ_BossUserDataTable_0.FirstNameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.ParentKeyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vJ_BossUserDataTable_0.ParentKeyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.ValueColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_BossUserDataTable_0.ValueColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.isGroupColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_BossUserDataTable_0.isGroupColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.FullFIOColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_BossUserDataTable_0.FullFIOColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.LastNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.vJ_BossUserDataTable_0.LastNameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.MiddleInitialColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_BossUserDataTable_0.MiddleInitialColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.FIOColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.vJ_BossUserDataTable_0.FIOColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_BossUserDataTable_0.idGroupColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.vJ_BossUserDataTable_0.idGroupColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string FIO
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BossUserDataTable_0.FIOColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.FIOColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string FirstName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BossUserDataTable_0.FirstNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FirstName' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.FirstNameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullFIO
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BossUserDataTable_0.FullFIOColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FullFIO' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.FullFIOColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int) base[this.vJ_BossUserDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.IdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idGroup
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_BossUserDataTable_0.idGroupColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idGroup' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.idGroupColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isGroup
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.vJ_BossUserDataTable_0.isGroupColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'isGroup' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.isGroupColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BossUserDataTable_0.LastNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'LastName' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.LastNameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MiddleInitial
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BossUserDataTable_0.MiddleInitialColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'MiddleInitial' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.MiddleInitialColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ParentKey
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_BossUserDataTable_0.ParentKeyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.ParentKeyColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Value
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.vJ_BossUserDataTable_0.ValueColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Value' in table 'vJ_BossUser' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_BossUserDataTable_0.ValueColumn] = value;
                }
            }
        }

        public class Class149 : DataRow
        {
            private DataSetGES.tJ_MemFilesDataTable tJ_MemFilesDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class149(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MemFilesDataTable_0 = (DataSetGES.tJ_MemFilesDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MemFilesDataTable_0.idDocumentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tJ_MemFilesDataTable_0.idDocumentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tJ_MemFilesDataTable_0.LastChangeColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tJ_MemFilesDataTable_0.LastChangeColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MemFilesDataTable_0.TypeDocColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tJ_MemFilesDataTable_0.TypeDocColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MemFilesDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tJ_MemFilesDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tJ_MemFilesDataTable_0.SizeColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tJ_MemFilesDataTable_0.SizeColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tJ_MemFilesDataTable_0.FileColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tJ_MemFilesDataTable_0.FileColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.tJ_MemFilesDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] File
            {
                get
                {
                    byte[] buffer;
                    try
                    {
                        buffer = (byte[]) base[this.tJ_MemFilesDataTable_0.FileColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'File' in table 'tJ_MemFiles' is DBNull.", exception);
                    }
                    return buffer;
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.FileColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idDocument
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemFilesDataTable_0.idDocumentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idDocument' in table 'tJ_MemFiles' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.idDocumentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MemFilesDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime LastChange
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tJ_MemFilesDataTable_0.LastChangeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'LastChange' in table 'tJ_MemFiles' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.LastChangeColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemFilesDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tJ_MemFiles' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Size
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.tJ_MemFilesDataTable_0.SizeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Size' in table 'tJ_MemFiles' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.SizeColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeDoc
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemFilesDataTable_0.TypeDocColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeDoc' in table 'tJ_MemFiles' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemFilesDataTable_0.TypeDocColumn] = value;
                }
            }
        }

        public class Class150 : DataRow
        {
            private DataSetGES.tJ_MemorandumDataTable tJ_MemorandumDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class150(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MemorandumDataTable_0 = (DataSetGES.tJ_MemorandumDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.idTehConnectColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tJ_MemorandumDataTable_0.idTehConnectColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.StatusOrderColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tJ_MemorandumDataTable_0.StatusOrderColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.Body_CColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tJ_MemorandumDataTable_0.Body_CColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.SubjectColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tJ_MemorandumDataTable_0.SubjectColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.RespDateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.tJ_MemorandumDataTable_0.RespDateColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.SignDateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.tJ_MemorandumDataTable_0.SignDateColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.idWorkerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.RgNumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tJ_MemorandumDataTable_0.RgNumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.RespNumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.tJ_MemorandumDataTable_0.RespNumColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.CorrNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tJ_MemorandumDataTable_0.CorrNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.ctbDateCreateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_27()
            {
                base[this.tJ_MemorandumDataTable_0.ctbDateCreateColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.DeletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.tJ_MemorandumDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tJ_MemorandumDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.UniversalIDColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tJ_MemorandumDataTable_0.UniversalIDColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.ctb_InheritedIDColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tJ_MemorandumDataTable_0.ctb_InheritedIDColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.tJ_MemorandumDataTable_0.StatusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tJ_MemorandumDataTable_0.StatusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Body_C
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemorandumDataTable_0.Body_CColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Body_C' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.Body_CColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string CorrName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemorandumDataTable_0.CorrNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CorrName' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.CorrNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ctb_InheritedID
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemorandumDataTable_0.ctb_InheritedIDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ctb_InheritedID' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.ctb_InheritedIDColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime ctbDateCreate
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tJ_MemorandumDataTable_0.ctbDateCreateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ctbDateCreate' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.ctbDateCreateColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tJ_MemorandumDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTehConnect
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemorandumDataTable_0.idTehConnectColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idTehConnect' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.idTehConnectColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemorandumDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.idWorkerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MemorandumDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime RespDate
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tJ_MemorandumDataTable_0.RespDateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'RespDate' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.RespDateColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RespNum
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemorandumDataTable_0.RespNumColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'RespNum' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.RespNumColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string RgNum
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemorandumDataTable_0.RgNumColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'RgNum' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.RgNumColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime SignDate
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tJ_MemorandumDataTable_0.SignDateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SignDate' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.SignDateColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Status
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemorandumDataTable_0.StatusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Status' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.StatusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StatusOrder
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemorandumDataTable_0.StatusOrderColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'StatusOrder' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.StatusOrderColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Subject
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemorandumDataTable_0.SubjectColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Subject' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.SubjectColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string UniversalID
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemorandumDataTable_0.UniversalIDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'UniversalID' in table 'tJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemorandumDataTable_0.UniversalIDColumn] = value;
                }
            }
        }

        public class Class151 : DataRow
        {
            private DataSetGES.vJ_MemorandumDataTable vJ_MemorandumDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class151(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MemorandumDataTable_0 = (DataSetGES.vJ_MemorandumDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MemorandumDataTable_0.idTehConnectColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idTehConnect' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MemorandumDataTable_0.idTehConnectColumn] = int_0;
            }

            public DateTime method_10()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_MemorandumDataTable_0.RespDateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'RespDate' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return time;
            }

            public void method_11(DateTime dateTime_0)
            {
                base[this.vJ_MemorandumDataTable_0.RespDateColumn] = dateTime_0;
            }

            public DateTime method_12()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_MemorandumDataTable_0.SignDateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SignDate' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return time;
            }

            public void method_13(DateTime dateTime_0)
            {
                base[this.vJ_MemorandumDataTable_0.SignDateColumn] = dateTime_0;
            }

            public string method_14()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemorandumDataTable_0.RespNumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'RespNum' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return str;
            }

            public void method_15(string string_0)
            {
                base[this.vJ_MemorandumDataTable_0.RespNumColumn] = string_0;
            }

            public string method_16()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemorandumDataTable_0.CorrNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CorrName' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return str;
            }

            public void method_17(string string_0)
            {
                base[this.vJ_MemorandumDataTable_0.CorrNameColumn] = string_0;
            }

            public DateTime method_18()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_MemorandumDataTable_0.ctbDateCreateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'ctbDateCreate' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return time;
            }

            public void method_19(DateTime dateTime_0)
            {
                base[this.vJ_MemorandumDataTable_0.ctbDateCreateColumn] = dateTime_0;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemorandumDataTable_0.UniversalIDColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'UniversalID' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return str;
            }

            public bool method_20()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_MemorandumDataTable_0.DeletedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Deleted' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return flag;
            }

            public void method_21(bool bool_0)
            {
                base[this.vJ_MemorandumDataTable_0.DeletedColumn] = bool_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.idTehConnectColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vJ_MemorandumDataTable_0.idTehConnectColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.idWorkerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_25()
            {
                base[this.vJ_MemorandumDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.UniversalIDColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.vJ_MemorandumDataTable_0.UniversalIDColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.ctb_InheritedIDColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.vJ_MemorandumDataTable_0.ctb_InheritedIDColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_MemorandumDataTable_0.UniversalIDColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.StatusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_31()
            {
                base[this.vJ_MemorandumDataTable_0.StatusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.StatusOrderColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_33()
            {
                base[this.vJ_MemorandumDataTable_0.StatusOrderColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.Body_CColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_35()
            {
                base[this.vJ_MemorandumDataTable_0.Body_CColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.SubjectColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.vJ_MemorandumDataTable_0.SubjectColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.RespDateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_39()
            {
                base[this.vJ_MemorandumDataTable_0.RespDateColumn] = Convert.DBNull;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemorandumDataTable_0.ctb_InheritedIDColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'ctb_InheritedID' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_40()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.SignDateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.vJ_MemorandumDataTable_0.SignDateColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_42()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.RgNumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_43()
            {
                base[this.vJ_MemorandumDataTable_0.RgNumColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_44()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.RespNumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.vJ_MemorandumDataTable_0.RespNumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_46()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.CorrNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.vJ_MemorandumDataTable_0.CorrNameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_48()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.ctbDateCreateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_49()
            {
                base[this.vJ_MemorandumDataTable_0.ctbDateCreateColumn] = Convert.DBNull;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_MemorandumDataTable_0.ctb_InheritedIDColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_50()
            {
                return base.IsNull(this.vJ_MemorandumDataTable_0.DeletedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.vJ_MemorandumDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemorandumDataTable_0.StatusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Status' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_MemorandumDataTable_0.StatusColumn] = string_0;
            }

            public string method_8()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemorandumDataTable_0.StatusOrderColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'StatusOrder' in table 'vJ_Memorandum' is DBNull.", exception);
                }
                return str;
            }

            public void method_9(string string_0)
            {
                base[this.vJ_MemorandumDataTable_0.StatusOrderColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Body_C
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MemorandumDataTable_0.Body_CColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Body_C' in table 'vJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MemorandumDataTable_0.Body_CColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MemorandumDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'vJ_Memorandum' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MemorandumDataTable_0.idWorkerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MemorandumDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MemorandumDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RgNum
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MemorandumDataTable_0.RgNumColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'RgNum' in table 'vJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MemorandumDataTable_0.RgNumColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Subject
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MemorandumDataTable_0.SubjectColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Subject' in table 'vJ_Memorandum' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MemorandumDataTable_0.SubjectColumn] = value;
                }
            }
        }

        public class Class152 : DataRow
        {
            private DataSetGES.tJ_MemWorkerDataTable tJ_MemWorkerDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class152(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MemWorkerDataTable_0 = (DataSetGES.tJ_MemWorkerDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MemWorkerDataTable_0.typeWorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tJ_MemWorkerDataTable_0.typeWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MemWorkerDataTable_0.idWorkerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tJ_MemWorkerDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MemWorkerDataTable_0.DeletedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tJ_MemWorkerDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tJ_MemWorkerDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_MemWorker' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tJ_MemWorkerDataTable_0.DeletedColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMemorandum
            {
                get
                {
                    return (int) base[this.tJ_MemWorkerDataTable_0.idMemorandumColumn];
                }
                set
                {
                    base[this.tJ_MemWorkerDataTable_0.idMemorandumColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemWorkerDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tJ_MemWorker' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemWorkerDataTable_0.idWorkerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MemWorkerDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MemWorkerDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int typeWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemWorkerDataTable_0.typeWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'typeWorker' in table 'tJ_MemWorker' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemWorkerDataTable_0.typeWorkerColumn] = value;
                }
            }
        }

        public class Class153 : DataRow
        {
            private DataSetGES.vJ_WorkerDataTable vJ_WorkerDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class153(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_WorkerDataTable_0 = (DataSetGES.vJ_WorkerDataTable) base.Table;
            }

            public string method_0()
            {
                return (string) base[this.vJ_WorkerDataTable_0.FColumn];
            }

            public void method_1(string string_0)
            {
                base[this.vJ_WorkerDataTable_0.FColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vJ_WorkerDataTable_0.IColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vJ_WorkerDataTable_0.IColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_WorkerDataTable_0.OColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_WorkerDataTable_0.OColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_WorkerDataTable_0.FIOColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vJ_WorkerDataTable_0.FIOColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vJ_WorkerDataTable_0.DateBeginColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_WorkerDataTable_0.DateBeginColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_WorkerDataTable_0.DateEndColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.vJ_WorkerDataTable_0.DateEndColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_WorkerDataTable_0.IColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'I' in table 'vJ_Worker' is DBNull.", exception);
                }
                return str;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_WorkerDataTable_0.IColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_WorkerDataTable_0.OColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'O' in table 'vJ_Worker' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_WorkerDataTable_0.OColumn] = string_0;
            }

            public DateTime method_6()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_WorkerDataTable_0.DateBeginColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateBegin' in table 'vJ_Worker' is DBNull.", exception);
                }
                return time;
            }

            public void method_7(DateTime dateTime_0)
            {
                base[this.vJ_WorkerDataTable_0.DateBeginColumn] = dateTime_0;
            }

            public DateTime method_8()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_WorkerDataTable_0.DateEndColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateEnd' in table 'vJ_Worker' is DBNull.", exception);
                }
                return time;
            }

            public void method_9(DateTime dateTime_0)
            {
                base[this.vJ_WorkerDataTable_0.DateEndColumn] = dateTime_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_WorkerDataTable_0.FIOColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_Worker' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_WorkerDataTable_0.FIOColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.vJ_WorkerDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vJ_WorkerDataTable_0.IdColumn] = value;
                }
            }
        }

        public class Class154 : DataRow
        {
            private DataSetGES.tJ_BossUserDataTable tJ_BossUserDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class154(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_BossUserDataTable_0 = (DataSetGES.tJ_BossUserDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.idWorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tJ_BossUserDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.MailColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tJ_BossUserDataTable_0.MailColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.PasswordColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.tJ_BossUserDataTable_0.PasswordColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.BossUNIDColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tJ_BossUserDataTable_0.BossUNIDColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.idGroupColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.tJ_BossUserDataTable_0.idGroupColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.LastNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tJ_BossUserDataTable_0.LastNameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.FirstNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tJ_BossUserDataTable_0.FirstNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tJ_BossUserDataTable_0.MiddleInitialColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tJ_BossUserDataTable_0.MiddleInitialColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BossUNID
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_BossUserDataTable_0.BossUNIDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'BossUNID' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.BossUNIDColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.tJ_BossUserDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_BossUserDataTable_0.FirstNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FirstName' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.FirstNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idGroup
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_BossUserDataTable_0.idGroupColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idGroup' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.idGroupColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_BossUserDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.idWorkerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_BossUserDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string LastName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_BossUserDataTable_0.LastNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'LastName' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.LastNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Mail
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_BossUserDataTable_0.MailColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Mail' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.MailColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string MiddleInitial
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_BossUserDataTable_0.MiddleInitialColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'MiddleInitial' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.MiddleInitialColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Password
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_BossUserDataTable_0.PasswordColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Password' in table 'tJ_BossUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_BossUserDataTable_0.PasswordColumn] = value;
                }
            }
        }

        public class Class155 : DataRow
        {
            private DataSetGES.tJ_MemCommissionDataTable tJ_MemCommissionDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class155(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MemCommissionDataTable_0 = (DataSetGES.tJ_MemCommissionDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MemCommissionDataTable_0.UNIDColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tJ_MemCommissionDataTable_0.UNIDColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tJ_MemCommissionDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tJ_MemCommissionDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tJ_MemCommissionDataTable_0.PerformerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tJ_MemCommissionDataTable_0.PerformerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MemCommissionDataTable_0.SubjectColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tJ_MemCommissionDataTable_0.SubjectColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MemCommissionDataTable_0.BodyColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tJ_MemCommissionDataTable_0.BodyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tJ_MemCommissionDataTable_0.DateFactColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tJ_MemCommissionDataTable_0.DateFactColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tJ_MemCommissionDataTable_0.StatusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tJ_MemCommissionDataTable_0.StatusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Body
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemCommissionDataTable_0.BodyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Body' in table 'tJ_MemCommission' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.BodyColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemCommissionDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_MemCommission' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateFact
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tJ_MemCommissionDataTable_0.DateFactColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateFact' in table 'tJ_MemCommission' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.DateFactColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.tJ_MemCommissionDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMemorandum
            {
                get
                {
                    return (int) base[this.tJ_MemCommissionDataTable_0.idMemorandumColumn];
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.idMemorandumColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MemCommissionDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Performer
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemCommissionDataTable_0.PerformerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Performer' in table 'tJ_MemCommission' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.PerformerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Status
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MemCommissionDataTable_0.StatusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Status' in table 'tJ_MemCommission' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.StatusColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Subject
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemCommissionDataTable_0.SubjectColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Subject' in table 'tJ_MemCommission' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.SubjectColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UNID
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MemCommissionDataTable_0.UNIDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'UNID' in table 'tJ_MemCommission' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MemCommissionDataTable_0.UNIDColumn] = value;
                }
            }
        }

        public class Class156 : DataRow
        {
            private DataSetGES.vJ_MemCommissionDataTable vJ_MemCommissionDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class156(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MemCommissionDataTable_0 = (DataSetGES.vJ_MemCommissionDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MemCommissionDataTable_0.idMemorandumColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MemCommissionDataTable_0.idMemorandumColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MemCommissionDataTable_0.PerformerColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Performer' in table 'vJ_MemCommission' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.vJ_MemCommissionDataTable_0.PerformerColumn] = int_0;
            }

            public bool method_12()
            {
                return (bool) base[this.vJ_MemCommissionDataTable_0.DeletedColumn];
            }

            public void method_13(bool bool_0)
            {
                base[this.vJ_MemCommissionDataTable_0.DeletedColumn] = bool_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MemCommissionDataTable_0.UNIDColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vJ_MemCommissionDataTable_0.UNIDColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MemCommissionDataTable_0.DateFactColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_MemCommissionDataTable_0.DateFactColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_MemCommissionDataTable_0.StatusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_MemCommissionDataTable_0.StatusColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemCommissionDataTable_0.UNIDColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'UNID' in table 'vJ_MemCommission' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_MemCommissionDataTable_0.SubjectColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_MemCommissionDataTable_0.SubjectColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.vJ_MemCommissionDataTable_0.BodyColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vJ_MemCommissionDataTable_0.BodyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.vJ_MemCommissionDataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.vJ_MemCommissionDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.vJ_MemCommissionDataTable_0.PerformerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_27()
            {
                base[this.vJ_MemCommissionDataTable_0.PerformerColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_MemCommissionDataTable_0.UNIDColumn] = string_0;
            }

            public DateTime method_4()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_MemCommissionDataTable_0.DateFactColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateFact' in table 'vJ_MemCommission' is DBNull.", exception);
                }
                return time;
            }

            public void method_5(DateTime dateTime_0)
            {
                base[this.vJ_MemCommissionDataTable_0.DateFactColumn] = dateTime_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemCommissionDataTable_0.StatusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Status' in table 'vJ_MemCommission' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_MemCommissionDataTable_0.StatusColumn] = string_0;
            }

            public string method_8()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MemCommissionDataTable_0.BodyColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Body' in table 'vJ_MemCommission' is DBNull.", exception);
                }
                return str;
            }

            public void method_9(string string_0)
            {
                base[this.vJ_MemCommissionDataTable_0.BodyColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MemCommissionDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MemCommission' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MemCommissionDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MemCommissionDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MemCommissionDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Subject
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MemCommissionDataTable_0.SubjectColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Subject' in table 'vJ_MemCommission' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MemCommissionDataTable_0.SubjectColumn] = value;
                }
            }
        }

        //tUserDataTable
        public class Class44 : DataRow
        {
            private DataSetGES.tUserDataTable tUserDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class44(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tUserDataTable_0 = (DataSetGES.tUserDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tUserDataTable_0.IDUserColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tUserDataTable_0.IDUserColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tUserDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tUserDataTable_0.NameColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tUserDataTable_0.IdWorkerColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdWorker' in table 'tUser' is DBNull.", exception);
                }
                return num;
            }

            public void method_3(int int_0)
            {
                base[this.tUserDataTable_0.IdWorkerColumn] = int_0;
            }

            public string method_4()
            {
                return (string) base[this.tUserDataTable_0.LoginColumn];
            }

            public void method_5(string string_0)
            {
                base[this.tUserDataTable_0.LoginColumn] = string_0;
            }

            public bool method_6()
            {
                return (bool) base[this.tUserDataTable_0.DeletedColumn];
            }

            public void method_7(bool bool_0)
            {
                base[this.tUserDataTable_0.DeletedColumn] = bool_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tUserDataTable_0.IdWorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tUserDataTable_0.IdWorkerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tUserDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tUser' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tUserDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class45 : DataRow
        {
            private DataSetGES.tJ_RequestDocDataTable tJ_RequestDocDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class45(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_RequestDocDataTable_0 = (DataSetGES.tJ_RequestDocDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_RequestDocDataTable_0.idRequestColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_RequestDocDataTable_0.idRequestColumn] = int_0;
            }

            public byte[] method_2()
            {
                return (byte[]) base[this.tJ_RequestDocDataTable_0.DocumentColumn];
            }

            public void method_3(byte[] byte_0)
            {
                base[this.tJ_RequestDocDataTable_0.DocumentColumn] = byte_0;
            }

            public string method_4()
            {
                return (string) base[this.tJ_RequestDocDataTable_0.FileNameColumn];
            }

            public void method_5(string string_0)
            {
                base[this.tJ_RequestDocDataTable_0.FileNameColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_RequestDocDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_RequestDocDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class46 : DataRow
        {
            private DataSetGES.tJ_RequestDataTable tJ_RequestDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class46(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_RequestDataTable_0 = (DataSetGES.tJ_RequestDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_RequestDataTable_0.idUserTaskColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_RequestDataTable_0.idUserTaskColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RequestDataTable_0.idUserWhomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idUserWhom' in table 'tJ_Request' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.tJ_RequestDataTable_0.idUserWhomColumn] = int_0;
            }

            public int method_12()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RequestDataTable_0.TypeTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TypeTask' in table 'tJ_Request' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(int int_0)
            {
                base[this.tJ_RequestDataTable_0.TypeTaskColumn] = int_0;
            }

            public string method_14()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RequestDataTable_0.StatusTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'StatusTask' in table 'tJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_15(string string_0)
            {
                base[this.tJ_RequestDataTable_0.StatusTaskColumn] = string_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RequestDataTable_0.idUserPerfomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idUserPerfom' in table 'tJ_Request' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.tJ_RequestDataTable_0.idUserPerfomColumn] = int_0;
            }

            public DateTime method_18()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.tJ_RequestDataTable_0.DatePerfomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DatePerfom' in table 'tJ_Request' is DBNull.", exception);
                }
                return time;
            }

            public void method_19(DateTime dateTime_0)
            {
                base[this.tJ_RequestDataTable_0.DatePerfomColumn] = dateTime_0;
            }

            public DateTime method_2()
            {
                return (DateTime) base[this.tJ_RequestDataTable_0.DateTaskColumn];
            }

            public DateTime method_20()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.tJ_RequestDataTable_0.DateSendMailColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateSendMail' in table 'tJ_Request' is DBNull.", exception);
                }
                return time;
            }

            public void method_21(DateTime dateTime_0)
            {
                base[this.tJ_RequestDataTable_0.DateSendMailColumn] = dateTime_0;
            }

            public string method_22()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RequestDataTable_0.FIOSendMailColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'FIOSendMail' in table 'tJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_23(string string_0)
            {
                base[this.tJ_RequestDataTable_0.FIOSendMailColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.ModulColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tJ_RequestDataTable_0.ModulColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.TextTaskColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_27()
            {
                base[this.tJ_RequestDataTable_0.TextTaskColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.TextTaskBinColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.tJ_RequestDataTable_0.TextTaskBinColumn] = Convert.DBNull;
            }

            public void method_3(DateTime dateTime_0)
            {
                base[this.tJ_RequestDataTable_0.DateTaskColumn] = dateTime_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.idUserWhomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.tJ_RequestDataTable_0.idUserWhomColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_32()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.TypeTaskColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_33()
            {
                base[this.tJ_RequestDataTable_0.TypeTaskColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_34()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.StatusTaskColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_35()
            {
                base[this.tJ_RequestDataTable_0.StatusTaskColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.idUserPerfomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.tJ_RequestDataTable_0.idUserPerfomColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.DatePerfomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.tJ_RequestDataTable_0.DatePerfomColumn] = Convert.DBNull;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RequestDataTable_0.ModulColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Modul' in table 'tJ_Request' is DBNull.", exception);
                }
                return num;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_40()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.tJ_RequestDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_42()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.DateSendMailColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.tJ_RequestDataTable_0.DateSendMailColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_44()
            {
                return base.IsNull(this.tJ_RequestDataTable_0.FIOSendMailColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.tJ_RequestDataTable_0.FIOSendMailColumn] = Convert.DBNull;
            }

            public void method_5(int int_0)
            {
                base[this.tJ_RequestDataTable_0.ModulColumn] = int_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RequestDataTable_0.TextTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TextTask' in table 'tJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.tJ_RequestDataTable_0.TextTaskColumn] = string_0;
            }

            public byte[] method_8()
            {
                byte[] buffer;
                try
                {
                    buffer = (byte[]) base[this.tJ_RequestDataTable_0.TextTaskBinColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TextTaskBin' in table 'tJ_Request' is DBNull.", exception);
                }
                return buffer;
            }

            public void method_9(byte[] byte_0)
            {
                base[this.tJ_RequestDataTable_0.TextTaskBinColumn] = byte_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_RequestDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_Request' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_RequestDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_RequestDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_RequestDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class47 : DataRow
        {
            private DataSetGES.vJ_RequestDataTable vJ_RequestDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class47(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_RequestDataTable_0 = (DataSetGES.vJ_RequestDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_RequestDataTable_0.idUserTaskColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_RequestDataTable_0.idUserTaskColumn] = int_0;
            }

            public byte[] method_10()
            {
                byte[] buffer;
                try
                {
                    buffer = (byte[]) base[this.vJ_RequestDataTable_0.TextTaskBinColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TextTaskBin' in table 'vJ_Request' is DBNull.", exception);
                }
                return buffer;
            }

            public void method_11(byte[] byte_0)
            {
                base[this.vJ_RequestDataTable_0.TextTaskBinColumn] = byte_0;
            }

            public int method_12()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestDataTable_0.idUserWhomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idUserWhom' in table 'vJ_Request' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(int int_0)
            {
                base[this.vJ_RequestDataTable_0.idUserWhomColumn] = int_0;
            }

            public string method_14()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestDataTable_0.NameUserWhomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameUserWhom' in table 'vJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_15(string string_0)
            {
                base[this.vJ_RequestDataTable_0.NameUserWhomColumn] = string_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestDataTable_0.TypeTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TypeTask' in table 'vJ_Request' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.vJ_RequestDataTable_0.TypeTaskColumn] = int_0;
            }

            public string method_18()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestDataTable_0.NameTypeTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTypeTask' in table 'vJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_19(string string_0)
            {
                base[this.vJ_RequestDataTable_0.NameTypeTaskColumn] = string_0;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestDataTable_0.nameUserTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'nameUserTask' in table 'vJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public int method_20()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestDataTable_0.idUserPerfomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idUserPerfom' in table 'vJ_Request' is DBNull.", exception);
                }
                return num;
            }

            public void method_21(int int_0)
            {
                base[this.vJ_RequestDataTable_0.idUserPerfomColumn] = int_0;
            }

            public string method_22()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestDataTable_0.nameUserPerfomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'nameUserPerfom' in table 'vJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_23(string string_0)
            {
                base[this.vJ_RequestDataTable_0.nameUserPerfomColumn] = string_0;
            }

            public DateTime method_24()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestDataTable_0.DatePerfomColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DatePerfom' in table 'vJ_Request' is DBNull.", exception);
                }
                return time;
            }

            public void method_25(DateTime dateTime_0)
            {
                base[this.vJ_RequestDataTable_0.DatePerfomColumn] = dateTime_0;
            }

            public int method_26()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestDataTable_0.StatusTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'StatusTask' in table 'vJ_Request' is DBNull.", exception);
                }
                return num;
            }

            public void method_27(int int_0)
            {
                base[this.vJ_RequestDataTable_0.StatusTaskColumn] = int_0;
            }

            public string method_28()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestDataTable_0.nameStatusTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'nameStatusTask' in table 'vJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_29(string string_0)
            {
                base[this.vJ_RequestDataTable_0.nameStatusTaskColumn] = string_0;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_RequestDataTable_0.nameUserTaskColumn] = string_0;
            }

            public string method_30()
            {
                return (string) base[this.vJ_RequestDataTable_0.nameModulColumn];
            }

            public void method_31(string string_0)
            {
                base[this.vJ_RequestDataTable_0.nameModulColumn] = string_0;
            }

            public DateTime method_32()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestDataTable_0.DateSendMailColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateSendMail' in table 'vJ_Request' is DBNull.", exception);
                }
                return time;
            }

            public void method_33(DateTime dateTime_0)
            {
                base[this.vJ_RequestDataTable_0.DateSendMailColumn] = dateTime_0;
            }

            public string method_34()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestDataTable_0.FIOSendMailColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'FIOSendMail' in table 'vJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_35(string string_0)
            {
                base[this.vJ_RequestDataTable_0.FIOSendMailColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.nameUserTaskColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.vJ_RequestDataTable_0.nameUserTaskColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.ModulColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.vJ_RequestDataTable_0.ModulColumn] = Convert.DBNull;
            }

            public DateTime method_4()
            {
                return (DateTime) base[this.vJ_RequestDataTable_0.DateTaskColumn];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_40()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.TextTaskColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.vJ_RequestDataTable_0.TextTaskColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_42()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.TextTaskBinColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.vJ_RequestDataTable_0.TextTaskBinColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_44()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.idUserWhomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.vJ_RequestDataTable_0.idUserWhomColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_46()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.NameUserWhomColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.vJ_RequestDataTable_0.NameUserWhomColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_48()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.TypeTaskColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_49()
            {
                base[this.vJ_RequestDataTable_0.TypeTaskColumn] = Convert.DBNull;
            }

            public void method_5(DateTime dateTime_0)
            {
                base[this.vJ_RequestDataTable_0.DateTaskColumn] = dateTime_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_50()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.NameTypeTaskColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.vJ_RequestDataTable_0.NameTypeTaskColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_52()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.idUserPerfomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.vJ_RequestDataTable_0.idUserPerfomColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_54()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.nameUserPerfomColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.vJ_RequestDataTable_0.nameUserPerfomColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.DatePerfomColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_57()
            {
                base[this.vJ_RequestDataTable_0.DatePerfomColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_59()
            {
                base[this.vJ_RequestDataTable_0.CommentColumn] = Convert.DBNull;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestDataTable_0.ModulColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Modul' in table 'vJ_Request' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.StatusTaskColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_61()
            {
                base[this.vJ_RequestDataTable_0.StatusTaskColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_62()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.nameStatusTaskColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_63()
            {
                base[this.vJ_RequestDataTable_0.nameStatusTaskColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_64()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.DateSendMailColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_65()
            {
                base[this.vJ_RequestDataTable_0.DateSendMailColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_66()
            {
                return base.IsNull(this.vJ_RequestDataTable_0.FIOSendMailColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_67()
            {
                base[this.vJ_RequestDataTable_0.FIOSendMailColumn] = Convert.DBNull;
            }

            public void method_7(int int_0)
            {
                base[this.vJ_RequestDataTable_0.ModulColumn] = int_0;
            }

            public string method_8()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestDataTable_0.TextTaskColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TextTask' in table 'vJ_Request' is DBNull.", exception);
                }
                return str;
            }

            public void method_9(string string_0)
            {
                base[this.vJ_RequestDataTable_0.TextTaskColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_Request' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_RequestDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_RequestDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class48 : DataRow
        {
            private DataSetGES.vJ_RequestForRepairDataTable vJ_RequestForRepairDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class48(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_RequestForRepairDataTable_0 = (DataSetGES.vJ_RequestForRepairDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_RequestForRepairDataTable_0.numColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.numColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDataTable_0.SRColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SR' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public void method_11(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.SRColumn] = string_0;
            }

            public string method_12()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDataTable_0.SRSocrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SRSocr' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public void method_13(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.SRSocrColumn] = string_0;
            }

            public string method_14()
            {
                return (string) base[this.vJ_RequestForRepairDataTable_0.schmObjColumn];
            }

            public void method_15(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.schmObjColumn] = string_0;
            }

            public string method_16()
            {
                return (string) base[this.vJ_RequestForRepairDataTable_0.PurposeColumn];
            }

            public void method_17(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.PurposeColumn] = string_0;
            }

            public bool method_18()
            {
                return (bool) base[this.vJ_RequestForRepairDataTable_0.IsPlannedColumn];
            }

            public void method_19(bool bool_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.IsPlannedColumn] = bool_0;
            }

            public DateTime method_2()
            {
                return (DateTime) base[this.vJ_RequestForRepairDataTable_0.dateCreateColumn];
            }

            public DateTime method_20()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestForRepairDataTable_0.DateTripBegColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateTripBeg' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return time;
            }

            public void method_21(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.DateTripBegColumn] = dateTime_0;
            }

            public DateTime method_22()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestForRepairDataTable_0.DateTripEndColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateTripEnd' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return time;
            }

            public void method_23(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.DateTripEndColumn] = dateTime_0;
            }

            public string method_24()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDataTable_0.AgreeWithColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'AgreeWith' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public void method_25(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.AgreeWithColumn] = string_0;
            }

            public bool method_26()
            {
                return (bool) base[this.vJ_RequestForRepairDataTable_0.AgreedColumn];
            }

            public void method_27(bool bool_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.AgreedColumn] = bool_0;
            }

            public DateTime method_28()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestForRepairDataTable_0.DateAgreedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateAgreed' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return time;
            }

            public void method_29(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.DateAgreedColumn] = dateTime_0;
            }

            public void method_3(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.dateCreateColumn] = dateTime_0;
            }

            public int method_30()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestForRepairDataTable_0.WorkerAgreedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'WorkerAgreed' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return num;
            }

            public void method_31(int int_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.WorkerAgreedColumn] = int_0;
            }

            public int method_32()
            {
                return (int) base[this.vJ_RequestForRepairDataTable_0.iddivisionColumn];
            }

            public void method_33(int int_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.iddivisionColumn] = int_0;
            }

            public string method_34()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDataTable_0.divisionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'division' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public void method_35(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.divisionColumn] = string_0;
            }

            public int method_36()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestForRepairDataTable_0.idUserCreateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idUserCreate' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return num;
            }

            public void method_37(int int_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.idUserCreateColumn] = int_0;
            }

            public string method_38()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDataTable_0.UserNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'UserName' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public void method_39(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.UserNameColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDataTable_0.workerCreateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'workerCreate' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public bool method_40()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RequestForRepairDataTable_0.deletedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'deleted' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return flag;
            }

            public void method_41(bool bool_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.deletedColumn] = bool_0;
            }

            public bool method_42()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RequestForRepairDataTable_0.isSendColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'isSend' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return flag;
            }

            public void method_43(bool bool_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.isSendColumn] = bool_0;
            }

            public string method_44()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDataTable_0.colorStatusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'colorStatus' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public void method_45(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.colorStatusColumn] = string_0;
            }

            public DateTime method_46()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestForRepairDataTable_0.DateFactEndColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateFactEnd' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return time;
            }

            public void method_47(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.DateFactEndColumn] = dateTime_0;
            }

            public bool method_48()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RequestForRepairDataTable_0.SendSiteColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SendSite' in table 'vJ_RequestForRepair' is DBNull.", exception);
                }
                return flag;
            }

            public void method_49(bool bool_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.SendSiteColumn] = bool_0;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.workerCreateColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_50()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.idWorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.vJ_RequestForRepairDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_52()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.workerCreateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.vJ_RequestForRepairDataTable_0.workerCreateColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_54()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.SRColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_55()
            {
                base[this.vJ_RequestForRepairDataTable_0.SRColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.SRSocrColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_57()
            {
                base[this.vJ_RequestForRepairDataTable_0.SRSocrColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.DateTripBegColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_59()
            {
                base[this.vJ_RequestForRepairDataTable_0.DateTripBegColumn] = Convert.DBNull;
            }

            public string method_6()
            {
                return (string) base[this.vJ_RequestForRepairDataTable_0.reguestFiledColumn];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.DateTripEndColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_61()
            {
                base[this.vJ_RequestForRepairDataTable_0.DateTripEndColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_62()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.AgreeWithColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_63()
            {
                base[this.vJ_RequestForRepairDataTable_0.AgreeWithColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_64()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_65()
            {
                base[this.vJ_RequestForRepairDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_66()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.AddressColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_67()
            {
                base[this.vJ_RequestForRepairDataTable_0.AddressColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_68()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.DateAgreedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_69()
            {
                base[this.vJ_RequestForRepairDataTable_0.DateAgreedColumn] = Convert.DBNull;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.reguestFiledColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_70()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.WorkerAgreedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_71()
            {
                base[this.vJ_RequestForRepairDataTable_0.WorkerAgreedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_72()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.FIOColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_73()
            {
                base[this.vJ_RequestForRepairDataTable_0.FIOColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_74()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.divisionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_75()
            {
                base[this.vJ_RequestForRepairDataTable_0.divisionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_76()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.idUserCreateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_77()
            {
                base[this.vJ_RequestForRepairDataTable_0.idUserCreateColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_78()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.UserNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_79()
            {
                base[this.vJ_RequestForRepairDataTable_0.UserNameColumn] = Convert.DBNull;
            }

            public int method_8()
            {
                return (int) base[this.vJ_RequestForRepairDataTable_0.idSRColumn];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_80()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.deletedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_81()
            {
                base[this.vJ_RequestForRepairDataTable_0.deletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_82()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.isSendColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_83()
            {
                base[this.vJ_RequestForRepairDataTable_0.isSendColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_84()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.colorStatusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_85()
            {
                base[this.vJ_RequestForRepairDataTable_0.colorStatusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_86()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.DateFactEndColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_87()
            {
                base[this.vJ_RequestForRepairDataTable_0.DateFactEndColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_88()
            {
                return base.IsNull(this.vJ_RequestForRepairDataTable_0.SendSiteColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_89()
            {
                base[this.vJ_RequestForRepairDataTable_0.SendSiteColumn] = Convert.DBNull;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_RequestForRepairDataTable_0.idSRColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class51[] method_90()
            {
                if (base.Table.ChildRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"] == null)
                {
                    return new DataSetGES.Class51[0];
                }
                return (DataSetGES.Class51[]) base.GetChildRows(base.Table.ChildRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"]);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestForRepairDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_RequestForRepair' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestForRepairDataTable_0.AddressColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestForRepairDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_RequestForRepair' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestForRepairDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestForRepairDataTable_0.FIOColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_RequestForRepair' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestForRepairDataTable_0.FIOColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_RequestForRepairDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'vJ_RequestForRepair' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_RequestForRepairDataTable_0.idWorkerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_RequestForRepairDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_RequestForRepairDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class49 : DataRow
        {
            private DataSetGES.tJ_RequestForRepairDataTable tJ_RequestForRepairDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class49(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_RequestForRepairDataTable_0 = (DataSetGES.tJ_RequestForRepairDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_RequestForRepairDataTable_0.numColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.numColumn] = int_0;
            }

            public string method_10()
            {
                return (string) base[this.tJ_RequestForRepairDataTable_0.PurposeColumn];
            }

            public void method_11(string string_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.PurposeColumn] = string_0;
            }

            public bool method_12()
            {
                return (bool) base[this.tJ_RequestForRepairDataTable_0.IsPlannedColumn];
            }

            public void method_13(bool bool_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.IsPlannedColumn] = bool_0;
            }

            public bool method_14()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tJ_RequestForRepairDataTable_0.CrashColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Crash' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return flag;
            }

            public void method_15(bool bool_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.CrashColumn] = bool_0;
            }

            public string method_16()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RequestForRepairDataTable_0.AgreeWithColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'AgreeWith' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return str;
            }

            public void method_17(string string_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.AgreeWithColumn] = string_0;
            }

            public bool method_18()
            {
                return (bool) base[this.tJ_RequestForRepairDataTable_0.AgreedColumn];
            }

            public void method_19(bool bool_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.AgreedColumn] = bool_0;
            }

            public DateTime method_2()
            {
                return (DateTime) base[this.tJ_RequestForRepairDataTable_0.dateCreateColumn];
            }

            public DateTime method_20()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.tJ_RequestForRepairDataTable_0.DateAgreedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateAgreed' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return time;
            }

            public void method_21(DateTime dateTime_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.DateAgreedColumn] = dateTime_0;
            }

            public int method_22()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RequestForRepairDataTable_0.WorkerAgreedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'WorkerAgreed' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return num;
            }

            public void method_23(int int_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.WorkerAgreedColumn] = int_0;
            }

            public int method_24()
            {
                return (int) base[this.tJ_RequestForRepairDataTable_0.iddivisionColumn];
            }

            public void method_25(int int_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.iddivisionColumn] = int_0;
            }

            public int method_26()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RequestForRepairDataTable_0.idUserCreateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idUserCreate' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return num;
            }

            public void method_27(int int_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.idUserCreateColumn] = int_0;
            }

            public bool method_28()
            {
                return (bool) base[this.tJ_RequestForRepairDataTable_0.deletedColumn];
            }

            public void method_29(bool bool_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.deletedColumn] = bool_0;
            }

            public void method_3(DateTime dateTime_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.dateCreateColumn] = dateTime_0;
            }

            public bool method_30()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tJ_RequestForRepairDataTable_0.isSendColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'isSend' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return flag;
            }

            public void method_31(bool bool_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.isSendColumn] = bool_0;
            }

            public DateTime method_32()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.tJ_RequestForRepairDataTable_0.dateFactEndColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'dateFactEnd' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return time;
            }

            public void method_33(DateTime dateTime_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.dateFactEndColumn] = dateTime_0;
            }

            public int method_34()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RequestForRepairDataTable_0.statusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'status' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return num;
            }

            public void method_35(int int_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.statusColumn] = int_0;
            }

            public DateTime method_36()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.tJ_RequestForRepairDataTable_0.dateOpenRequestColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'dateOpenRequest' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return time;
            }

            public void method_37(DateTime dateTime_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.dateOpenRequestColumn] = dateTime_0;
            }

            public bool method_38()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tJ_RequestForRepairDataTable_0.SendSiteColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SendSite' in table 'tJ_RequestForRepair' is DBNull.", exception);
                }
                return flag;
            }

            public void method_39(bool bool_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.SendSiteColumn] = bool_0;
            }

            public string method_4()
            {
                return (string) base[this.tJ_RequestForRepairDataTable_0.reguestFiledColumn];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_40()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.idWorkerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.tJ_RequestForRepairDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_42()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.CrashColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.tJ_RequestForRepairDataTable_0.CrashColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_44()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.AgreeWithColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_45()
            {
                base[this.tJ_RequestForRepairDataTable_0.AgreeWithColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_46()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.tJ_RequestForRepairDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_48()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.AddressColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_49()
            {
                base[this.tJ_RequestForRepairDataTable_0.AddressColumn] = Convert.DBNull;
            }

            public void method_5(string string_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.reguestFiledColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_50()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.DateAgreedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_51()
            {
                base[this.tJ_RequestForRepairDataTable_0.DateAgreedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_52()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.WorkerAgreedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.tJ_RequestForRepairDataTable_0.WorkerAgreedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_54()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.idUserCreateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_55()
            {
                base[this.tJ_RequestForRepairDataTable_0.idUserCreateColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.isSendColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_57()
            {
                base[this.tJ_RequestForRepairDataTable_0.isSendColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.dateFactEndColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_59()
            {
                base[this.tJ_RequestForRepairDataTable_0.dateFactEndColumn] = Convert.DBNull;
            }

            public int method_6()
            {
                return (int) base[this.tJ_RequestForRepairDataTable_0.idSRColumn];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.statusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_61()
            {
                base[this.tJ_RequestForRepairDataTable_0.statusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_62()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.dateOpenRequestColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_63()
            {
                base[this.tJ_RequestForRepairDataTable_0.dateOpenRequestColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_64()
            {
                return base.IsNull(this.tJ_RequestForRepairDataTable_0.SendSiteColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_65()
            {
                base[this.tJ_RequestForRepairDataTable_0.SendSiteColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class51[] method_66()
            {
                if (base.Table.ChildRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"] == null)
                {
                    return new DataSetGES.Class51[0];
                }
                return (DataSetGES.Class51[]) base.GetChildRows(base.Table.ChildRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"]);
            }

            public void method_7(int int_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.idSRColumn] = int_0;
            }

            public string method_8()
            {
                return (string) base[this.tJ_RequestForRepairDataTable_0.schmObjColumn];
            }

            public void method_9(string string_0)
            {
                base[this.tJ_RequestForRepairDataTable_0.schmObjColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_RequestForRepairDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'tJ_RequestForRepair' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_RequestForRepairDataTable_0.AddressColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_RequestForRepairDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_RequestForRepair' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_RequestForRepairDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_RequestForRepairDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tJ_RequestForRepair' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_RequestForRepairDataTable_0.idWorkerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_RequestForRepairDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_RequestForRepairDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class50 : DataRow
        {
            private DataSetGES.tR_ClassifierDataTable tR_ClassifierDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class50(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tR_ClassifierDataTable_0 = (DataSetGES.tR_ClassifierDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tR_ClassifierDataTable_0.SocrNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.tR_ClassifierDataTable_0.SocrNameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tR_ClassifierDataTable_0.OtherIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tR_ClassifierDataTable_0.OtherIdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tR_ClassifierDataTable_0.ValueColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tR_ClassifierDataTable_0.ValueColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tR_ClassifierDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tR_ClassifierDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tR_ClassifierDataTable_0.ParentIdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tR_ClassifierDataTable_0.ParentIdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tR_ClassifierDataTable_0.ParentKeyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tR_ClassifierDataTable_0.ParentKeyColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tR_ClassifierDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tR_Classifier' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool) base[this.tR_ClassifierDataTable_0.DeletedColumn];
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.DeletedColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int) base[this.tR_ClassifierDataTable_0.IdColumn];
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.IdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsGroup
            {
                get
                {
                    return (bool) base[this.tR_ClassifierDataTable_0.IsGroupColumn];
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.IsGroupColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    return (string) base[this.tR_ClassifierDataTable_0.NameColumn];
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] OtherId
            {
                get
                {
                    byte[] buffer;
                    try
                    {
                        buffer = (byte[]) base[this.tR_ClassifierDataTable_0.OtherIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OtherId' in table 'tR_Classifier' is DBNull.", exception);
                    }
                    return buffer;
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.OtherIdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParentId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tR_ClassifierDataTable_0.ParentIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ParentId' in table 'tR_Classifier' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.ParentIdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentKey
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tR_ClassifierDataTable_0.ParentKeyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'tR_Classifier' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.ParentKeyColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SocrName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tR_ClassifierDataTable_0.SocrNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SocrName' in table 'tR_Classifier' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.SocrNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Value
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.tR_ClassifierDataTable_0.ValueColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Value' in table 'tR_Classifier' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tR_ClassifierDataTable_0.ValueColumn] = value;
                }
            }
        }

        public class Class51 : DataRow
        {
            private DataSetGES.tJ_RequestForRepairDailyDataTable tJ_RequestForRepairDailyDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class51(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_RequestForRepairDailyDataTable_0 = (DataSetGES.tJ_RequestForRepairDailyDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime dateBeg
            {
                get
                {
                    return (DateTime) base[this.tJ_RequestForRepairDailyDataTable_0.dateBegColumn];
                }
                set
                {
                    base[this.tJ_RequestForRepairDailyDataTable_0.dateBegColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime dateEnd
            {
                get
                {
                    return (DateTime) base[this.tJ_RequestForRepairDailyDataTable_0.dateEndColumn];
                }
                set
                {
                    base[this.tJ_RequestForRepairDailyDataTable_0.dateEndColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idRequest
            {
                get
                {
                    return (int) base[this.tJ_RequestForRepairDailyDataTable_0.idRequestColumn];
                }
                set
                {
                    base[this.tJ_RequestForRepairDailyDataTable_0.idRequestColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_RequestForRepairDailyDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_RequestForRepairDailyDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class49 tJ_RequestForRepairRow
            {
                get
                {
                    return (DataSetGES.Class49) base.GetParentRow(base.Table.ParentRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
                set
                {
                    base.SetParentRow(value, base.Table.ParentRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class48 vJ_RequestForRepairRow
            {
                get
                {
                    return (DataSetGES.Class48) base.GetParentRow(base.Table.ParentRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
                set
                {
                    base.SetParentRow(value, base.Table.ParentRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
            }
        }

        public class Class52 : DataRow
        {
            private DataSetGES.vJ_RequestForRepairDailyDataTable vJ_RequestForRepairDailyDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class52(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_RequestForRepairDailyDataTable_0 = (DataSetGES.vJ_RequestForRepairDailyDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_RequestForRepairDailyDataTable_0.numColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.numColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.SRColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SR' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public void method_11(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.SRColumn] = string_0;
            }

            public string method_12()
            {
                return (string) base[this.vJ_RequestForRepairDailyDataTable_0.schmObjColumn];
            }

            public void method_13(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.schmObjColumn] = string_0;
            }

            public string method_14()
            {
                return (string) base[this.vJ_RequestForRepairDailyDataTable_0.PurposeColumn];
            }

            public void method_15(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.PurposeColumn] = string_0;
            }

            public bool method_16()
            {
                return (bool) base[this.vJ_RequestForRepairDailyDataTable_0.IsPlannedColumn];
            }

            public void method_17(bool bool_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.IsPlannedColumn] = bool_0;
            }

            public DateTime method_18()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestForRepairDailyDataTable_0.dateTripBegColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'dateTripBeg' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return time;
            }

            public void method_19(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateTripBegColumn] = dateTime_0;
            }

            public DateTime method_2()
            {
                return (DateTime) base[this.vJ_RequestForRepairDailyDataTable_0.dateCreateColumn];
            }

            public DateTime method_20()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestForRepairDailyDataTable_0.dateTripEndColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'dateTripEnd' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return time;
            }

            public void method_21(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateTripEndColumn] = dateTime_0;
            }

            public string method_22()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.AgreeWithColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'AgreeWith' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public void method_23(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.AgreeWithColumn] = string_0;
            }

            public bool method_24()
            {
                return (bool) base[this.vJ_RequestForRepairDailyDataTable_0.AgreedColumn];
            }

            public void method_25(bool bool_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.AgreedColumn] = bool_0;
            }

            public DateTime method_26()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RequestForRepairDailyDataTable_0.DateAgreedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateAgreed' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return time;
            }

            public void method_27(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.DateAgreedColumn] = dateTime_0;
            }

            public int method_28()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestForRepairDailyDataTable_0.WorkerAgreedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'WorkerAgreed' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return num;
            }

            public void method_29(int int_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.WorkerAgreedColumn] = int_0;
            }

            public void method_3(DateTime dateTime_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateCreateColumn] = dateTime_0;
            }

            public int method_30()
            {
                return (int) base[this.vJ_RequestForRepairDailyDataTable_0.iddivisionColumn];
            }

            public void method_31(int int_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.iddivisionColumn] = int_0;
            }

            public string method_32()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.divisionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'division' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public void method_33(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.divisionColumn] = string_0;
            }

            public int method_34()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RequestForRepairDailyDataTable_0.idUserCreateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idUserCreate' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return num;
            }

            public void method_35(int int_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.idUserCreateColumn] = int_0;
            }

            public string method_36()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.usernameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'username' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public void method_37(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.usernameColumn] = string_0;
            }

            public bool method_38()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RequestForRepairDailyDataTable_0.deletedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'deleted' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return flag;
            }

            public void method_39(bool bool_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.deletedColumn] = bool_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.workerCreateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'workerCreate' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public string method_40()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.dateBegColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'dateBeg' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public void method_41(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateBegColumn] = string_0;
            }

            public string method_42()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.timeBegColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'timeBeg' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public void method_43(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.timeBegColumn] = string_0;
            }

            public string method_44()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.timeEndColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'timeEnd' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                }
                return str;
            }

            public void method_45(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.timeEndColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_46()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.idWorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_47()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_48()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.workerCreateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_49()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.workerCreateColumn] = Convert.DBNull;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.workerCreateColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_50()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.SRColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_51()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.SRColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_52()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.dateTripBegColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateTripBegColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_54()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.dateTripEndColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateTripEndColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.AgreeWithColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_57()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.AgreeWithColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_59()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.CommentColumn] = Convert.DBNull;
            }

            public string method_6()
            {
                return (string) base[this.vJ_RequestForRepairDailyDataTable_0.reguestFiledColumn];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.AddressColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_61()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.AddressColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_62()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.DateAgreedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_63()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.DateAgreedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_64()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.WorkerAgreedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_65()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.WorkerAgreedColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_66()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.FIOColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_67()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.FIOColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_68()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.divisionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_69()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.divisionColumn] = Convert.DBNull;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.reguestFiledColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_70()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.idUserCreateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_71()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.idUserCreateColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_72()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.usernameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_73()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.usernameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_74()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.deletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_75()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.deletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_76()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.dateBegColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_77()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateBegColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_78()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.timeBegColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_79()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.timeBegColumn] = Convert.DBNull;
            }

            public int method_8()
            {
                return (int) base[this.vJ_RequestForRepairDailyDataTable_0.idSRColumn];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_80()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.dateEndColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_81()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.dateEndColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_82()
            {
                return base.IsNull(this.vJ_RequestForRepairDailyDataTable_0.timeEndColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_83()
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.timeEndColumn] = Convert.DBNull;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_RequestForRepairDailyDataTable_0.idSRColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestForRepairDailyDataTable_0.AddressColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestForRepairDailyDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string dateEnd
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.dateEndColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'dateEnd' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestForRepairDailyDataTable_0.dateEndColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string FIO
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RequestForRepairDailyDataTable_0.FIOColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RequestForRepairDailyDataTable_0.FIOColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_RequestForRepairDailyDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'vJ_RequestForRepairDaily' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_RequestForRepairDailyDataTable_0.idWorkerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_RequestForRepairDailyDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_RequestForRepairDailyDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class53 : DataRow
        {
            private DataSetGES.tL_RequestForRepairSchmObjListDataTable tL_RequestForRepairSchmObjListDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class53(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tL_RequestForRepairSchmObjListDataTable_0 = (DataSetGES.tL_RequestForRepairSchmObjListDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateBeg
            {
                get
                {
                    return (DateTime) base[this.tL_RequestForRepairSchmObjListDataTable_0.DateBegColumn];
                }
                set
                {
                    base[this.tL_RequestForRepairSchmObjListDataTable_0.DateBegColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateEnd
            {
                get
                {
                    return (DateTime) base[this.tL_RequestForRepairSchmObjListDataTable_0.DateEndColumn];
                }
                set
                {
                    base[this.tL_RequestForRepairSchmObjListDataTable_0.DateEndColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Duration
            {
                get
                {
                    return (string) base[this.tL_RequestForRepairSchmObjListDataTable_0.DurationColumn];
                }
                set
                {
                    base[this.tL_RequestForRepairSchmObjListDataTable_0.DurationColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idRequest
            {
                get
                {
                    return (int) base[this.tL_RequestForRepairSchmObjListDataTable_0.idRequestColumn];
                }
                set
                {
                    base[this.tL_RequestForRepairSchmObjListDataTable_0.idRequestColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSchmObj
            {
                get
                {
                    return (int) base[this.tL_RequestForRepairSchmObjListDataTable_0.idSchmObjColumn];
                }
                set
                {
                    base[this.tL_RequestForRepairSchmObjListDataTable_0.idSchmObjColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tL_RequestForRepairSchmObjListDataTable_0.idColumn];
                }
                set
                {
                    base[this.tL_RequestForRepairSchmObjListDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Num
            {
                get
                {
                    return (short) base[this.tL_RequestForRepairSchmObjListDataTable_0.NumColumn];
                }
                set
                {
                    base[this.tL_RequestForRepairSchmObjListDataTable_0.NumColumn] = value;
                }
            }
        }

        public class Class54 : DataRow
        {
            private DataSetGES.tJ_RequestForRepairDocDataTable tJ_RequestForRepairDocDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class54(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_RequestForRepairDocDataTable_0 = (DataSetGES.tJ_RequestForRepairDocDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_RequestForRepairDocDataTable_0.idRequestColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_RequestForRepairDocDataTable_0.idRequestColumn] = int_0;
            }

            public byte[] method_2()
            {
                return (byte[]) base[this.tJ_RequestForRepairDocDataTable_0.DocumentColumn];
            }

            public void method_3(byte[] byte_0)
            {
                base[this.tJ_RequestForRepairDocDataTable_0.DocumentColumn] = byte_0;
            }

            public string method_4()
            {
                return (string) base[this.tJ_RequestForRepairDocDataTable_0.FileNameColumn];
            }

            public void method_5(string string_0)
            {
                base[this.tJ_RequestForRepairDocDataTable_0.FileNameColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tJ_RequestForRepairDocDataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tJ_RequestForRepairDocDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_RequestForRepairDocDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_RequestForRepairDoc' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_RequestForRepairDocDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_RequestForRepairDocDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_RequestForRepairDocDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class55 : DataRow
        {
            private DataSetGES.tJ_RelayProtectionAutomationDataTable tJ_RelayProtectionAutomationDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class55(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_RelayProtectionAutomationDataTable_0 = (DataSetGES.tJ_RelayProtectionAutomationDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_RelayProtectionAutomationDataTable_0.idSchmObjColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationDataTable_0.idSchmObjColumn] = int_0;
            }

            public bool method_2()
            {
                return (bool) base[this.tJ_RelayProtectionAutomationDataTable_0.DeletedColumn];
            }

            public void method_3(bool bool_0)
            {
                base[this.tJ_RelayProtectionAutomationDataTable_0.DeletedColumn] = bool_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationDataTable_0.nameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.tJ_RelayProtectionAutomationDataTable_0.nameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_RelayProtectionAutomationDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_RelayProtectionAutomationDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_RelayProtectionAutomationDataTable_0.nameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'name' in table 'tJ_RelayProtectionAutomation' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_RelayProtectionAutomationDataTable_0.nameColumn] = value;
                }
            }
        }

        public class Class56 : DataRow
        {
            private DataSetGES.tJ_RelayProtectionAutomationValueDataTable tJ_RelayProtectionAutomationValueDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class56(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_RelayProtectionAutomationValueDataTable_0 = (DataSetGES.tJ_RelayProtectionAutomationValueDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.idRelayColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.idRelayColumn] = int_0;
            }

            public double method_10()
            {
                double num;
                try
                {
                    num = (double) base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_mtzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_mtz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(double double_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_mtzColumn] = double_0;
            }

            public int method_12()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_toColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_to' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_toColumn] = int_0;
            }

            public double method_14()
            {
                double num;
                try
                {
                    num = (double) base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_toColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_to' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_15(double double_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_toColumn] = double_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_ozzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_ozz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_ozzColumn] = int_0;
            }

            public double method_18()
            {
                double num;
                try
                {
                    num = (double) base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_ozzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_ozz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_19(double double_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_ozzColumn] = double_0;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_primaryColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_primary' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public string method_20()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RelayProtectionAutomationValueDataTable_0.act_ozzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'act_ozz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return str;
            }

            public void method_21(string string_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.act_ozzColumn] = string_0;
            }

            public double method_22()
            {
                double num;
                try
                {
                    num = (double) base[this.tJ_RelayProtectionAutomationValueDataTable_0.speed_mtzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'speed_mtz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_23(double double_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.speed_mtzColumn] = double_0;
            }

            public int method_24()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_urovColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_urov' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_25(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_urovColumn] = int_0;
            }

            public double method_26()
            {
                double num;
                try
                {
                    num = (double) base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_urovColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_urov' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public void method_27(double double_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_urovColumn] = double_0;
            }

            public bool method_28()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tJ_RelayProtectionAutomationValueDataTable_0.avrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'avr' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return flag;
            }

            public void method_29(bool bool_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.avrColumn] = bool_0;
            }

            public void method_3(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_primaryColumn] = int_0;
            }

            public bool method_30()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tJ_RelayProtectionAutomationValueDataTable_0.lzshColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'lzsh' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return flag;
            }

            public void method_31(bool bool_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.lzshColumn] = bool_0;
            }

            public string method_32()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RelayProtectionAutomationValueDataTable_0.type_relayColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'type_relay' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return str;
            }

            public void method_33(string string_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.type_relayColumn] = string_0;
            }

            public string method_34()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RelayProtectionAutomationValueDataTable_0.type_procColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'type_proc' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return str;
            }

            public void method_35(string string_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.type_procColumn] = string_0;
            }

            public string method_36()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RelayProtectionAutomationValueDataTable_0.cpColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'cp' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return str;
            }

            public void method_37(string string_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.cpColumn] = string_0;
            }

            public string method_38()
            {
                string str;
                try
                {
                    str = (string) base[this.tJ_RelayProtectionAutomationValueDataTable_0.cp_cellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'cp_cell' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return str;
            }

            public void method_39(string string_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.cp_cellColumn] = string_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_secondaryColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_secondary' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            public DateTime method_40()
            {
                return (DateTime) base[this.tJ_RelayProtectionAutomationValueDataTable_0.dateCreateColumn];
            }

            public void method_41(DateTime dateTime_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.dateCreateColumn] = dateTime_0;
            }

            public DateTime method_42()
            {
                return (DateTime) base[this.tJ_RelayProtectionAutomationValueDataTable_0.dateInColumn];
            }

            public void method_43(DateTime dateTime_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.dateInColumn] = dateTime_0;
            }

            public bool method_44()
            {
                return (bool) base[this.tJ_RelayProtectionAutomationValueDataTable_0.deletedColumn];
            }

            public void method_45(bool bool_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.deletedColumn] = bool_0;
            }

            public bool method_46()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tJ_RelayProtectionAutomationValueDataTable_0.ArcProtectionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'ArcProtection' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return flag;
            }

            public void method_47(bool bool_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.ArcProtectionColumn] = bool_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_48()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.amp_primaryColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_49()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_primaryColumn] = Convert.DBNull;
            }

            public void method_5(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_secondaryColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_50()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.amp_secondaryColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_51()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_secondaryColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_52()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.idTypeTrColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.idTypeTrColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_54()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.amp_mtzColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_mtzColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.time_mtzColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_57()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_mtzColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.amp_toColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_59()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_toColumn] = Convert.DBNull;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.idTypeTrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idTypeTr' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.time_toColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_61()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_toColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_62()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.amp_ozzColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_63()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_ozzColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_64()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.time_ozzColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_65()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_ozzColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_66()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.act_ozzColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_67()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.act_ozzColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_68()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.speed_mtzColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_69()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.speed_mtzColumn] = Convert.DBNull;
            }

            public void method_7(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.idTypeTrColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_70()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.amp_urovColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_71()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_urovColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_72()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.time_urovColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_73()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.time_urovColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_74()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.avrColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_75()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.avrColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_76()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.lzshColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_77()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.lzshColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_78()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.type_relayColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_79()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.type_relayColumn] = Convert.DBNull;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_mtzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_mtz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                }
                return num;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_80()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.type_procColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_81()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.type_procColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_82()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.cpColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_83()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.cpColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_84()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.cp_cellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_85()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.cp_cellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_86()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.commentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_87()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.commentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_88()
            {
                return base.IsNull(this.tJ_RelayProtectionAutomationValueDataTable_0.ArcProtectionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_89()
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.ArcProtectionColumn] = Convert.DBNull;
            }

            public void method_9(int int_0)
            {
                base[this.tJ_RelayProtectionAutomationValueDataTable_0.amp_mtzColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_RelayProtectionAutomationValueDataTable_0.commentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'comment' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_RelayProtectionAutomationValueDataTable_0.commentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_RelayProtectionAutomationValueDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_RelayProtectionAutomationValueDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class57 : DataRow
        {
            private DataSetGES.vJ_RelayProtectionAutomationDataTable vJ_RelayProtectionAutomationDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class57(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_RelayProtectionAutomationDataTable_0 = (DataSetGES.vJ_RelayProtectionAutomationDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.relayidValueColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'relayidValue' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.relayidValueColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.bus_nameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'bus_name' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_100()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.time_mtzColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_101()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_mtzColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_102()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.amp_toColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_103()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_toColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_104()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.time_toColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_105()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_toColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_106()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.amp_ozzColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_107()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_ozzColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_108()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.time_ozzColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_109()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_ozzColumn] = Convert.DBNull;
            }

            public void method_11(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.bus_nameColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_110()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.act_ozzColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_111()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.act_ozzColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_112()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.speed_mtzColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_113()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.speed_mtzColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_114()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.amp_urovColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_115()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_urovColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_116()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.time_urovColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_117()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_urovColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_118()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.avrColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_119()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.avrColumn] = Convert.DBNull;
            }

            public string method_12()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.cell_NameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'cell_Name' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_120()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.lzshColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_121()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.lzshColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_122()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.type_relayColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_123()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.type_relayColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_124()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.type_procColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_125()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.type_procColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_126()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.cpColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_127()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cpColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_128()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.cp_cellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_129()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cp_cellColumn] = Convert.DBNull;
            }

            public void method_13(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cell_NameColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_130()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.commentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_131()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.commentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_132()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.dateCreateColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_133()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.dateCreateColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_134()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.dateInColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_135()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.dateInColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_136()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.deletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_137()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.deletedColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_138()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.coefTRColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_139()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.coefTRColumn] = Convert.DBNull;
            }

            public int method_14()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.cellIDColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'cellID' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_140()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.deletedObjColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_141()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.deletedObjColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_142()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.ArcProtectionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_143()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.ArcProtectionColumn] = Convert.DBNull;
            }

            public void method_15(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cellIDColumn] = int_0;
            }

            public string method_16()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.relNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'relName' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_17(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.relNameColumn] = string_0;
            }

            public int method_18()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.amp_primaryColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_primary' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_19(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_primaryColumn] = int_0;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.subIdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'subId' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public int method_20()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.amp_secondaryColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_secondary' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_21(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_secondaryColumn] = int_0;
            }

            public int method_22()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.idTypeTrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idTypeTr' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_23(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.idTypeTrColumn] = int_0;
            }

            public string method_24()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.TypetrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Typetr' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_25(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.TypetrColumn] = string_0;
            }

            public int method_26()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.amp_mtzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_mtz' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_27(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_mtzColumn] = int_0;
            }

            public double method_28()
            {
                double num;
                try
                {
                    num = (double) base[this.vJ_RelayProtectionAutomationDataTable_0.time_mtzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_mtz' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_29(double double_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_mtzColumn] = double_0;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.subIdColumn] = int_0;
            }

            public int method_30()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.amp_toColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_to' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_31(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_toColumn] = int_0;
            }

            public double method_32()
            {
                double num;
                try
                {
                    num = (double) base[this.vJ_RelayProtectionAutomationDataTable_0.time_toColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_to' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_33(double double_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_toColumn] = double_0;
            }

            public int method_34()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.amp_ozzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_ozz' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_35(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_ozzColumn] = int_0;
            }

            public double method_36()
            {
                double num;
                try
                {
                    num = (double) base[this.vJ_RelayProtectionAutomationDataTable_0.time_ozzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_ozz' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_37(double double_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_ozzColumn] = double_0;
            }

            public string method_38()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.act_ozzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'act_ozz' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_39(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.act_ozzColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.sub_NameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'sub_Name' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public double method_40()
            {
                double num;
                try
                {
                    num = (double) base[this.vJ_RelayProtectionAutomationDataTable_0.speed_mtzColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'speed_mtz' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_41(double double_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.speed_mtzColumn] = double_0;
            }

            public int method_42()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.amp_urovColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'amp_urov' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_43(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_urovColumn] = int_0;
            }

            public double method_44()
            {
                double num;
                try
                {
                    num = (double) base[this.vJ_RelayProtectionAutomationDataTable_0.time_urovColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'time_urov' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public void method_45(double double_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.time_urovColumn] = double_0;
            }

            public bool method_46()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RelayProtectionAutomationDataTable_0.avrColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'avr' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return flag;
            }

            public void method_47(bool bool_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.avrColumn] = bool_0;
            }

            public bool method_48()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RelayProtectionAutomationDataTable_0.lzshColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'lzsh' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return flag;
            }

            public void method_49(bool bool_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.lzshColumn] = bool_0;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.sub_NameColumn] = string_0;
            }

            public string method_50()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.type_relayColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'type_relay' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_51(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.type_relayColumn] = string_0;
            }

            public string method_52()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.type_procColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'type_proc' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_53(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.type_procColumn] = string_0;
            }

            public string method_54()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.cpColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'cp' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_55(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cpColumn] = string_0;
            }

            public string method_56()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.cp_cellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'cp_cell' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_57(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cp_cellColumn] = string_0;
            }

            public DateTime method_58()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RelayProtectionAutomationDataTable_0.dateCreateColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'dateCreate' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return time;
            }

            public void method_59(DateTime dateTime_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.dateCreateColumn] = dateTime_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.typeSubColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'typeSub' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            public DateTime method_60()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vJ_RelayProtectionAutomationDataTable_0.dateInColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'dateIn' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return time;
            }

            public void method_61(DateTime dateTime_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.dateInColumn] = dateTime_0;
            }

            public bool method_62()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RelayProtectionAutomationDataTable_0.deletedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'deleted' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return flag;
            }

            public void method_63(bool bool_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.deletedColumn] = bool_0;
            }

            public string method_64()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.coefTRColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'coefTR' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return str;
            }

            public void method_65(string string_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.coefTRColumn] = string_0;
            }

            public bool method_66()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RelayProtectionAutomationDataTable_0.deletedObjColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'deletedObj' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return flag;
            }

            public void method_67(bool bool_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.deletedObjColumn] = bool_0;
            }

            public bool method_68()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_RelayProtectionAutomationDataTable_0.ArcProtectionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'ArcProtection' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return flag;
            }

            public void method_69(bool bool_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.ArcProtectionColumn] = bool_0;
            }

            public void method_7(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.typeSubColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_70()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.idColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_71()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.idColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_72()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.relayidValueColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_73()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.relayidValueColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_74()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.subIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_75()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.subIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_76()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.sub_NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_77()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.sub_NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_78()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.typeSubColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_79()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.typeSubColumn] = Convert.DBNull;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.busIDColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'busID' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                }
                return num;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_80()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.busIDColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_81()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.busIDColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_82()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.bus_nameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_83()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.bus_nameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_84()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.cell_NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_85()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cell_NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_86()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.cellIDColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_87()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.cellIDColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_88()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.relNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_89()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.relNameColumn] = Convert.DBNull;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.busIDColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_90()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.amp_primaryColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_91()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_primaryColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_92()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.amp_secondaryColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_93()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_secondaryColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_94()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.idTypeTrColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_95()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.idTypeTrColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_96()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.TypetrColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_97()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.TypetrColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_98()
            {
                return base.IsNull(this.vJ_RelayProtectionAutomationDataTable_0.amp_mtzColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_99()
            {
                base[this.vJ_RelayProtectionAutomationDataTable_0.amp_mtzColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_RelayProtectionAutomationDataTable_0.commentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'comment' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_RelayProtectionAutomationDataTable_0.commentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_RelayProtectionAutomationDataTable_0.idColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'id' in table 'vJ_RelayProtectionAutomation' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_RelayProtectionAutomationDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class58 : DataRow
        {
            private DataSetGES.tJ_UpdateProgramDataTable tJ_UpdateProgramDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class58(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_UpdateProgramDataTable_0 = (DataSetGES.tJ_UpdateProgramDataTable) base.Table;
            }

            public DateTime method_0()
            {
                return (DateTime) base[this.tJ_UpdateProgramDataTable_0.DateUpdateColumn];
            }

            public void method_1(DateTime dateTime_0)
            {
                base[this.tJ_UpdateProgramDataTable_0.DateUpdateColumn] = dateTime_0;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tJ_UpdateProgramDataTable_0.ModulColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Modul' in table 'tJ_UpdateProgram' is DBNull.", exception);
                }
                return num;
            }

            public void method_3(int int_0)
            {
                base[this.tJ_UpdateProgramDataTable_0.ModulColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.tJ_UpdateProgramDataTable_0.ModulColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tJ_UpdateProgramDataTable_0.ModulColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tJ_UpdateProgramDataTable_0.TextUpdateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tJ_UpdateProgramDataTable_0.TextUpdateColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tJ_UpdateProgramDataTable_0.DescriptionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.tJ_UpdateProgramDataTable_0.DescriptionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_UpdateProgramDataTable_0.DescriptionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Description' in table 'tJ_UpdateProgram' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_UpdateProgramDataTable_0.DescriptionColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_UpdateProgramDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_UpdateProgramDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TextUpdate
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_UpdateProgramDataTable_0.TextUpdateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TextUpdate' in table 'tJ_UpdateProgram' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_UpdateProgramDataTable_0.TextUpdateColumn] = value;
                }
            }
        }

        public class Class59 : DataRow
        {
            private DataSetGES.tJ_UpdateProgramDocDataTable tJ_UpdateProgramDocDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class59(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_UpdateProgramDocDataTable_0 = (DataSetGES.tJ_UpdateProgramDocDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tJ_UpdateProgramDocDataTable_0.idUpdateColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tJ_UpdateProgramDocDataTable_0.idUpdateColumn] = int_0;
            }

            public byte[] method_2()
            {
                return (byte[]) base[this.tJ_UpdateProgramDocDataTable_0.DocumentColumn];
            }

            public void method_3(byte[] byte_0)
            {
                base[this.tJ_UpdateProgramDocDataTable_0.DocumentColumn] = byte_0;
            }

            public string method_4()
            {
                return (string) base[this.tJ_UpdateProgramDocDataTable_0.FileNameColumn];
            }

            public void method_5(string string_0)
            {
                base[this.tJ_UpdateProgramDocDataTable_0.FileNameColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_UpdateProgramDocDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_UpdateProgramDocDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class60 : DataRow
        {
            private DataSetGES.vJ_UpdateProgramDataTable vJ_UpdateProgramDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class60(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_UpdateProgramDataTable_0 = (DataSetGES.vJ_UpdateProgramDataTable) base.Table;
            }

            public DateTime method_0()
            {
                return (DateTime) base[this.vJ_UpdateProgramDataTable_0.DateUpdateColumn];
            }

            public void method_1(DateTime dateTime_0)
            {
                base[this.vJ_UpdateProgramDataTable_0.DateUpdateColumn] = dateTime_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_UpdateProgramDataTable_0.TextUpdateColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_UpdateProgramDataTable_0.TextUpdateColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_UpdateProgramDataTable_0.ModulColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Modul' in table 'vJ_UpdateProgram' is DBNull.", exception);
                }
                return num;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_UpdateProgramDataTable_0.ModulColumn] = int_0;
            }

            public string method_4()
            {
                return (string) base[this.vJ_UpdateProgramDataTable_0.modulnameColumn];
            }

            public void method_5(string string_0)
            {
                base[this.vJ_UpdateProgramDataTable_0.modulnameColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.vJ_UpdateProgramDataTable_0.ModulColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vJ_UpdateProgramDataTable_0.ModulColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_UpdateProgramDataTable_0.DescriptionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.vJ_UpdateProgramDataTable_0.DescriptionColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Description
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_UpdateProgramDataTable_0.DescriptionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Description' in table 'vJ_UpdateProgram' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_UpdateProgramDataTable_0.DescriptionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_UpdateProgramDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_UpdateProgramDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string TextUpdate
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_UpdateProgramDataTable_0.TextUpdateColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TextUpdate' in table 'vJ_UpdateProgram' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_UpdateProgramDataTable_0.TextUpdateColumn] = value;
                }
            }
        }

        public class Class61 : DataRow
        {
            private DataSetGES.tJ_UpdateProgramUserCheckDataTable tJ_UpdateProgramUserCheckDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class61(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_UpdateProgramUserCheckDataTable_0 = (DataSetGES.tJ_UpdateProgramUserCheckDataTable) base.Table;
            }

            public string method_0()
            {
                return (string) base[this.tJ_UpdateProgramUserCheckDataTable_0.loginColumn];
            }

            public void method_1(string string_0)
            {
                base[this.tJ_UpdateProgramUserCheckDataTable_0.loginColumn] = string_0;
            }

            public DateTime method_2()
            {
                return (DateTime) base[this.tJ_UpdateProgramUserCheckDataTable_0.dateCheckColumn];
            }

            public void method_3(DateTime dateTime_0)
            {
                base[this.tJ_UpdateProgramUserCheckDataTable_0.dateCheckColumn] = dateTime_0;
            }
        }

        public class Class62 : DataRow
        {
            private DataSetGES.tSchm_ObjListDataTable tSchm_ObjListDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class62(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tSchm_ObjListDataTable_0 = (DataSetGES.tSchm_ObjListDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tSchm_ObjListDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tSchm_ObjListDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.tSchm_ObjListDataTable_0.IdColumn];
                }
                set
                {
                    base[this.tSchm_ObjListDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tSchm_ObjListDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tSchm_ObjListDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class63 : DataRow
        {
            private DataSetGES.vP_WorkerDataTable vP_WorkerDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class63(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vP_WorkerDataTable_0 = (DataSetGES.vP_WorkerDataTable) base.Table;
            }

            public string method_0()
            {
                return (string) base[this.vP_WorkerDataTable_0.FColumn];
            }

            public void method_1(string string_0)
            {
                base[this.vP_WorkerDataTable_0.FColumn] = string_0;
            }

            public int method_10()
            {
                return (int) base[this.vP_WorkerDataTable_0.idGroupColumn];
            }

            public void method_11(int int_0)
            {
                base[this.vP_WorkerDataTable_0.idGroupColumn] = int_0;
            }

            public bool method_12()
            {
                return (bool) base[this.vP_WorkerDataTable_0.isGroupColumn];
            }

            public void method_13(bool bool_0)
            {
                base[this.vP_WorkerDataTable_0.isGroupColumn] = bool_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vP_WorkerDataTable_0.IColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vP_WorkerDataTable_0.IColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vP_WorkerDataTable_0.OColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vP_WorkerDataTable_0.OColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vP_WorkerDataTable_0.FIOColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vP_WorkerDataTable_0.FIOColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vP_WorkerDataTable_0.IColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'I' in table 'vP_Worker' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vP_WorkerDataTable_0.DateBeginColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vP_WorkerDataTable_0.DateBeginColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vP_WorkerDataTable_0.DateEndColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vP_WorkerDataTable_0.DateEndColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.vP_WorkerDataTable_0.ParentKeyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.vP_WorkerDataTable_0.ParentKeyColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vP_WorkerDataTable_0.IColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vP_WorkerDataTable_0.OColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'O' in table 'vP_Worker' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vP_WorkerDataTable_0.OColumn] = string_0;
            }

            public DateTime method_6()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vP_WorkerDataTable_0.DateBeginColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateBegin' in table 'vP_Worker' is DBNull.", exception);
                }
                return time;
            }

            public void method_7(DateTime dateTime_0)
            {
                base[this.vP_WorkerDataTable_0.DateBeginColumn] = dateTime_0;
            }

            public DateTime method_8()
            {
                DateTime time;
                try
                {
                    time = (DateTime) base[this.vP_WorkerDataTable_0.DateEndColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'DateEnd' in table 'vP_Worker' is DBNull.", exception);
                }
                return time;
            }

            public void method_9(DateTime dateTime_0)
            {
                base[this.vP_WorkerDataTable_0.DateEndColumn] = dateTime_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vP_WorkerDataTable_0.FIOColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vP_Worker' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vP_WorkerDataTable_0.FIOColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.vP_WorkerDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vP_WorkerDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentKey
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vP_WorkerDataTable_0.ParentKeyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'vP_Worker' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vP_WorkerDataTable_0.ParentKeyColumn] = value;
                }
            }
        }

        public class Class64 : DataRow
        {
            private DataSetGES.tP_ValueListsDataTable tP_ValueListsDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class64(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tP_ValueListsDataTable_0 = (DataSetGES.tP_ValueListsDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.tP_ValueListsDataTable_0.ParentIdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'ParentId' in table 'tP_ValueLists' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.tP_ValueListsDataTable_0.ParentIdColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tP_ValueListsDataTable_0.isGroupColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tP_ValueListsDataTable_0.isGroupColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tP_ValueListsDataTable_0.DeletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tP_ValueListsDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            public bool method_2()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tP_ValueListsDataTable_0.isGroupColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'isGroup' in table 'tP_ValueLists' is DBNull.", exception);
                }
                return flag;
            }

            public void method_3(bool bool_0)
            {
                base[this.tP_ValueListsDataTable_0.isGroupColumn] = bool_0;
            }

            public bool method_4()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tP_ValueListsDataTable_0.DeletedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Deleted' in table 'tP_ValueLists' is DBNull.", exception);
                }
                return flag;
            }

            public void method_5(bool bool_0)
            {
                base[this.tP_ValueListsDataTable_0.DeletedColumn] = bool_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.tP_ValueListsDataTable_0.ParentIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.tP_ValueListsDataTable_0.ParentIdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tP_ValueListsDataTable_0.ParentKeyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tP_ValueListsDataTable_0.ParentKeyColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tP_ValueListsDataTable_0.idColumn];
                }
                set
                {
                    base[this.tP_ValueListsDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    return (string) base[this.tP_ValueListsDataTable_0.NameColumn];
                }
                set
                {
                    base[this.tP_ValueListsDataTable_0.NameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ParentKey
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tP_ValueListsDataTable_0.ParentKeyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'tP_ValueLists' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tP_ValueListsDataTable_0.ParentKeyColumn] = value;
                }
            }
        }

        public class Class65 : DataRow
        {
            private DataSetGES.vJ_CableMakeupDataTable vJ_CableMakeupDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class65(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_CableMakeupDataTable_0 = (DataSetGES.vJ_CableMakeupDataTable) base.Table;
            }

            public string method_0()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CableMakeupDataTable_0.MakeupColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_CableMakeup' is DBNull.", exception);
                }
                return str;
            }

            public void method_1(string string_0)
            {
                base[this.vJ_CableMakeupDataTable_0.MakeupColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_CableMakeupDataTable_0.MakeupColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.vJ_CableMakeupDataTable_0.MakeupColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.vJ_CableMakeupDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vJ_CableMakeupDataTable_0.IdColumn] = value;
                }
            }
        }

        public class Class66 : DataRow
        {
            private DataSetGES.vJ_MeasPeriodBySubstationDataTable vJ_MeasPeriodBySubstationDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class66(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasPeriodBySubstationDataTable_0 = (DataSetGES.vJ_MeasPeriodBySubstationDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MeasPeriodBySubstationDataTable_0.idObjListColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasPeriodBySubstationDataTable_0.idObjListColumn] = int_0;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasPeriodBySubstationDataTable_0.MeasYearColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'MeasYear' in table 'vJ_MeasPeriodBySubstation' is DBNull.", exception);
                }
                return num;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_MeasPeriodBySubstationDataTable_0.MeasYearColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_MeasPeriodBySubstationDataTable_0.MeasYearColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.vJ_MeasPeriodBySubstationDataTable_0.MeasYearColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasPeriodBySubstationDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasPeriodBySubstationDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class67 : DataRow
        {
            private DataSetGES.fn_J_GetCellCableLVByTransfDataTable fn_J_GetCellCableLVByTransfDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class67(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_GetCellCableLVByTransfDataTable_0 = (DataSetGES.fn_J_GetCellCableLVByTransfDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellCableLVByTransfDataTable_0.IdCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdCell' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.IdCellColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.fn_J_GetCellCableLVByTransfDataTable_0.NameCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.fn_J_GetCellCableLVByTransfDataTable_0.IdCableColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.IdCableColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.fn_J_GetCellCableLVByTransfDataTable_0.NameCableColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.NameCableColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellCableLVByTransfDataTable_0.NameCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameCell' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", exception);
                }
                return str;
            }

            public void method_3(string string_0)
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.NameCellColumn] = string_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellCableLVByTransfDataTable_0.IdCableColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdCable' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", exception);
                }
                return num;
            }

            public void method_5(int int_0)
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.IdCableColumn] = int_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellCableLVByTransfDataTable_0.NameCableColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameCable' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.NameCableColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.fn_J_GetCellCableLVByTransfDataTable_0.IdCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.fn_J_GetCellCableLVByTransfDataTable_0.IdCellColumn] = Convert.DBNull;
            }
        }

        public class Class68 : DataRow
        {
            private DataSetGES.tL_SchmAbnDataTable tL_SchmAbnDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class68(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tL_SchmAbnDataTable_0 = (DataSetGES.tL_SchmAbnDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.tL_SchmAbnDataTable_0.idSchmObjColumn];
            }

            public void method_1(int int_0)
            {
                base[this.tL_SchmAbnDataTable_0.idSchmObjColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tL_SchmAbnDataTable_0.idAbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tL_SchmAbnDataTable_0.idAbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tL_SchmAbnDataTable_0.idAbnObjColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tL_SchmAbnDataTable_0.idAbnObjColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.tL_SchmAbnDataTable_0.idPointColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tL_SchmAbnDataTable_0.idPointColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.tL_SchmAbnDataTable_0.idDocColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.tL_SchmAbnDataTable_0.idDocColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.tL_SchmAbnDataTable_0.TypeDocColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.tL_SchmAbnDataTable_0.TypeDocColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tL_SchmAbnDataTable_0.idAbnObjColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idAbnObj' in table 'tL_SchmAbn' is DBNull.", exception);
                }
                return num;
            }

            public void method_3(int int_0)
            {
                base[this.tL_SchmAbnDataTable_0.idAbnObjColumn] = int_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.tL_SchmAbnDataTable_0.idPointColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idPoint' in table 'tL_SchmAbn' is DBNull.", exception);
                }
                return num;
            }

            public void method_5(int int_0)
            {
                base[this.tL_SchmAbnDataTable_0.idPointColumn] = int_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.tL_SchmAbnDataTable_0.idDocColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idDoc' in table 'tL_SchmAbn' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.tL_SchmAbnDataTable_0.idDocColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.tL_SchmAbnDataTable_0.TypeDocColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TypeDoc' in table 'tL_SchmAbn' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.tL_SchmAbnDataTable_0.TypeDocColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idAbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tL_SchmAbnDataTable_0.idAbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idAbn' in table 'tL_SchmAbn' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tL_SchmAbnDataTable_0.idAbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tL_SchmAbnDataTable_0.idColumn];
                }
                set
                {
                    base[this.tL_SchmAbnDataTable_0.idColumn] = value;
                }
            }
        }

        public class Class69 : DataRow
        {
            private DataSetGES.vJ_MeasAbnObjDataTable vJ_MeasAbnObjDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class69(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasAbnObjDataTable_0 = (DataSetGES.vJ_MeasAbnObjDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MeasAbnObjDataTable_0.idSchmObjColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasAbnObjDataTable_0.idSchmObjColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasAbnObjDataTable_0.idsColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'ids' in table 'vJ_MeasAbnObj' is DBNull.", exception);
                }
                return str;
            }

            public void method_11(string string_0)
            {
                base[this.vJ_MeasAbnObjDataTable_0.idsColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_MeasAbnObjDataTable_0.TypeDocColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_MeasAbnObjDataTable_0.TypeDocColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MeasAbnObjDataTable_0.StreetColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vJ_MeasAbnObjDataTable_0.StreetColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MeasAbnObjDataTable_0.HouseColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vJ_MeasAbnObjDataTable_0.HouseColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_MeasAbnObjDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.vJ_MeasAbnObjDataTable_0.NameColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasAbnObjDataTable_0.TypeDocColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TypeDoc' in table 'vJ_MeasAbnObj' is DBNull.", exception);
                }
                return num;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_MeasAbnObjDataTable_0.codeAbonentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_MeasAbnObjDataTable_0.codeAbonentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vJ_MeasAbnObjDataTable_0.idsColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vJ_MeasAbnObjDataTable_0.idsColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_MeasAbnObjDataTable_0.TypeDocColumn] = int_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasAbnObjDataTable_0.StreetColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Street' in table 'vJ_MeasAbnObj' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_MeasAbnObjDataTable_0.StreetColumn] = string_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasAbnObjDataTable_0.HouseColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'House' in table 'vJ_MeasAbnObj' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_MeasAbnObjDataTable_0.HouseColumn] = string_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasAbnObjDataTable_0.codeAbonentColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'codeAbonent' in table 'vJ_MeasAbnObj' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_MeasAbnObjDataTable_0.codeAbonentColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasAbnObjDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_MeasAbnObj' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasAbnObjDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class70 : DataRow
        {
            private DataSetGES.vJ_GetMeasYearsDataTable vJ_GetMeasYearsDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class70(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_GetMeasYearsDataTable_0 = (DataSetGES.vJ_GetMeasYearsDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_GetMeasYearsDataTable_0.idObjListColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_GetMeasYearsDataTable_0.idObjListColumn] = int_0;
            }

            public int method_2()
            {
                return (int) base[this.vJ_GetMeasYearsDataTable_0.TypeDocColumn];
            }

            public void method_3(int int_0)
            {
                base[this.vJ_GetMeasYearsDataTable_0.TypeDocColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_GetMeasYearsDataTable_0.YearColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_GetMeasYearsDataTable_0.YearColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_GetMeasYearsDataTable_0.YearColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_GetMeasYears' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_GetMeasYearsDataTable_0.YearColumn] = value;
                }
            }
        }

        public class Class71 : DataRow
        {
            private DataSetGES.fn_J_GetCellLVByTransfDataTable fn_J_GetCellLVByTransfDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class71(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_GetCellLVByTransfDataTable_0 = (DataSetGES.fn_J_GetCellLVByTransfDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.fn_J_GetCellLVByTransfDataTable_0.IdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.fn_J_GetCellLVByTransfDataTable_0.IdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.fn_J_GetCellLVByTransfDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.fn_J_GetCellLVByTransfDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_GetCellLVByTransfDataTable_0.IdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetCellLVByTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_GetCellLVByTransfDataTable_0.IdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_GetCellLVByTransfDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetCellLVByTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_GetCellLVByTransfDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class72 : DataRow
        {
            private DataSetGES.fn_J_MeasCableCalcResultsDataTable fn_J_MeasCableCalcResultsDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class72(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_MeasCableCalcResultsDataTable_0 = (DataSetGES.fn_J_MeasCableCalcResultsDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIadColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIad' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIadColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIcnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIcn' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIcnColumn] = int_0;
            }

            public int method_12()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIodColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIod' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIodColumn] = int_0;
            }

            public int method_14()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIonColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIon' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_15(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIonColumn] = int_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.AvgIdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'AvgId' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.AvgIdColumn] = int_0;
            }

            public int method_18()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.AvgInColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'AvgIn' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_19(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.AvgInColumn] = int_0;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIanColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIan' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public int method_20()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.KNTdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'KNTd' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_21(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNTdColumn] = int_0;
            }

            public int method_22()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.KNTnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'KNTn' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_23(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNTnColumn] = int_0;
            }

            public int method_24()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.KNFdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'KNFd' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_25(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNFdColumn] = int_0;
            }

            public int method_26()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.KNFnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'KNFn' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_27(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNFnColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_28()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIadColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIadColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIanColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_30()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIanColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIanColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_32()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIbdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_33()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIbdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_34()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIbnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_35()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIcdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_37()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIcdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_38()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIcnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_39()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIcnColumn] = Convert.DBNull;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIbdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIbd' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_40()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIodColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_41()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIodColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_42()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.SumIonColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_43()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIonColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_44()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.AvgIdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.AvgIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_46()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.AvgInColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_47()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.AvgInColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_48()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.KNTdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_49()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNTdColumn] = Convert.DBNull;
            }

            public void method_5(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIbdColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_50()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.KNTnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNTnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_52()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.KNFdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_53()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNFdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_54()
            {
                return base.IsNull(this.fn_J_MeasCableCalcResultsDataTable_0.KNFnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_55()
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.KNFnColumn] = Convert.DBNull;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIbnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIbn' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIbnColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIcdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SumIcd' in table 'fn_J_MeasCableCalcResults' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.fn_J_MeasCableCalcResultsDataTable_0.SumIcdColumn] = int_0;
            }
        }

        public class Class73 : DataRow
        {
            private DataSetGES.tR_CableMakeupDataTable tR_CableMakeupDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class73(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tR_CableMakeupDataTable_0 = (DataSetGES.tR_CableMakeupDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string CableMakeup
            {
                get
                {
                    return (string) base[this.tR_CableMakeupDataTable_0.CableMakeupColumn];
                }
                set
                {
                    base[this.tR_CableMakeupDataTable_0.CableMakeupColumn] = value;
                }
            }
        }

        public class Class74 : DataRow
        {
            private DataSetGES.tR_CrossSectionDataTable tR_CrossSectionDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class74(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tR_CrossSectionDataTable_0 = (DataSetGES.tR_CrossSectionDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    return (double) base[this.tR_CrossSectionDataTable_0.CrossSectionColumn];
                }
                set
                {
                    base[this.tR_CrossSectionDataTable_0.CrossSectionColumn] = value;
                }
            }
        }

        public class Class75 : DataRow
        {
            private DataSetGES.tR_CableVoltageDataTable tR_CableVoltageDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class75(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tR_CableVoltageDataTable_0 = (DataSetGES.tR_CableVoltageDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.tR_CableVoltageDataTable_0.IdColumn];
                }
                set
                {
                    base[this.tR_CableVoltageDataTable_0.IdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    return (string) base[this.tR_CableVoltageDataTable_0.NameColumn];
                }
                set
                {
                    base[this.tR_CableVoltageDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class76 : DataRow
        {
            private DataSetGES.tR_CableAmperageDataTable tR_CableAmperageDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class76(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tR_CableAmperageDataTable_0 = (DataSetGES.tR_CableAmperageDataTable) base.Table;
            }

            public double method_0()
            {
                double num;
                try
                {
                    num = (double) base[this.tR_CableAmperageDataTable_0.AmperageColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Amperage' in table 'tR_CableAmperage' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(double double_0)
            {
                base[this.tR_CableAmperageDataTable_0.AmperageColumn] = double_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.tR_CableAmperageDataTable_0.AmperageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tR_CableAmperageDataTable_0.AmperageColumn] = Convert.DBNull;
            }
        }

        public class Class77 : DataRow
        {
            private DataSetGES.tR_CableWiresDataTable tR_CableWiresDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class77(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tR_CableWiresDataTable_0 = (DataSetGES.tR_CableWiresDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Wires
            {
                get
                {
                    return (int) base[this.tR_CableWiresDataTable_0.WiresColumn];
                }
                set
                {
                    base[this.tR_CableWiresDataTable_0.WiresColumn] = value;
                }
            }
        }

        public class Class78 : DataRow
        {
            private DataSetGES.vJ_CableReferenceDataTable vJ_CableReferenceDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class78(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_CableReferenceDataTable_0 = (DataSetGES.vJ_CableReferenceDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.WiresAddlColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.vJ_CableReferenceDataTable_0.WiresAddlColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.VoltageColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_CableReferenceDataTable_0.VoltageColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.AmperageTypeColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vJ_CableReferenceDataTable_0.AmperageTypeColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.AmperageValueColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_CableReferenceDataTable_0.AmperageValueColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.CrossSectionAddlColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vJ_CableReferenceDataTable_0.CrossSectionAddlColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.ResistanceColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_CableReferenceDataTable_0.ResistanceColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.ResistanceAddlColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vJ_CableReferenceDataTable_0.ResistanceAddlColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_CableReferenceDataTable_0.idVoltageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.vJ_CableReferenceDataTable_0.idVoltageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string AmperageType
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_CableReferenceDataTable_0.AmperageTypeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'AmperageType' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.AmperageTypeColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AmperageValue
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_CableReferenceDataTable_0.AmperageValueColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'AmperageValue' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.AmperageValueColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string CableMakeup
            {
                get
                {
                    return (string) base[this.vJ_CableReferenceDataTable_0.CableMakeupColumn];
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.CableMakeupColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    return (double) base[this.vJ_CableReferenceDataTable_0.CrossSectionColumn];
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.CrossSectionColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSectionAddl
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_CableReferenceDataTable_0.CrossSectionAddlColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CrossSectionAddl' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.CrossSectionAddlColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idVoltage
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CableReferenceDataTable_0.idVoltageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idVoltage' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.idVoltageColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_CableReferenceDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Resistance
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_CableReferenceDataTable_0.ResistanceColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Resistance' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.ResistanceColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double ResistanceAddl
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_CableReferenceDataTable_0.ResistanceAddlColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ResistanceAddl' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.ResistanceAddlColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Voltage
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.vJ_CableReferenceDataTable_0.VoltageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.VoltageColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Wires
            {
                get
                {
                    return (int) base[this.vJ_CableReferenceDataTable_0.WiresColumn];
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.WiresColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int WiresAddl
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CableReferenceDataTable_0.WiresAddlColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'WiresAddl' in table 'vJ_CableReference' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CableReferenceDataTable_0.WiresAddlColumn] = value;
                }
            }
        }

        public class Class79 : DataRow
        {
            private DataSetGES.vJ_TransfsDataTable vJ_TransfsDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class79(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_TransfsDataTable_0 = (DataSetGES.vJ_TransfsDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_TransfsDataTable_0.idSubstationColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_TransfsDataTable_0.idSubstationColumn] = int_0;
            }

            public int method_2()
            {
                return (int) base[this.vJ_TransfsDataTable_0.TypeDocColumn];
            }

            public void method_3(int int_0)
            {
                base[this.vJ_TransfsDataTable_0.TypeDocColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_TransfsDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_TransfsDataTable_0.idTransfColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    return (string) base[this.vJ_TransfsDataTable_0.NameColumn];
                }
                set
                {
                    base[this.vJ_TransfsDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class80 : DataRow
        {
            private DataSetGES.dtMeasCableRatioDataTable dtMeasCableRatioDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class80(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtMeasCableRatioDataTable_0 = (DataSetGES.dtMeasCableRatioDataTable) base.Table;
            }

            public string method_0()
            {
                string str;
                try
                {
                    str = (string) base[this.dtMeasCableRatioDataTable_0.NameSubstationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameSubstation' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return str;
            }

            public void method_1(string string_0)
            {
                base[this.dtMeasCableRatioDataTable_0.NameSubstationColumn] = string_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IanSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IanSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IanSumColumn] = int_0;
            }

            public int method_12()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IbdSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IbdSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IbdSumColumn] = int_0;
            }

            public int method_14()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IbnSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IbnSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_15(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IbnSumColumn] = int_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IcdSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IcdSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IcdSumColumn] = int_0;
            }

            public int method_18()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IcnSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IcnSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_19(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IcnSumColumn] = int_0;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.dtMeasCableRatioDataTable_0.NameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransf' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return str;
            }

            public int method_20()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IodSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IodSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_21(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IodSumColumn] = int_0;
            }

            public int method_22()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IonSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IonSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_23(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IonSumColumn] = int_0;
            }

            public int method_24()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IsrdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Isrd' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_25(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IsrdColumn] = int_0;
            }

            public int method_26()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IsrnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Isrn' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_27(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IsrnColumn] = int_0;
            }

            public int method_28()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.KntdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kntd' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_29(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.KntdColumn] = int_0;
            }

            public void method_3(string string_0)
            {
                base[this.dtMeasCableRatioDataTable_0.NameTransfColumn] = string_0;
            }

            public int method_30()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.KntnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kntn' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_31(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.KntnColumn] = int_0;
            }

            public int method_32()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.KpfdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kpfd' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_33(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.KpfdColumn] = int_0;
            }

            public int method_34()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.KpfnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kpfn' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_35(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.KpfnColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.NameSubstationColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.dtMeasCableRatioDataTable_0.NameSubstationColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_38()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.NameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_39()
            {
                base[this.dtMeasCableRatioDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.dtMeasCableRatioDataTable_0.NameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameBus' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_40()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.NameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_41()
            {
                base[this.dtMeasCableRatioDataTable_0.NameBusColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_42()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.WorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_43()
            {
                base[this.dtMeasCableRatioDataTable_0.WorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_44()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IadSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.dtMeasCableRatioDataTable_0.IadSumColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_46()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IanSumColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.dtMeasCableRatioDataTable_0.IanSumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_48()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IbdSumColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_49()
            {
                base[this.dtMeasCableRatioDataTable_0.IbdSumColumn] = Convert.DBNull;
            }

            public void method_5(string string_0)
            {
                base[this.dtMeasCableRatioDataTable_0.NameBusColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_50()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IbnSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_51()
            {
                base[this.dtMeasCableRatioDataTable_0.IbnSumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_52()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IcdSumColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_53()
            {
                base[this.dtMeasCableRatioDataTable_0.IcdSumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_54()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IcnSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_55()
            {
                base[this.dtMeasCableRatioDataTable_0.IcnSumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_56()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IodSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_57()
            {
                base[this.dtMeasCableRatioDataTable_0.IodSumColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_58()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IonSumColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_59()
            {
                base[this.dtMeasCableRatioDataTable_0.IonSumColumn] = Convert.DBNull;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.dtMeasCableRatioDataTable_0.WorkerColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Worker' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_60()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IsrdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_61()
            {
                base[this.dtMeasCableRatioDataTable_0.IsrdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_62()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.IsrnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_63()
            {
                base[this.dtMeasCableRatioDataTable_0.IsrnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_64()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.KntdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_65()
            {
                base[this.dtMeasCableRatioDataTable_0.KntdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_66()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.KntnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_67()
            {
                base[this.dtMeasCableRatioDataTable_0.KntnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_68()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.KpfdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_69()
            {
                base[this.dtMeasCableRatioDataTable_0.KpfdColumn] = Convert.DBNull;
            }

            public void method_7(string string_0)
            {
                base[this.dtMeasCableRatioDataTable_0.WorkerColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_70()
            {
                return base.IsNull(this.dtMeasCableRatioDataTable_0.KpfnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_71()
            {
                base[this.dtMeasCableRatioDataTable_0.KpfnColumn] = Convert.DBNull;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCableRatioDataTable_0.IadSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IadSum' in table 'dtMeasCableRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.dtMeasCableRatioDataTable_0.IadSumColumn] = int_0;
            }
        }

        public class Class81 : DataRow
        {
            private DataSetGES.fn_J_GetBusLVByTransfDataTable fn_J_GetBusLVByTransfDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class81(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_GetBusLVByTransfDataTable_0 = (DataSetGES.fn_J_GetBusLVByTransfDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.fn_J_GetBusLVByTransfDataTable_0.IdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.fn_J_GetBusLVByTransfDataTable_0.IdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.fn_J_GetBusLVByTransfDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.fn_J_GetBusLVByTransfDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.fn_J_GetBusLVByTransfDataTable_0.TypeCodeIdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.fn_J_GetBusLVByTransfDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_GetBusLVByTransfDataTable_0.IdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetBusLVByTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_GetBusLVByTransfDataTable_0.IdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_GetBusLVByTransfDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetBusLVByTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_GetBusLVByTransfDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_GetBusLVByTransfDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'fn_J_GetBusLVByTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_GetBusLVByTransfDataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        public class Class82 : DataRow
        {
            private DataSetGES.vJ_MeasurementReportDataTable vJ_MeasurementReportDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class82(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasurementReportDataTable_0 = (DataSetGES.vJ_MeasurementReportDataTable) base.Table;
            }

            public int method_0()
            {
                return (int) base[this.vJ_MeasurementReportDataTable_0.idObjListColumn];
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasurementReportDataTable_0.idObjListColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.TemperatureDColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vJ_MeasurementReportDataTable_0.TemperatureDColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.DateNColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_MeasurementReportDataTable_0.DateNColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.TemperatureNColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_MeasurementReportDataTable_0.TemperatureNColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.idWorkerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vJ_MeasurementReportDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.FIOColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.vJ_MeasurementReportDataTable_0.FIOColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                return (int) base[this.vJ_MeasurementReportDataTable_0.TypeDocColumn];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.DeletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.vJ_MeasurementReportDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.vJ_MeasurementReportDataTable_0.TypeDocColumn] = int_0;
            }

            public bool method_4()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.vJ_MeasurementReportDataTable_0.DeletedColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Deleted' in table 'vJ_MeasurementReport' is DBNull.", exception);
                }
                return flag;
            }

            public void method_5(bool bool_0)
            {
                base[this.vJ_MeasurementReportDataTable_0.DeletedColumn] = bool_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vJ_MeasurementReportDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_MeasurementReportDataTable_0.DateDColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.vJ_MeasurementReportDataTable_0.DateDColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateD
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.vJ_MeasurementReportDataTable_0.DateDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateD' in table 'vJ_MeasurementReport' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.DateDColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateN
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.vJ_MeasurementReportDataTable_0.DateNColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateN' in table 'vJ_MeasurementReport' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.DateNColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasurementReportDataTable_0.FIOColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_MeasurementReport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.FIOColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasurementReportDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'vJ_MeasurementReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.idWorkerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasurementReportDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasurementReportDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_MeasurementReport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemperatureD
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasurementReportDataTable_0.TemperatureDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureD' in table 'vJ_MeasurementReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.TemperatureDColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemperatureN
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasurementReportDataTable_0.TemperatureNColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureN' in table 'vJ_MeasurementReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasurementReportDataTable_0.TemperatureNColumn] = value;
                }
            }
        }

        public class Class83 : DataRow
        {
            private DataSetGES.dtMeasTransfAmperageDopDataReportDataTable dtMeasTransfAmperageDopDataReportDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class83(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtMeasTransfAmperageDopDataReportDataTable_0 = (DataSetGES.dtMeasTransfAmperageDopDataReportDataTable) base.Table;
            }

            public string method_0()
            {
                string str;
                try
                {
                    str = (string) base[this.dtMeasTransfAmperageDopDataReportDataTable_0.NameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameBus' in table 'dtMeasTransfAmperageDopDataReport' is DBNull.", exception);
                }
                return str;
            }

            public void method_1(string string_0)
            {
                base[this.dtMeasTransfAmperageDopDataReportDataTable_0.NameBusColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.dtMeasTransfAmperageDopDataReportDataTable_0.NameBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.dtMeasTransfAmperageDopDataReportDataTable_0.NameBusColumn] = Convert.DBNull;
            }
        }

        public class Class84 : DataRow
        {
            private DataSetGES.fn_J_ExcelessLoadReportDataTable fn_J_ExcelessLoadReportDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class84(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_ExcelessLoadReportDataTable_0 = (DataSetGES.fn_J_ExcelessLoadReportDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_ExcelessLoadReportDataTable_0.NetRegionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NetRegion' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.NetRegionColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_ExcelessLoadReportDataTable_0.IadColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Iad' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IadColumn] = int_0;
            }

            public int method_12()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_ExcelessLoadReportDataTable_0.IbdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ibd' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_13(int int_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IbdColumn] = int_0;
            }

            public int method_14()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_ExcelessLoadReportDataTable_0.IcdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Icd' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_15(int int_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IcdColumn] = int_0;
            }

            public int method_16()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_ExcelessLoadReportDataTable_0.IanColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ian' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_17(int int_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IanColumn] = int_0;
            }

            public int method_18()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_ExcelessLoadReportDataTable_0.IbnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Ibn' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_19(int int_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IbnColumn] = int_0;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_ExcelessLoadReportDataTable_0.SSSocrNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SSSocrName' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return str;
            }

            public int method_20()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_ExcelessLoadReportDataTable_0.IcnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Icn' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_21(int int_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IcnColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.NetRegionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.NetRegionColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_24()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.SSSocrNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_25()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.SSSocrNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.SubstationColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.SubstationColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.SwitchColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_29()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.SwitchColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.SSSocrNameColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.PermisAmperageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_31()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.PermisAmperageColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.IadColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_33()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IadColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_34()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.IbdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_35()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IbdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_36()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.IcdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_37()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IcdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_38()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.IanColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IanColumn] = Convert.DBNull;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_ExcelessLoadReportDataTable_0.SubstationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Substation' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_40()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.IbnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_41()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_42()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.IcnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.IcnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_44()
            {
                return base.IsNull(this.fn_J_ExcelessLoadReportDataTable_0.AddressColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_45()
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.AddressColumn] = Convert.DBNull;
            }

            public void method_5(string string_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.SubstationColumn] = string_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_ExcelessLoadReportDataTable_0.SwitchColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Switch' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.SwitchColumn] = string_0;
            }

            public double method_8()
            {
                double num;
                try
                {
                    num = (double) base[this.fn_J_ExcelessLoadReportDataTable_0.PermisAmperageColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'PermisAmperage' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(double double_0)
            {
                base[this.fn_J_ExcelessLoadReportDataTable_0.PermisAmperageColumn] = double_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_ExcelessLoadReportDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'fn_J_ExcelessLoadReport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_ExcelessLoadReportDataTable_0.AddressColumn] = value;
                }
            }
        }

        public class Class85 : DataRow
        {
            private DataSetGES.dtExcelessLoadAddlReportDataTable dtExcelessLoadAddlReportDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class85(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtExcelessLoadAddlReportDataTable_0 = (DataSetGES.dtExcelessLoadAddlReportDataTable) base.Table;
            }

            public decimal method_0()
            {
                decimal num;
                try
                {
                    num = (decimal) base[this.dtExcelessLoadAddlReportDataTable_0.CoefficientColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Coefficient' in table 'dtExcelessLoadAddlReport' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(decimal decimal_0)
            {
                base[this.dtExcelessLoadAddlReportDataTable_0.CoefficientColumn] = decimal_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.dtExcelessLoadAddlReportDataTable_0.YearColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.dtExcelessLoadAddlReportDataTable_0.YearColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.dtExcelessLoadAddlReportDataTable_0.CoefficientColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.dtExcelessLoadAddlReportDataTable_0.CoefficientColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.dtExcelessLoadAddlReportDataTable_0.YearColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'dtExcelessLoadAddlReport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.dtExcelessLoadAddlReportDataTable_0.YearColumn] = value;
                }
            }
        }

        public class Class86 : DataRow
        {
            private DataSetGES.vJ_CoefficientLoadingDataTable vJ_CoefficientLoadingDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class86(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_CoefficientLoadingDataTable_0 = (DataSetGES.vJ_CoefficientLoadingDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CoefficientLoadingDataTable_0.NetRegionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NetRegion' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.vJ_CoefficientLoadingDataTable_0.NetRegionColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.NetRegionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.NetRegionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.YearColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.YearColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.SocrNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.SocrNameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.SubstationColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.SubstationColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.TransformerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.TransformerColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CoefficientLoadingDataTable_0.SubstationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Substation' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.PowerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.PowerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.KntdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.KntdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.vJ_CoefficientLoadingDataTable_0.KntnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.vJ_CoefficientLoadingDataTable_0.KntnColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_CoefficientLoadingDataTable_0.SubstationColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CoefficientLoadingDataTable_0.TransformerColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Transformer' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_CoefficientLoadingDataTable_0.TransformerColumn] = string_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CoefficientLoadingDataTable_0.KntdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kntd' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.vJ_CoefficientLoadingDataTable_0.KntdColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CoefficientLoadingDataTable_0.KntnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kntn' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_CoefficientLoadingDataTable_0.KntnColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Power
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CoefficientLoadingDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CoefficientLoadingDataTable_0.PowerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SocrName
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_CoefficientLoadingDataTable_0.SocrNameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'SocrName' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_CoefficientLoadingDataTable_0.SocrNameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Year
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CoefficientLoadingDataTable_0.YearColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_CoefficientLoading' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CoefficientLoadingDataTable_0.YearColumn] = value;
                }
            }
        }

        public class Class87 : DataRow
        {
            private DataSetGES.dtCoefficientLoadingAddlDataTable dtCoefficientLoadingAddlDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class87(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtCoefficientLoadingAddlDataTable_0 = (DataSetGES.dtCoefficientLoadingAddlDataTable) base.Table;
            }

            public string method_0()
            {
                string str;
                try
                {
                    str = (string) base[this.dtCoefficientLoadingAddlDataTable_0.KntdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kntd' in table 'dtCoefficientLoadingAddl' is DBNull.", exception);
                }
                return str;
            }

            public void method_1(string string_0)
            {
                base[this.dtCoefficientLoadingAddlDataTable_0.KntdColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.dtCoefficientLoadingAddlDataTable_0.KntnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.dtCoefficientLoadingAddlDataTable_0.KntnColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.dtCoefficientLoadingAddlDataTable_0.KntnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kntn' in table 'dtCoefficientLoadingAddl' is DBNull.", exception);
                }
                return str;
            }

            public void method_3(string string_0)
            {
                base[this.dtCoefficientLoadingAddlDataTable_0.KntnColumn] = string_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.dtCoefficientLoadingAddlDataTable_0.YearColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5()
            {
                base[this.dtCoefficientLoadingAddlDataTable_0.YearColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.dtCoefficientLoadingAddlDataTable_0.PowerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.dtCoefficientLoadingAddlDataTable_0.PowerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.dtCoefficientLoadingAddlDataTable_0.KntdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.dtCoefficientLoadingAddlDataTable_0.KntdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Power
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.dtCoefficientLoadingAddlDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'dtCoefficientLoadingAddl' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.dtCoefficientLoadingAddlDataTable_0.PowerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Year
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.dtCoefficientLoadingAddlDataTable_0.YearColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'dtCoefficientLoadingAddl' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.dtCoefficientLoadingAddlDataTable_0.YearColumn] = value;
                }
            }
        }

        public class Class88 : DataRow
        {
            private DataSetGES.vJ_CoefficientIrregularityDataTable vJ_CoefficientIrregularityDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class88(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_CoefficientIrregularityDataTable_0 = (DataSetGES.vJ_CoefficientIrregularityDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CoefficientIrregularityDataTable_0.NetRegionColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NetRegion' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.NetRegionColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CoefficientIrregularityDataTable_0.KpfnColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kpfn' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.KpfnColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.NetRegionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.NetRegionColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.idNetRegionColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.idNetRegionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.YearColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.YearColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.SSSocrNameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.SSSocrNameColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CoefficientIrregularityDataTable_0.SSSocrNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'SSSocrName' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                }
                return str;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.SubstationColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.SubstationColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_22()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.TransformerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.TransformerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.PowerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.PowerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.KpfdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_27()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.KpfdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.vJ_CoefficientIrregularityDataTable_0.KpfnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_29()
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.KpfnColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.SSSocrNameColumn] = string_0;
            }

            public string method_4()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CoefficientIrregularityDataTable_0.SubstationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Substation' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                }
                return str;
            }

            public void method_5(string string_0)
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.SubstationColumn] = string_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_CoefficientIrregularityDataTable_0.TransformerColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Transformer' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.TransformerColumn] = string_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_CoefficientIrregularityDataTable_0.KpfdColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Kpfd' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.vJ_CoefficientIrregularityDataTable_0.KpfdColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idNetRegion
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_CoefficientIrregularityDataTable_0.idNetRegionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idNetRegion' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_CoefficientIrregularityDataTable_0.idNetRegionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Power
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CoefficientIrregularityDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CoefficientIrregularityDataTable_0.PowerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_CoefficientIrregularityDataTable_0.YearColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_CoefficientIrregularity' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_CoefficientIrregularityDataTable_0.YearColumn] = value;
                }
            }
        }

        public class Class89 : DataRow
        {
            private DataSetGES.vP_SubstationTransfDataTable vP_SubstationTransfDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class89(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vP_SubstationTransfDataTable_0 = (DataSetGES.vP_SubstationTransfDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.vP_SubstationTransfDataTable_0.CountChildColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'CountChild' in table 'vP_SubstationTransf' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.vP_SubstationTransfDataTable_0.CountChildColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vP_SubstationTransfDataTable_0.TextColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.vP_SubstationTransfDataTable_0.TextColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vP_SubstationTransfDataTable_0.CountChildColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vP_SubstationTransfDataTable_0.CountChildColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.vP_SubstationTransfDataTable_0.TypeCodeIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vP_SubstationTransfDataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vP_SubstationTransfDataTable_0.ParentKeyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vP_SubstationTransfDataTable_0.ParentKeyColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.vP_SubstationTransfDataTable_0.ValueColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.vP_SubstationTransfDataTable_0.ValueColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.vP_SubstationTransfDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.vP_SubstationTransfDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int) base[this.vP_SubstationTransfDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vP_SubstationTransfDataTable_0.IdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdParent
            {
                get
                {
                    return (int) base[this.vP_SubstationTransfDataTable_0.IdParentColumn];
                }
                set
                {
                    base[this.vP_SubstationTransfDataTable_0.IdParentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vP_SubstationTransfDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vP_SubstationTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vP_SubstationTransfDataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentKey
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vP_SubstationTransfDataTable_0.ParentKeyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'vP_SubstationTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vP_SubstationTransfDataTable_0.ParentKeyColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Text
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vP_SubstationTransfDataTable_0.TextColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Text' in table 'vP_SubstationTransf' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vP_SubstationTransfDataTable_0.TextColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vP_SubstationTransfDataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vP_SubstationTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vP_SubstationTransfDataTable_0.TypeCodeIdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Value
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.vP_SubstationTransfDataTable_0.ValueColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Value' in table 'vP_SubstationTransf' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vP_SubstationTransfDataTable_0.ValueColumn] = value;
                }
            }
        }

        public class Class90 : DataRow
        {
            private DataSetGES.tR_DocTemplateDataTable tR_DocTemplateDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class90(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tR_DocTemplateDataTable_0 = (DataSetGES.tR_DocTemplateDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tR_DocTemplateDataTable_0.DeletedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tR_DocTemplateDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateIn
            {
                get
                {
                    return (DateTime) base[this.tR_DocTemplateDataTable_0.DateInColumn];
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.DateInColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tR_DocTemplateDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tR_DocTemplate' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.DeletedColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public byte[] FileData
            {
                get
                {
                    return (byte[]) base[this.tR_DocTemplateDataTable_0.FileDataColumn];
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.FileDataColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileName
            {
                get
                {
                    return (string) base[this.tR_DocTemplateDataTable_0.FileNameColumn];
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.FileNameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTypeDoc
            {
                get
                {
                    return (int) base[this.tR_DocTemplateDataTable_0.idTypeDocColumn];
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.idTypeDocColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tR_DocTemplateDataTable_0.idColumn];
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.idColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime LastChange
            {
                get
                {
                    return (DateTime) base[this.tR_DocTemplateDataTable_0.LastChangeColumn];
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.LastChangeColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Size
            {
                get
                {
                    return (double) base[this.tR_DocTemplateDataTable_0.SizeColumn];
                }
                set
                {
                    base[this.tR_DocTemplateDataTable_0.SizeColumn] = value;
                }
            }
        }

        public class Class91 : DataRow
        {
            private DataSetGES.fn_J_GetCellTransfByBusLVDataTable fn_J_GetCellTransfByBusLVDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class91(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_GetCellTransfByBusLVDataTable_0 = (DataSetGES.fn_J_GetCellTransfByBusLVDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdBus' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdBusColumn] = int_0;
            }

            public string method_10()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameTransf' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", exception);
                }
                return str;
            }

            public void method_11(string string_0)
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameTransfColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusLVDataTable_0.IdBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusLVDataTable_0.NameBusColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusLVDataTable_0.IdCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_18()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusLVDataTable_0.NameCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameBusColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameBus' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", exception);
                }
                return str;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusLVDataTable_0.IdTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_21()
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdTransfColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.fn_J_GetCellTransfByBusLVDataTable_0.NameTransfColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_23()
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameTransfColumn] = Convert.DBNull;
            }

            public void method_3(string string_0)
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameBusColumn] = string_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdCell' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", exception);
                }
                return num;
            }

            public void method_5(int int_0)
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdCellColumn] = int_0;
            }

            public string method_6()
            {
                string str;
                try
                {
                    str = (string) base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameCellColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameCell' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", exception);
                }
                return str;
            }

            public void method_7(string string_0)
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.NameCellColumn] = string_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdTransfColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdTransf' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.fn_J_GetCellTransfByBusLVDataTable_0.IdTransfColumn] = int_0;
            }
        }

        public class Class92 : DataRow
        {
            private DataSetGES.dtBusesDataTable dtBusesDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class92(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtBusesDataTable_0 = (DataSetGES.dtBusesDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.dtBusesDataTable_0.idColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.dtBusesDataTable_0.idColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.dtBusesDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.dtBusesDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Int32_0
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.dtBusesDataTable_0.idColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'id' in table 'dtBuses' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.dtBusesDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.dtBusesDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'dtBuses' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.dtBusesDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class93 : DataRow
        {
            private DataSetGES.dtCellsDataTable dtCellsDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class93(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtCellsDataTable_0 = (DataSetGES.dtCellsDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.dtCellsDataTable_0.idColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.dtCellsDataTable_0.idColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.dtCellsDataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.dtCellsDataTable_0.NameColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.dtCellsDataTable_0.idColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'id' in table 'dtCells' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.dtCellsDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.dtCellsDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'dtCells' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.dtCellsDataTable_0.NameColumn] = value;
                }
            }
        }

        public class Class94 : DataRow
        {
            private DataSetGES.tJ_MeasurementDataTable tJ_MeasurementDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class94(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tJ_MeasurementDataTable_0 = (DataSetGES.tJ_MeasurementDataTable) base.Table;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_0()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.YearColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_1()
            {
                base[this.tJ_MeasurementDataTable_0.YearColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.idWorkerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.tJ_MeasurementDataTable_0.idWorkerColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.idWorkerCheckColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tJ_MeasurementDataTable_0.idWorkerCheckColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_14()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.CommentColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.tJ_MeasurementDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.idOldMeasurementColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.tJ_MeasurementDataTable_0.idOldMeasurementColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.DeletedColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.tJ_MeasurementDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.DateDColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.tJ_MeasurementDataTable_0.DateDColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.TemperatureDColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.tJ_MeasurementDataTable_0.TemperatureDColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.DateNColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.tJ_MeasurementDataTable_0.DateNColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.tJ_MeasurementDataTable_0.TemperatureNColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_9()
            {
                base[this.tJ_MeasurementDataTable_0.TemperatureNColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tJ_MeasurementDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.CommentColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateD
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tJ_MeasurementDataTable_0.DateDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateD' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.DateDColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateN
            {
                get
                {
                    DateTime time;
                    try
                    {
                        time = (DateTime) base[this.tJ_MeasurementDataTable_0.DateNColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'DateN' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return time;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.DateNColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.tJ_MeasurementDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idObjList
            {
                get
                {
                    return (int) base[this.tJ_MeasurementDataTable_0.idObjListColumn];
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.idObjListColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idOldMeasurement
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasurementDataTable_0.idOldMeasurementColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idOldMeasurement' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.idOldMeasurementColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorker
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasurementDataTable_0.idWorkerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.idWorkerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorkerCheck
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasurementDataTable_0.idWorkerCheckColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idWorkerCheck' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.idWorkerCheckColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.tJ_MeasurementDataTable_0.idColumn];
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemperatureD
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasurementDataTable_0.TemperatureDColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureD' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.TemperatureDColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemperatureN
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasurementDataTable_0.TemperatureNColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureN' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.TemperatureNColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeDoc
            {
                get
                {
                    return (int) base[this.tJ_MeasurementDataTable_0.TypeDocColumn];
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.TypeDocColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tJ_MeasurementDataTable_0.YearColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'tJ_Measurement' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tJ_MeasurementDataTable_0.YearColumn] = value;
                }
            }
        }

        public class Class95 : DataRow
        {
            private DataSetGES.vJ_MeasTransfPassportDataTable vJ_MeasTransfPassportDataTable_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal Class95(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasTransfPassportDataTable_0 = (DataSetGES.vJ_MeasTransfPassportDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.vJ_MeasTransfPassportDataTable_0.IdPassportColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdPassport' in table 'vJ_MeasTransfPassport' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.vJ_MeasTransfPassportDataTable_0.IdPassportColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_10()
            {
                return base.IsNull(this.vJ_MeasTransfPassportDataTable_0.PowerColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_MeasTransfPassportDataTable_0.PowerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_MeasTransfPassportDataTable_0.InvNumberColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.vJ_MeasTransfPassportDataTable_0.InvNumberColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MeasTransfPassportDataTable_0.UnomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.vJ_MeasTransfPassportDataTable_0.UnomColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MeasTransfPassportDataTable_0.InomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.vJ_MeasTransfPassportDataTable_0.InomColumn] = Convert.DBNull;
            }

            public string method_2()
            {
                string str;
                try
                {
                    str = (string) base[this.vJ_MeasTransfPassportDataTable_0.TransfNameColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'TransfName' in table 'vJ_MeasTransfPassport' is DBNull.", exception);
                }
                return str;
            }

            public void method_3(string string_0)
            {
                base[this.vJ_MeasTransfPassportDataTable_0.TransfNameColumn] = string_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_4()
            {
                return base.IsNull(this.vJ_MeasTransfPassportDataTable_0.IdPassportColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_MeasTransfPassportDataTable_0.IdPassportColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.vJ_MeasTransfPassportDataTable_0.TransfNameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7()
            {
                base[this.vJ_MeasTransfPassportDataTable_0.TransfNameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.vJ_MeasTransfPassportDataTable_0.TypeColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.vJ_MeasTransfPassportDataTable_0.TypeColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int) base[this.vJ_MeasTransfPassportDataTable_0.IdColumn];
                }
                set
                {
                    base[this.vJ_MeasTransfPassportDataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Inom
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasTransfPassportDataTable_0.InomColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Inom' in table 'vJ_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasTransfPassportDataTable_0.InomColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string InvNumber
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasTransfPassportDataTable_0.InvNumberColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'InvNumber' in table 'vJ_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasTransfPassportDataTable_0.InvNumberColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasTransfPassportDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasTransfPassportDataTable_0.PowerColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasTransfPassportDataTable_0.TypeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Type' in table 'vJ_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasTransfPassportDataTable_0.TypeColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Unom
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasTransfPassportDataTable_0.UnomColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Unom' in table 'vJ_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasTransfPassportDataTable_0.UnomColumn] = value;
                }
            }
        }

        public class Class96 : DataRow
        {
            private DataSetGES.fn_J_MeasTransfPassportDataTable fn_J_MeasTransfPassportDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class96(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.fn_J_MeasTransfPassportDataTable_0 = (DataSetGES.fn_J_MeasTransfPassportDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.fn_J_MeasTransfPassportDataTable_0.IdPassportColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IdPassport' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.IdPassportColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.PowerColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.PowerColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.InvNumberColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.InvNumberColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.UnomColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_15()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.UnomColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.InomColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.InomColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.InomHVColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.InomHVColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_2()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.IdColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_3()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.IdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.IdPassportColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.IdPassportColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_6()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.NameColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_8()
            {
                return base.IsNull(this.fn_J_MeasTransfPassportDataTable_0.TypeColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.fn_J_MeasTransfPassportDataTable_0.TypeColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_MeasTransfPassportDataTable_0.IdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.IdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Inom
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.fn_J_MeasTransfPassportDataTable_0.InomColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Inom' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.InomColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal InomHV
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.fn_J_MeasTransfPassportDataTable_0.InomHVColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'InomHV' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.InomHVColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvNumber
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_MeasTransfPassportDataTable_0.InvNumberColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'InvNumber' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.InvNumberColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_MeasTransfPassportDataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.NameColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Power
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.fn_J_MeasTransfPassportDataTable_0.PowerColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.PowerColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Type
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.fn_J_MeasTransfPassportDataTable_0.TypeColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Type' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.TypeColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Unom
            {
                get
                {
                    decimal num;
                    try
                    {
                        num = (decimal) base[this.fn_J_MeasTransfPassportDataTable_0.UnomColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Unom' in table 'fn_J_MeasTransfPassport' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.fn_J_MeasTransfPassportDataTable_0.UnomColumn] = value;
                }
            }
        }

        public class Class97 : DataRow
        {
            private DataSetGES.vJ_MeasCableDataTable vJ_MeasCableDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class97(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.vJ_MeasCableDataTable_0 = (DataSetGES.vJ_MeasCableDataTable) base.Table;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_0()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.idBusColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_1()
            {
                base[this.vJ_MeasCableDataTable_0.idBusColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.AddressColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_11()
            {
                base[this.vJ_MeasCableDataTable_0.AddressColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.CompanyColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.vJ_MeasCableDataTable_0.CompanyColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.idCableColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.vJ_MeasCableDataTable_0.idCableColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.idSchmAbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_17()
            {
                base[this.vJ_MeasCableDataTable_0.idSchmAbnColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.MakeupColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.vJ_MeasCableDataTable_0.MakeupColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_2()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.idCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.VoltageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.vJ_MeasCableDataTable_0.VoltageColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.WiresColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.vJ_MeasCableDataTable_0.WiresColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.CrossSectionColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.vJ_MeasCableDataTable_0.CrossSectionColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_26()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.PermisAmperageColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_27()
            {
                base[this.vJ_MeasCableDataTable_0.PermisAmperageColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_28()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IadColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_29()
            {
                base[this.vJ_MeasCableDataTable_0.IadColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_3()
            {
                base[this.vJ_MeasCableDataTable_0.idCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_30()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IanColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_31()
            {
                base[this.vJ_MeasCableDataTable_0.IanColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_32()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IbdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_33()
            {
                base[this.vJ_MeasCableDataTable_0.IbdColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_34()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IbnColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_35()
            {
                base[this.vJ_MeasCableDataTable_0.IbnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_36()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IcdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_37()
            {
                base[this.vJ_MeasCableDataTable_0.IcdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_38()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IcnColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_39()
            {
                base[this.vJ_MeasCableDataTable_0.IcnColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_4()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.OldCellColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_40()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IodColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_41()
            {
                base[this.vJ_MeasCableDataTable_0.IodColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_42()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.IonColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_43()
            {
                base[this.vJ_MeasCableDataTable_0.IonColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_44()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.CommentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_45()
            {
                base[this.vJ_MeasCableDataTable_0.CommentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_46()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.DeletedColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_47()
            {
                base[this.vJ_MeasCableDataTable_0.DeletedColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5()
            {
                base[this.vJ_MeasCableDataTable_0.OldCellColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_6()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.NameCellColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_7()
            {
                base[this.vJ_MeasCableDataTable_0.NameCellColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_8()
            {
                return base.IsNull(this.vJ_MeasCableDataTable_0.NameCableColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_9()
            {
                base[this.vJ_MeasCableDataTable_0.NameCableColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableDataTable_0.AddressColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.AddressColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableDataTable_0.CommentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.CommentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Company
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableDataTable_0.CompanyColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.CompanyColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSection
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_MeasCableDataTable_0.CrossSectionColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.CrossSectionColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool flag;
                    try
                    {
                        flag = (bool) base[this.vJ_MeasCableDataTable_0.DeletedColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return flag;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.DeletedColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IadColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IadColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ian
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IanColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IanColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IbdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IbdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IbnColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IcdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IcdColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IcnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IcnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.idBusColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.idBusColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCable
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.idCableColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.idCableColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.idCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.idCellColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int) base[this.vJ_MeasCableDataTable_0.idMeasurementColumn];
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.idMeasurementColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSchmAbn
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.idSchmAbnColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idSchmAbn' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.idSchmAbnColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int) base[this.vJ_MeasCableDataTable_0.idTransfColumn];
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.idTransfColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int32_0
            {
                get
                {
                    return (int) base[this.vJ_MeasCableDataTable_0.idColumn];
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.idColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iod
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IodColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Iod' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IodColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ion
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.IonColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Ion' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.IonColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Makeup
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableDataTable_0.MakeupColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.MakeupColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCable
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableDataTable_0.NameCableColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameCable' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.NameCableColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCell
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.vJ_MeasCableDataTable_0.NameCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.NameCellColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OldCell
            {
                get
                {
                    short num;
                    try
                    {
                        num = (short) base[this.vJ_MeasCableDataTable_0.OldCellColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'OldCell' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.OldCellColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double num;
                    try
                    {
                        num = (double) base[this.vJ_MeasCableDataTable_0.PermisAmperageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.PermisAmperageColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Voltage
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.VoltageColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.VoltageColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Wires
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.vJ_MeasCableDataTable_0.WiresColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_MeasCable' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.vJ_MeasCableDataTable_0.WiresColumn] = value;
                }
            }
        }

        public class Class98 : DataRow
        {
            private DataSetGES.dtMeasCellRatioDataTable dtMeasCellRatioDataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class98(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.dtMeasCellRatioDataTable_0 = (DataSetGES.dtMeasCellRatioDataTable) base.Table;
            }

            public int method_0()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCellRatioDataTable_0.IadSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IadSum' in table 'dtMeasCellRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_1(int int_0)
            {
                base[this.dtMeasCellRatioDataTable_0.IadSumColumn] = int_0;
            }

            public int method_10()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCellRatioDataTable_0.IcnSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IcnSum' in table 'dtMeasCellRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_11(int int_0)
            {
                base[this.dtMeasCellRatioDataTable_0.IcnSumColumn] = int_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_12()
            {
                return base.IsNull(this.dtMeasCellRatioDataTable_0.IadSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_13()
            {
                base[this.dtMeasCellRatioDataTable_0.IadSumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.dtMeasCellRatioDataTable_0.IanSumColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.dtMeasCellRatioDataTable_0.IanSumColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_16()
            {
                return base.IsNull(this.dtMeasCellRatioDataTable_0.IbdSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.dtMeasCellRatioDataTable_0.IbdSumColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.dtMeasCellRatioDataTable_0.IbnSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_19()
            {
                base[this.dtMeasCellRatioDataTable_0.IbnSumColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCellRatioDataTable_0.IanSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IanSum' in table 'dtMeasCellRatio' is DBNull.", exception);
                }
                return num;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_20()
            {
                return base.IsNull(this.dtMeasCellRatioDataTable_0.IcdSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.dtMeasCellRatioDataTable_0.IcdSumColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.dtMeasCellRatioDataTable_0.IcnSumColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.dtMeasCellRatioDataTable_0.IcnSumColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.dtMeasCellRatioDataTable_0.IanSumColumn] = int_0;
            }

            public int method_4()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCellRatioDataTable_0.IbdSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IbdSum' in table 'dtMeasCellRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_5(int int_0)
            {
                base[this.dtMeasCellRatioDataTable_0.IbdSumColumn] = int_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCellRatioDataTable_0.IbnSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IbnSum' in table 'dtMeasCellRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.dtMeasCellRatioDataTable_0.IbnSumColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.dtMeasCellRatioDataTable_0.IcdSumColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'IcdSum' in table 'dtMeasCellRatio' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.dtMeasCellRatioDataTable_0.IcdSumColumn] = int_0;
            }
        }

        public class Class99 : DataRow
        {
            private DataSetGES.tSchm_ObjList1DataTable tSchm_ObjList1DataTable_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Class99(DataRowBuilder dataRowBuilder_0) : base(dataRowBuilder_0)
            {
                this.tSchm_ObjList1DataTable_0 = (DataSetGES.tSchm_ObjList1DataTable) base.Table;
            }

            public bool method_0()
            {
                bool flag;
                try
                {
                    flag = (bool) base[this.tSchm_ObjList1DataTable_0.OnOffColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'OnOff' in table 'tSchm_ObjList1' is DBNull.", exception);
                }
                return flag;
            }

            public void method_1(bool bool_0)
            {
                base[this.tSchm_ObjList1DataTable_0.OnOffColumn] = bool_0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_10()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.NameColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_11()
            {
                base[this.tSchm_ObjList1DataTable_0.NameColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_12()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.TypeCodeIdColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_13()
            {
                base[this.tSchm_ObjList1DataTable_0.TypeCodeIdColumn] = Convert.DBNull;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_14()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.IdParentColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_15()
            {
                base[this.tSchm_ObjList1DataTable_0.IdParentColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_16()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.OnOffColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_17()
            {
                base[this.tSchm_ObjList1DataTable_0.OnOffColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_18()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.LocationColumn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_19()
            {
                base[this.tSchm_ObjList1DataTable_0.LocationColumn] = Convert.DBNull;
            }

            public int method_2()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList1DataTable_0.LocationColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'Location' in table 'tSchm_ObjList1' is DBNull.", exception);
                }
                return num;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool method_20()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.NamePColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_21()
            {
                base[this.tSchm_ObjList1DataTable_0.NamePColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_22()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.idParentAddlColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_23()
            {
                base[this.tSchm_ObjList1DataTable_0.idParentAddlColumn] = Convert.DBNull;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool method_24()
            {
                return base.IsNull(this.tSchm_ObjList1DataTable_0.idGroupColumn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_25()
            {
                base[this.tSchm_ObjList1DataTable_0.idGroupColumn] = Convert.DBNull;
            }

            public void method_3(int int_0)
            {
                base[this.tSchm_ObjList1DataTable_0.LocationColumn] = int_0;
            }

            public bool method_4()
            {
                return (bool) base[this.tSchm_ObjList1DataTable_0.DeletedColumn];
            }

            public void method_5(bool bool_0)
            {
                base[this.tSchm_ObjList1DataTable_0.DeletedColumn] = bool_0;
            }

            public int method_6()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList1DataTable_0.NamePColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'NameP' in table 'tSchm_ObjList1' is DBNull.", exception);
                }
                return num;
            }

            public void method_7(int int_0)
            {
                base[this.tSchm_ObjList1DataTable_0.NamePColumn] = int_0;
            }

            public int method_8()
            {
                int num;
                try
                {
                    num = (int) base[this.tSchm_ObjList1DataTable_0.idGroupColumn];
                }
                catch (InvalidCastException exception)
                {
                    throw new StrongTypingException("The value for column 'idGroup' in table 'tSchm_ObjList1' is DBNull.", exception);
                }
                return num;
            }

            public void method_9(int int_0)
            {
                base[this.tSchm_ObjList1DataTable_0.idGroupColumn] = int_0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int) base[this.tSchm_ObjList1DataTable_0.IdColumn];
                }
                set
                {
                    base[this.tSchm_ObjList1DataTable_0.IdColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdParent
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList1DataTable_0.IdParentColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'tSchm_ObjList1' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList1DataTable_0.IdParentColumn] = value;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idParentAddl
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList1DataTable_0.idParentAddlColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'tSchm_ObjList1' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList1DataTable_0.idParentAddlColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string str;
                    try
                    {
                        str = (string) base[this.tSchm_ObjList1DataTable_0.NameColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList1' is DBNull.", exception);
                    }
                    return str;
                }
                set
                {
                    base[this.tSchm_ObjList1DataTable_0.NameColumn] = value;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int num;
                    try
                    {
                        num = (int) base[this.tSchm_ObjList1DataTable_0.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException exception)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'tSchm_ObjList1' is DBNull.", exception);
                    }
                    return num;
                }
                set
                {
                    base[this.tSchm_ObjList1DataTable_0.TypeCodeIdColumn] = value;
                }
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate1(object sender, DataSetGES.EventArgs0 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate10(object sender, DataSetGES.EventArgs9 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate100(object sender, DataSetGES.EventArgs99 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate101(object sender, DataSetGES.EventArgs100 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate102(object sender, DataSetGES.EventArgs101 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate103(object sender, DataSetGES.EventArgs102 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate104(object sender, DataSetGES.EventArgs103 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate105(object sender, DataSetGES.EventArgs104 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate106(object sender, DataSetGES.EventArgs105 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate107(object sender, DataSetGES.EventArgs106 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate108(object sender, DataSetGES.EventArgs107 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate109(object sender, DataSetGES.EventArgs108 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate11(object sender, DataSetGES.EventArgs10 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate110(object sender, DataSetGES.EventArgs109 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate111(object sender, DataSetGES.EventArgs110 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate112(object sender, DataSetGES.EventArgs111 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate113(object sender, DataSetGES.EventArgs112 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate12(object sender, DataSetGES.EventArgs11 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate13(object sender, DataSetGES.EventArgs12 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate14(object sender, DataSetGES.EventArgs13 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate15(object sender, DataSetGES.EventArgs14 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate16(object sender, DataSetGES.EventArgs15 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate17(object sender, DataSetGES.EventArgs16 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate18(object sender, DataSetGES.EventArgs17 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate19(object sender, DataSetGES.EventArgs18 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate2(object sender, DataSetGES.EventArgs1 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate20(object sender, DataSetGES.EventArgs19 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate21(object sender, DataSetGES.EventArgs20 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate22(object sender, DataSetGES.EventArgs21 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate23(object sender, DataSetGES.EventArgs22 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate24(object sender, DataSetGES.EventArgs23 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate25(object sender, DataSetGES.EventArgs24 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate26(object sender, DataSetGES.EventArgs25 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate27(object sender, DataSetGES.EventArgs26 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate28(object sender, DataSetGES.EventArgs27 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate29(object sender, DataSetGES.EventArgs28 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate3(object sender, DataSetGES.EventArgs2 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate30(object sender, DataSetGES.EventArgs29 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate31(object sender, DataSetGES.EventArgs30 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate32(object sender, DataSetGES.EventArgs31 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate33(object sender, DataSetGES.EventArgs32 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate34(object sender, DataSetGES.EventArgs33 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate35(object sender, DataSetGES.EventArgs34 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate36(object sender, DataSetGES.EventArgs35 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate37(object sender, DataSetGES.EventArgs36 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate38(object sender, DataSetGES.EventArgs37 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate39(object sender, DataSetGES.EventArgs38 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate4(object sender, DataSetGES.EventArgs3 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate40(object sender, DataSetGES.EventArgs39 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate41(object sender, DataSetGES.EventArgs40 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate42(object sender, DataSetGES.EventArgs41 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate43(object sender, DataSetGES.EventArgs42 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate44(object sender, DataSetGES.EventArgs43 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate45(object sender, DataSetGES.EventArgs44 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate46(object sender, DataSetGES.EventArgs45 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate47(object sender, DataSetGES.EventArgs46 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate48(object sender, DataSetGES.EventArgs47 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate49(object sender, DataSetGES.EventArgs48 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate5(object sender, DataSetGES.EventArgs4 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate50(object sender, DataSetGES.EventArgs49 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate51(object sender, DataSetGES.EventArgs50 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate52(object sender, DataSetGES.EventArgs51 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate53(object sender, DataSetGES.EventArgs52 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate54(object sender, DataSetGES.EventArgs53 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate55(object sender, DataSetGES.EventArgs54 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate56(object sender, DataSetGES.EventArgs55 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate57(object sender, DataSetGES.EventArgs56 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate58(object sender, DataSetGES.EventArgs57 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate59(object sender, DataSetGES.EventArgs58 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate6(object sender, DataSetGES.EventArgs5 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate60(object sender, DataSetGES.EventArgs59 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate61(object sender, DataSetGES.EventArgs60 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate62(object sender, DataSetGES.EventArgs61 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate63(object sender, DataSetGES.EventArgs62 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate64(object sender, DataSetGES.EventArgs63 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate65(object sender, DataSetGES.EventArgs64 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate66(object sender, DataSetGES.EventArgs65 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate67(object sender, DataSetGES.EventArgs66 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate68(object sender, DataSetGES.EventArgs67 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate69(object sender, DataSetGES.EventArgs68 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate7(object sender, DataSetGES.EventArgs6 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate70(object sender, DataSetGES.EventArgs69 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate71(object sender, DataSetGES.EventArgs70 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate72(object sender, DataSetGES.EventArgs71 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate73(object sender, DataSetGES.EventArgs72 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate74(object sender, DataSetGES.EventArgs73 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate75(object sender, DataSetGES.EventArgs74 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate76(object sender, DataSetGES.EventArgs75 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate77(object sender, DataSetGES.EventArgs76 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate78(object sender, DataSetGES.EventArgs77 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate79(object sender, DataSetGES.EventArgs78 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate8(object sender, DataSetGES.EventArgs7 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate80(object sender, DataSetGES.EventArgs79 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate81(object sender, DataSetGES.EventArgs80 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate82(object sender, DataSetGES.EventArgs81 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate83(object sender, DataSetGES.EventArgs82 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate84(object sender, DataSetGES.EventArgs83 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate85(object sender, DataSetGES.EventArgs84 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate86(object sender, DataSetGES.EventArgs85 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate87(object sender, DataSetGES.EventArgs86 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate88(object sender, DataSetGES.EventArgs87 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate89(object sender, DataSetGES.EventArgs88 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate9(object sender, DataSetGES.EventArgs8 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate90(object sender, DataSetGES.EventArgs89 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate91(object sender, DataSetGES.EventArgs90 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate92(object sender, DataSetGES.EventArgs91 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate93(object sender, DataSetGES.EventArgs92 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate94(object sender, DataSetGES.EventArgs93 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate95(object sender, DataSetGES.EventArgs94 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate96(object sender, DataSetGES.EventArgs95 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate97(object sender, DataSetGES.EventArgs96 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate98(object sender, DataSetGES.EventArgs97 e);

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Delegate99(object sender, DataSetGES.EventArgs98 e);

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtAmountFreeCapasityDataTable : TypedTableBase<DataSetGES.Class103>
        {
            private DataColumn columnAmountFreeCapasity;
            private DataColumn columnNameBus;
            private DataColumn columnNameSubstation;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate60 dtAmountFreeCapasityRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate60 dtAmountFreeCapasityRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate60 dtAmountFreeCapasityRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate60 dtAmountFreeCapasityRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAmountFreeCapasityDataTable()
            {
                base.TableName = "dtAmountFreeCapasity";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtAmountFreeCapasityDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtAmountFreeCapasityDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtAmountFreeCapasityDataTable table1 = (DataSetGES.dtAmountFreeCapasityDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtAmountFreeCapasityDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class103);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class103 class103_0)
            {
                base.Rows.Add(class103_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class103 method_1(string string_0, string string_1, string string_2)
            {
                DataSetGES.Class103 row = (DataSetGES.Class103) base.NewRow();
                object[] objArray = new object[] { string_0, string_1, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnNameSubstation = base.Columns["NameSubstation"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnAmountFreeCapasity = base.Columns["AmountFreeCapasity"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnNameSubstation = new DataColumn("NameSubstation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSubstation);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnAmountFreeCapasity = new DataColumn("AmountFreeCapasity", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAmountFreeCapasity);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class103 method_4()
            {
                return (DataSetGES.Class103) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class103 class103_0)
            {
                base.Rows.Remove(class103_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class103(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtAmountFreeCapasityRowChanged != null)
                {
                    this.dtAmountFreeCapasityRowChanged(this, new DataSetGES.EventArgs59((DataSetGES.Class103) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtAmountFreeCapasityRowChanging != null)
                {
                    this.dtAmountFreeCapasityRowChanging(this, new DataSetGES.EventArgs59((DataSetGES.Class103) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtAmountFreeCapasityRowDeleted != null)
                {
                    this.dtAmountFreeCapasityRowDeleted(this, new DataSetGES.EventArgs59((DataSetGES.Class103) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtAmountFreeCapasityRowDeleting != null)
                {
                    this.dtAmountFreeCapasityRowDeleting(this, new DataSetGES.EventArgs59((DataSetGES.Class103) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtAmountFreeCapasityDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AmountFreeCapasityColumn
            {
                get
                {
                    return this.columnAmountFreeCapasity;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class103 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class103) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubstationColumn
            {
                get
                {
                    return this.columnNameSubstation;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtBusesDataTable : TypedTableBase<DataSetGES.Class92>
        {
            private DataColumn columnid;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate49 dtBusesRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate49 dtBusesRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate49 dtBusesRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate49 dtBusesRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBusesDataTable()
            {
                base.TableName = "dtBuses";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtBusesDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtBusesDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtBusesDataTable table1 = (DataSetGES.dtBusesDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtBusesDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class92);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class92 class92_0)
            {
                base.Rows.Add(class92_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class92 method_1(int int_0, string string_0)
            {
                DataSetGES.Class92 row = (DataSetGES.Class92) base.NewRow();
                object[] objArray = new object[] { int_0, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class92 method_4()
            {
                return (DataSetGES.Class92) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class92 class92_0)
            {
                base.Rows.Remove(class92_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class92(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtBusesRowChanged != null)
                {
                    this.dtBusesRowChanged(this, new DataSetGES.EventArgs48((DataSetGES.Class92) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtBusesRowChanging != null)
                {
                    this.dtBusesRowChanging(this, new DataSetGES.EventArgs48((DataSetGES.Class92) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtBusesRowDeleted != null)
                {
                    this.dtBusesRowDeleted(this, new DataSetGES.EventArgs48((DataSetGES.Class92) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtBusesRowDeleting != null)
                {
                    this.dtBusesRowDeleting(this, new DataSetGES.EventArgs48((DataSetGES.Class92) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtBusesDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class92 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class92) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtBusesTransfDataTable : TypedTableBase<DataSetGES.Class120>
        {
            private DataColumn columnidBus;
            private DataColumn columnidTransf;
            private DataColumn columnNameBus;
            private DataColumn columnNameBusTransf;
            private DataColumn columnNameTransf;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate77 dtBusesTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate77 dtBusesTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate77 dtBusesTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate77 dtBusesTransfRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtBusesTransfDataTable()
            {
                base.TableName = "dtBusesTransf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtBusesTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtBusesTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtBusesTransfDataTable table1 = (DataSetGES.dtBusesTransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtBusesTransfDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class120);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class120 class120_0)
            {
                base.Rows.Add(class120_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class120 method_1(int int_0, string string_0, int int_1, string string_1, string string_2)
            {
                DataSetGES.Class120 row = (DataSetGES.Class120) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidBus = base.Columns["idBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnNameBusTransf = base.Columns["NameBusTransf"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBusTransf = new DataColumn("NameBusTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBusTransf);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class120 method_4()
            {
                return (DataSetGES.Class120) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class120 class120_0)
            {
                base.Rows.Remove(class120_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class120(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtBusesTransfRowChanged != null)
                {
                    this.dtBusesTransfRowChanged(this, new DataSetGES.EventArgs76((DataSetGES.Class120) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtBusesTransfRowChanging != null)
                {
                    this.dtBusesTransfRowChanging(this, new DataSetGES.EventArgs76((DataSetGES.Class120) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtBusesTransfRowDeleted != null)
                {
                    this.dtBusesTransfRowDeleted(this, new DataSetGES.EventArgs76((DataSetGES.Class120) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtBusesTransfRowDeleting != null)
                {
                    this.dtBusesTransfRowDeleting(this, new DataSetGES.EventArgs76((DataSetGES.Class120) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtBusesTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class120 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class120) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusTransfColumn
            {
                get
                {
                    return this.columnNameBusTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtCellsDataTable : TypedTableBase<DataSetGES.Class93>
        {
            private DataColumn columnid;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate50 dtCellsRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate50 dtCellsRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate50 dtCellsRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate50 dtCellsRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCellsDataTable()
            {
                base.TableName = "dtCells";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtCellsDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtCellsDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtCellsDataTable table1 = (DataSetGES.dtCellsDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtCellsDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class93);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class93 class93_0)
            {
                base.Rows.Add(class93_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class93 method_1(int int_0, string string_0)
            {
                DataSetGES.Class93 row = (DataSetGES.Class93) base.NewRow();
                object[] objArray = new object[] { int_0, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class93 method_4()
            {
                return (DataSetGES.Class93) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class93 class93_0)
            {
                base.Rows.Remove(class93_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class93(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtCellsRowChanged != null)
                {
                    this.dtCellsRowChanged(this, new DataSetGES.EventArgs49((DataSetGES.Class93) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtCellsRowChanging != null)
                {
                    this.dtCellsRowChanging(this, new DataSetGES.EventArgs49((DataSetGES.Class93) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtCellsRowDeleted != null)
                {
                    this.dtCellsRowDeleted(this, new DataSetGES.EventArgs49((DataSetGES.Class93) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtCellsRowDeleting != null)
                {
                    this.dtCellsRowDeleting(this, new DataSetGES.EventArgs49((DataSetGES.Class93) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtCellsDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class93 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class93) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtCoefficientLoadingAddlDataTable : TypedTableBase<DataSetGES.Class87>
        {
            private DataColumn columnKntd;
            private DataColumn columnKntn;
            private DataColumn columnPower;
            private DataColumn columnYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate44 dtCoefficientLoadingAddlRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate44 dtCoefficientLoadingAddlRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate44 dtCoefficientLoadingAddlRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate44 dtCoefficientLoadingAddlRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtCoefficientLoadingAddlDataTable()
            {
                base.TableName = "dtCoefficientLoadingAddl";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCoefficientLoadingAddlDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtCoefficientLoadingAddlDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.dtCoefficientLoadingAddlDataTable table1 = (DataSetGES.dtCoefficientLoadingAddlDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtCoefficientLoadingAddlDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class87);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class87 class87_0)
            {
                base.Rows.Add(class87_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class87 method_1(int int_0, string string_0, string string_1, string string_2)
            {
                DataSetGES.Class87 row = (DataSetGES.Class87) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, string_1, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnYear = base.Columns["Year"];
                this.columnPower = base.Columns["Power"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnPower = new DataColumn("Power", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnKntd = new DataColumn("Kntd", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class87 method_4()
            {
                return (DataSetGES.Class87) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class87 class87_0)
            {
                base.Rows.Remove(class87_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class87(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtCoefficientLoadingAddlRowChanged != null)
                {
                    this.dtCoefficientLoadingAddlRowChanged(this, new DataSetGES.EventArgs43((DataSetGES.Class87) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtCoefficientLoadingAddlRowChanging != null)
                {
                    this.dtCoefficientLoadingAddlRowChanging(this, new DataSetGES.EventArgs43((DataSetGES.Class87) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtCoefficientLoadingAddlRowDeleted != null)
                {
                    this.dtCoefficientLoadingAddlRowDeleted(this, new DataSetGES.EventArgs43((DataSetGES.Class87) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtCoefficientLoadingAddlRowDeleting != null)
                {
                    this.dtCoefficientLoadingAddlRowDeleting(this, new DataSetGES.EventArgs43((DataSetGES.Class87) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtCoefficientLoadingAddlDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class87 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class87) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtExcelessLoadAddlReportDataTable : TypedTableBase<DataSetGES.Class85>
        {
            private DataColumn columnCoefficient;
            private DataColumn columnYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate42 dtExcelessLoadAddlReportRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate42 dtExcelessLoadAddlReportRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate42 dtExcelessLoadAddlReportRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate42 dtExcelessLoadAddlReportRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtExcelessLoadAddlReportDataTable()
            {
                base.TableName = "dtExcelessLoadAddlReport";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtExcelessLoadAddlReportDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtExcelessLoadAddlReportDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.dtExcelessLoadAddlReportDataTable table1 = (DataSetGES.dtExcelessLoadAddlReportDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtExcelessLoadAddlReportDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class85);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class85 class85_0)
            {
                base.Rows.Add(class85_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class85 method_1(int int_0, decimal decimal_0)
            {
                DataSetGES.Class85 row = (DataSetGES.Class85) base.NewRow();
                object[] objArray = new object[] { int_0, decimal_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnYear = base.Columns["Year"];
                this.columnCoefficient = base.Columns["Coefficient"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnCoefficient = new DataColumn("Coefficient", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnCoefficient);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class85 method_4()
            {
                return (DataSetGES.Class85) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class85 class85_0)
            {
                base.Rows.Remove(class85_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class85(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtExcelessLoadAddlReportRowChanged != null)
                {
                    this.dtExcelessLoadAddlReportRowChanged(this, new DataSetGES.EventArgs41((DataSetGES.Class85) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtExcelessLoadAddlReportRowChanging != null)
                {
                    this.dtExcelessLoadAddlReportRowChanging(this, new DataSetGES.EventArgs41((DataSetGES.Class85) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtExcelessLoadAddlReportRowDeleted != null)
                {
                    this.dtExcelessLoadAddlReportRowDeleted(this, new DataSetGES.EventArgs41((DataSetGES.Class85) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtExcelessLoadAddlReportRowDeleting != null)
                {
                    this.dtExcelessLoadAddlReportRowDeleting(this, new DataSetGES.EventArgs41((DataSetGES.Class85) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtExcelessLoadAddlReportDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CoefficientColumn
            {
                get
                {
                    return this.columnCoefficient;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class85 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class85) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtMeasCableRatioDataTable : TypedTableBase<DataSetGES.Class80>
        {
            private DataColumn columnIadSum;
            private DataColumn columnIanSum;
            private DataColumn columnIbdSum;
            private DataColumn columnIbnSum;
            private DataColumn columnIcdSum;
            private DataColumn columnIcnSum;
            private DataColumn columnIodSum;
            private DataColumn columnIonSum;
            private DataColumn columnIsrd;
            private DataColumn columnIsrn;
            private DataColumn columnKntd;
            private DataColumn columnKntn;
            private DataColumn columnKpfd;
            private DataColumn columnKpfn;
            private DataColumn columnNameBus;
            private DataColumn columnNameSubstation;
            private DataColumn columnNameTransf;
            private DataColumn columnWorker;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate37 dtMeasCableRatioRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate37 dtMeasCableRatioRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate37 dtMeasCableRatioRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate37 dtMeasCableRatioRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtMeasCableRatioDataTable()
            {
                base.TableName = "dtMeasCableRatio";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtMeasCableRatioDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtMeasCableRatioDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.dtMeasCableRatioDataTable table1 = (DataSetGES.dtMeasCableRatioDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtMeasCableRatioDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class80);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class80 class80_0)
            {
                base.Rows.Add(class80_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class80 method_1(string string_0, string string_1, string string_2, string string_3, int int_0, int int_1, int int_2, int int_3, int int_4, int int_5, int int_6, int int_7, int int_8, int int_9, int int_10, int int_11, int int_12, int int_13)
            {
                DataSetGES.Class80 row = (DataSetGES.Class80) base.NewRow();
                object[] objArray = new object[] { 
                    string_0, string_1, string_2, string_3, int_0, int_1, int_2, int_3, int_4, int_5, int_6, int_7, int_8, int_9, int_10, int_11,
                    int_12, int_13
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnNameSubstation = base.Columns["NameSubstation"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnWorker = base.Columns["Worker"];
                this.columnIadSum = base.Columns["IadSum"];
                this.columnIanSum = base.Columns["IanSum"];
                this.columnIbdSum = base.Columns["IbdSum"];
                this.columnIbnSum = base.Columns["IbnSum"];
                this.columnIcdSum = base.Columns["IcdSum"];
                this.columnIcnSum = base.Columns["IcnSum"];
                this.columnIodSum = base.Columns["IodSum"];
                this.columnIonSum = base.Columns["IonSum"];
                this.columnIsrd = base.Columns["Isrd"];
                this.columnIsrn = base.Columns["Isrn"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
                this.columnKpfd = base.Columns["Kpfd"];
                this.columnKpfn = base.Columns["Kpfn"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnNameSubstation = new DataColumn("NameSubstation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSubstation);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnWorker = new DataColumn("Worker", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnWorker);
                this.columnIadSum = new DataColumn("IadSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIadSum);
                this.columnIanSum = new DataColumn("IanSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIanSum);
                this.columnIbdSum = new DataColumn("IbdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbdSum);
                this.columnIbnSum = new DataColumn("IbnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbnSum);
                this.columnIcdSum = new DataColumn("IcdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcdSum);
                this.columnIcnSum = new DataColumn("IcnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcnSum);
                this.columnIodSum = new DataColumn("IodSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIodSum);
                this.columnIonSum = new DataColumn("IonSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIonSum);
                this.columnIsrd = new DataColumn("Isrd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrd);
                this.columnIsrn = new DataColumn("Isrn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrn);
                this.columnKntd = new DataColumn("Kntd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
                this.columnKpfd = new DataColumn("Kpfd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfd);
                this.columnKpfn = new DataColumn("Kpfn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfn);
                this.columnIanSum.Caption = "IadSum";
                this.columnIbdSum.Caption = "IadSum";
                this.columnIbnSum.Caption = "IadSum";
                this.columnIcdSum.Caption = "IadSum";
                this.columnIcnSum.Caption = "IadSum";
                this.columnIodSum.Caption = "IadSum";
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class80 method_4()
            {
                return (DataSetGES.Class80) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class80 class80_0)
            {
                base.Rows.Remove(class80_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class80(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtMeasCableRatioRowChanged != null)
                {
                    this.dtMeasCableRatioRowChanged(this, new DataSetGES.EventArgs36((DataSetGES.Class80) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtMeasCableRatioRowChanging != null)
                {
                    this.dtMeasCableRatioRowChanging(this, new DataSetGES.EventArgs36((DataSetGES.Class80) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtMeasCableRatioRowDeleted != null)
                {
                    this.dtMeasCableRatioRowDeleted(this, new DataSetGES.EventArgs36((DataSetGES.Class80) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtMeasCableRatioRowDeleting != null)
                {
                    this.dtMeasCableRatioRowDeleting(this, new DataSetGES.EventArgs36((DataSetGES.Class80) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtMeasCableRatioDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IadSumColumn
            {
                get
                {
                    return this.columnIadSum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanSumColumn
            {
                get
                {
                    return this.columnIanSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdSumColumn
            {
                get
                {
                    return this.columnIbdSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnSumColumn
            {
                get
                {
                    return this.columnIbnSum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdSumColumn
            {
                get
                {
                    return this.columnIcdSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcnSumColumn
            {
                get
                {
                    return this.columnIcnSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IodSumColumn
            {
                get
                {
                    return this.columnIodSum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IonSumColumn
            {
                get
                {
                    return this.columnIonSum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrdColumn
            {
                get
                {
                    return this.columnIsrd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsrnColumn
            {
                get
                {
                    return this.columnIsrn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class80 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class80) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KpfdColumn
            {
                get
                {
                    return this.columnKpfd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KpfnColumn
            {
                get
                {
                    return this.columnKpfn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubstationColumn
            {
                get
                {
                    return this.columnNameSubstation;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WorkerColumn
            {
                get
                {
                    return this.columnWorker;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtMeasCellRatioDataTable : TypedTableBase<DataSetGES.Class98>
        {
            private DataColumn columnIadSum;
            private DataColumn columnIanSum;
            private DataColumn columnIbdSum;
            private DataColumn columnIbnSum;
            private DataColumn columnIcdSum;
            private DataColumn columnIcnSum;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate55 dtMeasCellRatioRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate55 dtMeasCellRatioRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate55 dtMeasCellRatioRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate55 dtMeasCellRatioRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtMeasCellRatioDataTable()
            {
                base.TableName = "dtMeasCellRatio";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtMeasCellRatioDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtMeasCellRatioDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtMeasCellRatioDataTable table1 = (DataSetGES.dtMeasCellRatioDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtMeasCellRatioDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class98);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class98 class98_0)
            {
                base.Rows.Add(class98_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class98 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, int int_5)
            {
                DataSetGES.Class98 row = (DataSetGES.Class98) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, int_3, int_4, int_5 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnIadSum = base.Columns["IadSum"];
                this.columnIanSum = base.Columns["IanSum"];
                this.columnIbdSum = base.Columns["IbdSum"];
                this.columnIbnSum = base.Columns["IbnSum"];
                this.columnIcdSum = base.Columns["IcdSum"];
                this.columnIcnSum = base.Columns["IcnSum"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnIadSum = new DataColumn("IadSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIadSum);
                this.columnIanSum = new DataColumn("IanSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIanSum);
                this.columnIbdSum = new DataColumn("IbdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbdSum);
                this.columnIbnSum = new DataColumn("IbnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbnSum);
                this.columnIcdSum = new DataColumn("IcdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcdSum);
                this.columnIcnSum = new DataColumn("IcnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcnSum);
                this.columnIanSum.Caption = "IadSum";
                this.columnIbdSum.Caption = "IadSum";
                this.columnIbnSum.Caption = "IadSum";
                this.columnIcdSum.Caption = "IadSum";
                this.columnIcnSum.Caption = "IadSum";
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class98 method_4()
            {
                return (DataSetGES.Class98) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class98 class98_0)
            {
                base.Rows.Remove(class98_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class98(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtMeasCellRatioRowChanged != null)
                {
                    this.dtMeasCellRatioRowChanged(this, new DataSetGES.EventArgs54((DataSetGES.Class98) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtMeasCellRatioRowChanging != null)
                {
                    this.dtMeasCellRatioRowChanging(this, new DataSetGES.EventArgs54((DataSetGES.Class98) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtMeasCellRatioRowDeleted != null)
                {
                    this.dtMeasCellRatioRowDeleted(this, new DataSetGES.EventArgs54((DataSetGES.Class98) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtMeasCellRatioRowDeleting != null)
                {
                    this.dtMeasCellRatioRowDeleting(this, new DataSetGES.EventArgs54((DataSetGES.Class98) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtMeasCellRatioDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadSumColumn
            {
                get
                {
                    return this.columnIadSum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanSumColumn
            {
                get
                {
                    return this.columnIanSum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbdSumColumn
            {
                get
                {
                    return this.columnIbdSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnSumColumn
            {
                get
                {
                    return this.columnIbnSum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdSumColumn
            {
                get
                {
                    return this.columnIcdSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcnSumColumn
            {
                get
                {
                    return this.columnIcnSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class98 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class98) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class dtMeasTransfAmperageDopDataReportDataTable : TypedTableBase<DataSetGES.Class83>
        {
            private DataColumn columnNameBus;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate40 dtMeasTransfAmperageDopDataReportRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate40 dtMeasTransfAmperageDopDataReportRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate40 dtMeasTransfAmperageDopDataReportRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate40 dtMeasTransfAmperageDopDataReportRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtMeasTransfAmperageDopDataReportDataTable()
            {
                base.TableName = "dtMeasTransfAmperageDopDataReport";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtMeasTransfAmperageDopDataReportDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtMeasTransfAmperageDopDataReportDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtMeasTransfAmperageDopDataReportDataTable table1 = (DataSetGES.dtMeasTransfAmperageDopDataReportDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtMeasTransfAmperageDopDataReportDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class83);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class83 class83_0)
            {
                base.Rows.Add(class83_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class83 method_1(string string_0)
            {
                DataSetGES.Class83 row = (DataSetGES.Class83) base.NewRow();
                object[] objArray = new object[] { string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnNameBus = base.Columns["NameBus"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class83 method_4()
            {
                return (DataSetGES.Class83) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class83 class83_0)
            {
                base.Rows.Remove(class83_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class83(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.dtMeasTransfAmperageDopDataReportRowChanged != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowChanged(this, new DataSetGES.EventArgs39((DataSetGES.Class83) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.dtMeasTransfAmperageDopDataReportRowChanging != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowChanging(this, new DataSetGES.EventArgs39((DataSetGES.Class83) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.dtMeasTransfAmperageDopDataReportRowDeleted != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowDeleted(this, new DataSetGES.EventArgs39((DataSetGES.Class83) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.dtMeasTransfAmperageDopDataReportRowDeleting != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowDeleting(this, new DataSetGES.EventArgs39((DataSetGES.Class83) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "dtMeasTransfAmperageDopDataReportDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class83 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class83) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs0 : EventArgs
        {
            private DataSetGES.Class44 class44_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs0(DataSetGES.Class44 class44_1, DataRowAction dataRowAction_1)
            {
                this.class44_0 = class44_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class44 method_0()
            {
                return this.class44_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs1 : EventArgs
        {
            private DataSetGES.Class45 class45_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs1(DataSetGES.Class45 class45_1, DataRowAction dataRowAction_1)
            {
                this.class45_0 = class45_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class45 method_0()
            {
                return this.class45_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs10 : EventArgs
        {
            private DataSetGES.Class54 class54_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs10(DataSetGES.Class54 class54_1, DataRowAction dataRowAction_1)
            {
                this.class54_0 = class54_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class54 method_0()
            {
                return this.class54_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs100 : EventArgs
        {
            private DataSetGES.Class144 class144_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs100(DataSetGES.Class144 class144_1, DataRowAction dataRowAction_1)
            {
                this.class144_0 = class144_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class144 method_0()
            {
                return this.class144_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs101 : EventArgs
        {
            private DataSetGES.Class145 class145_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs101(DataSetGES.Class145 class145_1, DataRowAction dataRowAction_1)
            {
                this.class145_0 = class145_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class145 method_0()
            {
                return this.class145_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs102 : EventArgs
        {
            private DataSetGES.Class146 class146_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs102(DataSetGES.Class146 class146_1, DataRowAction dataRowAction_1)
            {
                this.class146_0 = class146_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class146 method_0()
            {
                return this.class146_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs103 : EventArgs
        {
            private DataSetGES.Class147 class147_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs103(DataSetGES.Class147 class147_1, DataRowAction dataRowAction_1)
            {
                this.class147_0 = class147_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class147 method_0()
            {
                return this.class147_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs104 : EventArgs
        {
            private DataSetGES.Class148 class148_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs104(DataSetGES.Class148 class148_1, DataRowAction dataRowAction_1)
            {
                this.class148_0 = class148_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class148 method_0()
            {
                return this.class148_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs105 : EventArgs
        {
            private DataSetGES.Class149 class149_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs105(DataSetGES.Class149 class149_1, DataRowAction dataRowAction_1)
            {
                this.class149_0 = class149_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class149 method_0()
            {
                return this.class149_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs106 : EventArgs
        {
            private DataSetGES.Class150 class150_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs106(DataSetGES.Class150 class150_1, DataRowAction dataRowAction_1)
            {
                this.class150_0 = class150_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class150 method_0()
            {
                return this.class150_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs107 : EventArgs
        {
            private DataSetGES.Class151 class151_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs107(DataSetGES.Class151 class151_1, DataRowAction dataRowAction_1)
            {
                this.class151_0 = class151_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class151 method_0()
            {
                return this.class151_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs108 : EventArgs
        {
            private DataSetGES.Class152 class152_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs108(DataSetGES.Class152 class152_1, DataRowAction dataRowAction_1)
            {
                this.class152_0 = class152_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class152 method_0()
            {
                return this.class152_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs109 : EventArgs
        {
            private DataSetGES.Class153 class153_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs109(DataSetGES.Class153 class153_1, DataRowAction dataRowAction_1)
            {
                this.class153_0 = class153_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class153 method_0()
            {
                return this.class153_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs11 : EventArgs
        {
            private DataSetGES.Class55 class55_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs11(DataSetGES.Class55 class55_1, DataRowAction dataRowAction_1)
            {
                this.class55_0 = class55_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class55 method_0()
            {
                return this.class55_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs110 : EventArgs
        {
            private DataSetGES.Class154 class154_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs110(DataSetGES.Class154 class154_1, DataRowAction dataRowAction_1)
            {
                this.class154_0 = class154_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class154 method_0()
            {
                return this.class154_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs111 : EventArgs
        {
            private DataSetGES.Class155 class155_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs111(DataSetGES.Class155 class155_1, DataRowAction dataRowAction_1)
            {
                this.class155_0 = class155_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class155 method_0()
            {
                return this.class155_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs112 : EventArgs
        {
            private DataSetGES.Class156 class156_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs112(DataSetGES.Class156 class156_1, DataRowAction dataRowAction_1)
            {
                this.class156_0 = class156_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class156 method_0()
            {
                return this.class156_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs12 : EventArgs
        {
            private DataSetGES.Class56 class56_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs12(DataSetGES.Class56 class56_1, DataRowAction dataRowAction_1)
            {
                this.class56_0 = class56_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class56 method_0()
            {
                return this.class56_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs13 : EventArgs
        {
            private DataSetGES.Class57 class57_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs13(DataSetGES.Class57 class57_1, DataRowAction dataRowAction_1)
            {
                this.class57_0 = class57_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class57 method_0()
            {
                return this.class57_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs14 : EventArgs
        {
            private DataSetGES.Class58 class58_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs14(DataSetGES.Class58 class58_1, DataRowAction dataRowAction_1)
            {
                this.class58_0 = class58_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class58 method_0()
            {
                return this.class58_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs15 : EventArgs
        {
            private DataSetGES.Class59 class59_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs15(DataSetGES.Class59 class59_1, DataRowAction dataRowAction_1)
            {
                this.class59_0 = class59_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class59 method_0()
            {
                return this.class59_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs16 : EventArgs
        {
            private DataSetGES.Class60 class60_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs16(DataSetGES.Class60 class60_1, DataRowAction dataRowAction_1)
            {
                this.class60_0 = class60_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class60 method_0()
            {
                return this.class60_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs17 : EventArgs
        {
            private DataSetGES.Class61 class61_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs17(DataSetGES.Class61 class61_1, DataRowAction dataRowAction_1)
            {
                this.class61_0 = class61_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class61 method_0()
            {
                return this.class61_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs18 : EventArgs
        {
            private DataSetGES.Class62 class62_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs18(DataSetGES.Class62 class62_1, DataRowAction dataRowAction_1)
            {
                this.class62_0 = class62_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class62 method_0()
            {
                return this.class62_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs19 : EventArgs
        {
            private DataSetGES.Class63 class63_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs19(DataSetGES.Class63 class63_1, DataRowAction dataRowAction_1)
            {
                this.class63_0 = class63_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class63 method_0()
            {
                return this.class63_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs2 : EventArgs
        {
            private DataSetGES.Class46 class46_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs2(DataSetGES.Class46 class46_1, DataRowAction dataRowAction_1)
            {
                this.class46_0 = class46_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class46 method_0()
            {
                return this.class46_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs20 : EventArgs
        {
            private DataSetGES.Class64 class64_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs20(DataSetGES.Class64 class64_1, DataRowAction dataRowAction_1)
            {
                this.class64_0 = class64_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class64 method_0()
            {
                return this.class64_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs21 : EventArgs
        {
            private DataSetGES.Class65 class65_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs21(DataSetGES.Class65 class65_1, DataRowAction dataRowAction_1)
            {
                this.class65_0 = class65_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class65 method_0()
            {
                return this.class65_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs22 : EventArgs
        {
            private DataSetGES.Class66 class66_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs22(DataSetGES.Class66 class66_1, DataRowAction dataRowAction_1)
            {
                this.class66_0 = class66_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class66 method_0()
            {
                return this.class66_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs23 : EventArgs
        {
            private DataSetGES.Class67 class67_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs23(DataSetGES.Class67 class67_1, DataRowAction dataRowAction_1)
            {
                this.class67_0 = class67_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class67 method_0()
            {
                return this.class67_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs24 : EventArgs
        {
            private DataSetGES.Class68 class68_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs24(DataSetGES.Class68 class68_1, DataRowAction dataRowAction_1)
            {
                this.class68_0 = class68_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class68 method_0()
            {
                return this.class68_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs25 : EventArgs
        {
            private DataSetGES.Class69 class69_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs25(DataSetGES.Class69 class69_1, DataRowAction dataRowAction_1)
            {
                this.class69_0 = class69_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class69 method_0()
            {
                return this.class69_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs26 : EventArgs
        {
            private DataSetGES.Class70 class70_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs26(DataSetGES.Class70 class70_1, DataRowAction dataRowAction_1)
            {
                this.class70_0 = class70_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class70 method_0()
            {
                return this.class70_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs27 : EventArgs
        {
            private DataSetGES.Class71 class71_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs27(DataSetGES.Class71 class71_1, DataRowAction dataRowAction_1)
            {
                this.class71_0 = class71_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class71 method_0()
            {
                return this.class71_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs28 : EventArgs
        {
            private DataSetGES.Class72 class72_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs28(DataSetGES.Class72 class72_1, DataRowAction dataRowAction_1)
            {
                this.class72_0 = class72_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class72 method_0()
            {
                return this.class72_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs29 : EventArgs
        {
            private DataSetGES.Class73 class73_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs29(DataSetGES.Class73 class73_1, DataRowAction dataRowAction_1)
            {
                this.class73_0 = class73_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class73 method_0()
            {
                return this.class73_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs3 : EventArgs
        {
            private DataSetGES.Class47 class47_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs3(DataSetGES.Class47 class47_1, DataRowAction dataRowAction_1)
            {
                this.class47_0 = class47_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class47 method_0()
            {
                return this.class47_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs30 : EventArgs
        {
            private DataSetGES.Class74 class74_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs30(DataSetGES.Class74 class74_1, DataRowAction dataRowAction_1)
            {
                this.class74_0 = class74_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class74 method_0()
            {
                return this.class74_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs31 : EventArgs
        {
            private DataSetGES.Class75 class75_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs31(DataSetGES.Class75 class75_1, DataRowAction dataRowAction_1)
            {
                this.class75_0 = class75_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class75 method_0()
            {
                return this.class75_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs32 : EventArgs
        {
            private DataSetGES.Class76 class76_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs32(DataSetGES.Class76 class76_1, DataRowAction dataRowAction_1)
            {
                this.class76_0 = class76_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class76 method_0()
            {
                return this.class76_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs33 : EventArgs
        {
            private DataSetGES.Class77 class77_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs33(DataSetGES.Class77 class77_1, DataRowAction dataRowAction_1)
            {
                this.class77_0 = class77_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class77 method_0()
            {
                return this.class77_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs34 : EventArgs
        {
            private DataSetGES.Class78 class78_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs34(DataSetGES.Class78 class78_1, DataRowAction dataRowAction_1)
            {
                this.class78_0 = class78_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class78 method_0()
            {
                return this.class78_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs35 : EventArgs
        {
            private DataSetGES.Class79 class79_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs35(DataSetGES.Class79 class79_1, DataRowAction dataRowAction_1)
            {
                this.class79_0 = class79_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class79 method_0()
            {
                return this.class79_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs36 : EventArgs
        {
            private DataSetGES.Class80 class80_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs36(DataSetGES.Class80 class80_1, DataRowAction dataRowAction_1)
            {
                this.class80_0 = class80_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class80 method_0()
            {
                return this.class80_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs37 : EventArgs
        {
            private DataSetGES.Class81 class81_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs37(DataSetGES.Class81 class81_1, DataRowAction dataRowAction_1)
            {
                this.class81_0 = class81_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class81 method_0()
            {
                return this.class81_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs38 : EventArgs
        {
            private DataSetGES.Class82 class82_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs38(DataSetGES.Class82 class82_1, DataRowAction dataRowAction_1)
            {
                this.class82_0 = class82_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class82 method_0()
            {
                return this.class82_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs39 : EventArgs
        {
            private DataSetGES.Class83 class83_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs39(DataSetGES.Class83 class83_1, DataRowAction dataRowAction_1)
            {
                this.class83_0 = class83_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class83 method_0()
            {
                return this.class83_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs4 : EventArgs
        {
            private DataSetGES.Class48 class48_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs4(DataSetGES.Class48 class48_1, DataRowAction dataRowAction_1)
            {
                this.class48_0 = class48_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class48 method_0()
            {
                return this.class48_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs40 : EventArgs
        {
            private DataSetGES.Class84 class84_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs40(DataSetGES.Class84 class84_1, DataRowAction dataRowAction_1)
            {
                this.class84_0 = class84_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class84 method_0()
            {
                return this.class84_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs41 : EventArgs
        {
            private DataSetGES.Class85 class85_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs41(DataSetGES.Class85 class85_1, DataRowAction dataRowAction_1)
            {
                this.class85_0 = class85_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class85 method_0()
            {
                return this.class85_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs42 : EventArgs
        {
            private DataSetGES.Class86 class86_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs42(DataSetGES.Class86 class86_1, DataRowAction dataRowAction_1)
            {
                this.class86_0 = class86_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class86 method_0()
            {
                return this.class86_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs43 : EventArgs
        {
            private DataSetGES.Class87 class87_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs43(DataSetGES.Class87 class87_1, DataRowAction dataRowAction_1)
            {
                this.class87_0 = class87_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class87 method_0()
            {
                return this.class87_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs44 : EventArgs
        {
            private DataSetGES.Class88 class88_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs44(DataSetGES.Class88 class88_1, DataRowAction dataRowAction_1)
            {
                this.class88_0 = class88_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class88 method_0()
            {
                return this.class88_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs45 : EventArgs
        {
            private DataSetGES.Class89 class89_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs45(DataSetGES.Class89 class89_1, DataRowAction dataRowAction_1)
            {
                this.class89_0 = class89_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class89 method_0()
            {
                return this.class89_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs46 : EventArgs
        {
            private DataSetGES.Class90 class90_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs46(DataSetGES.Class90 class90_1, DataRowAction dataRowAction_1)
            {
                this.class90_0 = class90_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class90 method_0()
            {
                return this.class90_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs47 : EventArgs
        {
            private DataSetGES.Class91 class91_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs47(DataSetGES.Class91 class91_1, DataRowAction dataRowAction_1)
            {
                this.class91_0 = class91_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class91 method_0()
            {
                return this.class91_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs48 : EventArgs
        {
            private DataSetGES.Class92 class92_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs48(DataSetGES.Class92 class92_1, DataRowAction dataRowAction_1)
            {
                this.class92_0 = class92_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class92 method_0()
            {
                return this.class92_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs49 : EventArgs
        {
            private DataSetGES.Class93 class93_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs49(DataSetGES.Class93 class93_1, DataRowAction dataRowAction_1)
            {
                this.class93_0 = class93_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class93 method_0()
            {
                return this.class93_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs5 : EventArgs
        {
            private DataSetGES.Class49 class49_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs5(DataSetGES.Class49 class49_1, DataRowAction dataRowAction_1)
            {
                this.class49_0 = class49_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class49 method_0()
            {
                return this.class49_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs50 : EventArgs
        {
            private DataSetGES.Class94 class94_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs50(DataSetGES.Class94 class94_1, DataRowAction dataRowAction_1)
            {
                this.class94_0 = class94_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class94 method_0()
            {
                return this.class94_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs51 : EventArgs
        {
            private DataSetGES.Class95 class95_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs51(DataSetGES.Class95 class95_1, DataRowAction dataRowAction_1)
            {
                this.class95_0 = class95_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class95 method_0()
            {
                return this.class95_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs52 : EventArgs
        {
            private DataSetGES.Class96 class96_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs52(DataSetGES.Class96 class96_1, DataRowAction dataRowAction_1)
            {
                this.class96_0 = class96_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class96 method_0()
            {
                return this.class96_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs53 : EventArgs
        {
            private DataSetGES.Class97 class97_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs53(DataSetGES.Class97 class97_1, DataRowAction dataRowAction_1)
            {
                this.class97_0 = class97_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class97 method_0()
            {
                return this.class97_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs54 : EventArgs
        {
            private DataSetGES.Class98 class98_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs54(DataSetGES.Class98 class98_1, DataRowAction dataRowAction_1)
            {
                this.class98_0 = class98_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class98 method_0()
            {
                return this.class98_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs55 : EventArgs
        {
            private DataSetGES.Class99 class99_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs55(DataSetGES.Class99 class99_1, DataRowAction dataRowAction_1)
            {
                this.class99_0 = class99_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class99 method_0()
            {
                return this.class99_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs56 : EventArgs
        {
            private DataSetGES.Class100 class100_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs56(DataSetGES.Class100 class100_1, DataRowAction dataRowAction_1)
            {
                this.class100_0 = class100_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class100 method_0()
            {
                return this.class100_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs57 : EventArgs
        {
            private DataSetGES.Class101 class101_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs57(DataSetGES.Class101 class101_1, DataRowAction dataRowAction_1)
            {
                this.class101_0 = class101_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class101 method_0()
            {
                return this.class101_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs58 : EventArgs
        {
            private DataSetGES.Class102 class102_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs58(DataSetGES.Class102 class102_1, DataRowAction dataRowAction_1)
            {
                this.class102_0 = class102_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class102 method_0()
            {
                return this.class102_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs59 : EventArgs
        {
            private DataSetGES.Class103 class103_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs59(DataSetGES.Class103 class103_1, DataRowAction dataRowAction_1)
            {
                this.class103_0 = class103_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class103 method_0()
            {
                return this.class103_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs6 : EventArgs
        {
            private DataSetGES.Class50 class50_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs6(DataSetGES.Class50 class50_1, DataRowAction dataRowAction_1)
            {
                this.class50_0 = class50_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class50 method_0()
            {
                return this.class50_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs60 : EventArgs
        {
            private DataSetGES.Class104 class104_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs60(DataSetGES.Class104 class104_1, DataRowAction dataRowAction_1)
            {
                this.class104_0 = class104_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class104 method_0()
            {
                return this.class104_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs61 : EventArgs
        {
            private DataSetGES.Class105 class105_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs61(DataSetGES.Class105 class105_1, DataRowAction dataRowAction_1)
            {
                this.class105_0 = class105_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class105 method_0()
            {
                return this.class105_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs62 : EventArgs
        {
            private DataSetGES.Class106 class106_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs62(DataSetGES.Class106 class106_1, DataRowAction dataRowAction_1)
            {
                this.class106_0 = class106_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class106 method_0()
            {
                return this.class106_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs63 : EventArgs
        {
            private DataSetGES.Class107 class107_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs63(DataSetGES.Class107 class107_1, DataRowAction dataRowAction_1)
            {
                this.class107_0 = class107_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class107 method_0()
            {
                return this.class107_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs64 : EventArgs
        {
            private DataSetGES.Class108 class108_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs64(DataSetGES.Class108 class108_1, DataRowAction dataRowAction_1)
            {
                this.class108_0 = class108_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class108 method_0()
            {
                return this.class108_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs65 : EventArgs
        {
            private DataSetGES.Class109 class109_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs65(DataSetGES.Class109 class109_1, DataRowAction dataRowAction_1)
            {
                this.class109_0 = class109_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class109 method_0()
            {
                return this.class109_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs66 : EventArgs
        {
            private DataSetGES.Class110 class110_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs66(DataSetGES.Class110 class110_1, DataRowAction dataRowAction_1)
            {
                this.class110_0 = class110_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class110 method_0()
            {
                return this.class110_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs67 : EventArgs
        {
            private DataSetGES.Class111 class111_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs67(DataSetGES.Class111 class111_1, DataRowAction dataRowAction_1)
            {
                this.class111_0 = class111_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class111 method_0()
            {
                return this.class111_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs68 : EventArgs
        {
            private DataSetGES.Class112 class112_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs68(DataSetGES.Class112 class112_1, DataRowAction dataRowAction_1)
            {
                this.class112_0 = class112_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class112 method_0()
            {
                return this.class112_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs69 : EventArgs
        {
            private DataSetGES.Class113 class113_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs69(DataSetGES.Class113 class113_1, DataRowAction dataRowAction_1)
            {
                this.class113_0 = class113_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class113 method_0()
            {
                return this.class113_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs7 : EventArgs
        {
            private DataSetGES.Class51 class51_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs7(DataSetGES.Class51 class51_1, DataRowAction dataRowAction_1)
            {
                this.class51_0 = class51_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class51 method_0()
            {
                return this.class51_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs70 : EventArgs
        {
            private DataSetGES.Class114 class114_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs70(DataSetGES.Class114 class114_1, DataRowAction dataRowAction_1)
            {
                this.class114_0 = class114_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class114 method_0()
            {
                return this.class114_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs71 : EventArgs
        {
            private DataSetGES.Class115 class115_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs71(DataSetGES.Class115 class115_1, DataRowAction dataRowAction_1)
            {
                this.class115_0 = class115_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class115 method_0()
            {
                return this.class115_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs72 : EventArgs
        {
            private DataSetGES.Class116 class116_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs72(DataSetGES.Class116 class116_1, DataRowAction dataRowAction_1)
            {
                this.class116_0 = class116_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class116 method_0()
            {
                return this.class116_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs73 : EventArgs
        {
            private DataSetGES.Class117 class117_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs73(DataSetGES.Class117 class117_1, DataRowAction dataRowAction_1)
            {
                this.class117_0 = class117_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class117 method_0()
            {
                return this.class117_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs74 : EventArgs
        {
            private DataSetGES.Class118 class118_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs74(DataSetGES.Class118 class118_1, DataRowAction dataRowAction_1)
            {
                this.class118_0 = class118_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class118 method_0()
            {
                return this.class118_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs75 : EventArgs
        {
            private DataSetGES.Class119 class119_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs75(DataSetGES.Class119 class119_1, DataRowAction dataRowAction_1)
            {
                this.class119_0 = class119_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class119 method_0()
            {
                return this.class119_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs76 : EventArgs
        {
            private DataSetGES.Class120 class120_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs76(DataSetGES.Class120 class120_1, DataRowAction dataRowAction_1)
            {
                this.class120_0 = class120_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class120 method_0()
            {
                return this.class120_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs77 : EventArgs
        {
            private DataSetGES.Class121 class121_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs77(DataSetGES.Class121 class121_1, DataRowAction dataRowAction_1)
            {
                this.class121_0 = class121_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class121 method_0()
            {
                return this.class121_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs78 : EventArgs
        {
            private DataSetGES.Class122 class122_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs78(DataSetGES.Class122 class122_1, DataRowAction dataRowAction_1)
            {
                this.class122_0 = class122_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class122 method_0()
            {
                return this.class122_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs79 : EventArgs
        {
            private DataSetGES.Class123 class123_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs79(DataSetGES.Class123 class123_1, DataRowAction dataRowAction_1)
            {
                this.class123_0 = class123_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class123 method_0()
            {
                return this.class123_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs8 : EventArgs
        {
            private DataSetGES.Class52 class52_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs8(DataSetGES.Class52 class52_1, DataRowAction dataRowAction_1)
            {
                this.class52_0 = class52_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class52 method_0()
            {
                return this.class52_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs80 : EventArgs
        {
            private DataSetGES.Class124 class124_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs80(DataSetGES.Class124 class124_1, DataRowAction dataRowAction_1)
            {
                this.class124_0 = class124_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class124 method_0()
            {
                return this.class124_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs81 : EventArgs
        {
            private DataSetGES.Class125 class125_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs81(DataSetGES.Class125 class125_1, DataRowAction dataRowAction_1)
            {
                this.class125_0 = class125_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class125 method_0()
            {
                return this.class125_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs82 : EventArgs
        {
            private DataSetGES.Class126 class126_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs82(DataSetGES.Class126 class126_1, DataRowAction dataRowAction_1)
            {
                this.class126_0 = class126_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class126 method_0()
            {
                return this.class126_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs83 : EventArgs
        {
            private DataSetGES.Class127 class127_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs83(DataSetGES.Class127 class127_1, DataRowAction dataRowAction_1)
            {
                this.class127_0 = class127_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class127 method_0()
            {
                return this.class127_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs84 : EventArgs
        {
            private DataSetGES.Class128 class128_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs84(DataSetGES.Class128 class128_1, DataRowAction dataRowAction_1)
            {
                this.class128_0 = class128_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class128 method_0()
            {
                return this.class128_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs85 : EventArgs
        {
            private DataSetGES.Class129 class129_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs85(DataSetGES.Class129 class129_1, DataRowAction dataRowAction_1)
            {
                this.class129_0 = class129_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class129 method_0()
            {
                return this.class129_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs86 : EventArgs
        {
            private DataSetGES.Class130 class130_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs86(DataSetGES.Class130 class130_1, DataRowAction dataRowAction_1)
            {
                this.class130_0 = class130_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class130 method_0()
            {
                return this.class130_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs87 : EventArgs
        {
            private DataSetGES.Class131 class131_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs87(DataSetGES.Class131 class131_1, DataRowAction dataRowAction_1)
            {
                this.class131_0 = class131_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class131 method_0()
            {
                return this.class131_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs88 : EventArgs
        {
            private DataSetGES.Class132 class132_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs88(DataSetGES.Class132 class132_1, DataRowAction dataRowAction_1)
            {
                this.class132_0 = class132_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class132 method_0()
            {
                return this.class132_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs89 : EventArgs
        {
            private DataSetGES.Class133 class133_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs89(DataSetGES.Class133 class133_1, DataRowAction dataRowAction_1)
            {
                this.class133_0 = class133_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class133 method_0()
            {
                return this.class133_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs9 : EventArgs
        {
            private DataSetGES.Class53 class53_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs9(DataSetGES.Class53 class53_1, DataRowAction dataRowAction_1)
            {
                this.class53_0 = class53_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class53 method_0()
            {
                return this.class53_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs90 : EventArgs
        {
            private DataSetGES.Class134 class134_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs90(DataSetGES.Class134 class134_1, DataRowAction dataRowAction_1)
            {
                this.class134_0 = class134_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class134 method_0()
            {
                return this.class134_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs91 : EventArgs
        {
            private DataSetGES.Class135 class135_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs91(DataSetGES.Class135 class135_1, DataRowAction dataRowAction_1)
            {
                this.class135_0 = class135_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class135 method_0()
            {
                return this.class135_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs92 : EventArgs
        {
            private DataSetGES.Class136 class136_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs92(DataSetGES.Class136 class136_1, DataRowAction dataRowAction_1)
            {
                this.class136_0 = class136_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class136 method_0()
            {
                return this.class136_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs93 : EventArgs
        {
            private DataSetGES.Class137 class137_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs93(DataSetGES.Class137 class137_1, DataRowAction dataRowAction_1)
            {
                this.class137_0 = class137_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class137 method_0()
            {
                return this.class137_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs94 : EventArgs
        {
            private DataSetGES.Class138 class138_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs94(DataSetGES.Class138 class138_1, DataRowAction dataRowAction_1)
            {
                this.class138_0 = class138_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class138 method_0()
            {
                return this.class138_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs95 : EventArgs
        {
            private DataSetGES.Class139 class139_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs95(DataSetGES.Class139 class139_1, DataRowAction dataRowAction_1)
            {
                this.class139_0 = class139_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class139 method_0()
            {
                return this.class139_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs96 : EventArgs
        {
            private DataSetGES.Class140 class140_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs96(DataSetGES.Class140 class140_1, DataRowAction dataRowAction_1)
            {
                this.class140_0 = class140_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class140 method_0()
            {
                return this.class140_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs97 : EventArgs
        {
            private DataSetGES.Class141 class141_0;
            private DataRowAction dataRowAction_0;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventArgs97(DataSetGES.Class141 class141_1, DataRowAction dataRowAction_1)
            {
                this.class141_0 = class141_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class141 method_0()
            {
                return this.class141_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs98 : EventArgs
        {
            private DataSetGES.Class142 class142_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs98(DataSetGES.Class142 class142_1, DataRowAction dataRowAction_1)
            {
                this.class142_0 = class142_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class142 method_0()
            {
                return this.class142_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventArgs99 : EventArgs
        {
            private DataSetGES.Class143 class143_0;
            private DataRowAction dataRowAction_0;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public EventArgs99(DataSetGES.Class143 class143_1, DataRowAction dataRowAction_1)
            {
                this.class143_0 = class143_1;
                this.dataRowAction_0 = dataRowAction_1;
            }

            public DataSetGES.Class143 method_0()
            {
                return this.class143_0;
            }

            public DataRowAction method_1()
            {
                return this.dataRowAction_0;
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_ExcelessLoadReportDataTable : TypedTableBase<DataSetGES.Class84>
        {
            private DataColumn columnAddress;
            private DataColumn columnIad;
            private DataColumn columnIan;
            private DataColumn columnIbd;
            private DataColumn columnIbn;
            private DataColumn columnIcd;
            private DataColumn columnIcn;
            private DataColumn columnNetRegion;
            private DataColumn columnPermisAmperage;
            private DataColumn columnSSSocrName;
            private DataColumn columnSubstation;
            private DataColumn columnSwitch;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate41 fn_J_ExcelessLoadReportRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate41 fn_J_ExcelessLoadReportRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate41 fn_J_ExcelessLoadReportRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate41 fn_J_ExcelessLoadReportRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_ExcelessLoadReportDataTable()
            {
                base.TableName = "fn_J_ExcelessLoadReport";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_ExcelessLoadReportDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fn_J_ExcelessLoadReportDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_ExcelessLoadReportDataTable table1 = (DataSetGES.fn_J_ExcelessLoadReportDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_ExcelessLoadReportDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class84);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class84 class84_0)
            {
                base.Rows.Add(class84_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class84 method_1(int int_0, string string_0, string string_1, string string_2, double double_0, int int_1, int int_2, int int_3, int int_4, int int_5, int int_6, string string_3)
            {
                DataSetGES.Class84 row = (DataSetGES.Class84) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, string_1, string_2, double_0, int_1, int_2, int_3, int_4, int_5, int_6, string_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnNetRegion = base.Columns["NetRegion"];
                this.columnSSSocrName = base.Columns["SSSocrName"];
                this.columnSubstation = base.Columns["Substation"];
                this.columnSwitch = base.Columns["Switch"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcn = base.Columns["Icn"];
                this.columnAddress = base.Columns["Address"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnNetRegion = new DataColumn("NetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegion);
                this.columnSSSocrName = new DataColumn("SSSocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSSSocrName);
                this.columnSubstation = new DataColumn("Substation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubstation);
                this.columnSwitch = new DataColumn("Switch", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSwitch);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnSSSocrName.MaxLength = 50;
                this.columnSubstation.MaxLength = 0x200;
                this.columnSwitch.MaxLength = 0x200;
                this.columnAddress.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class84 method_4()
            {
                return (DataSetGES.Class84) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class84 class84_0)
            {
                base.Rows.Remove(class84_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class84(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_ExcelessLoadReportRowChanged != null)
                {
                    this.fn_J_ExcelessLoadReportRowChanged(this, new DataSetGES.EventArgs40((DataSetGES.Class84) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_ExcelessLoadReportRowChanging != null)
                {
                    this.fn_J_ExcelessLoadReportRowChanging(this, new DataSetGES.EventArgs40((DataSetGES.Class84) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_ExcelessLoadReportRowDeleted != null)
                {
                    this.fn_J_ExcelessLoadReportRowDeleted(this, new DataSetGES.EventArgs40((DataSetGES.Class84) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_ExcelessLoadReportRowDeleting != null)
                {
                    this.fn_J_ExcelessLoadReportRowDeleting(this, new DataSetGES.EventArgs40((DataSetGES.Class84) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_ExcelessLoadReportDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class84 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class84) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NetRegionColumn
            {
                get
                {
                    return this.columnNetRegion;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SSSocrNameColumn
            {
                get
                {
                    return this.columnSSSocrName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SubstationColumn
            {
                get
                {
                    return this.columnSubstation;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SwitchColumn
            {
                get
                {
                    return this.columnSwitch;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_GetBusLVByTransfDataTable : TypedTableBase<DataSetGES.Class81>
        {
            private DataColumn columnId;
            private DataColumn columnName;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate38 fn_J_GetBusLVByTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate38 fn_J_GetBusLVByTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate38 fn_J_GetBusLVByTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate38 fn_J_GetBusLVByTransfRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetBusLVByTransfDataTable()
            {
                base.TableName = "fn_J_GetBusLVByTransf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetBusLVByTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetBusLVByTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetBusLVByTransfDataTable table1 = (DataSetGES.fn_J_GetBusLVByTransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetBusLVByTransfDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class81);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class81 class81_0)
            {
                base.Rows.Add(class81_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class81 method_1(int int_0, string string_0, int int_1)
            {
                DataSetGES.Class81 row = (DataSetGES.Class81) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnName.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class81 method_4()
            {
                return (DataSetGES.Class81) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class81 class81_0)
            {
                base.Rows.Remove(class81_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class81(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusLVByTransfRowChanged != null)
                {
                    this.fn_J_GetBusLVByTransfRowChanged(this, new DataSetGES.EventArgs37((DataSetGES.Class81) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusLVByTransfRowChanging != null)
                {
                    this.fn_J_GetBusLVByTransfRowChanging(this, new DataSetGES.EventArgs37((DataSetGES.Class81) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusLVByTransfRowDeleted != null)
                {
                    this.fn_J_GetBusLVByTransfRowDeleted(this, new DataSetGES.EventArgs37((DataSetGES.Class81) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusLVByTransfRowDeleting != null)
                {
                    this.fn_J_GetBusLVByTransfRowDeleting(this, new DataSetGES.EventArgs37((DataSetGES.Class81) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_GetBusLVByTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class81 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class81) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_GetBusMVByTransfDataTable : TypedTableBase<DataSetGES.Class109>
        {
            private DataColumn columnId;
            private DataColumn columnName;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate66 fn_J_GetBusMVByTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate66 fn_J_GetBusMVByTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate66 fn_J_GetBusMVByTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate66 fn_J_GetBusMVByTransfRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetBusMVByTransfDataTable()
            {
                base.TableName = "fn_J_GetBusMVByTransf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetBusMVByTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetBusMVByTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetBusMVByTransfDataTable table1 = (DataSetGES.fn_J_GetBusMVByTransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetBusMVByTransfDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class109);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class109 class109_0)
            {
                base.Rows.Add(class109_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class109 method_1(int int_0, string string_0, int int_1)
            {
                DataSetGES.Class109 row = (DataSetGES.Class109) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnName.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class109 method_4()
            {
                return (DataSetGES.Class109) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class109 class109_0)
            {
                base.Rows.Remove(class109_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class109(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusMVByTransfRowChanged != null)
                {
                    this.fn_J_GetBusMVByTransfRowChanged(this, new DataSetGES.EventArgs65((DataSetGES.Class109) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusMVByTransfRowChanging != null)
                {
                    this.fn_J_GetBusMVByTransfRowChanging(this, new DataSetGES.EventArgs65((DataSetGES.Class109) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusMVByTransfRowDeleted != null)
                {
                    this.fn_J_GetBusMVByTransfRowDeleted(this, new DataSetGES.EventArgs65((DataSetGES.Class109) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_GetBusMVByTransfRowDeleting != null)
                {
                    this.fn_J_GetBusMVByTransfRowDeleting(this, new DataSetGES.EventArgs65((DataSetGES.Class109) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_GetBusMVByTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class109 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class109) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_GetCellCableLVByTransfDataTable : TypedTableBase<DataSetGES.Class67>
        {
            private DataColumn columnIdCable;
            private DataColumn columnIdCell;
            private DataColumn columnNameCable;
            private DataColumn columnNameCell;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate24 fn_J_GetCellCableLVByTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate24 fn_J_GetCellCableLVByTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate24 fn_J_GetCellCableLVByTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate24 fn_J_GetCellCableLVByTransfRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetCellCableLVByTransfDataTable()
            {
                base.TableName = "fn_J_GetCellCableLVByTransf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetCellCableLVByTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fn_J_GetCellCableLVByTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellCableLVByTransfDataTable table1 = (DataSetGES.fn_J_GetCellCableLVByTransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellCableLVByTransfDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class67);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class67 class67_0)
            {
                base.Rows.Add(class67_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class67 method_1(int int_0, string string_0, int int_1, string string_1)
            {
                DataSetGES.Class67 row = (DataSetGES.Class67) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnIdCell = base.Columns["IdCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnIdCable = base.Columns["IdCable"];
                this.columnNameCable = base.Columns["NameCable"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnIdCell = new DataColumn("IdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnIdCable = new DataColumn("IdCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCable);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnNameCell.MaxLength = 0x200;
                this.columnNameCable.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class67 method_4()
            {
                return (DataSetGES.Class67) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class67 class67_0)
            {
                base.Rows.Remove(class67_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class67(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellCableLVByTransfRowChanged != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowChanged(this, new DataSetGES.EventArgs23((DataSetGES.Class67) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellCableLVByTransfRowChanging != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowChanging(this, new DataSetGES.EventArgs23((DataSetGES.Class67) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellCableLVByTransfRowDeleted != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowDeleted(this, new DataSetGES.EventArgs23((DataSetGES.Class67) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellCableLVByTransfRowDeleting != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowDeleting(this, new DataSetGES.EventArgs23((DataSetGES.Class67) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_GetCellCableLVByTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdCableColumn
            {
                get
                {
                    return this.columnIdCable;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdCellColumn
            {
                get
                {
                    return this.columnIdCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class67 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class67) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_GetCellLVByTransfDataTable : TypedTableBase<DataSetGES.Class71>
        {
            private DataColumn columnId;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate28 fn_J_GetCellLVByTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate28 fn_J_GetCellLVByTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate28 fn_J_GetCellLVByTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate28 fn_J_GetCellLVByTransfRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetCellLVByTransfDataTable()
            {
                base.TableName = "fn_J_GetCellLVByTransf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetCellLVByTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetCellLVByTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellLVByTransfDataTable table1 = (DataSetGES.fn_J_GetCellLVByTransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellLVByTransfDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class71);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class71 class71_0)
            {
                base.Rows.Add(class71_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class71 method_1(int int_0, string string_0)
            {
                DataSetGES.Class71 row = (DataSetGES.Class71) base.NewRow();
                object[] objArray = new object[] { int_0, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnName.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class71 method_4()
            {
                return (DataSetGES.Class71) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class71 class71_0)
            {
                base.Rows.Remove(class71_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class71(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellLVByTransfRowChanged != null)
                {
                    this.fn_J_GetCellLVByTransfRowChanged(this, new DataSetGES.EventArgs27((DataSetGES.Class71) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellLVByTransfRowChanging != null)
                {
                    this.fn_J_GetCellLVByTransfRowChanging(this, new DataSetGES.EventArgs27((DataSetGES.Class71) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellLVByTransfRowDeleted != null)
                {
                    this.fn_J_GetCellLVByTransfRowDeleted(this, new DataSetGES.EventArgs27((DataSetGES.Class71) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellLVByTransfRowDeleting != null)
                {
                    this.fn_J_GetCellLVByTransfRowDeleting(this, new DataSetGES.EventArgs27((DataSetGES.Class71) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_GetCellLVByTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class71 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class71) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_GetCellTransfByBusHVDataTable : TypedTableBase<DataSetGES.Class104>
        {
            private DataColumn columnIdBus;
            private DataColumn columnIdCell;
            private DataColumn columnIdTransf;
            private DataColumn columnNameBus;
            private DataColumn columnNameCell;
            private DataColumn columnNameTransf;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate61 fn_J_GetCellTransfByBusHVRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate61 fn_J_GetCellTransfByBusHVRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate61 fn_J_GetCellTransfByBusHVRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate61 fn_J_GetCellTransfByBusHVRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetCellTransfByBusHVDataTable()
            {
                base.TableName = "fn_J_GetCellTransfByBusHV";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetCellTransfByBusHVDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fn_J_GetCellTransfByBusHVDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellTransfByBusHVDataTable table1 = (DataSetGES.fn_J_GetCellTransfByBusHVDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellTransfByBusHVDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class104);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class104 class104_0)
            {
                base.Rows.Add(class104_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class104 method_1(int int_0, string string_0, int int_1, string string_1, int int_2, string string_2)
            {
                DataSetGES.Class104 row = (DataSetGES.Class104) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, int_2, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnIdBus = base.Columns["IdBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnIdCell = base.Columns["IdCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnIdTransf = base.Columns["IdTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnIdBus = new DataColumn("IdBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnIdCell = new DataColumn("IdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnIdTransf = new DataColumn("IdTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBus.MaxLength = 0x200;
                this.columnNameCell.MaxLength = 0x200;
                this.columnNameTransf.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class104 method_4()
            {
                return (DataSetGES.Class104) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class104 class104_0)
            {
                base.Rows.Remove(class104_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class104(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusHVRowChanged != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowChanged(this, new DataSetGES.EventArgs60((DataSetGES.Class104) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusHVRowChanging != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowChanging(this, new DataSetGES.EventArgs60((DataSetGES.Class104) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusHVRowDeleted != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowDeleted(this, new DataSetGES.EventArgs60((DataSetGES.Class104) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusHVRowDeleting != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowDeleting(this, new DataSetGES.EventArgs60((DataSetGES.Class104) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_GetCellTransfByBusHVDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdBusColumn
            {
                get
                {
                    return this.columnIdBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdCellColumn
            {
                get
                {
                    return this.columnIdCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdTransfColumn
            {
                get
                {
                    return this.columnIdTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class104 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class104) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_GetCellTransfByBusLVDataTable : TypedTableBase<DataSetGES.Class91>
        {
            private DataColumn columnIdBus;
            private DataColumn columnIdCell;
            private DataColumn columnIdTransf;
            private DataColumn columnNameBus;
            private DataColumn columnNameCell;
            private DataColumn columnNameTransf;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate48 fn_J_GetCellTransfByBusLVRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate48 fn_J_GetCellTransfByBusLVRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate48 fn_J_GetCellTransfByBusLVRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate48 fn_J_GetCellTransfByBusLVRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetCellTransfByBusLVDataTable()
            {
                base.TableName = "fn_J_GetCellTransfByBusLV";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetCellTransfByBusLVDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetCellTransfByBusLVDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellTransfByBusLVDataTable table1 = (DataSetGES.fn_J_GetCellTransfByBusLVDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellTransfByBusLVDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class91);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class91 class91_0)
            {
                base.Rows.Add(class91_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class91 method_1(int int_0, string string_0, int int_1, string string_1, int int_2, string string_2)
            {
                DataSetGES.Class91 row = (DataSetGES.Class91) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, int_2, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnIdBus = base.Columns["IdBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnIdCell = base.Columns["IdCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnIdTransf = base.Columns["IdTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnIdBus = new DataColumn("IdBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnIdCell = new DataColumn("IdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnIdTransf = new DataColumn("IdTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBus.MaxLength = 0x200;
                this.columnNameCell.MaxLength = 0x200;
                this.columnNameTransf.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class91 method_4()
            {
                return (DataSetGES.Class91) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class91 class91_0)
            {
                base.Rows.Remove(class91_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class91(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusLVRowChanged != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowChanged(this, new DataSetGES.EventArgs47((DataSetGES.Class91) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusLVRowChanging != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowChanging(this, new DataSetGES.EventArgs47((DataSetGES.Class91) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusLVRowDeleted != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowDeleted(this, new DataSetGES.EventArgs47((DataSetGES.Class91) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_GetCellTransfByBusLVRowDeleting != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowDeleting(this, new DataSetGES.EventArgs47((DataSetGES.Class91) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_GetCellTransfByBusLVDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdBusColumn
            {
                get
                {
                    return this.columnIdBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdCellColumn
            {
                get
                {
                    return this.columnIdCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdTransfColumn
            {
                get
                {
                    return this.columnIdTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class91 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class91) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_GetTransfByBusLVDataTable : TypedTableBase<DataSetGES.Class116>
        {
            private DataColumn columnId;
            private DataColumn columnName;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate73 fn_J_GetTransfByBusLVRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate73 fn_J_GetTransfByBusLVRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate73 fn_J_GetTransfByBusLVRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate73 fn_J_GetTransfByBusLVRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetTransfByBusLVDataTable()
            {
                base.TableName = "fn_J_GetTransfByBusLV";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetTransfByBusLVDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetTransfByBusLVDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetTransfByBusLVDataTable table1 = (DataSetGES.fn_J_GetTransfByBusLVDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetTransfByBusLVDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class116);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class116 class116_0)
            {
                base.Rows.Add(class116_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class116 method_1(int int_0, string string_0, int int_1)
            {
                DataSetGES.Class116 row = (DataSetGES.Class116) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnName.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class116 method_4()
            {
                return (DataSetGES.Class116) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class116 class116_0)
            {
                base.Rows.Remove(class116_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class116(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_GetTransfByBusLVRowChanged != null)
                {
                    this.fn_J_GetTransfByBusLVRowChanged(this, new DataSetGES.EventArgs72((DataSetGES.Class116) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_GetTransfByBusLVRowChanging != null)
                {
                    this.fn_J_GetTransfByBusLVRowChanging(this, new DataSetGES.EventArgs72((DataSetGES.Class116) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_GetTransfByBusLVRowDeleted != null)
                {
                    this.fn_J_GetTransfByBusLVRowDeleted(this, new DataSetGES.EventArgs72((DataSetGES.Class116) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_GetTransfByBusLVRowDeleting != null)
                {
                    this.fn_J_GetTransfByBusLVRowDeleting(this, new DataSetGES.EventArgs72((DataSetGES.Class116) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_GetTransfByBusLVDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class116 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class116) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_MeasCableCalcResultsDataTable : TypedTableBase<DataSetGES.Class72>
        {
            private DataColumn columnAvgId;
            private DataColumn columnAvgIn;
            private DataColumn columnKNFd;
            private DataColumn columnKNFn;
            private DataColumn columnKNTd;
            private DataColumn columnKNTn;
            private DataColumn columnSumIad;
            private DataColumn columnSumIan;
            private DataColumn columnSumIbd;
            private DataColumn columnSumIbn;
            private DataColumn columnSumIcd;
            private DataColumn columnSumIcn;
            private DataColumn columnSumIod;
            private DataColumn columnSumIon;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate29 fn_J_MeasCableCalcResultsRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate29 fn_J_MeasCableCalcResultsRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate29 fn_J_MeasCableCalcResultsRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate29 fn_J_MeasCableCalcResultsRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_MeasCableCalcResultsDataTable()
            {
                base.TableName = "fn_J_MeasCableCalcResults";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_MeasCableCalcResultsDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_MeasCableCalcResultsDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_MeasCableCalcResultsDataTable table1 = (DataSetGES.fn_J_MeasCableCalcResultsDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_MeasCableCalcResultsDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class72);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class72 class72_0)
            {
                base.Rows.Add(class72_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class72 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, int int_5, int int_6, int int_7, int int_8, int int_9, int int_10, int int_11, int int_12, int int_13)
            {
                DataSetGES.Class72 row = (DataSetGES.Class72) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, int_3, int_4, int_5, int_6, int_7, int_8, int_9, int_10, int_11, int_12, int_13 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnSumIad = base.Columns["SumIad"];
                this.columnSumIan = base.Columns["SumIan"];
                this.columnSumIbd = base.Columns["SumIbd"];
                this.columnSumIbn = base.Columns["SumIbn"];
                this.columnSumIcd = base.Columns["SumIcd"];
                this.columnSumIcn = base.Columns["SumIcn"];
                this.columnSumIod = base.Columns["SumIod"];
                this.columnSumIon = base.Columns["SumIon"];
                this.columnAvgId = base.Columns["AvgId"];
                this.columnAvgIn = base.Columns["AvgIn"];
                this.columnKNTd = base.Columns["KNTd"];
                this.columnKNTn = base.Columns["KNTn"];
                this.columnKNFd = base.Columns["KNFd"];
                this.columnKNFn = base.Columns["KNFn"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnSumIad = new DataColumn("SumIad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIad);
                this.columnSumIan = new DataColumn("SumIan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIan);
                this.columnSumIbd = new DataColumn("SumIbd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbd);
                this.columnSumIbn = new DataColumn("SumIbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbn);
                this.columnSumIcd = new DataColumn("SumIcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcd);
                this.columnSumIcn = new DataColumn("SumIcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcn);
                this.columnSumIod = new DataColumn("SumIod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIod);
                this.columnSumIon = new DataColumn("SumIon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIon);
                this.columnAvgId = new DataColumn("AvgId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnAvgId);
                this.columnAvgIn = new DataColumn("AvgIn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnAvgIn);
                this.columnKNTd = new DataColumn("KNTd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNTd);
                this.columnKNTn = new DataColumn("KNTn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNTn);
                this.columnKNFd = new DataColumn("KNFd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNFd);
                this.columnKNFn = new DataColumn("KNFn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNFn);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class72 method_4()
            {
                return (DataSetGES.Class72) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class72 class72_0)
            {
                base.Rows.Remove(class72_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class72(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasCableCalcResultsRowChanged != null)
                {
                    this.fn_J_MeasCableCalcResultsRowChanged(this, new DataSetGES.EventArgs28((DataSetGES.Class72) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasCableCalcResultsRowChanging != null)
                {
                    this.fn_J_MeasCableCalcResultsRowChanging(this, new DataSetGES.EventArgs28((DataSetGES.Class72) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasCableCalcResultsRowDeleted != null)
                {
                    this.fn_J_MeasCableCalcResultsRowDeleted(this, new DataSetGES.EventArgs28((DataSetGES.Class72) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasCableCalcResultsRowDeleting != null)
                {
                    this.fn_J_MeasCableCalcResultsRowDeleting(this, new DataSetGES.EventArgs28((DataSetGES.Class72) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_MeasCableCalcResultsDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AvgIdColumn
            {
                get
                {
                    return this.columnAvgId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AvgInColumn
            {
                get
                {
                    return this.columnAvgIn;
                }
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class72 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class72) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KNFdColumn
            {
                get
                {
                    return this.columnKNFd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KNFnColumn
            {
                get
                {
                    return this.columnKNFn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KNTdColumn
            {
                get
                {
                    return this.columnKNTd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KNTnColumn
            {
                get
                {
                    return this.columnKNTn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIadColumn
            {
                get
                {
                    return this.columnSumIad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIanColumn
            {
                get
                {
                    return this.columnSumIan;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIbdColumn
            {
                get
                {
                    return this.columnSumIbd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIbnColumn
            {
                get
                {
                    return this.columnSumIbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIcdColumn
            {
                get
                {
                    return this.columnSumIcd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIcnColumn
            {
                get
                {
                    return this.columnSumIcn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIodColumn
            {
                get
                {
                    return this.columnSumIod;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIonColumn
            {
                get
                {
                    return this.columnSumIon;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class fn_J_MeasTransfPassportDataTable : TypedTableBase<DataSetGES.Class96>
        {
            private DataColumn columnId;
            private DataColumn columnIdPassport;
            private DataColumn columnInom;
            private DataColumn columnInomHV;
            private DataColumn columnInvNumber;
            private DataColumn columnName;
            private DataColumn columnPower;
            private DataColumn columnType;
            private DataColumn columnUnom;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate53 fn_J_MeasTransfPassportRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate53 fn_J_MeasTransfPassportRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate53 fn_J_MeasTransfPassportRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate53 fn_J_MeasTransfPassportRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_MeasTransfPassportDataTable()
            {
                base.TableName = "fn_J_MeasTransfPassport";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_MeasTransfPassportDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_MeasTransfPassportDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_MeasTransfPassportDataTable table1 = (DataSetGES.fn_J_MeasTransfPassportDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_MeasTransfPassportDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class96);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class96 class96_0)
            {
                base.Rows.Add(class96_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class96 method_1(int int_0, int int_1, string string_0, string string_1, int int_2, string string_2, decimal decimal_0, decimal decimal_1, decimal decimal_2)
            {
                DataSetGES.Class96 row = (DataSetGES.Class96) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, string_1, int_2, string_2, decimal_0, decimal_1, decimal_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdPassport = base.Columns["IdPassport"];
                this.columnName = base.Columns["Name"];
                this.columnType = base.Columns["Type"];
                this.columnPower = base.Columns["Power"];
                this.columnInvNumber = base.Columns["InvNumber"];
                this.columnUnom = base.Columns["Unom"];
                this.columnInom = base.Columns["Inom"];
                this.columnInomHV = base.Columns["InomHV"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdPassport = new DataColumn("IdPassport", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdPassport);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnType = new DataColumn("Type", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnInvNumber = new DataColumn("InvNumber", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnInvNumber);
                this.columnUnom = new DataColumn("Unom", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnUnom);
                this.columnInom = new DataColumn("Inom", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnInom);
                this.columnInomHV = new DataColumn("InomHV", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnInomHV);
                this.columnName.MaxLength = 0x200;
                this.columnType.MaxLength = 50;
                this.columnInvNumber.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class96 method_4()
            {
                return (DataSetGES.Class96) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class96 class96_0)
            {
                base.Rows.Remove(class96_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class96(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasTransfPassportRowChanged != null)
                {
                    this.fn_J_MeasTransfPassportRowChanged(this, new DataSetGES.EventArgs52((DataSetGES.Class96) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasTransfPassportRowChanging != null)
                {
                    this.fn_J_MeasTransfPassportRowChanging(this, new DataSetGES.EventArgs52((DataSetGES.Class96) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasTransfPassportRowDeleted != null)
                {
                    this.fn_J_MeasTransfPassportRowDeleted(this, new DataSetGES.EventArgs52((DataSetGES.Class96) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.fn_J_MeasTransfPassportRowDeleting != null)
                {
                    this.fn_J_MeasTransfPassportRowDeleting(this, new DataSetGES.EventArgs52((DataSetGES.Class96) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "fn_J_MeasTransfPassportDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdPassportColumn
            {
                get
                {
                    return this.columnIdPassport;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn InomColumn
            {
                get
                {
                    return this.columnInom;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn InomHVColumn
            {
                get
                {
                    return this.columnInomHV;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn InvNumberColumn
            {
                get
                {
                    return this.columnInvNumber;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class96 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class96) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeColumn
            {
                get
                {
                    return this.columnType;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UnomColumn
            {
                get
                {
                    return this.columnUnom;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnContactDataTable : TypedTableBase<DataSetGES.Class136>
        {
            private DataColumn columnComment;
            private DataColumn columnDateChange;
            private DataColumn columnemail;
            private DataColumn columnF;
            private DataColumn columnI;
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnO;
            private DataColumn columnPhone;
            private DataColumn columnPost;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate93 tAbnContactRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate93 tAbnContactRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate93 tAbnContactRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate93 tAbnContactRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tAbnContactDataTable()
            {
                base.TableName = "tAbnContact";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tAbnContactDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tAbnContactDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tAbnContactDataTable table1 = (DataSetGES.tAbnContactDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnContactDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class136);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class136 class136_0)
            {
                base.Rows.Add(class136_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class136 method_1(int int_0, string string_0, string string_1, string string_2, string string_3, string string_4, DateTime dateTime_0, string string_5, string string_6)
            {
                DataSetGES.Class136 row = (DataSetGES.Class136) base.NewRow();
                object[] objArray1 = new object[10];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = string_1;
                objArray1[4] = string_2;
                objArray1[5] = string_3;
                objArray1[6] = string_4;
                objArray1[7] = dateTime_0;
                objArray1[8] = string_5;
                objArray1[9] = string_6;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class136 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class136) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnF = base.Columns["F"];
                this.columnI = base.Columns["I"];
                this.columnO = base.Columns["O"];
                this.columnPost = base.Columns["Post"];
                this.columnPhone = base.Columns["Phone"];
                this.columnDateChange = base.Columns["DateChange"];
                this.columnComment = base.Columns["Comment"];
                this.columnemail = base.Columns["email"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnF = new DataColumn("F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnF);
                this.columnI = new DataColumn("I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI);
                this.columnO = new DataColumn("O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnO);
                this.columnPost = new DataColumn("Post", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPost);
                this.columnPhone = new DataColumn("Phone", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnDateChange = new DataColumn("DateChange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateChange);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnemail = new DataColumn("email", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnemail);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidAbn.AllowDBNull = false;
                this.columnF.MaxLength = 70;
                this.columnI.MaxLength = 70;
                this.columnO.MaxLength = 70;
                this.columnPost.MaxLength = 100;
                this.columnPhone.MaxLength = 100;
                this.columnComment.MaxLength = 500;
                this.columnemail.MaxLength = 100;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class136 method_5()
            {
                return (DataSetGES.Class136) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class136 class136_0)
            {
                base.Rows.Remove(class136_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class136(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnContactRowChanged != null)
                {
                    this.tAbnContactRowChanged(this, new DataSetGES.EventArgs92((DataSetGES.Class136) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnContactRowChanging != null)
                {
                    this.tAbnContactRowChanging(this, new DataSetGES.EventArgs92((DataSetGES.Class136) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnContactRowDeleted != null)
                {
                    this.tAbnContactRowDeleted(this, new DataSetGES.EventArgs92((DataSetGES.Class136) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnContactRowDeleting != null)
                {
                    this.tAbnContactRowDeleting(this, new DataSetGES.EventArgs92((DataSetGES.Class136) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnContactDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateChangeColumn
            {
                get
                {
                    return this.columnDateChange;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn emailColumn
            {
                get
                {
                    return this.columnemail;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FColumn
            {
                get
                {
                    return this.columnF;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IColumn
            {
                get
                {
                    return this.columnI;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class136 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class136) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn OColumn
            {
                get
                {
                    return this.columnO;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PhoneColumn
            {
                get
                {
                    return this.columnPhone;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PostColumn
            {
                get
                {
                    return this.columnPost;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnDataTable : TypedTableBase<DataSetGES.Class132>
        {
            private DataColumn columnCodeAbnId;
            private DataColumn columnCodeAbnStr;
            private DataColumn columnCodeAbonent;
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidWorker;
            private DataColumn columnName;
            private DataColumn columnTypeAbn;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate89 tAbnRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate89 tAbnRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate89 tAbnRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate89 tAbnRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tAbnDataTable()
            {
                base.TableName = "tAbn";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tAbnDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tAbnDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tAbnDataTable table1 = (DataSetGES.tAbnDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class132);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class132 class132_0)
            {
                base.Rows.Add(class132_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class132 method_1(int int_0, string string_0, int int_1, int int_2, bool bool_0, int int_3, string string_1)
            {
                DataSetGES.Class132 row = (DataSetGES.Class132) base.NewRow();
                object[] objArray1 = new object[8];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = int_1;
                objArray1[4] = int_2;
                objArray1[5] = bool_0;
                objArray1[6] = int_3;
                objArray1[7] = string_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class132 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class132) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnCodeAbonent = base.Columns["CodeAbonent"];
                this.columnName = base.Columns["Name"];
                this.columnTypeAbn = base.Columns["TypeAbn"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnCodeAbnId = base.Columns["CodeAbnId"];
                this.columnCodeAbnStr = base.Columns["CodeAbnStr"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnCodeAbonent = new DataColumn("CodeAbonent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnCodeAbonent);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeAbn = new DataColumn("TypeAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeAbn);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnCodeAbnId = new DataColumn("CodeAbnId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnCodeAbnId);
                this.columnCodeAbnStr = new DataColumn("CodeAbnStr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCodeAbnStr);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnCodeAbonent.AllowDBNull = false;
                this.columnName.MaxLength = 100;
                this.columnTypeAbn.AllowDBNull = false;
                this.columnidWorker.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnCodeAbnId.ReadOnly = true;
                this.columnCodeAbnStr.MaxLength = 50;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class132 method_5()
            {
                return (DataSetGES.Class132) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class132 class132_0)
            {
                base.Rows.Remove(class132_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class132(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnRowChanged != null)
                {
                    this.tAbnRowChanged(this, new DataSetGES.EventArgs88((DataSetGES.Class132) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnRowChanging != null)
                {
                    this.tAbnRowChanging(this, new DataSetGES.EventArgs88((DataSetGES.Class132) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnRowDeleted != null)
                {
                    this.tAbnRowDeleted(this, new DataSetGES.EventArgs88((DataSetGES.Class132) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnRowDeleting != null)
                {
                    this.tAbnRowDeleting(this, new DataSetGES.EventArgs88((DataSetGES.Class132) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CodeAbnIdColumn
            {
                get
                {
                    return this.columnCodeAbnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CodeAbnStrColumn
            {
                get
                {
                    return this.columnCodeAbnStr;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CodeAbonentColumn
            {
                get
                {
                    return this.columnCodeAbonent;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class132 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class132) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeAbnColumn
            {
                get
                {
                    return this.columnTypeAbn;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnDoc_DogovorDataTable : TypedTableBase<DataSetGES.Class130>
        {
            private DataColumn columnAkcept;
            private DataColumn columnBasisOF;
            private DataColumn columnComment;
            private DataColumn columnDateBegin;
            private DataColumn columnDateBreak;
            private DataColumn columnDateEnd;
            private DataColumn columnDateSend;
            private DataColumn columnDifference;
            private DataColumn columnDogDate;
            private DataColumn columnDogNumber;
            private DataColumn columnFlagBreak;
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnidDiffer;
            private DataColumn columnidList;
            private DataColumn columnManSignature;
            private DataColumn columnMethodFirst;
            private DataColumn columnMethodNext;
            private DataColumn columnSignature;
            private DataColumn columnTrebov;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate87 tAbnDoc_DogovorRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate87 tAbnDoc_DogovorRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate87 tAbnDoc_DogovorRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate87 tAbnDoc_DogovorRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tAbnDoc_DogovorDataTable()
            {
                base.TableName = "tAbnDoc_Dogovor";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tAbnDoc_DogovorDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tAbnDoc_DogovorDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tAbnDoc_DogovorDataTable table1 = (DataSetGES.tAbnDoc_DogovorDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnDoc_DogovorDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class130);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class130 class130_0)
            {
                base.Rows.Add(class130_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class130 method_1(int int_0, int int_1, int int_2, DateTime dateTime_0, DateTime dateTime_1, DateTime dateTime_2, bool bool_0, DateTime dateTime_3, DateTime dateTime_4, bool bool_1, string string_0, bool bool_2, int int_3, string string_1, bool bool_3, bool bool_4, int int_4, int int_5, string string_2)
            {
                DataSetGES.Class130 row = (DataSetGES.Class130) base.NewRow();
                object[] objArray1 = new object[20];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = dateTime_0;
                objArray1[5] = dateTime_1;
                objArray1[6] = dateTime_2;
                objArray1[7] = bool_0;
                objArray1[8] = dateTime_3;
                objArray1[9] = dateTime_4;
                objArray1[10] = bool_1;
                objArray1[11] = string_0;
                objArray1[12] = bool_2;
                objArray1[13] = int_3;
                objArray1[14] = string_1;
                objArray1[15] = bool_3;
                objArray1[0x10] = bool_4;
                objArray1[0x11] = int_4;
                objArray1[0x12] = int_5;
                objArray1[0x13] = string_2;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class130 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class130) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidList = base.Columns["idList"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnDogNumber = base.Columns["DogNumber"];
                this.columnDogDate = base.Columns["DogDate"];
                this.columnDateBegin = base.Columns["DateBegin"];
                this.columnDateEnd = base.Columns["DateEnd"];
                this.columnFlagBreak = base.Columns["FlagBreak"];
                this.columnDateBreak = base.Columns["DateBreak"];
                this.columnDateSend = base.Columns["DateSend"];
                this.columnSignature = base.Columns["Signature"];
                this.columnBasisOF = base.Columns["BasisOF"];
                this.columnDifference = base.Columns["Difference"];
                this.columnidDiffer = base.Columns["idDiffer"];
                this.columnComment = base.Columns["Comment"];
                this.columnTrebov = base.Columns["Trebov"];
                this.columnAkcept = base.Columns["Akcept"];
                this.columnMethodFirst = base.Columns["MethodFirst"];
                this.columnMethodNext = base.Columns["MethodNext"];
                this.columnManSignature = base.Columns["ManSignature"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidList = new DataColumn("idList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidList);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnDogNumber = new DataColumn("DogNumber", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnDogNumber);
                this.columnDogDate = new DataColumn("DogDate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDogDate);
                this.columnDateBegin = new DataColumn("DateBegin", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateBegin);
                this.columnDateEnd = new DataColumn("DateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateEnd);
                this.columnFlagBreak = new DataColumn("FlagBreak", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnFlagBreak);
                this.columnDateBreak = new DataColumn("DateBreak", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateBreak);
                this.columnDateSend = new DataColumn("DateSend", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateSend);
                this.columnSignature = new DataColumn("Signature", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnSignature);
                this.columnBasisOF = new DataColumn("BasisOF", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBasisOF);
                this.columnDifference = new DataColumn("Difference", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDifference);
                this.columnidDiffer = new DataColumn("idDiffer", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidDiffer);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnTrebov = new DataColumn("Trebov", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnTrebov);
                this.columnAkcept = new DataColumn("Akcept", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnAkcept);
                this.columnMethodFirst = new DataColumn("MethodFirst", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnMethodFirst);
                this.columnMethodNext = new DataColumn("MethodNext", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnMethodNext);
                this.columnManSignature = new DataColumn("ManSignature", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnManSignature);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidList.AllowDBNull = false;
                this.columnidAbn.AllowDBNull = false;
                this.columnDogNumber.AllowDBNull = false;
                this.columnBasisOF.MaxLength = 0xff;
                this.columnComment.MaxLength = 0x7fffffff;
                this.columnManSignature.MaxLength = 50;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class130 method_5()
            {
                return (DataSetGES.Class130) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class130 class130_0)
            {
                base.Rows.Remove(class130_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class130(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_DogovorRowChanged != null)
                {
                    this.tAbnDoc_DogovorRowChanged(this, new DataSetGES.EventArgs86((DataSetGES.Class130) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_DogovorRowChanging != null)
                {
                    this.tAbnDoc_DogovorRowChanging(this, new DataSetGES.EventArgs86((DataSetGES.Class130) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_DogovorRowDeleted != null)
                {
                    this.tAbnDoc_DogovorRowDeleted(this, new DataSetGES.EventArgs86((DataSetGES.Class130) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_DogovorRowDeleting != null)
                {
                    this.tAbnDoc_DogovorRowDeleting(this, new DataSetGES.EventArgs86((DataSetGES.Class130) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnDoc_DogovorDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AkceptColumn
            {
                get
                {
                    return this.columnAkcept;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn BasisOFColumn
            {
                get
                {
                    return this.columnBasisOF;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateBeginColumn
            {
                get
                {
                    return this.columnDateBegin;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateBreakColumn
            {
                get
                {
                    return this.columnDateBreak;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateEndColumn
            {
                get
                {
                    return this.columnDateEnd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateSendColumn
            {
                get
                {
                    return this.columnDateSend;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DifferenceColumn
            {
                get
                {
                    return this.columnDifference;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DogDateColumn
            {
                get
                {
                    return this.columnDogDate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DogNumberColumn
            {
                get
                {
                    return this.columnDogNumber;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FlagBreakColumn
            {
                get
                {
                    return this.columnFlagBreak;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idDifferColumn
            {
                get
                {
                    return this.columnidDiffer;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idListColumn
            {
                get
                {
                    return this.columnidList;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class130 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class130) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ManSignatureColumn
            {
                get
                {
                    return this.columnManSignature;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn MethodFirstColumn
            {
                get
                {
                    return this.columnMethodFirst;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MethodNextColumn
            {
                get
                {
                    return this.columnMethodNext;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SignatureColumn
            {
                get
                {
                    return this.columnSignature;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TrebovColumn
            {
                get
                {
                    return this.columnTrebov;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnDoc_ListDataTable : TypedTableBase<DataSetGES.Class137>
        {
            private DataColumn columnDeleted;
            private DataColumn columnDocDate;
            private DataColumn columnDocNumber;
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnidDocType;
            private DataColumn columnisActive;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate94 tAbnDoc_ListRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate94 tAbnDoc_ListRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate94 tAbnDoc_ListRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate94 tAbnDoc_ListRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tAbnDoc_ListDataTable()
            {
                base.TableName = "tAbnDoc_List";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tAbnDoc_ListDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tAbnDoc_ListDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tAbnDoc_ListDataTable table1 = (DataSetGES.tAbnDoc_ListDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnDoc_ListDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class137);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class137 class137_0)
            {
                base.Rows.Add(class137_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class137 method_1(int int_0, string string_0, DateTime dateTime_0, int int_1, bool bool_0, bool bool_1)
            {
                DataSetGES.Class137 row = (DataSetGES.Class137) base.NewRow();
                object[] objArray1 = new object[7];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = dateTime_0;
                objArray1[4] = int_1;
                objArray1[5] = bool_0;
                objArray1[6] = bool_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class137 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class137) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnDocNumber = base.Columns["DocNumber"];
                this.columnDocDate = base.Columns["DocDate"];
                this.columnidDocType = base.Columns["idDocType"];
                this.columnisActive = base.Columns["isActive"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnDocNumber = new DataColumn("DocNumber", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDocNumber);
                this.columnDocDate = new DataColumn("DocDate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDocDate);
                this.columnidDocType = new DataColumn("idDocType", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidDocType);
                this.columnisActive = new DataColumn("isActive", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisActive);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnDocNumber.MaxLength = 20;
                this.columnisActive.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class137 method_5()
            {
                return (DataSetGES.Class137) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class137 class137_0)
            {
                base.Rows.Remove(class137_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class137(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_ListRowChanged != null)
                {
                    this.tAbnDoc_ListRowChanged(this, new DataSetGES.EventArgs93((DataSetGES.Class137) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_ListRowChanging != null)
                {
                    this.tAbnDoc_ListRowChanging(this, new DataSetGES.EventArgs93((DataSetGES.Class137) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_ListRowDeleted != null)
                {
                    this.tAbnDoc_ListRowDeleted(this, new DataSetGES.EventArgs93((DataSetGES.Class137) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnDoc_ListRowDeleting != null)
                {
                    this.tAbnDoc_ListRowDeleting(this, new DataSetGES.EventArgs93((DataSetGES.Class137) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnDoc_ListDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocDateColumn
            {
                get
                {
                    return this.columnDocDate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocNumberColumn
            {
                get
                {
                    return this.columnDocNumber;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idDocTypeColumn
            {
                get
                {
                    return this.columnidDocType;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn isActiveColumn
            {
                get
                {
                    return this.columnisActive;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class137 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class137) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnObjDataTable : TypedTableBase<DataSetGES.Class133>
        {
            private DataColumn columnComment;
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnidMap;
            private DataColumn columnIdObjParent;
            private DataColumn columnidWorker;
            private DataColumn columnName;
            private DataColumn columnShortName;
            private DataColumn columntypeObj;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate90 tAbnObjRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate90 tAbnObjRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate90 tAbnObjRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate90 tAbnObjRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tAbnObjDataTable()
            {
                base.TableName = "tAbnObj";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tAbnObjDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tAbnObjDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tAbnObjDataTable table1 = (DataSetGES.tAbnObjDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnObjDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class133);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class133 class133_0)
            {
                base.Rows.Add(class133_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class133 method_1(int int_0, int int_1, int int_2, string string_0, int int_3, string string_1, int int_4, string string_2)
            {
                DataSetGES.Class133 row = (DataSetGES.Class133) base.NewRow();
                object[] objArray1 = new object[9];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = string_0;
                objArray1[5] = int_3;
                objArray1[6] = string_1;
                objArray1[7] = int_4;
                objArray1[8] = string_2;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class133 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class133) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnidMap = base.Columns["idMap"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnName = base.Columns["Name"];
                this.columnIdObjParent = base.Columns["IdObjParent"];
                this.columnComment = base.Columns["Comment"];
                this.columntypeObj = base.Columns["typeObj"];
                this.columnShortName = base.Columns["ShortName"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnidMap = new DataColumn("idMap", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMap);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnIdObjParent = new DataColumn("IdObjParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdObjParent);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columntypeObj = new DataColumn("typeObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntypeObj);
                this.columnShortName = new DataColumn("ShortName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnShortName);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnName.MaxLength = 0xff;
                this.columnComment.MaxLength = 0x200;
                this.columnShortName.MaxLength = 0xff;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class133 method_5()
            {
                return (DataSetGES.Class133) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class133 class133_0)
            {
                base.Rows.Remove(class133_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class133(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnObjRowChanged != null)
                {
                    this.tAbnObjRowChanged(this, new DataSetGES.EventArgs89((DataSetGES.Class133) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnObjRowChanging != null)
                {
                    this.tAbnObjRowChanging(this, new DataSetGES.EventArgs89((DataSetGES.Class133) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnObjRowDeleted != null)
                {
                    this.tAbnObjRowDeleted(this, new DataSetGES.EventArgs89((DataSetGES.Class133) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnObjRowDeleting != null)
                {
                    this.tAbnObjRowDeleting(this, new DataSetGES.EventArgs89((DataSetGES.Class133) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnObjDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMapColumn
            {
                get
                {
                    return this.columnidMap;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdObjParentColumn
            {
                get
                {
                    return this.columnIdObjParent;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class133 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class133) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ShortNameColumn
            {
                get
                {
                    return this.columnShortName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn typeObjColumn
            {
                get
                {
                    return this.columntypeObj;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnObjDoc_AktRBPDataTable : TypedTableBase<DataSetGES.Class131>
        {
            private System.Data.DataColumn columnActData;
            private System.Data.DataColumn columnAdmission;
            private System.Data.DataColumn columnBorder2Expl_Four;
            private System.Data.DataColumn columnBorderBalance;
            private System.Data.DataColumn columnBorderExpl;
            private System.Data.DataColumn columnComment;
            private System.Data.DataColumn columnData;
            private System.Data.DataColumn columnDataNumber;
            private System.Data.DataColumn columnid;
            private System.Data.DataColumn columnidActRebinding;
            private System.Data.DataColumn columnidActTehConnection;
            private System.Data.DataColumn columnidList;
            private System.Data.DataColumn columnidTU;
            private System.Data.DataColumn columnNetRegion;
            private System.Data.DataColumn columnOrganizExpl;
            private System.Data.DataColumn columnOrganizExpl_Four;
            private System.Data.DataColumn columnOrgBalance;
            private System.Data.DataColumn columnOrgBase;
            private System.Data.DataColumn columnOrgExpl;
            private System.Data.DataColumn columnOrgFace;
            private System.Data.DataColumn columnOther;
            private System.Data.DataColumn columnOwnerBase;
            private System.Data.DataColumn columnOwnerBase_Four;
            private System.Data.DataColumn columnOwnerChief;
            private System.Data.DataColumn columnOwnerChief_Four;
            private System.Data.DataColumn columnOwnerChief2;
            private System.Data.DataColumn columnOwnerChief2_Four;
            private System.Data.DataColumn columnOwnerExpl_Four;
            private System.Data.DataColumn columnOwnerName;
            private System.Data.DataColumn columnOwnerName_Four;
            private System.Data.DataColumn columnPotrBalance;
            private System.Data.DataColumn columnPotrebExpl;
            private System.Data.DataColumn columnPotrExpl;
            private System.Data.DataColumn columnPotrSignature;
            private System.Data.DataColumn columnResponsibility;
            private System.Data.DataColumn columntbDogByOTONum;
            private System.Data.DataColumn columntbTO1;
            private System.Data.DataColumn columntbTO2;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate88 tAbnObjDoc_AktRBPRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate88 tAbnObjDoc_AktRBPRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate88 tAbnObjDoc_AktRBPRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate88 tAbnObjDoc_AktRBPRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tAbnObjDoc_AktRBPDataTable()
            {
                base.TableName = "tAbnObjDoc_AktRBP";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tAbnObjDoc_AktRBPDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tAbnObjDoc_AktRBPDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tAbnObjDoc_AktRBPDataTable table1 = (DataSetGES.tAbnObjDoc_AktRBPDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnObjDoc_AktRBPDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class131);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class131 class131_0)
            {
                base.Rows.Add(class131_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class131 method_1(int int_0, int int_1, int int_2, string string_0, string string_1, string string_2, int int_3, string string_3, string string_4, string string_5, string string_6, string string_7, string string_8, string string_9, string string_10, string string_11, string string_12, string string_13, string string_14, string string_15, string string_16, string string_17, string string_18, string string_19, string string_20, string string_21, string string_22, string string_23, string string_24, string string_25, string string_26, string string_27, string string_28, string string_29, string string_30, string string_31, int int_4)
            {
                DataSetGES.Class131 row = (DataSetGES.Class131) base.NewRow();
                object[] objArray1 = new object[0x26];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = string_0;
                objArray1[5] = string_1;
                objArray1[6] = string_2;
                objArray1[7] = int_3;
                objArray1[8] = string_3;
                objArray1[9] = string_4;
                objArray1[10] = string_5;
                objArray1[11] = string_6;
                objArray1[12] = string_7;
                objArray1[13] = string_8;
                objArray1[14] = string_9;
                objArray1[15] = string_10;
                objArray1[0x10] = string_11;
                objArray1[0x11] = string_12;
                objArray1[0x12] = string_13;
                objArray1[0x13] = string_14;
                objArray1[20] = string_15;
                objArray1[0x15] = string_16;
                objArray1[0x16] = string_17;
                objArray1[0x17] = string_18;
                objArray1[0x18] = string_19;
                objArray1[0x19] = string_20;
                objArray1[0x1a] = string_21;
                objArray1[0x1b] = string_22;
                objArray1[0x1c] = string_23;
                objArray1[0x1d] = string_24;
                objArray1[30] = string_25;
                objArray1[0x1f] = string_26;
                objArray1[0x20] = string_27;
                objArray1[0x21] = string_28;
                objArray1[0x22] = string_29;
                objArray1[0x23] = string_30;
                objArray1[0x24] = string_31;
                objArray1[0x25] = int_4;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class131 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class131) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidList = base.Columns["idList"];
                this.columnidActTehConnection = base.Columns["idActTehConnection"];
                this.columnidTU = base.Columns["idTU"];
                this.columnData = base.Columns["Data"];
                this.columnComment = base.Columns["Comment"];
                this.columnActData = base.Columns["ActData"];
                this.columnNetRegion = base.Columns["NetRegion"];
                this.columnDataNumber = base.Columns["DataNumber"];
                this.columnOrgFace = base.Columns["OrgFace"];
                this.columnOrgBase = base.Columns["OrgBase"];
                this.columnOrgBalance = base.Columns["OrgBalance"];
                this.columnPotrBalance = base.Columns["PotrBalance"];
                this.columnBorderBalance = base.Columns["BorderBalance"];
                this.columnOrgExpl = base.Columns["OrgExpl"];
                this.columnPotrExpl = base.Columns["PotrExpl"];
                this.columnResponsibility = base.Columns["Responsibility"];
                this.columnAdmission = base.Columns["Admission"];
                this.columnPotrSignature = base.Columns["PotrSignature"];
                this.columnOther = base.Columns["Other"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnOwnerChief = base.Columns["OwnerChief"];
                this.columnOwnerBase = base.Columns["OwnerBase"];
                this.columnOrganizExpl = base.Columns["OrganizExpl"];
                this.columnPotrebExpl = base.Columns["PotrebExpl"];
                this.columnBorderExpl = base.Columns["BorderExpl"];
                this.columnOwnerChief2 = base.Columns["OwnerChief2"];
                this.columntbDogByOTONum = base.Columns["tbDogByOTONum"];
                this.columntbTO2 = base.Columns["tbTO2"];
                this.columntbTO1 = base.Columns["tbTO1"];
                this.columnOwnerName_Four = base.Columns["OwnerName_Four"];
                this.columnOwnerChief_Four = base.Columns["OwnerChief_Four"];
                this.columnOwnerBase_Four = base.Columns["OwnerBase_Four"];
                this.columnOrganizExpl_Four = base.Columns["OrganizExpl_Four"];
                this.columnBorder2Expl_Four = base.Columns["Border2Expl_Four"];
                this.columnOwnerExpl_Four = base.Columns["OwnerExpl_Four"];
                this.columnOwnerChief2_Four = base.Columns["OwnerChief2_Four"];
                this.columnidActRebinding = base.Columns["idActRebinding"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidList = new System.Data.DataColumn("idList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidList);
                this.columnidActTehConnection = new System.Data.DataColumn("idActTehConnection", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidActTehConnection);
                this.columnidTU = new System.Data.DataColumn("idTU", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTU);
                this.columnData = new System.Data.DataColumn("Data", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnData);
                this.columnComment = new System.Data.DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnActData = new System.Data.DataColumn("ActData", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnActData);
                this.columnNetRegion = new System.Data.DataColumn("NetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegion);
                this.columnDataNumber = new System.Data.DataColumn("DataNumber", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDataNumber);
                this.columnOrgFace = new System.Data.DataColumn("OrgFace", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOrgFace);
                this.columnOrgBase = new System.Data.DataColumn("OrgBase", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOrgBase);
                this.columnOrgBalance = new System.Data.DataColumn("OrgBalance", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOrgBalance);
                this.columnPotrBalance = new System.Data.DataColumn("PotrBalance", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPotrBalance);
                this.columnBorderBalance = new System.Data.DataColumn("BorderBalance", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBorderBalance);
                this.columnOrgExpl = new System.Data.DataColumn("OrgExpl", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOrgExpl);
                this.columnPotrExpl = new System.Data.DataColumn("PotrExpl", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPotrExpl);
                this.columnResponsibility = new System.Data.DataColumn("Responsibility", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnResponsibility);
                this.columnAdmission = new System.Data.DataColumn("Admission", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAdmission);
                this.columnPotrSignature = new System.Data.DataColumn("PotrSignature", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPotrSignature);
                this.columnOther = new System.Data.DataColumn("Other", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOther);
                this.columnOwnerName = new System.Data.DataColumn("OwnerName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnOwnerChief = new System.Data.DataColumn("OwnerChief", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerChief);
                this.columnOwnerBase = new System.Data.DataColumn("OwnerBase", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerBase);
                this.columnOrganizExpl = new System.Data.DataColumn("OrganizExpl", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOrganizExpl);
                this.columnPotrebExpl = new System.Data.DataColumn("PotrebExpl", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPotrebExpl);
                this.columnBorderExpl = new System.Data.DataColumn("BorderExpl", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBorderExpl);
                this.columnOwnerChief2 = new System.Data.DataColumn("OwnerChief2", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerChief2);
                this.columntbDogByOTONum = new System.Data.DataColumn("tbDogByOTONum", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntbDogByOTONum);
                this.columntbTO2 = new System.Data.DataColumn("tbTO2", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntbTO2);
                this.columntbTO1 = new System.Data.DataColumn("tbTO1", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntbTO1);
                this.columnOwnerName_Four = new System.Data.DataColumn("OwnerName_Four", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerName_Four);
                this.columnOwnerChief_Four = new System.Data.DataColumn("OwnerChief_Four", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerChief_Four);
                this.columnOwnerBase_Four = new System.Data.DataColumn("OwnerBase_Four", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerBase_Four);
                this.columnOrganizExpl_Four = new System.Data.DataColumn("OrganizExpl_Four", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOrganizExpl_Four);
                this.columnBorder2Expl_Four = new System.Data.DataColumn("Border2Expl_Four", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBorder2Expl_Four);
                this.columnOwnerExpl_Four = new System.Data.DataColumn("OwnerExpl_Four", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerExpl_Four);
                this.columnOwnerChief2_Four = new System.Data.DataColumn("OwnerChief2_Four", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnOwnerChief2_Four);
                this.columnidActRebinding = new System.Data.DataColumn("idActRebinding", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidActRebinding);
                System.Data.DataColumn[] columns = new System.Data.DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidList.AllowDBNull = false;
                this.columnData.MaxLength = 0x7fffffff;
                this.columnComment.MaxLength = 20;
                this.columnActData.MaxLength = 50;
                this.columnDataNumber.MaxLength = 50;
                this.columnOrgFace.MaxLength = 0x200;
                this.columnOrgBase.MaxLength = 0x200;
                this.columnOrgBalance.MaxLength = 0x7fffffff;
                this.columnPotrBalance.MaxLength = 0x7fffffff;
                this.columnBorderBalance.MaxLength = 0x7fffffff;
                this.columnOrgExpl.MaxLength = 0x7fffffff;
                this.columnPotrExpl.MaxLength = 0x7fffffff;
                this.columnResponsibility.MaxLength = 0x7fffffff;
                this.columnAdmission.MaxLength = 0x200;
                this.columnPotrSignature.MaxLength = 0x200;
                this.columnOther.MaxLength = 0x7fffffff;
                this.columnOwnerName.MaxLength = 0x200;
                this.columnOwnerChief.MaxLength = 0x200;
                this.columnOwnerBase.MaxLength = 0x200;
                this.columnOrganizExpl.MaxLength = 0x7fffffff;
                this.columnPotrebExpl.MaxLength = 0x7fffffff;
                this.columnBorderExpl.MaxLength = 0x7fffffff;
                this.columnOwnerChief2.MaxLength = 0x200;
                this.columntbDogByOTONum.MaxLength = 0x200;
                this.columntbTO2.MaxLength = 0x400;
                this.columntbTO1.MaxLength = 0x400;
                this.columnOwnerName_Four.MaxLength = 0x200;
                this.columnOwnerChief_Four.MaxLength = 0x200;
                this.columnOwnerBase_Four.MaxLength = 0x200;
                this.columnOrganizExpl_Four.MaxLength = 0x7fffffff;
                this.columnBorder2Expl_Four.MaxLength = 0x7fffffff;
                this.columnOwnerExpl_Four.MaxLength = 0x7fffffff;
                this.columnOwnerChief2_Four.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class131 method_5()
            {
                return (DataSetGES.Class131) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class131 class131_0)
            {
                base.Rows.Remove(class131_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class131(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_AktRBPRowChanged != null)
                {
                    this.tAbnObjDoc_AktRBPRowChanged(this, new DataSetGES.EventArgs87((DataSetGES.Class131) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_AktRBPRowChanging != null)
                {
                    this.tAbnObjDoc_AktRBPRowChanging(this, new DataSetGES.EventArgs87((DataSetGES.Class131) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_AktRBPRowDeleted != null)
                {
                    this.tAbnObjDoc_AktRBPRowDeleted(this, new DataSetGES.EventArgs87((DataSetGES.Class131) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_AktRBPRowDeleting != null)
                {
                    this.tAbnObjDoc_AktRBPRowDeleting(this, new DataSetGES.EventArgs87((DataSetGES.Class131) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnObjDoc_AktRBPDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn ActDataColumn
            {
                get
                {
                    return this.columnActData;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn AdmissionColumn
            {
                get
                {
                    return this.columnAdmission;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn Border2Expl_FourColumn
            {
                get
                {
                    return this.columnBorder2Expl_Four;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn BorderBalanceColumn
            {
                get
                {
                    return this.columnBorderBalance;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn BorderExplColumn
            {
                get
                {
                    return this.columnBorderExpl;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn DataColumn
            {
                get
                {
                    return this.columnData;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn DataNumberColumn
            {
                get
                {
                    return this.columnDataNumber;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn idActRebindingColumn
            {
                get
                {
                    return this.columnidActRebinding;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn idActTehConnectionColumn
            {
                get
                {
                    return this.columnidActTehConnection;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn idListColumn
            {
                get
                {
                    return this.columnidList;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn idTUColumn
            {
                get
                {
                    return this.columnidTU;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class131 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class131) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn NetRegionColumn
            {
                get
                {
                    return this.columnNetRegion;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OrganizExpl_FourColumn
            {
                get
                {
                    return this.columnOrganizExpl_Four;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OrganizExplColumn
            {
                get
                {
                    return this.columnOrganizExpl;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OrgBalanceColumn
            {
                get
                {
                    return this.columnOrgBalance;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn OrgBaseColumn
            {
                get
                {
                    return this.columnOrgBase;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OrgExplColumn
            {
                get
                {
                    return this.columnOrgExpl;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OrgFaceColumn
            {
                get
                {
                    return this.columnOrgFace;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OtherColumn
            {
                get
                {
                    return this.columnOther;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OwnerBase_FourColumn
            {
                get
                {
                    return this.columnOwnerBase_Four;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OwnerBaseColumn
            {
                get
                {
                    return this.columnOwnerBase;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn OwnerChief_FourColumn
            {
                get
                {
                    return this.columnOwnerChief_Four;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn OwnerChief2_FourColumn
            {
                get
                {
                    return this.columnOwnerChief2_Four;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn OwnerChief2Column
            {
                get
                {
                    return this.columnOwnerChief2;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OwnerChiefColumn
            {
                get
                {
                    return this.columnOwnerChief;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OwnerExpl_FourColumn
            {
                get
                {
                    return this.columnOwnerExpl_Four;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn OwnerName_FourColumn
            {
                get
                {
                    return this.columnOwnerName_Four;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn OwnerNameColumn
            {
                get
                {
                    return this.columnOwnerName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn PotrBalanceColumn
            {
                get
                {
                    return this.columnPotrBalance;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn PotrebExplColumn
            {
                get
                {
                    return this.columnPotrebExpl;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn PotrExplColumn
            {
                get
                {
                    return this.columnPotrExpl;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn PotrSignatureColumn
            {
                get
                {
                    return this.columnPotrSignature;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public System.Data.DataColumn ResponsibilityColumn
            {
                get
                {
                    return this.columnResponsibility;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn tbDogByOTONumColumn
            {
                get
                {
                    return this.columntbDogByOTONum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn tbTO1Column
            {
                get
                {
                    return this.columntbTO1;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Data.DataColumn tbTO2Column
            {
                get
                {
                    return this.columntbTO2;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnObjDoc_FileDataTable : TypedTableBase<DataSetGES.Class140>
        {
            private DataColumn columndateChange;
            private DataColumn columnFile;
            private DataColumn columnFileName;
            private DataColumn columnid;
            private DataColumn columnidList;
            private DataColumn columnidTemplate;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate97 tAbnObjDoc_FileRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate97 tAbnObjDoc_FileRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate97 tAbnObjDoc_FileRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate97 tAbnObjDoc_FileRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tAbnObjDoc_FileDataTable()
            {
                base.TableName = "tAbnObjDoc_File";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tAbnObjDoc_FileDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tAbnObjDoc_FileDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tAbnObjDoc_FileDataTable table1 = (DataSetGES.tAbnObjDoc_FileDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnObjDoc_FileDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class140);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class140 class140_0)
            {
                base.Rows.Add(class140_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class140 method_1(int int_0, string string_0, byte[] byte_0, DateTime dateTime_0, int int_1)
            {
                DataSetGES.Class140 row = (DataSetGES.Class140) base.NewRow();
                object[] objArray1 = new object[6];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = byte_0;
                objArray1[4] = dateTime_0;
                objArray1[5] = int_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class140 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class140) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidList = base.Columns["idList"];
                this.columnFileName = base.Columns["FileName"];
                this.columnFile = base.Columns["File"];
                this.columndateChange = base.Columns["dateChange"];
                this.columnidTemplate = base.Columns["idTemplate"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidList = new DataColumn("idList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidList);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnFile = new DataColumn("File", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnFile);
                this.columndateChange = new DataColumn("dateChange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateChange);
                this.columnidTemplate = new DataColumn("idTemplate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTemplate);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidList.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 0x400;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class140 method_5()
            {
                return (DataSetGES.Class140) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class140 class140_0)
            {
                base.Rows.Remove(class140_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class140(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_FileRowChanged != null)
                {
                    this.tAbnObjDoc_FileRowChanged(this, new DataSetGES.EventArgs96((DataSetGES.Class140) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_FileRowChanging != null)
                {
                    this.tAbnObjDoc_FileRowChanging(this, new DataSetGES.EventArgs96((DataSetGES.Class140) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_FileRowDeleted != null)
                {
                    this.tAbnObjDoc_FileRowDeleted(this, new DataSetGES.EventArgs96((DataSetGES.Class140) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_FileRowDeleting != null)
                {
                    this.tAbnObjDoc_FileRowDeleting(this, new DataSetGES.EventArgs96((DataSetGES.Class140) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnObjDoc_FileDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateChangeColumn
            {
                get
                {
                    return this.columndateChange;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FileColumn
            {
                get
                {
                    return this.columnFile;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idListColumn
            {
                get
                {
                    return this.columnidList;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTemplateColumn
            {
                get
                {
                    return this.columnidTemplate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class140 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class140) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnObjDoc_ImageDataTable : TypedTableBase<DataSetGES.Class134>
        {
            private DataColumn columnid;
            private DataColumn columnidList;
            private DataColumn columnScan;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate91 tAbnObjDoc_ImageRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate91 tAbnObjDoc_ImageRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate91 tAbnObjDoc_ImageRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate91 tAbnObjDoc_ImageRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tAbnObjDoc_ImageDataTable()
            {
                base.TableName = "tAbnObjDoc_Image";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tAbnObjDoc_ImageDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tAbnObjDoc_ImageDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tAbnObjDoc_ImageDataTable table1 = (DataSetGES.tAbnObjDoc_ImageDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnObjDoc_ImageDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class134);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class134 class134_0)
            {
                base.Rows.Add(class134_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class134 method_1(int int_0, byte[] byte_0)
            {
                DataSetGES.Class134 row = (DataSetGES.Class134) base.NewRow();
                object[] objArray1 = new object[3];
                objArray1[1] = int_0;
                objArray1[2] = byte_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class134 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class134) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidList = base.Columns["idList"];
                this.columnScan = base.Columns["Scan"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidList = new DataColumn("idList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidList);
                this.columnScan = new DataColumn("Scan", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnScan);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidList.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class134 method_5()
            {
                return (DataSetGES.Class134) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class134 class134_0)
            {
                base.Rows.Remove(class134_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class134(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ImageRowChanged != null)
                {
                    this.tAbnObjDoc_ImageRowChanged(this, new DataSetGES.EventArgs90((DataSetGES.Class134) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ImageRowChanging != null)
                {
                    this.tAbnObjDoc_ImageRowChanging(this, new DataSetGES.EventArgs90((DataSetGES.Class134) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ImageRowDeleted != null)
                {
                    this.tAbnObjDoc_ImageRowDeleted(this, new DataSetGES.EventArgs90((DataSetGES.Class134) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ImageRowDeleting != null)
                {
                    this.tAbnObjDoc_ImageRowDeleting(this, new DataSetGES.EventArgs90((DataSetGES.Class134) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnObjDoc_ImageDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idListColumn
            {
                get
                {
                    return this.columnidList;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class134 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class134) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ScanColumn
            {
                get
                {
                    return this.columnScan;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tAbnObjDoc_ListDataTable : TypedTableBase<DataSetGES.Class135>
        {
            private DataColumn columnDeleted;
            private DataColumn columnDocDate;
            private DataColumn columnDocNumber;
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnidAbnObj;
            private DataColumn columnidDocType;
            private DataColumn columnisActive;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate92 tAbnObjDoc_ListRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate92 tAbnObjDoc_ListRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate92 tAbnObjDoc_ListRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate92 tAbnObjDoc_ListRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tAbnObjDoc_ListDataTable()
            {
                base.TableName = "tAbnObjDoc_List";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tAbnObjDoc_ListDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tAbnObjDoc_ListDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tAbnObjDoc_ListDataTable table1 = (DataSetGES.tAbnObjDoc_ListDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tAbnObjDoc_ListDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class135);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class135 class135_0)
            {
                base.Rows.Add(class135_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class135 method_1(int int_0, string string_0, DateTime dateTime_0, int int_1, bool bool_0, bool bool_1, int int_2)
            {
                DataSetGES.Class135 row = (DataSetGES.Class135) base.NewRow();
                object[] objArray1 = new object[8];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = dateTime_0;
                objArray1[4] = int_1;
                objArray1[5] = bool_0;
                objArray1[6] = bool_1;
                objArray1[7] = int_2;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class135 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class135) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidAbnObj = base.Columns["idAbnObj"];
                this.columnDocNumber = base.Columns["DocNumber"];
                this.columnDocDate = base.Columns["DocDate"];
                this.columnidDocType = base.Columns["idDocType"];
                this.columnisActive = base.Columns["isActive"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnidAbn = base.Columns["idAbn"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidAbnObj = new DataColumn("idAbnObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbnObj);
                this.columnDocNumber = new DataColumn("DocNumber", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDocNumber);
                this.columnDocDate = new DataColumn("DocDate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDocDate);
                this.columnidDocType = new DataColumn("idDocType", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidDocType);
                this.columnisActive = new DataColumn("isActive", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisActive);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidAbnObj.AllowDBNull = false;
                this.columnDocNumber.AllowDBNull = false;
                this.columnDocNumber.MaxLength = 20;
                this.columnDocDate.AllowDBNull = false;
                this.columnidDocType.AllowDBNull = false;
                this.columnisActive.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class135 method_5()
            {
                return (DataSetGES.Class135) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class135 class135_0)
            {
                base.Rows.Remove(class135_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class135(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ListRowChanged != null)
                {
                    this.tAbnObjDoc_ListRowChanged(this, new DataSetGES.EventArgs91((DataSetGES.Class135) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ListRowChanging != null)
                {
                    this.tAbnObjDoc_ListRowChanging(this, new DataSetGES.EventArgs91((DataSetGES.Class135) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ListRowDeleted != null)
                {
                    this.tAbnObjDoc_ListRowDeleted(this, new DataSetGES.EventArgs91((DataSetGES.Class135) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tAbnObjDoc_ListRowDeleting != null)
                {
                    this.tAbnObjDoc_ListRowDeleting(this, new DataSetGES.EventArgs91((DataSetGES.Class135) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tAbnObjDoc_ListDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocDateColumn
            {
                get
                {
                    return this.columnDocDate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocNumberColumn
            {
                get
                {
                    return this.columnDocNumber;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idAbnObjColumn
            {
                get
                {
                    return this.columnidAbnObj;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idDocTypeColumn
            {
                get
                {
                    return this.columnidDocType;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn isActiveColumn
            {
                get
                {
                    return this.columnisActive;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class135 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class135) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tG_AbnAddressDataTable : TypedTableBase<DataSetGES.Class138>
        {
            private DataColumn columnApartment;
            private DataColumn columnDateChange;
            private DataColumn columnHouse;
            private DataColumn columnHousing;
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnidStreet;
            private DataColumn columnidTypeAddress;
            private DataColumn columnRepresentation;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate95 tG_AbnAddressRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate95 tG_AbnAddressRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate95 tG_AbnAddressRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate95 tG_AbnAddressRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tG_AbnAddressDataTable()
            {
                base.TableName = "tG_AbnAddress";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tG_AbnAddressDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tG_AbnAddressDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tG_AbnAddressDataTable table1 = (DataSetGES.tG_AbnAddressDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tG_AbnAddressDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class138);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class138 class138_0)
            {
                base.Rows.Add(class138_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class138 method_1(int int_0, int int_1, int int_2, string string_0, string string_1, string string_2, string string_3, DateTime dateTime_0)
            {
                DataSetGES.Class138 row = (DataSetGES.Class138) base.NewRow();
                object[] objArray1 = new object[9];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = string_0;
                objArray1[5] = string_1;
                objArray1[6] = string_2;
                objArray1[7] = string_3;
                objArray1[8] = dateTime_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class138 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class138) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnidTypeAddress = base.Columns["idTypeAddress"];
                this.columnidStreet = base.Columns["idStreet"];
                this.columnHouse = base.Columns["House"];
                this.columnHousing = base.Columns["Housing"];
                this.columnApartment = base.Columns["Apartment"];
                this.columnRepresentation = base.Columns["Representation"];
                this.columnDateChange = base.Columns["DateChange"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnidTypeAddress = new DataColumn("idTypeAddress", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTypeAddress);
                this.columnidStreet = new DataColumn("idStreet", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidStreet);
                this.columnHouse = new DataColumn("House", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnHouse);
                this.columnHousing = new DataColumn("Housing", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnHousing);
                this.columnApartment = new DataColumn("Apartment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnApartment);
                this.columnRepresentation = new DataColumn("Representation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnRepresentation);
                this.columnDateChange = new DataColumn("DateChange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateChange);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidAbn.AllowDBNull = false;
                this.columnidTypeAddress.AllowDBNull = false;
                this.columnHouse.MaxLength = 10;
                this.columnHousing.MaxLength = 10;
                this.columnApartment.MaxLength = 10;
                this.columnRepresentation.MaxLength = 0xff;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class138 method_5()
            {
                return (DataSetGES.Class138) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class138 class138_0)
            {
                base.Rows.Remove(class138_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class138(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tG_AbnAddressRowChanged != null)
                {
                    this.tG_AbnAddressRowChanged(this, new DataSetGES.EventArgs94((DataSetGES.Class138) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tG_AbnAddressRowChanging != null)
                {
                    this.tG_AbnAddressRowChanging(this, new DataSetGES.EventArgs94((DataSetGES.Class138) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tG_AbnAddressRowDeleted != null)
                {
                    this.tG_AbnAddressRowDeleted(this, new DataSetGES.EventArgs94((DataSetGES.Class138) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tG_AbnAddressRowDeleting != null)
                {
                    this.tG_AbnAddressRowDeleting(this, new DataSetGES.EventArgs94((DataSetGES.Class138) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tG_AbnAddressDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ApartmentColumn
            {
                get
                {
                    return this.columnApartment;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateChangeColumn
            {
                get
                {
                    return this.columnDateChange;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn HouseColumn
            {
                get
                {
                    return this.columnHouse;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn HousingColumn
            {
                get
                {
                    return this.columnHousing;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idStreetColumn
            {
                get
                {
                    return this.columnidStreet;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTypeAddressColumn
            {
                get
                {
                    return this.columnidTypeAddress;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class138 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class138) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn RepresentationColumn
            {
                get
                {
                    return this.columnRepresentation;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tG_AbnChiefDataTable : TypedTableBase<DataSetGES.Class139>
        {
            private DataColumn columnD_F;
            private DataColumn columnD_I;
            private DataColumn columnD_O;
            private DataColumn columnD_Post;
            private DataColumn columnDateChange;
            private DataColumn columnDocBase;
            private DataColumn columnI_F;
            private DataColumn columnI_I;
            private DataColumn columnI_O;
            private DataColumn columnI_Post;
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnR_F;
            private DataColumn columnR_I;
            private DataColumn columnR_O;
            private DataColumn columnR_Post;
            private DataColumn columnT_F;
            private DataColumn columnT_I;
            private DataColumn columnT_O;
            private DataColumn columnT_Post;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate96 tG_AbnChiefRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate96 tG_AbnChiefRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate96 tG_AbnChiefRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate96 tG_AbnChiefRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tG_AbnChiefDataTable()
            {
                base.TableName = "tG_AbnChief";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tG_AbnChiefDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tG_AbnChiefDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tG_AbnChiefDataTable table1 = (DataSetGES.tG_AbnChiefDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tG_AbnChiefDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class139);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class139 class139_0)
            {
                base.Rows.Add(class139_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class139 method_1(int int_0, string string_0, string string_1, string string_2, string string_3, string string_4, string string_5, string string_6, string string_7, string string_8, string string_9, string string_10, string string_11, string string_12, string string_13, string string_14, string string_15, string string_16, DateTime dateTime_0)
            {
                DataSetGES.Class139 row = (DataSetGES.Class139) base.NewRow();
                object[] objArray1 = new object[20];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = string_1;
                objArray1[4] = string_2;
                objArray1[5] = string_3;
                objArray1[6] = string_4;
                objArray1[7] = string_5;
                objArray1[8] = string_6;
                objArray1[9] = string_7;
                objArray1[10] = string_8;
                objArray1[11] = string_9;
                objArray1[12] = string_10;
                objArray1[13] = string_11;
                objArray1[14] = string_12;
                objArray1[15] = string_13;
                objArray1[0x10] = string_14;
                objArray1[0x11] = string_15;
                objArray1[0x12] = string_16;
                objArray1[0x13] = dateTime_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class139 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class139) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnDocBase = base.Columns["DocBase"];
                this.columnI_Post = base.Columns["I_Post"];
                this.columnI_F = base.Columns["I_F"];
                this.columnI_I = base.Columns["I_I"];
                this.columnI_O = base.Columns["I_O"];
                this.columnR_Post = base.Columns["R_Post"];
                this.columnR_F = base.Columns["R_F"];
                this.columnR_I = base.Columns["R_I"];
                this.columnR_O = base.Columns["R_O"];
                this.columnD_Post = base.Columns["D_Post"];
                this.columnD_F = base.Columns["D_F"];
                this.columnD_I = base.Columns["D_I"];
                this.columnD_O = base.Columns["D_O"];
                this.columnT_Post = base.Columns["T_Post"];
                this.columnT_F = base.Columns["T_F"];
                this.columnT_I = base.Columns["T_I"];
                this.columnT_O = base.Columns["T_O"];
                this.columnDateChange = base.Columns["DateChange"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnDocBase = new DataColumn("DocBase", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDocBase);
                this.columnI_Post = new DataColumn("I_Post", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI_Post);
                this.columnI_F = new DataColumn("I_F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI_F);
                this.columnI_I = new DataColumn("I_I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI_I);
                this.columnI_O = new DataColumn("I_O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI_O);
                this.columnR_Post = new DataColumn("R_Post", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnR_Post);
                this.columnR_F = new DataColumn("R_F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnR_F);
                this.columnR_I = new DataColumn("R_I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnR_I);
                this.columnR_O = new DataColumn("R_O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnR_O);
                this.columnD_Post = new DataColumn("D_Post", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnD_Post);
                this.columnD_F = new DataColumn("D_F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnD_F);
                this.columnD_I = new DataColumn("D_I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnD_I);
                this.columnD_O = new DataColumn("D_O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnD_O);
                this.columnT_Post = new DataColumn("T_Post", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnT_Post);
                this.columnT_F = new DataColumn("T_F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnT_F);
                this.columnT_I = new DataColumn("T_I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnT_I);
                this.columnT_O = new DataColumn("T_O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnT_O);
                this.columnDateChange = new DataColumn("DateChange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateChange);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidAbn.AllowDBNull = false;
                this.columnDocBase.MaxLength = 0xff;
                this.columnI_Post.MaxLength = 100;
                this.columnI_F.MaxLength = 50;
                this.columnI_I.MaxLength = 50;
                this.columnI_O.MaxLength = 50;
                this.columnR_Post.MaxLength = 100;
                this.columnR_F.MaxLength = 80;
                this.columnR_I.MaxLength = 80;
                this.columnR_O.MaxLength = 80;
                this.columnD_Post.MaxLength = 100;
                this.columnD_F.MaxLength = 50;
                this.columnD_I.MaxLength = 50;
                this.columnD_O.MaxLength = 50;
                this.columnT_Post.MaxLength = 100;
                this.columnT_F.MaxLength = 50;
                this.columnT_I.MaxLength = 50;
                this.columnT_O.MaxLength = 50;
                this.columnDateChange.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class139 method_5()
            {
                return (DataSetGES.Class139) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class139 class139_0)
            {
                base.Rows.Remove(class139_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class139(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tG_AbnChiefRowChanged != null)
                {
                    this.tG_AbnChiefRowChanged(this, new DataSetGES.EventArgs95((DataSetGES.Class139) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tG_AbnChiefRowChanging != null)
                {
                    this.tG_AbnChiefRowChanging(this, new DataSetGES.EventArgs95((DataSetGES.Class139) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tG_AbnChiefRowDeleted != null)
                {
                    this.tG_AbnChiefRowDeleted(this, new DataSetGES.EventArgs95((DataSetGES.Class139) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tG_AbnChiefRowDeleting != null)
                {
                    this.tG_AbnChiefRowDeleting(this, new DataSetGES.EventArgs95((DataSetGES.Class139) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tG_AbnChiefDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn D_FColumn
            {
                get
                {
                    return this.columnD_F;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn D_IColumn
            {
                get
                {
                    return this.columnD_I;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn D_OColumn
            {
                get
                {
                    return this.columnD_O;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn D_PostColumn
            {
                get
                {
                    return this.columnD_Post;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateChangeColumn
            {
                get
                {
                    return this.columnDateChange;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DocBaseColumn
            {
                get
                {
                    return this.columnDocBase;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn I_FColumn
            {
                get
                {
                    return this.columnI_F;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn I_IColumn
            {
                get
                {
                    return this.columnI_I;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn I_OColumn
            {
                get
                {
                    return this.columnI_O;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn I_PostColumn
            {
                get
                {
                    return this.columnI_Post;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class139 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class139) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn R_FColumn
            {
                get
                {
                    return this.columnR_F;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn R_IColumn
            {
                get
                {
                    return this.columnR_I;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn R_OColumn
            {
                get
                {
                    return this.columnR_O;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn R_PostColumn
            {
                get
                {
                    return this.columnR_Post;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn T_FColumn
            {
                get
                {
                    return this.columnT_F;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn T_IColumn
            {
                get
                {
                    return this.columnT_I;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn T_OColumn
            {
                get
                {
                    return this.columnT_O;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn T_PostColumn
            {
                get
                {
                    return this.columnT_Post;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_BossUserDataTable : TypedTableBase<DataSetGES.Class154>
        {
            private DataColumn columnBossUNID;
            private DataColumn columnDeleted;
            private DataColumn columnFirstName;
            private DataColumn columnid;
            private DataColumn columnidGroup;
            private DataColumn columnidWorker;
            private DataColumn columnLastName;
            private DataColumn columnMail;
            private DataColumn columnMiddleInitial;
            private DataColumn columnPassword;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate111 tJ_BossUserRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate111 tJ_BossUserRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate111 tJ_BossUserRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate111 tJ_BossUserRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_BossUserDataTable()
            {
                base.TableName = "tJ_BossUser";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_BossUserDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_BossUserDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_BossUserDataTable table1 = (DataSetGES.tJ_BossUserDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_BossUserDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class154);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class154 class154_0)
            {
                base.Rows.Add(class154_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class154 method_1(int int_0, int int_1, string string_0, string string_1, string string_2, string string_3, string string_4, bool bool_0, string string_5)
            {
                DataSetGES.Class154 row = (DataSetGES.Class154) base.NewRow();
                object[] objArray1 = new object[10];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = string_0;
                objArray1[4] = string_1;
                objArray1[5] = string_2;
                objArray1[6] = string_3;
                objArray1[7] = string_4;
                objArray1[8] = bool_0;
                objArray1[9] = string_5;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class154 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class154) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnidGroup = base.Columns["idGroup"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleInitial = base.Columns["MiddleInitial"];
                this.columnMail = base.Columns["Mail"];
                this.columnPassword = base.Columns["Password"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnBossUNID = base.Columns["BossUNID"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                this.columnLastName = new DataColumn("LastName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFirstName = new DataColumn("FirstName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleInitial = new DataColumn("MiddleInitial", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMiddleInitial);
                this.columnMail = new DataColumn("Mail", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMail);
                this.columnPassword = new DataColumn("Password", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnBossUNID = new DataColumn("BossUNID", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBossUNID);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnLastName.MaxLength = 50;
                this.columnFirstName.MaxLength = 50;
                this.columnMiddleInitial.MaxLength = 50;
                this.columnMail.MaxLength = 0x80;
                this.columnPassword.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
                this.columnBossUNID.MaxLength = 50;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class154 method_5()
            {
                return (DataSetGES.Class154) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class154 class154_0)
            {
                base.Rows.Remove(class154_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class154(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserRowChanged != null)
                {
                    this.tJ_BossUserRowChanged(this, new DataSetGES.EventArgs110((DataSetGES.Class154) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserRowChanging != null)
                {
                    this.tJ_BossUserRowChanging(this, new DataSetGES.EventArgs110((DataSetGES.Class154) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserRowDeleted != null)
                {
                    this.tJ_BossUserRowDeleted(this, new DataSetGES.EventArgs110((DataSetGES.Class154) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserRowDeleting != null)
                {
                    this.tJ_BossUserRowDeleting(this, new DataSetGES.EventArgs110((DataSetGES.Class154) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_BossUserDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn BossUNIDColumn
            {
                get
                {
                    return this.columnBossUNID;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FirstNameColumn
            {
                get
                {
                    return this.columnFirstName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class154 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class154) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LastNameColumn
            {
                get
                {
                    return this.columnLastName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MailColumn
            {
                get
                {
                    return this.columnMail;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MiddleInitialColumn
            {
                get
                {
                    return this.columnMiddleInitial;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PasswordColumn
            {
                get
                {
                    return this.columnPassword;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_BossUserGroupDataTable : TypedTableBase<DataSetGES.Class147>
        {
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidParent;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate104 tJ_BossUserGroupRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate104 tJ_BossUserGroupRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate104 tJ_BossUserGroupRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate104 tJ_BossUserGroupRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_BossUserGroupDataTable()
            {
                base.TableName = "tJ_BossUserGroup";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_BossUserGroupDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_BossUserGroupDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_BossUserGroupDataTable table1 = (DataSetGES.tJ_BossUserGroupDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_BossUserGroupDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class147);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class147 class147_0)
            {
                base.Rows.Add(class147_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class147 method_1(int int_0, string string_0, bool bool_0)
            {
                DataSetGES.Class147 row = (DataSetGES.Class147) base.NewRow();
                object[] objArray1 = new object[4];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class147 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class147) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidParent = base.Columns["idParent"];
                this.columnName = base.Columns["Name"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidParent = new DataColumn("idParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParent);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnName.MaxLength = 0x100;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class147 method_5()
            {
                return (DataSetGES.Class147) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class147 class147_0)
            {
                base.Rows.Remove(class147_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class147(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserGroupRowChanged != null)
                {
                    this.tJ_BossUserGroupRowChanged(this, new DataSetGES.EventArgs103((DataSetGES.Class147) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserGroupRowChanging != null)
                {
                    this.tJ_BossUserGroupRowChanging(this, new DataSetGES.EventArgs103((DataSetGES.Class147) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserGroupRowDeleted != null)
                {
                    this.tJ_BossUserGroupRowDeleted(this, new DataSetGES.EventArgs103((DataSetGES.Class147) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_BossUserGroupRowDeleting != null)
                {
                    this.tJ_BossUserGroupRowDeleting(this, new DataSetGES.EventArgs103((DataSetGES.Class147) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_BossUserGroupDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idParentColumn
            {
                get
                {
                    return this.columnidParent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class147 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class147) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MeasAmperageTransfDataTable : TypedTableBase<DataSetGES.Class110>
        {
            private DataColumn columnDeleted;
            private DataColumn columnIa;
            private DataColumn columnIb;
            private DataColumn columnIc;
            private DataColumn columnid;
            private DataColumn columnIdBus;
            private DataColumn columnidMeasurement;
            private DataColumn columnidObjList;
            private DataColumn columnIo;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate67 tJ_MeasAmperageTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate67 tJ_MeasAmperageTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate67 tJ_MeasAmperageTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate67 tJ_MeasAmperageTransfRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasAmperageTransfDataTable()
            {
                base.TableName = "tJ_MeasAmperageTransf";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasAmperageTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_MeasAmperageTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasAmperageTransfDataTable table1 = (DataSetGES.tJ_MeasAmperageTransfDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasAmperageTransfDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class110);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class110 class110_0)
            {
                base.Rows.Add(class110_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class110 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, int int_5, int int_6, bool bool_0)
            {
                DataSetGES.Class110 row = (DataSetGES.Class110) base.NewRow();
                object[] objArray1 = new object[9];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = int_3;
                objArray1[5] = int_4;
                objArray1[6] = int_5;
                objArray1[7] = int_6;
                objArray1[8] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class110 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class110) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnIdBus = base.Columns["IdBus"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnIa = base.Columns["Ia"];
                this.columnIb = base.Columns["Ib"];
                this.columnIc = base.Columns["Ic"];
                this.columnIo = base.Columns["Io"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnIdBus = new DataColumn("IdBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdBus);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnIa = new DataColumn("Ia", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIa);
                this.columnIb = new DataColumn("Ib", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIb);
                this.columnIc = new DataColumn("Ic", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIc);
                this.columnIo = new DataColumn("Io", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIo);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class110 method_5()
            {
                return (DataSetGES.Class110) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class110 class110_0)
            {
                base.Rows.Remove(class110_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class110(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MeasAmperageTransfRowChanged != null)
                {
                    this.tJ_MeasAmperageTransfRowChanged(this, new DataSetGES.EventArgs66((DataSetGES.Class110) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MeasAmperageTransfRowChanging != null)
                {
                    this.tJ_MeasAmperageTransfRowChanging(this, new DataSetGES.EventArgs66((DataSetGES.Class110) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MeasAmperageTransfRowDeleted != null)
                {
                    this.tJ_MeasAmperageTransfRowDeleted(this, new DataSetGES.EventArgs66((DataSetGES.Class110) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MeasAmperageTransfRowDeleting != null)
                {
                    this.tJ_MeasAmperageTransfRowDeleting(this, new DataSetGES.EventArgs66((DataSetGES.Class110) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MeasAmperageTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IaColumn
            {
                get
                {
                    return this.columnIa;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbColumn
            {
                get
                {
                    return this.columnIb;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcColumn
            {
                get
                {
                    return this.columnIc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdBusColumn
            {
                get
                {
                    return this.columnIdBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IoColumn
            {
                get
                {
                    return this.columnIo;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class110 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class110) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MeasCableDataTable : TypedTableBase<DataSetGES.Class105>
        {
            private DataColumn columnAddress;
            private DataColumn columnComment;
            private DataColumn columnCompany;
            private DataColumn columnCrossSection;
            private DataColumn columnDeleted;
            private DataColumn columnIad;
            private DataColumn columnIan;
            private DataColumn columnIbd;
            private DataColumn columnIbn;
            private DataColumn columnIcd;
            private DataColumn columnIcn;
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidCable;
            private DataColumn columnidCell;
            private DataColumn columnidMeasurement;
            private DataColumn columnidOldMeasurementCable;
            private DataColumn columnidSchmAbn;
            private DataColumn columnidTransf;
            private DataColumn columnIod;
            private DataColumn columnIon;
            private DataColumn columnMakeup;
            private DataColumn columnNameCable;
            private DataColumn columnNameCell;
            private DataColumn columnOldCell;
            private DataColumn columnPermisAmperage;
            private DataColumn columnVoltage;
            private DataColumn columnWires;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate62 tJ_MeasCableRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate62 tJ_MeasCableRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate62 tJ_MeasCableRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate62 tJ_MeasCableRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasCableDataTable()
            {
                base.TableName = "tJ_MeasCable";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasCableDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MeasCableDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasCableDataTable table1 = (DataSetGES.tJ_MeasCableDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasCableDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class105);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class105 class105_0)
            {
                base.Rows.Add(class105_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class105 method_1(int int_0, int int_1, int int_2, int int_3, string string_0, short short_0, int int_4, string string_1, string string_2, string string_3, int int_5, string string_4, int int_6, int int_7, double double_0, double double_1, int int_8, int int_9, int int_10, int int_11, int int_12, int int_13, int int_14, int int_15, string string_5, int int_16, bool bool_0)
            {
                DataSetGES.Class105 row = (DataSetGES.Class105) base.NewRow();
                object[] objArray1 = new object[0x1c];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = int_3;
                objArray1[5] = string_0;
                objArray1[6] = short_0;
                objArray1[7] = int_4;
                objArray1[8] = string_1;
                objArray1[9] = string_2;
                objArray1[10] = string_3;
                objArray1[11] = int_5;
                objArray1[12] = string_4;
                objArray1[13] = int_6;
                objArray1[14] = int_7;
                objArray1[15] = double_0;
                objArray1[0x10] = double_1;
                objArray1[0x11] = int_8;
                objArray1[0x12] = int_9;
                objArray1[0x13] = int_10;
                objArray1[20] = int_11;
                objArray1[0x15] = int_12;
                objArray1[0x16] = int_13;
                objArray1[0x17] = int_14;
                objArray1[0x18] = int_15;
                objArray1[0x19] = string_5;
                objArray1[0x1a] = int_16;
                objArray1[0x1b] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class105 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class105) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnOldCell = base.Columns["OldCell"];
                this.columnidCable = base.Columns["idCable"];
                this.columnNameCable = base.Columns["NameCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnCompany = base.Columns["Company"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
                this.columnidOldMeasurementCable = base.Columns["idOldMeasurementCable"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnOldCell = new DataColumn("OldCell", typeof(short), null, MappingType.Element);
                base.Columns.Add(this.columnOldCell);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnidOldMeasurementCable = new DataColumn("idOldMeasurementCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurementCable);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnAddress.MaxLength = 0x80;
                this.columnCompany.MaxLength = 0x80;
                this.columnMakeup.MaxLength = 50;
                this.columnComment.MaxLength = 0x80;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class105 method_5()
            {
                return (DataSetGES.Class105) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class105 class105_0)
            {
                base.Rows.Remove(class105_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class105(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCableRowChanged != null)
                {
                    this.tJ_MeasCableRowChanged(this, new DataSetGES.EventArgs61((DataSetGES.Class105) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCableRowChanging != null)
                {
                    this.tJ_MeasCableRowChanging(this, new DataSetGES.EventArgs61((DataSetGES.Class105) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCableRowDeleted != null)
                {
                    this.tJ_MeasCableRowDeleted(this, new DataSetGES.EventArgs61((DataSetGES.Class105) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCableRowDeleting != null)
                {
                    this.tJ_MeasCableRowDeleting(this, new DataSetGES.EventArgs61((DataSetGES.Class105) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MeasCableDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idOldMeasurementCableColumn
            {
                get
                {
                    return this.columnidOldMeasurementCable;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class105 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class105) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn OldCellColumn
            {
                get
                {
                    return this.columnOldCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MeasCellDataTable : TypedTableBase<DataSetGES.Class127>
        {
            private DataColumn columnComment;
            private DataColumn columnDeleted;
            private DataColumn columnIad;
            private DataColumn columnIan;
            private DataColumn columnIbd;
            private DataColumn columnIbn;
            private DataColumn columnIcd;
            private DataColumn columnIcn;
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidCell;
            private DataColumn columnidMeasurement;
            private DataColumn columnidTransf;
            private DataColumn columnPermissAmperage;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate84 tJ_MeasCellRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate84 tJ_MeasCellRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate84 tJ_MeasCellRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate84 tJ_MeasCellRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasCellDataTable()
            {
                base.TableName = "tJ_MeasCell";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasCellDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_MeasCellDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasCellDataTable table1 = (DataSetGES.tJ_MeasCellDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasCellDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class127);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class127 class127_0)
            {
                base.Rows.Add(class127_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class127 method_1(int int_0, int int_1, int int_2, int int_3, double double_0, int int_4, int int_5, int int_6, int int_7, int int_8, int int_9, string string_0, bool bool_0)
            {
                DataSetGES.Class127 row = (DataSetGES.Class127) base.NewRow();
                object[] objArray1 = new object[14];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = int_3;
                objArray1[5] = double_0;
                objArray1[6] = int_4;
                objArray1[7] = int_5;
                objArray1[8] = int_6;
                objArray1[9] = int_7;
                objArray1[10] = int_8;
                objArray1[11] = int_9;
                objArray1[12] = string_0;
                objArray1[13] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class127 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class127) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidCell = base.Columns["idCell"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnPermissAmperage = base.Columns["PermissAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnPermissAmperage = new DataColumn("PermissAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermissAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnidCell.AllowDBNull = false;
                this.columnComment.MaxLength = 0x80;
                this.columnDeleted.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class127 method_5()
            {
                return (DataSetGES.Class127) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class127 class127_0)
            {
                base.Rows.Remove(class127_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class127(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCellRowChanged != null)
                {
                    this.tJ_MeasCellRowChanged(this, new DataSetGES.EventArgs83((DataSetGES.Class127) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCellRowChanging != null)
                {
                    this.tJ_MeasCellRowChanging(this, new DataSetGES.EventArgs83((DataSetGES.Class127) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCellRowDeleted != null)
                {
                    this.tJ_MeasCellRowDeleted(this, new DataSetGES.EventArgs83((DataSetGES.Class127) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MeasCellRowDeleting != null)
                {
                    this.tJ_MeasCellRowDeleting(this, new DataSetGES.EventArgs83((DataSetGES.Class127) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MeasCellDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class127 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class127) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermissAmperageColumn
            {
                get
                {
                    return this.columnPermissAmperage;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MeasurementDataTable : TypedTableBase<DataSetGES.Class94>
        {
            private DataColumn columnComment;
            private DataColumn columnDateD;
            private DataColumn columnDateN;
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidObjList;
            private DataColumn columnidOldMeasurement;
            private DataColumn columnidWorker;
            private DataColumn columnidWorkerCheck;
            private DataColumn columnTemperatureD;
            private DataColumn columnTemperatureN;
            private DataColumn columnTypeDoc;
            private DataColumn columnYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate51 tJ_MeasurementRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate51 tJ_MeasurementRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate51 tJ_MeasurementRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate51 tJ_MeasurementRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MeasurementDataTable()
            {
                base.TableName = "tJ_Measurement";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasurementDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MeasurementDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasurementDataTable table1 = (DataSetGES.tJ_MeasurementDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasurementDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class94);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class94 class94_0)
            {
                base.Rows.Add(class94_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class94 method_1(int int_0, int int_1, int int_2, DateTime dateTime_0, int int_3, DateTime dateTime_1, int int_4, int int_5, int int_6, string string_0, int int_7, bool bool_0)
            {
                DataSetGES.Class94 row = (DataSetGES.Class94) base.NewRow();
                object[] objArray1 = new object[13];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = dateTime_0;
                objArray1[5] = int_3;
                objArray1[6] = dateTime_1;
                objArray1[7] = int_4;
                objArray1[8] = int_5;
                objArray1[9] = int_6;
                objArray1[10] = string_0;
                objArray1[11] = int_7;
                objArray1[12] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class94 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class94) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnYear = base.Columns["Year"];
                this.columnDateD = base.Columns["DateD"];
                this.columnTemperatureD = base.Columns["TemperatureD"];
                this.columnDateN = base.Columns["DateN"];
                this.columnTemperatureN = base.Columns["TemperatureN"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnidWorkerCheck = base.Columns["idWorkerCheck"];
                this.columnComment = base.Columns["Comment"];
                this.columnidOldMeasurement = base.Columns["idOldMeasurement"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnDateD = new DataColumn("DateD", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateD);
                this.columnTemperatureD = new DataColumn("TemperatureD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureD);
                this.columnDateN = new DataColumn("DateN", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateN);
                this.columnTemperatureN = new DataColumn("TemperatureN", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureN);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnidWorkerCheck = new DataColumn("idWorkerCheck", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorkerCheck);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnidOldMeasurement = new DataColumn("idOldMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurement);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidObjList.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnComment.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class94 method_5()
            {
                return (DataSetGES.Class94) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class94 class94_0)
            {
                base.Rows.Remove(class94_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class94(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MeasurementRowChanged != null)
                {
                    this.tJ_MeasurementRowChanged(this, new DataSetGES.EventArgs50((DataSetGES.Class94) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MeasurementRowChanging != null)
                {
                    this.tJ_MeasurementRowChanging(this, new DataSetGES.EventArgs50((DataSetGES.Class94) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MeasurementRowDeleted != null)
                {
                    this.tJ_MeasurementRowDeleted(this, new DataSetGES.EventArgs50((DataSetGES.Class94) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MeasurementRowDeleting != null)
                {
                    this.tJ_MeasurementRowDeleting(this, new DataSetGES.EventArgs50((DataSetGES.Class94) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MeasurementDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateDColumn
            {
                get
                {
                    return this.columnDateD;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateNColumn
            {
                get
                {
                    return this.columnDateN;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idOldMeasurementColumn
            {
                get
                {
                    return this.columnidOldMeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerCheckColumn
            {
                get
                {
                    return this.columnidWorkerCheck;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class94 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class94) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TemperatureDColumn
            {
                get
                {
                    return this.columnTemperatureD;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TemperatureNColumn
            {
                get
                {
                    return this.columnTemperatureN;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MeasVoltageTransfDataTable : TypedTableBase<DataSetGES.Class124>
        {
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidMeasurement;
            private DataColumn columnidObjList;
            private DataColumn columnidOldMeasurementTransf;
            private DataColumn columnidSwitchPosition;
            private DataColumn columnIsrd;
            private DataColumn columnIsrn;
            private DataColumn columnKntd;
            private DataColumn columnKntn;
            private DataColumn columnKpfd;
            private DataColumn columnKpfn;
            private DataColumn columnSumIad;
            private DataColumn columnSumIan;
            private DataColumn columnSumIbd;
            private DataColumn columnSumIbn;
            private DataColumn columnSumIcd;
            private DataColumn columnSumIcn;
            private DataColumn columnSumIod;
            private DataColumn columnSumIon;
            private DataColumn columnUabd;
            private DataColumn columnUabn;
            private DataColumn columnUaod;
            private DataColumn columnUaon;
            private DataColumn columnUbcd;
            private DataColumn columnUbcn;
            private DataColumn columnUbod;
            private DataColumn columnUbon;
            private DataColumn columnUcad;
            private DataColumn columnUcan;
            private DataColumn columnUcod;
            private DataColumn columnUcon;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate81 tJ_MeasVoltageTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate81 tJ_MeasVoltageTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate81 tJ_MeasVoltageTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate81 tJ_MeasVoltageTransfRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MeasVoltageTransfDataTable()
            {
                base.TableName = "tJ_MeasVoltageTransf";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasVoltageTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MeasVoltageTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasVoltageTransfDataTable table1 = (DataSetGES.tJ_MeasVoltageTransfDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasVoltageTransfDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class124);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class124 class124_0)
            {
                base.Rows.Add(class124_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class124 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, int int_5, int int_6, int int_7, int int_8, int int_9, int int_10, int int_11, int int_12, int int_13, int int_14, int int_15, int int_16, int int_17, int int_18, int int_19, int int_20, int int_21, int int_22, int int_23, int int_24, int int_25, int int_26, int int_27, int int_28, int int_29, int int_30, bool bool_0)
            {
                DataSetGES.Class124 row = (DataSetGES.Class124) base.NewRow();
                object[] objArray1 = new object[0x21];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = int_3;
                objArray1[5] = int_4;
                objArray1[6] = int_5;
                objArray1[7] = int_6;
                objArray1[8] = int_7;
                objArray1[9] = int_8;
                objArray1[10] = int_9;
                objArray1[11] = int_10;
                objArray1[12] = int_11;
                objArray1[13] = int_12;
                objArray1[14] = int_13;
                objArray1[15] = int_14;
                objArray1[0x10] = int_15;
                objArray1[0x11] = int_16;
                objArray1[0x12] = int_17;
                objArray1[0x13] = int_18;
                objArray1[20] = int_19;
                objArray1[0x15] = int_20;
                objArray1[0x16] = int_21;
                objArray1[0x17] = int_22;
                objArray1[0x18] = int_23;
                objArray1[0x19] = int_24;
                objArray1[0x1a] = int_25;
                objArray1[0x1b] = int_26;
                objArray1[0x1c] = int_27;
                objArray1[0x1d] = int_28;
                objArray1[30] = int_29;
                objArray1[0x1f] = int_30;
                objArray1[0x20] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class124 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class124) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnidSwitchPosition = base.Columns["idSwitchPosition"];
                this.columnUabd = base.Columns["Uabd"];
                this.columnUabn = base.Columns["Uabn"];
                this.columnUbcd = base.Columns["Ubcd"];
                this.columnUbcn = base.Columns["Ubcn"];
                this.columnUcad = base.Columns["Ucad"];
                this.columnUcan = base.Columns["Ucan"];
                this.columnUaod = base.Columns["Uaod"];
                this.columnUaon = base.Columns["Uaon"];
                this.columnUbod = base.Columns["Ubod"];
                this.columnUbon = base.Columns["Ubon"];
                this.columnUcod = base.Columns["Ucod"];
                this.columnUcon = base.Columns["Ucon"];
                this.columnSumIad = base.Columns["SumIad"];
                this.columnSumIan = base.Columns["SumIan"];
                this.columnSumIbd = base.Columns["SumIbd"];
                this.columnSumIbn = base.Columns["SumIbn"];
                this.columnSumIcd = base.Columns["SumIcd"];
                this.columnSumIcn = base.Columns["SumIcn"];
                this.columnSumIod = base.Columns["SumIod"];
                this.columnSumIon = base.Columns["SumIon"];
                this.columnIsrd = base.Columns["Isrd"];
                this.columnIsrn = base.Columns["Isrn"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
                this.columnKpfd = base.Columns["Kpfd"];
                this.columnKpfn = base.Columns["Kpfn"];
                this.columnidOldMeasurementTransf = base.Columns["idOldMeasurementTransf"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnidSwitchPosition = new DataColumn("idSwitchPosition", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSwitchPosition);
                this.columnUabd = new DataColumn("Uabd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabd);
                this.columnUabn = new DataColumn("Uabn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabn);
                this.columnUbcd = new DataColumn("Ubcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcd);
                this.columnUbcn = new DataColumn("Ubcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcn);
                this.columnUcad = new DataColumn("Ucad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcad);
                this.columnUcan = new DataColumn("Ucan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcan);
                this.columnUaod = new DataColumn("Uaod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaod);
                this.columnUaon = new DataColumn("Uaon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaon);
                this.columnUbod = new DataColumn("Ubod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbod);
                this.columnUbon = new DataColumn("Ubon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbon);
                this.columnUcod = new DataColumn("Ucod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcod);
                this.columnUcon = new DataColumn("Ucon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcon);
                this.columnSumIad = new DataColumn("SumIad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIad);
                this.columnSumIan = new DataColumn("SumIan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIan);
                this.columnSumIbd = new DataColumn("SumIbd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbd);
                this.columnSumIbn = new DataColumn("SumIbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbn);
                this.columnSumIcd = new DataColumn("SumIcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcd);
                this.columnSumIcn = new DataColumn("SumIcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcn);
                this.columnSumIod = new DataColumn("SumIod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIod);
                this.columnSumIon = new DataColumn("SumIon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIon);
                this.columnIsrd = new DataColumn("Isrd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrd);
                this.columnIsrn = new DataColumn("Isrn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrn);
                this.columnKntd = new DataColumn("Kntd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
                this.columnKpfd = new DataColumn("Kpfd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfd);
                this.columnKpfn = new DataColumn("Kpfn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfn);
                this.columnidOldMeasurementTransf = new DataColumn("idOldMeasurementTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurementTransf);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
                base.CaseSensitive = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class124 method_5()
            {
                return (DataSetGES.Class124) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class124 class124_0)
            {
                base.Rows.Remove(class124_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class124(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MeasVoltageTransfRowChanged != null)
                {
                    this.tJ_MeasVoltageTransfRowChanged(this, new DataSetGES.EventArgs80((DataSetGES.Class124) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MeasVoltageTransfRowChanging != null)
                {
                    this.tJ_MeasVoltageTransfRowChanging(this, new DataSetGES.EventArgs80((DataSetGES.Class124) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MeasVoltageTransfRowDeleted != null)
                {
                    this.tJ_MeasVoltageTransfRowDeleted(this, new DataSetGES.EventArgs80((DataSetGES.Class124) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MeasVoltageTransfRowDeleting != null)
                {
                    this.tJ_MeasVoltageTransfRowDeleting(this, new DataSetGES.EventArgs80((DataSetGES.Class124) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MeasVoltageTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idOldMeasurementTransfColumn
            {
                get
                {
                    return this.columnidOldMeasurementTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSwitchPositionColumn
            {
                get
                {
                    return this.columnidSwitchPosition;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsrdColumn
            {
                get
                {
                    return this.columnIsrd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrnColumn
            {
                get
                {
                    return this.columnIsrn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class124 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class124) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KpfdColumn
            {
                get
                {
                    return this.columnKpfd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KpfnColumn
            {
                get
                {
                    return this.columnKpfn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIadColumn
            {
                get
                {
                    return this.columnSumIad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIanColumn
            {
                get
                {
                    return this.columnSumIan;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIbdColumn
            {
                get
                {
                    return this.columnSumIbd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIbnColumn
            {
                get
                {
                    return this.columnSumIbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIcdColumn
            {
                get
                {
                    return this.columnSumIcd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIcnColumn
            {
                get
                {
                    return this.columnSumIcn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIodColumn
            {
                get
                {
                    return this.columnSumIod;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIonColumn
            {
                get
                {
                    return this.columnSumIon;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UabdColumn
            {
                get
                {
                    return this.columnUabd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UabnColumn
            {
                get
                {
                    return this.columnUabn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UaodColumn
            {
                get
                {
                    return this.columnUaod;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UaonColumn
            {
                get
                {
                    return this.columnUaon;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbcdColumn
            {
                get
                {
                    return this.columnUbcd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbcnColumn
            {
                get
                {
                    return this.columnUbcn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbodColumn
            {
                get
                {
                    return this.columnUbod;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbonColumn
            {
                get
                {
                    return this.columnUbon;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcadColumn
            {
                get
                {
                    return this.columnUcad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcanColumn
            {
                get
                {
                    return this.columnUcan;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcodColumn
            {
                get
                {
                    return this.columnUcod;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UconColumn
            {
                get
                {
                    return this.columnUcon;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MemCommissionDataTable : TypedTableBase<DataSetGES.Class155>
        {
            private DataColumn columnBody;
            private DataColumn columnComment;
            private DataColumn columnDateFact;
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidMemorandum;
            private DataColumn columnPerformer;
            private DataColumn columnStatus;
            private DataColumn columnSubject;
            private DataColumn columnUNID;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate112 tJ_MemCommissionRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate112 tJ_MemCommissionRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate112 tJ_MemCommissionRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate112 tJ_MemCommissionRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MemCommissionDataTable()
            {
                base.TableName = "tJ_MemCommission";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_MemCommissionDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MemCommissionDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MemCommissionDataTable table1 = (DataSetGES.tJ_MemCommissionDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MemCommissionDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class155);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class155 class155_0)
            {
                base.Rows.Add(class155_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class155 method_1(int int_0, string string_0, string string_1, string string_2, DateTime dateTime_0, int int_1, string string_3, int int_2, bool bool_0)
            {
                DataSetGES.Class155 row = (DataSetGES.Class155) base.NewRow();
                object[] objArray1 = new object[10];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = string_1;
                objArray1[4] = string_2;
                objArray1[5] = dateTime_0;
                objArray1[6] = int_1;
                objArray1[7] = string_3;
                objArray1[8] = int_2;
                objArray1[9] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class155 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class155) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMemorandum = base.Columns["idMemorandum"];
                this.columnUNID = base.Columns["UNID"];
                this.columnSubject = base.Columns["Subject"];
                this.columnBody = base.Columns["Body"];
                this.columnDateFact = base.Columns["DateFact"];
                this.columnStatus = base.Columns["Status"];
                this.columnComment = base.Columns["Comment"];
                this.columnPerformer = base.Columns["Performer"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMemorandum = new DataColumn("idMemorandum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMemorandum);
                this.columnUNID = new DataColumn("UNID", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUNID);
                this.columnSubject = new DataColumn("Subject", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnBody = new DataColumn("Body", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBody);
                this.columnDateFact = new DataColumn("DateFact", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateFact);
                this.columnStatus = new DataColumn("Status", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnPerformer = new DataColumn("Performer", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPerformer);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMemorandum.AllowDBNull = false;
                this.columnUNID.MaxLength = 50;
                this.columnSubject.MaxLength = 0x200;
                this.columnBody.MaxLength = 0x7fffffff;
                this.columnComment.MaxLength = 0x400;
                this.columnDeleted.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class155 method_5()
            {
                return (DataSetGES.Class155) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class155 class155_0)
            {
                base.Rows.Remove(class155_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class155(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MemCommissionRowChanged != null)
                {
                    this.tJ_MemCommissionRowChanged(this, new DataSetGES.EventArgs111((DataSetGES.Class155) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MemCommissionRowChanging != null)
                {
                    this.tJ_MemCommissionRowChanging(this, new DataSetGES.EventArgs111((DataSetGES.Class155) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MemCommissionRowDeleted != null)
                {
                    this.tJ_MemCommissionRowDeleted(this, new DataSetGES.EventArgs111((DataSetGES.Class155) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MemCommissionRowDeleting != null)
                {
                    this.tJ_MemCommissionRowDeleting(this, new DataSetGES.EventArgs111((DataSetGES.Class155) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MemCommissionDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn BodyColumn
            {
                get
                {
                    return this.columnBody;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateFactColumn
            {
                get
                {
                    return this.columnDateFact;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMemorandumColumn
            {
                get
                {
                    return this.columnidMemorandum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class155 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class155) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PerformerColumn
            {
                get
                {
                    return this.columnPerformer;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StatusColumn
            {
                get
                {
                    return this.columnStatus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SubjectColumn
            {
                get
                {
                    return this.columnSubject;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UNIDColumn
            {
                get
                {
                    return this.columnUNID;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MemFilesDataTable : TypedTableBase<DataSetGES.Class149>
        {
            private DataColumn columnDeleted;
            private DataColumn columnFile;
            private DataColumn columnid;
            private DataColumn columnidDocument;
            private DataColumn columnLastChange;
            private DataColumn columnName;
            private DataColumn columnSize;
            private DataColumn columnTypeDoc;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate106 tJ_MemFilesRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate106 tJ_MemFilesRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate106 tJ_MemFilesRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate106 tJ_MemFilesRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MemFilesDataTable()
            {
                base.TableName = "tJ_MemFiles";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MemFilesDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MemFilesDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MemFilesDataTable table1 = (DataSetGES.tJ_MemFilesDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MemFilesDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class149);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class149 class149_0)
            {
                base.Rows.Add(class149_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class149 method_1(int int_0, int int_1, string string_0, double double_0, byte[] byte_0, DateTime dateTime_0, bool bool_0)
            {
                DataSetGES.Class149 row = (DataSetGES.Class149) base.NewRow();
                object[] objArray1 = new object[8];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = string_0;
                objArray1[4] = double_0;
                objArray1[5] = byte_0;
                objArray1[6] = dateTime_0;
                objArray1[7] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class149 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class149) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidDocument = base.Columns["idDocument"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnName = base.Columns["Name"];
                this.columnSize = base.Columns["Size"];
                this.columnFile = base.Columns["File"];
                this.columnLastChange = base.Columns["LastChange"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidDocument = new DataColumn("idDocument", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidDocument);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSize = new DataColumn("Size", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnFile = new DataColumn("File", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnFile);
                this.columnLastChange = new DataColumn("LastChange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnLastChange);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnName.MaxLength = 0x200;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class149 method_5()
            {
                return (DataSetGES.Class149) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class149 class149_0)
            {
                base.Rows.Remove(class149_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class149(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MemFilesRowChanged != null)
                {
                    this.tJ_MemFilesRowChanged(this, new DataSetGES.EventArgs105((DataSetGES.Class149) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MemFilesRowChanging != null)
                {
                    this.tJ_MemFilesRowChanging(this, new DataSetGES.EventArgs105((DataSetGES.Class149) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MemFilesRowDeleted != null)
                {
                    this.tJ_MemFilesRowDeleted(this, new DataSetGES.EventArgs105((DataSetGES.Class149) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MemFilesRowDeleting != null)
                {
                    this.tJ_MemFilesRowDeleting(this, new DataSetGES.EventArgs105((DataSetGES.Class149) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MemFilesDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FileColumn
            {
                get
                {
                    return this.columnFile;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idDocumentColumn
            {
                get
                {
                    return this.columnidDocument;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class149 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class149) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LastChangeColumn
            {
                get
                {
                    return this.columnLastChange;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SizeColumn
            {
                get
                {
                    return this.columnSize;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MemorandumDataTable : TypedTableBase<DataSetGES.Class150>
        {
            private DataColumn columnBody_C;
            private DataColumn columnCorrName;
            private DataColumn columnctb_InheritedID;
            private DataColumn columnctbDateCreate;
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidTehConnect;
            private DataColumn columnidWorker;
            private DataColumn columnRespDate;
            private DataColumn columnRespNum;
            private DataColumn columnRgNum;
            private DataColumn columnSignDate;
            private DataColumn columnStatus;
            private DataColumn columnStatusOrder;
            private DataColumn columnSubject;
            private DataColumn columnUniversalID;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate107 tJ_MemorandumRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate107 tJ_MemorandumRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate107 tJ_MemorandumRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate107 tJ_MemorandumRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MemorandumDataTable()
            {
                base.TableName = "tJ_Memorandum";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_MemorandumDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_MemorandumDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MemorandumDataTable table1 = (DataSetGES.tJ_MemorandumDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MemorandumDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class150);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class150 class150_0)
            {
                base.Rows.Add(class150_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class150 method_1(int int_0, int int_1, string string_0, string string_1, int int_2, int int_3, string string_2, string string_3, DateTime dateTime_0, DateTime dateTime_1, string string_4, string string_5, string string_6, DateTime dateTime_2, bool bool_0)
            {
                DataSetGES.Class150 row = (DataSetGES.Class150) base.NewRow();
                object[] objArray1 = new object[0x10];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = string_0;
                objArray1[4] = string_1;
                objArray1[5] = int_2;
                objArray1[6] = int_3;
                objArray1[7] = string_2;
                objArray1[8] = string_3;
                objArray1[9] = dateTime_0;
                objArray1[10] = dateTime_1;
                objArray1[11] = string_4;
                objArray1[12] = string_5;
                objArray1[13] = string_6;
                objArray1[14] = dateTime_2;
                objArray1[15] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class150 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class150) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidTehConnect = base.Columns["idTehConnect"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnUniversalID = base.Columns["UniversalID"];
                this.columnctb_InheritedID = base.Columns["ctb_InheritedID"];
                this.columnStatus = base.Columns["Status"];
                this.columnStatusOrder = base.Columns["StatusOrder"];
                this.columnBody_C = base.Columns["Body_C"];
                this.columnSubject = base.Columns["Subject"];
                this.columnRespDate = base.Columns["RespDate"];
                this.columnSignDate = base.Columns["SignDate"];
                this.columnRgNum = base.Columns["RgNum"];
                this.columnRespNum = base.Columns["RespNum"];
                this.columnCorrName = base.Columns["CorrName"];
                this.columnctbDateCreate = base.Columns["ctbDateCreate"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidTehConnect = new DataColumn("idTehConnect", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTehConnect);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnUniversalID = new DataColumn("UniversalID", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUniversalID);
                this.columnctb_InheritedID = new DataColumn("ctb_InheritedID", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnctb_InheritedID);
                this.columnStatus = new DataColumn("Status", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnStatusOrder = new DataColumn("StatusOrder", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnStatusOrder);
                this.columnBody_C = new DataColumn("Body_C", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBody_C);
                this.columnSubject = new DataColumn("Subject", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnRespDate = new DataColumn("RespDate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnRespDate);
                this.columnSignDate = new DataColumn("SignDate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnSignDate);
                this.columnRgNum = new DataColumn("RgNum", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnRgNum);
                this.columnRespNum = new DataColumn("RespNum", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnRespNum);
                this.columnCorrName = new DataColumn("CorrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCorrName);
                this.columnctbDateCreate = new DataColumn("ctbDateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnctbDateCreate);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnUniversalID.MaxLength = 50;
                this.columnctb_InheritedID.MaxLength = 50;
                this.columnBody_C.MaxLength = 0x7fffffff;
                this.columnSubject.MaxLength = 0x200;
                this.columnRgNum.MaxLength = 50;
                this.columnRespNum.MaxLength = 50;
                this.columnCorrName.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class150 method_5()
            {
                return (DataSetGES.Class150) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class150 class150_0)
            {
                base.Rows.Remove(class150_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class150(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MemorandumRowChanged != null)
                {
                    this.tJ_MemorandumRowChanged(this, new DataSetGES.EventArgs106((DataSetGES.Class150) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MemorandumRowChanging != null)
                {
                    this.tJ_MemorandumRowChanging(this, new DataSetGES.EventArgs106((DataSetGES.Class150) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MemorandumRowDeleted != null)
                {
                    this.tJ_MemorandumRowDeleted(this, new DataSetGES.EventArgs106((DataSetGES.Class150) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MemorandumRowDeleting != null)
                {
                    this.tJ_MemorandumRowDeleting(this, new DataSetGES.EventArgs106((DataSetGES.Class150) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MemorandumDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn Body_CColumn
            {
                get
                {
                    return this.columnBody_C;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CorrNameColumn
            {
                get
                {
                    return this.columnCorrName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ctb_InheritedIDColumn
            {
                get
                {
                    return this.columnctb_InheritedID;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ctbDateCreateColumn
            {
                get
                {
                    return this.columnctbDateCreate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTehConnectColumn
            {
                get
                {
                    return this.columnidTehConnect;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class150 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class150) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn RespDateColumn
            {
                get
                {
                    return this.columnRespDate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn RespNumColumn
            {
                get
                {
                    return this.columnRespNum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn RgNumColumn
            {
                get
                {
                    return this.columnRgNum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SignDateColumn
            {
                get
                {
                    return this.columnSignDate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn StatusColumn
            {
                get
                {
                    return this.columnStatus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn StatusOrderColumn
            {
                get
                {
                    return this.columnStatusOrder;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubjectColumn
            {
                get
                {
                    return this.columnSubject;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UniversalIDColumn
            {
                get
                {
                    return this.columnUniversalID;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_MemWorkerDataTable : TypedTableBase<DataSetGES.Class152>
        {
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidMemorandum;
            private DataColumn columnidWorker;
            private DataColumn columntypeWorker;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate109 tJ_MemWorkerRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate109 tJ_MemWorkerRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate109 tJ_MemWorkerRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate109 tJ_MemWorkerRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MemWorkerDataTable()
            {
                base.TableName = "tJ_MemWorker";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_MemWorkerDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_MemWorkerDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MemWorkerDataTable table1 = (DataSetGES.tJ_MemWorkerDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MemWorkerDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class152);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class152 class152_0)
            {
                base.Rows.Add(class152_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class152 method_1(int int_0, int int_1, int int_2, bool bool_0)
            {
                DataSetGES.Class152 row = (DataSetGES.Class152) base.NewRow();
                object[] objArray1 = new object[5];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class152 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class152) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMemorandum = base.Columns["idMemorandum"];
                this.columntypeWorker = base.Columns["typeWorker"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMemorandum = new DataColumn("idMemorandum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMemorandum);
                this.columntypeWorker = new DataColumn("typeWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntypeWorker);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMemorandum.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class152 method_5()
            {
                return (DataSetGES.Class152) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class152 class152_0)
            {
                base.Rows.Remove(class152_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class152(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_MemWorkerRowChanged != null)
                {
                    this.tJ_MemWorkerRowChanged(this, new DataSetGES.EventArgs108((DataSetGES.Class152) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_MemWorkerRowChanging != null)
                {
                    this.tJ_MemWorkerRowChanging(this, new DataSetGES.EventArgs108((DataSetGES.Class152) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_MemWorkerRowDeleted != null)
                {
                    this.tJ_MemWorkerRowDeleted(this, new DataSetGES.EventArgs108((DataSetGES.Class152) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_MemWorkerRowDeleting != null)
                {
                    this.tJ_MemWorkerRowDeleting(this, new DataSetGES.EventArgs108((DataSetGES.Class152) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_MemWorkerDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMemorandumColumn
            {
                get
                {
                    return this.columnidMemorandum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class152 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class152) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn typeWorkerColumn
            {
                get
                {
                    return this.columntypeWorker;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_RelayProtectionAutomationDataTable : TypedTableBase<DataSetGES.Class55>
        {
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidSchmObj;
            private DataColumn columnname;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate12 tJ_RelayProtectionAutomationRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate12 tJ_RelayProtectionAutomationRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate12 tJ_RelayProtectionAutomationRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate12 tJ_RelayProtectionAutomationRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RelayProtectionAutomationDataTable()
            {
                base.TableName = "tJ_RelayProtectionAutomation";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RelayProtectionAutomationDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_RelayProtectionAutomationDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RelayProtectionAutomationDataTable table1 = (DataSetGES.tJ_RelayProtectionAutomationDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RelayProtectionAutomationDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class55);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class55 class55_0)
            {
                base.Rows.Add(class55_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class55 method_1(int int_0, string string_0, bool bool_0)
            {
                DataSetGES.Class55 row = (DataSetGES.Class55) base.NewRow();
                object[] objArray1 = new object[4];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class55 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class55) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnname = base.Columns["name"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnname = new DataColumn("name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidSchmObj.AutoIncrementSeed = -1L;
                this.columnidSchmObj.AutoIncrementStep = -1L;
                this.columnidSchmObj.AllowDBNull = false;
                this.columnname.MaxLength = 100;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class55 method_5()
            {
                return (DataSetGES.Class55) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class55 class55_0)
            {
                base.Rows.Remove(class55_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class55(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationRowChanged != null)
                {
                    this.tJ_RelayProtectionAutomationRowChanged(this, new DataSetGES.EventArgs11((DataSetGES.Class55) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationRowChanging != null)
                {
                    this.tJ_RelayProtectionAutomationRowChanging(this, new DataSetGES.EventArgs11((DataSetGES.Class55) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationRowDeleted != null)
                {
                    this.tJ_RelayProtectionAutomationRowDeleted(this, new DataSetGES.EventArgs11((DataSetGES.Class55) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationRowDeleting != null)
                {
                    this.tJ_RelayProtectionAutomationRowDeleting(this, new DataSetGES.EventArgs11((DataSetGES.Class55) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_RelayProtectionAutomationDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class55 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class55) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameColumn
            {
                get
                {
                    return this.columnname;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_RelayProtectionAutomationValueDataTable : TypedTableBase<DataSetGES.Class56>
        {
            private DataColumn columnact_ozz;
            private DataColumn columnamp_mtz;
            private DataColumn columnamp_ozz;
            private DataColumn columnamp_primary;
            private DataColumn columnamp_secondary;
            private DataColumn columnamp_to;
            private DataColumn columnamp_urov;
            private DataColumn columnArcProtection;
            private DataColumn columnavr;
            private DataColumn columncomment;
            private DataColumn columncp;
            private DataColumn columncp_cell;
            private DataColumn columndateCreate;
            private DataColumn columndateIn;
            private DataColumn columndeleted;
            private DataColumn columnid;
            private DataColumn columnidRelay;
            private DataColumn columnidTypeTr;
            private DataColumn columnlzsh;
            private DataColumn columnspeed_mtz;
            private DataColumn columntime_mtz;
            private DataColumn columntime_ozz;
            private DataColumn columntime_to;
            private DataColumn columntime_urov;
            private DataColumn columntype_proc;
            private DataColumn columntype_relay;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate13 tJ_RelayProtectionAutomationValueRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate13 tJ_RelayProtectionAutomationValueRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate13 tJ_RelayProtectionAutomationValueRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate13 tJ_RelayProtectionAutomationValueRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RelayProtectionAutomationValueDataTable()
            {
                base.TableName = "tJ_RelayProtectionAutomationValue";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RelayProtectionAutomationValueDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RelayProtectionAutomationValueDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RelayProtectionAutomationValueDataTable table1 = (DataSetGES.tJ_RelayProtectionAutomationValueDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RelayProtectionAutomationValueDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class56);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class56 class56_0)
            {
                base.Rows.Add(class56_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class56 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, double double_0, int int_5, double double_1, int int_6, double double_2, string string_0, double double_3, int int_7, double double_4, bool bool_0, bool bool_1, string string_1, string string_2, string string_3, string string_4, string string_5, DateTime dateTime_0, DateTime dateTime_1, bool bool_2, bool bool_3)
            {
                DataSetGES.Class56 row = (DataSetGES.Class56) base.NewRow();
                object[] objArray1 = new object[0x1a];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = int_3;
                objArray1[5] = int_4;
                objArray1[6] = double_0;
                objArray1[7] = int_5;
                objArray1[8] = double_1;
                objArray1[9] = int_6;
                objArray1[10] = double_2;
                objArray1[11] = string_0;
                objArray1[12] = double_3;
                objArray1[13] = int_7;
                objArray1[14] = double_4;
                objArray1[15] = bool_0;
                objArray1[0x10] = bool_1;
                objArray1[0x11] = string_1;
                objArray1[0x12] = string_2;
                objArray1[0x13] = string_3;
                objArray1[20] = string_4;
                objArray1[0x15] = string_5;
                objArray1[0x16] = dateTime_0;
                objArray1[0x17] = dateTime_1;
                objArray1[0x18] = bool_2;
                objArray1[0x19] = bool_3;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class56 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class56) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidRelay = base.Columns["idRelay"];
                this.columnamp_primary = base.Columns["amp_primary"];
                this.columnamp_secondary = base.Columns["amp_secondary"];
                this.columnidTypeTr = base.Columns["idTypeTr"];
                this.columnamp_mtz = base.Columns["amp_mtz"];
                this.columntime_mtz = base.Columns["time_mtz"];
                this.columnamp_to = base.Columns["amp_to"];
                this.columntime_to = base.Columns["time_to"];
                this.columnamp_ozz = base.Columns["amp_ozz"];
                this.columntime_ozz = base.Columns["time_ozz"];
                this.columnact_ozz = base.Columns["act_ozz"];
                this.columnspeed_mtz = base.Columns["speed_mtz"];
                this.columnamp_urov = base.Columns["amp_urov"];
                this.columntime_urov = base.Columns["time_urov"];
                this.columnavr = base.Columns["avr"];
                this.columnlzsh = base.Columns["lzsh"];
                this.columntype_relay = base.Columns["type_relay"];
                this.columntype_proc = base.Columns["type_proc"];
                this.columncp = base.Columns["cp"];
                this.columncp_cell = base.Columns["cp_cell"];
                this.columncomment = base.Columns["comment"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columndateIn = base.Columns["dateIn"];
                this.columndeleted = base.Columns["deleted"];
                this.columnArcProtection = base.Columns["ArcProtection"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRelay = new DataColumn("idRelay", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRelay);
                this.columnamp_primary = new DataColumn("amp_primary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_primary);
                this.columnamp_secondary = new DataColumn("amp_secondary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_secondary);
                this.columnidTypeTr = new DataColumn("idTypeTr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTypeTr);
                this.columnamp_mtz = new DataColumn("amp_mtz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_mtz);
                this.columntime_mtz = new DataColumn("time_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_mtz);
                this.columnamp_to = new DataColumn("amp_to", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_to);
                this.columntime_to = new DataColumn("time_to", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_to);
                this.columnamp_ozz = new DataColumn("amp_ozz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_ozz);
                this.columntime_ozz = new DataColumn("time_ozz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_ozz);
                this.columnact_ozz = new DataColumn("act_ozz", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnact_ozz);
                this.columnspeed_mtz = new DataColumn("speed_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnspeed_mtz);
                this.columnamp_urov = new DataColumn("amp_urov", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_urov);
                this.columntime_urov = new DataColumn("time_urov", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_urov);
                this.columnavr = new DataColumn("avr", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnavr);
                this.columnlzsh = new DataColumn("lzsh", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnlzsh);
                this.columntype_relay = new DataColumn("type_relay", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_relay);
                this.columntype_proc = new DataColumn("type_proc", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_proc);
                this.columncp = new DataColumn("cp", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp);
                this.columncp_cell = new DataColumn("cp_cell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp_cell);
                this.columncomment = new DataColumn("comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncomment);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columndateIn = new DataColumn("dateIn", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateIn);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columnArcProtection = new DataColumn("ArcProtection", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnArcProtection);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRelay.AllowDBNull = false;
                this.columnact_ozz.MaxLength = 50;
                this.columntype_relay.MaxLength = 50;
                this.columntype_proc.MaxLength = 50;
                this.columncp.MaxLength = 100;
                this.columncp_cell.MaxLength = 0x19;
                this.columncomment.MaxLength = 0x100;
                this.columndateCreate.AllowDBNull = false;
                this.columndateIn.AllowDBNull = false;
                this.columndeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class56 method_5()
            {
                return (DataSetGES.Class56) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class56 class56_0)
            {
                base.Rows.Remove(class56_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class56(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationValueRowChanged != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowChanged(this, new DataSetGES.EventArgs12((DataSetGES.Class56) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationValueRowChanging != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowChanging(this, new DataSetGES.EventArgs12((DataSetGES.Class56) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationValueRowDeleted != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowDeleted(this, new DataSetGES.EventArgs12((DataSetGES.Class56) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_RelayProtectionAutomationValueRowDeleting != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowDeleting(this, new DataSetGES.EventArgs12((DataSetGES.Class56) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_RelayProtectionAutomationValueDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn act_ozzColumn
            {
                get
                {
                    return this.columnact_ozz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_mtzColumn
            {
                get
                {
                    return this.columnamp_mtz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_ozzColumn
            {
                get
                {
                    return this.columnamp_ozz;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_primaryColumn
            {
                get
                {
                    return this.columnamp_primary;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_secondaryColumn
            {
                get
                {
                    return this.columnamp_secondary;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_toColumn
            {
                get
                {
                    return this.columnamp_to;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_urovColumn
            {
                get
                {
                    return this.columnamp_urov;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ArcProtectionColumn
            {
                get
                {
                    return this.columnArcProtection;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn avrColumn
            {
                get
                {
                    return this.columnavr;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn commentColumn
            {
                get
                {
                    return this.columncomment;
                }
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn cp_cellColumn
            {
                get
                {
                    return this.columncp_cell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn cpColumn
            {
                get
                {
                    return this.columncp;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateInColumn
            {
                get
                {
                    return this.columndateIn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idRelayColumn
            {
                get
                {
                    return this.columnidRelay;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTypeTrColumn
            {
                get
                {
                    return this.columnidTypeTr;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class56 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class56) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn lzshColumn
            {
                get
                {
                    return this.columnlzsh;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn speed_mtzColumn
            {
                get
                {
                    return this.columnspeed_mtz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_mtzColumn
            {
                get
                {
                    return this.columntime_mtz;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn time_ozzColumn
            {
                get
                {
                    return this.columntime_ozz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_toColumn
            {
                get
                {
                    return this.columntime_to;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn time_urovColumn
            {
                get
                {
                    return this.columntime_urov;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn type_procColumn
            {
                get
                {
                    return this.columntype_proc;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn type_relayColumn
            {
                get
                {
                    return this.columntype_relay;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_RequestDataTable : TypedTableBase<DataSetGES.Class46>
        {
            private DataColumn columnComment;
            private DataColumn columnDatePerfom;
            private DataColumn columnDateSendMail;
            private DataColumn columnDateTask;
            private DataColumn columnFIOSendMail;
            private DataColumn columnid;
            private DataColumn columnidUserPerfom;
            private DataColumn columnidUserTask;
            private DataColumn columnidUserWhom;
            private DataColumn columnModul;
            private DataColumn columnStatusTask;
            private DataColumn columnTextTask;
            private DataColumn columnTextTaskBin;
            private DataColumn columnTypeTask;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate3 tJ_RequestRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate3 tJ_RequestRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate3 tJ_RequestRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate3 tJ_RequestRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RequestDataTable()
            {
                base.TableName = "tJ_Request";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RequestDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestDataTable table1 = (DataSetGES.tJ_RequestDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class46);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class46 class46_0)
            {
                base.Rows.Add(class46_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class46 method_1(int int_0, DateTime dateTime_0, int int_1, string string_0, byte[] byte_0, int int_2, int int_3, string string_1, int int_4, DateTime dateTime_1, string string_2, DateTime dateTime_2, string string_3)
            {
                DataSetGES.Class46 row = (DataSetGES.Class46) base.NewRow();
                object[] objArray1 = new object[14];
                objArray1[1] = int_0;
                objArray1[2] = dateTime_0;
                objArray1[3] = int_1;
                objArray1[4] = string_0;
                objArray1[5] = byte_0;
                objArray1[6] = int_2;
                objArray1[7] = int_3;
                objArray1[8] = string_1;
                objArray1[9] = int_4;
                objArray1[10] = dateTime_1;
                objArray1[11] = string_2;
                objArray1[12] = dateTime_2;
                objArray1[13] = string_3;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class46 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class46) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidUserTask = base.Columns["idUserTask"];
                this.columnDateTask = base.Columns["DateTask"];
                this.columnModul = base.Columns["Modul"];
                this.columnTextTask = base.Columns["TextTask"];
                this.columnTextTaskBin = base.Columns["TextTaskBin"];
                this.columnidUserWhom = base.Columns["idUserWhom"];
                this.columnTypeTask = base.Columns["TypeTask"];
                this.columnStatusTask = base.Columns["StatusTask"];
                this.columnidUserPerfom = base.Columns["idUserPerfom"];
                this.columnDatePerfom = base.Columns["DatePerfom"];
                this.columnComment = base.Columns["Comment"];
                this.columnDateSendMail = base.Columns["DateSendMail"];
                this.columnFIOSendMail = base.Columns["FIOSendMail"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidUserTask = new DataColumn("idUserTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserTask);
                this.columnDateTask = new DataColumn("DateTask", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTask);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnTextTask = new DataColumn("TextTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextTask);
                this.columnTextTaskBin = new DataColumn("TextTaskBin", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnTextTaskBin);
                this.columnidUserWhom = new DataColumn("idUserWhom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserWhom);
                this.columnTypeTask = new DataColumn("TypeTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeTask);
                this.columnStatusTask = new DataColumn("StatusTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStatusTask);
                this.columnidUserPerfom = new DataColumn("idUserPerfom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserPerfom);
                this.columnDatePerfom = new DataColumn("DatePerfom", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDatePerfom);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDateSendMail = new DataColumn("DateSendMail", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateSendMail);
                this.columnFIOSendMail = new DataColumn("FIOSendMail", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIOSendMail);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidUserTask.AllowDBNull = false;
                this.columnDateTask.AllowDBNull = false;
                this.columnComment.MaxLength = 0x7d0;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class46 method_5()
            {
                return (DataSetGES.Class46) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class46 class46_0)
            {
                base.Rows.Remove(class46_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class46(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_RequestRowChanged != null)
                {
                    this.tJ_RequestRowChanged(this, new DataSetGES.EventArgs2((DataSetGES.Class46) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_RequestRowChanging != null)
                {
                    this.tJ_RequestRowChanging(this, new DataSetGES.EventArgs2((DataSetGES.Class46) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_RequestRowDeleted != null)
                {
                    this.tJ_RequestRowDeleted(this, new DataSetGES.EventArgs2((DataSetGES.Class46) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_RequestRowDeleting != null)
                {
                    this.tJ_RequestRowDeleting(this, new DataSetGES.EventArgs2((DataSetGES.Class46) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_RequestDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DatePerfomColumn
            {
                get
                {
                    return this.columnDatePerfom;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateSendMailColumn
            {
                get
                {
                    return this.columnDateSendMail;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateTaskColumn
            {
                get
                {
                    return this.columnDateTask;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FIOSendMailColumn
            {
                get
                {
                    return this.columnFIOSendMail;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUserPerfomColumn
            {
                get
                {
                    return this.columnidUserPerfom;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUserTaskColumn
            {
                get
                {
                    return this.columnidUserTask;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUserWhomColumn
            {
                get
                {
                    return this.columnidUserWhom;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class46 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class46) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StatusTaskColumn
            {
                get
                {
                    return this.columnStatusTask;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TextTaskBinColumn
            {
                get
                {
                    return this.columnTextTaskBin;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TextTaskColumn
            {
                get
                {
                    return this.columnTextTask;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeTaskColumn
            {
                get
                {
                    return this.columnTypeTask;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_RequestDocDataTable : TypedTableBase<DataSetGES.Class45>
        {
            private DataColumn columnDocument;
            private DataColumn columnFileName;
            private DataColumn columnid;
            private DataColumn columnidRequest;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate2 tJ_RequestDocRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate2 tJ_RequestDocRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate2 tJ_RequestDocRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate2 tJ_RequestDocRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RequestDocDataTable()
            {
                base.TableName = "tJ_RequestDoc";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestDocDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_RequestDocDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestDocDataTable table1 = (DataSetGES.tJ_RequestDocDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestDocDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class45);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class45 class45_0)
            {
                base.Rows.Add(class45_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class45 method_1(int int_0, byte[] byte_0, string string_0)
            {
                DataSetGES.Class45 row = (DataSetGES.Class45) base.NewRow();
                object[] objArray1 = new object[4];
                objArray1[1] = int_0;
                objArray1[2] = byte_0;
                objArray1[3] = string_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class45 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class45) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columnDocument = base.Columns["Document"];
                this.columnFileName = base.Columns["FileName"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columnDocument = new DataColumn("Document", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnDocument);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columnDocument.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 0x400;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class45 method_5()
            {
                return (DataSetGES.Class45) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class45 class45_0)
            {
                base.Rows.Remove(class45_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class45(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_RequestDocRowChanged != null)
                {
                    this.tJ_RequestDocRowChanged(this, new DataSetGES.EventArgs1((DataSetGES.Class45) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_RequestDocRowChanging != null)
                {
                    this.tJ_RequestDocRowChanging(this, new DataSetGES.EventArgs1((DataSetGES.Class45) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_RequestDocRowDeleted != null)
                {
                    this.tJ_RequestDocRowDeleted(this, new DataSetGES.EventArgs1((DataSetGES.Class45) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_RequestDocRowDeleting != null)
                {
                    this.tJ_RequestDocRowDeleting(this, new DataSetGES.EventArgs1((DataSetGES.Class45) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_RequestDocDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocumentColumn
            {
                get
                {
                    return this.columnDocument;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class45 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class45) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_RequestForRepairDailyDataTable : TypedTableBase<DataSetGES.Class51>
        {
            private DataColumn columndateBeg;
            private DataColumn columndateEnd;
            private DataColumn columnid;
            private DataColumn columnidRequest;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate8 tJ_RequestForRepairDailyRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate8 tJ_RequestForRepairDailyRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate8 tJ_RequestForRepairDailyRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate8 tJ_RequestForRepairDailyRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RequestForRepairDailyDataTable()
            {
                base.TableName = "tJ_RequestForRepairDaily";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestForRepairDailyDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RequestForRepairDailyDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestForRepairDailyDataTable table1 = (DataSetGES.tJ_RequestForRepairDailyDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestForRepairDailyDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class51);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class51 class51_0)
            {
                base.Rows.Add(class51_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class51 method_1(DataSetGES.Class49 class49_0, DateTime dateTime_0, DateTime dateTime_1)
            {
                DataSetGES.Class51 row = (DataSetGES.Class51) base.NewRow();
                object[] objArray1 = new object[4];
                objArray1[2] = dateTime_0;
                objArray1[3] = dateTime_1;
                object[] objArray = objArray1;
                if (class49_0 != null)
                {
                    objArray[1] = class49_0[0];
                }
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class51 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class51) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columndateBeg = base.Columns["dateBeg"];
                this.columndateEnd = base.Columns["dateEnd"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columndateBeg = new DataColumn("dateBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateBeg);
                this.columndateEnd = new DataColumn("dateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateEnd);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                DataColumn[] columnArray2 = new DataColumn[] { this.columnidRequest, this.columndateBeg, this.columndateEnd };
                base.Constraints.Add(new UniqueConstraint("tJ_RequestForRepairKey", columnArray2, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columndateBeg.AllowDBNull = false;
                this.columndateEnd.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class51 method_5()
            {
                return (DataSetGES.Class51) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class51 class51_0)
            {
                base.Rows.Remove(class51_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class51(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDailyRowChanged != null)
                {
                    this.tJ_RequestForRepairDailyRowChanged(this, new DataSetGES.EventArgs7((DataSetGES.Class51) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDailyRowChanging != null)
                {
                    this.tJ_RequestForRepairDailyRowChanging(this, new DataSetGES.EventArgs7((DataSetGES.Class51) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDailyRowDeleted != null)
                {
                    this.tJ_RequestForRepairDailyRowDeleted(this, new DataSetGES.EventArgs7((DataSetGES.Class51) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDailyRowDeleting != null)
                {
                    this.tJ_RequestForRepairDailyRowDeleting(this, new DataSetGES.EventArgs7((DataSetGES.Class51) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_RequestForRepairDailyDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateBegColumn
            {
                get
                {
                    return this.columndateBeg;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateEndColumn
            {
                get
                {
                    return this.columndateEnd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class51 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class51) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_RequestForRepairDataTable : TypedTableBase<DataSetGES.Class49>
        {
            private DataColumn columnAddress;
            private DataColumn columnAgreed;
            private DataColumn columnAgreeWith;
            private DataColumn columnComment;
            private DataColumn columnCrash;
            private DataColumn columnDateAgreed;
            private DataColumn columndateCreate;
            private DataColumn columndateFactEnd;
            private DataColumn columndateOpenRequest;
            private DataColumn columndeleted;
            private DataColumn columnid;
            private DataColumn columniddivision;
            private DataColumn columnidSR;
            private DataColumn columnidUserCreate;
            private DataColumn columnidWorker;
            private DataColumn columnIsPlanned;
            private DataColumn columnisSend;
            private DataColumn columnnum;
            private DataColumn columnPurpose;
            private DataColumn columnreguestFiled;
            private DataColumn columnschmObj;
            private DataColumn columnSendSite;
            private DataColumn columnstatus;
            private DataColumn columnWorkerAgreed;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate6 tJ_RequestForRepairRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate6 tJ_RequestForRepairRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate6 tJ_RequestForRepairRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate6 tJ_RequestForRepairRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RequestForRepairDataTable()
            {
                base.TableName = "tJ_RequestForRepair";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RequestForRepairDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RequestForRepairDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestForRepairDataTable table1 = (DataSetGES.tJ_RequestForRepairDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestForRepairDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class49);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class49 class49_0)
            {
                base.Rows.Add(class49_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class49 method_1(int int_0, DateTime dateTime_0, int int_1, string string_0, int int_2, string string_1, string string_2, bool bool_0, bool bool_1, string string_3, string string_4, string string_5, bool bool_2, DateTime dateTime_1, int int_3, int int_4, int int_5, bool bool_3, bool bool_4, DateTime dateTime_2, int int_6, DateTime dateTime_3, bool bool_5)
            {
                DataSetGES.Class49 row = (DataSetGES.Class49) base.NewRow();
                object[] objArray1 = new object[0x18];
                objArray1[1] = int_0;
                objArray1[2] = dateTime_0;
                objArray1[3] = int_1;
                objArray1[4] = string_0;
                objArray1[5] = int_2;
                objArray1[6] = string_1;
                objArray1[7] = string_2;
                objArray1[8] = bool_0;
                objArray1[9] = bool_1;
                objArray1[10] = string_3;
                objArray1[11] = string_4;
                objArray1[12] = string_5;
                objArray1[13] = bool_2;
                objArray1[14] = dateTime_1;
                objArray1[15] = int_3;
                objArray1[0x10] = int_4;
                objArray1[0x11] = int_5;
                objArray1[0x12] = bool_3;
                objArray1[0x13] = bool_4;
                objArray1[20] = dateTime_2;
                objArray1[0x15] = int_6;
                objArray1[0x16] = dateTime_3;
                objArray1[0x17] = bool_5;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class49 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class49) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnnum = base.Columns["num"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnreguestFiled = base.Columns["reguestFiled"];
                this.columnidSR = base.Columns["idSR"];
                this.columnschmObj = base.Columns["schmObj"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnIsPlanned = base.Columns["IsPlanned"];
                this.columnCrash = base.Columns["Crash"];
                this.columnAgreeWith = base.Columns["AgreeWith"];
                this.columnComment = base.Columns["Comment"];
                this.columnAddress = base.Columns["Address"];
                this.columnAgreed = base.Columns["Agreed"];
                this.columnDateAgreed = base.Columns["DateAgreed"];
                this.columnWorkerAgreed = base.Columns["WorkerAgreed"];
                this.columniddivision = base.Columns["iddivision"];
                this.columnidUserCreate = base.Columns["idUserCreate"];
                this.columndeleted = base.Columns["deleted"];
                this.columnisSend = base.Columns["isSend"];
                this.columndateFactEnd = base.Columns["dateFactEnd"];
                this.columnstatus = base.Columns["status"];
                this.columndateOpenRequest = base.Columns["dateOpenRequest"];
                this.columnSendSite = base.Columns["SendSite"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnum = new DataColumn("num", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnreguestFiled = new DataColumn("reguestFiled", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnreguestFiled);
                this.columnidSR = new DataColumn("idSR", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSR);
                this.columnschmObj = new DataColumn("schmObj", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnschmObj);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnIsPlanned = new DataColumn("IsPlanned", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsPlanned);
                this.columnCrash = new DataColumn("Crash", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnCrash);
                this.columnAgreeWith = new DataColumn("AgreeWith", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAgreeWith);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAgreed = new DataColumn("Agreed", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnAgreed);
                this.columnDateAgreed = new DataColumn("DateAgreed", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateAgreed);
                this.columnWorkerAgreed = new DataColumn("WorkerAgreed", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWorkerAgreed);
                this.columniddivision = new DataColumn("iddivision", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columniddivision);
                this.columnidUserCreate = new DataColumn("idUserCreate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserCreate);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columnisSend = new DataColumn("isSend", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisSend);
                this.columndateFactEnd = new DataColumn("dateFactEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateFactEnd);
                this.columnstatus = new DataColumn("status", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columndateOpenRequest = new DataColumn("dateOpenRequest", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateOpenRequest);
                this.columnSendSite = new DataColumn("SendSite", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnSendSite);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnnum.AllowDBNull = false;
                this.columndateCreate.AllowDBNull = false;
                this.columnreguestFiled.AllowDBNull = false;
                this.columnreguestFiled.MaxLength = 0x100;
                this.columnidSR.AllowDBNull = false;
                this.columnschmObj.AllowDBNull = false;
                this.columnschmObj.MaxLength = 0x100;
                this.columnPurpose.AllowDBNull = false;
                this.columnPurpose.MaxLength = 0x100;
                this.columnIsPlanned.AllowDBNull = false;
                this.columnAgreeWith.MaxLength = 0x100;
                this.columnAgreed.AllowDBNull = false;
                this.columniddivision.AllowDBNull = false;
                this.columndeleted.AllowDBNull = false;
                this.columndeleted.DefaultValue = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class49 method_5()
            {
                return (DataSetGES.Class49) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class49 class49_0)
            {
                base.Rows.Remove(class49_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class49(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairRowChanged != null)
                {
                    this.tJ_RequestForRepairRowChanged(this, new DataSetGES.EventArgs5((DataSetGES.Class49) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairRowChanging != null)
                {
                    this.tJ_RequestForRepairRowChanging(this, new DataSetGES.EventArgs5((DataSetGES.Class49) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairRowDeleted != null)
                {
                    this.tJ_RequestForRepairRowDeleted(this, new DataSetGES.EventArgs5((DataSetGES.Class49) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairRowDeleting != null)
                {
                    this.tJ_RequestForRepairRowDeleting(this, new DataSetGES.EventArgs5((DataSetGES.Class49) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_RequestForRepairDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AgreedColumn
            {
                get
                {
                    return this.columnAgreed;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AgreeWithColumn
            {
                get
                {
                    return this.columnAgreeWith;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CrashColumn
            {
                get
                {
                    return this.columnCrash;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateAgreedColumn
            {
                get
                {
                    return this.columnDateAgreed;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateFactEndColumn
            {
                get
                {
                    return this.columndateFactEnd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateOpenRequestColumn
            {
                get
                {
                    return this.columndateOpenRequest;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn iddivisionColumn
            {
                get
                {
                    return this.columniddivision;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSRColumn
            {
                get
                {
                    return this.columnidSR;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUserCreateColumn
            {
                get
                {
                    return this.columnidUserCreate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsPlannedColumn
            {
                get
                {
                    return this.columnIsPlanned;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn isSendColumn
            {
                get
                {
                    return this.columnisSend;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class49 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class49) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn numColumn
            {
                get
                {
                    return this.columnnum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PurposeColumn
            {
                get
                {
                    return this.columnPurpose;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn reguestFiledColumn
            {
                get
                {
                    return this.columnreguestFiled;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn schmObjColumn
            {
                get
                {
                    return this.columnschmObj;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SendSiteColumn
            {
                get
                {
                    return this.columnSendSite;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn statusColumn
            {
                get
                {
                    return this.columnstatus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WorkerAgreedColumn
            {
                get
                {
                    return this.columnWorkerAgreed;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_RequestForRepairDocDataTable : TypedTableBase<DataSetGES.Class54>
        {
            private DataColumn columnComment;
            private DataColumn columnDocument;
            private DataColumn columnFileName;
            private DataColumn columnid;
            private DataColumn columnidRequest;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate11 tJ_RequestForRepairDocRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate11 tJ_RequestForRepairDocRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate11 tJ_RequestForRepairDocRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate11 tJ_RequestForRepairDocRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestForRepairDocDataTable()
            {
                base.TableName = "tJ_RequestForRepairDoc";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestForRepairDocDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RequestForRepairDocDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestForRepairDocDataTable table1 = (DataSetGES.tJ_RequestForRepairDocDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestForRepairDocDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class54);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class54 class54_0)
            {
                base.Rows.Add(class54_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class54 method_1(int int_0, byte[] byte_0, string string_0, string string_1)
            {
                DataSetGES.Class54 row = (DataSetGES.Class54) base.NewRow();
                object[] objArray1 = new object[5];
                objArray1[1] = int_0;
                objArray1[2] = byte_0;
                objArray1[3] = string_0;
                objArray1[4] = string_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class54 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class54) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columnDocument = base.Columns["Document"];
                this.columnFileName = base.Columns["FileName"];
                this.columnComment = base.Columns["Comment"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columnDocument = new DataColumn("Document", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnDocument);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columnDocument.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 0x400;
                this.columnComment.MaxLength = 0x400;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class54 method_5()
            {
                return (DataSetGES.Class54) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class54 class54_0)
            {
                base.Rows.Remove(class54_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class54(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDocRowChanged != null)
                {
                    this.tJ_RequestForRepairDocRowChanged(this, new DataSetGES.EventArgs10((DataSetGES.Class54) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDocRowChanging != null)
                {
                    this.tJ_RequestForRepairDocRowChanging(this, new DataSetGES.EventArgs10((DataSetGES.Class54) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDocRowDeleted != null)
                {
                    this.tJ_RequestForRepairDocRowDeleted(this, new DataSetGES.EventArgs10((DataSetGES.Class54) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_RequestForRepairDocRowDeleting != null)
                {
                    this.tJ_RequestForRepairDocRowDeleting(this, new DataSetGES.EventArgs10((DataSetGES.Class54) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_RequestForRepairDocDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocumentColumn
            {
                get
                {
                    return this.columnDocument;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class54 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class54) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_UpdateProgramDataTable : TypedTableBase<DataSetGES.Class58>
        {
            private DataColumn columnDateUpdate;
            private DataColumn columnDescription;
            private DataColumn columnid;
            private DataColumn columnModul;
            private DataColumn columnTextUpdate;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate15 tJ_UpdateProgramRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate15 tJ_UpdateProgramRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate15 tJ_UpdateProgramRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate15 tJ_UpdateProgramRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_UpdateProgramDataTable()
            {
                base.TableName = "tJ_UpdateProgram";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_UpdateProgramDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_UpdateProgramDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_UpdateProgramDataTable table1 = (DataSetGES.tJ_UpdateProgramDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_UpdateProgramDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class58);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class58 class58_0)
            {
                base.Rows.Add(class58_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class58 method_1(DateTime dateTime_0, int int_0, string string_0, string string_1)
            {
                DataSetGES.Class58 row = (DataSetGES.Class58) base.NewRow();
                object[] objArray1 = new object[5];
                objArray1[1] = dateTime_0;
                objArray1[2] = int_0;
                objArray1[3] = string_0;
                objArray1[4] = string_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class58 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class58) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnDateUpdate = base.Columns["DateUpdate"];
                this.columnModul = base.Columns["Modul"];
                this.columnTextUpdate = base.Columns["TextUpdate"];
                this.columnDescription = base.Columns["Description"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnDateUpdate = new DataColumn("DateUpdate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateUpdate);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnTextUpdate = new DataColumn("TextUpdate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextUpdate);
                this.columnDescription = new DataColumn("Description", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescription);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnDateUpdate.AllowDBNull = false;
                this.columnTextUpdate.MaxLength = 0x1388;
                this.columnDescription.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class58 method_5()
            {
                return (DataSetGES.Class58) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class58 class58_0)
            {
                base.Rows.Remove(class58_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class58(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramRowChanged != null)
                {
                    this.tJ_UpdateProgramRowChanged(this, new DataSetGES.EventArgs14((DataSetGES.Class58) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramRowChanging != null)
                {
                    this.tJ_UpdateProgramRowChanging(this, new DataSetGES.EventArgs14((DataSetGES.Class58) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramRowDeleted != null)
                {
                    this.tJ_UpdateProgramRowDeleted(this, new DataSetGES.EventArgs14((DataSetGES.Class58) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramRowDeleting != null)
                {
                    this.tJ_UpdateProgramRowDeleting(this, new DataSetGES.EventArgs14((DataSetGES.Class58) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_UpdateProgramDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateUpdateColumn
            {
                get
                {
                    return this.columnDateUpdate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DescriptionColumn
            {
                get
                {
                    return this.columnDescription;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class58 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class58) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TextUpdateColumn
            {
                get
                {
                    return this.columnTextUpdate;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_UpdateProgramDocDataTable : TypedTableBase<DataSetGES.Class59>
        {
            private DataColumn columnDocument;
            private DataColumn columnFileName;
            private DataColumn columnid;
            private DataColumn columnidUpdate;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate16 tJ_UpdateProgramDocRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate16 tJ_UpdateProgramDocRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate16 tJ_UpdateProgramDocRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate16 tJ_UpdateProgramDocRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_UpdateProgramDocDataTable()
            {
                base.TableName = "tJ_UpdateProgramDoc";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_UpdateProgramDocDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_UpdateProgramDocDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_UpdateProgramDocDataTable table1 = (DataSetGES.tJ_UpdateProgramDocDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_UpdateProgramDocDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class59);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class59 class59_0)
            {
                base.Rows.Add(class59_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class59 method_1(int int_0, byte[] byte_0, string string_0)
            {
                DataSetGES.Class59 row = (DataSetGES.Class59) base.NewRow();
                object[] objArray1 = new object[4];
                objArray1[1] = int_0;
                objArray1[2] = byte_0;
                objArray1[3] = string_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class59 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class59) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidUpdate = base.Columns["idUpdate"];
                this.columnDocument = base.Columns["Document"];
                this.columnFileName = base.Columns["FileName"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidUpdate = new DataColumn("idUpdate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUpdate);
                this.columnDocument = new DataColumn("Document", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnDocument);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidUpdate.AllowDBNull = false;
                this.columnDocument.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 0x400;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class59 method_5()
            {
                return (DataSetGES.Class59) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class59 class59_0)
            {
                base.Rows.Remove(class59_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class59(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramDocRowChanged != null)
                {
                    this.tJ_UpdateProgramDocRowChanged(this, new DataSetGES.EventArgs15((DataSetGES.Class59) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramDocRowChanging != null)
                {
                    this.tJ_UpdateProgramDocRowChanging(this, new DataSetGES.EventArgs15((DataSetGES.Class59) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramDocRowDeleted != null)
                {
                    this.tJ_UpdateProgramDocRowDeleted(this, new DataSetGES.EventArgs15((DataSetGES.Class59) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramDocRowDeleting != null)
                {
                    this.tJ_UpdateProgramDocRowDeleting(this, new DataSetGES.EventArgs15((DataSetGES.Class59) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_UpdateProgramDocDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DocumentColumn
            {
                get
                {
                    return this.columnDocument;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUpdateColumn
            {
                get
                {
                    return this.columnidUpdate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class59 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class59) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tJ_UpdateProgramUserCheckDataTable : TypedTableBase<DataSetGES.Class61>
        {
            private DataColumn columndateCheck;
            private DataColumn columnlogin;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate18 tJ_UpdateProgramUserCheckRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate18 tJ_UpdateProgramUserCheckRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate18 tJ_UpdateProgramUserCheckRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate18 tJ_UpdateProgramUserCheckRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_UpdateProgramUserCheckDataTable()
            {
                base.TableName = "tJ_UpdateProgramUserCheck";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_UpdateProgramUserCheckDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_UpdateProgramUserCheckDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_UpdateProgramUserCheckDataTable table1 = (DataSetGES.tJ_UpdateProgramUserCheckDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_UpdateProgramUserCheckDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class61);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class61 class61_0)
            {
                base.Rows.Add(class61_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class61 method_1(string string_0, DateTime dateTime_0)
            {
                DataSetGES.Class61 row = (DataSetGES.Class61) base.NewRow();
                object[] objArray = new object[] { string_0, dateTime_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class61 method_2(string string_0)
            {
                object[] keys = new object[] { string_0 };
                return (DataSetGES.Class61) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnlogin = base.Columns["login"];
                this.columndateCheck = base.Columns["dateCheck"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnlogin = new DataColumn("login", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.columndateCheck = new DataColumn("dateCheck", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCheck);
                DataColumn[] columns = new DataColumn[] { this.columnlogin };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnlogin.AllowDBNull = false;
                this.columnlogin.Unique = true;
                this.columnlogin.MaxLength = 100;
                this.columndateCheck.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class61 method_5()
            {
                return (DataSetGES.Class61) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class61 class61_0)
            {
                base.Rows.Remove(class61_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class61(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramUserCheckRowChanged != null)
                {
                    this.tJ_UpdateProgramUserCheckRowChanged(this, new DataSetGES.EventArgs17((DataSetGES.Class61) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramUserCheckRowChanging != null)
                {
                    this.tJ_UpdateProgramUserCheckRowChanging(this, new DataSetGES.EventArgs17((DataSetGES.Class61) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramUserCheckRowDeleted != null)
                {
                    this.tJ_UpdateProgramUserCheckRowDeleted(this, new DataSetGES.EventArgs17((DataSetGES.Class61) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tJ_UpdateProgramUserCheckRowDeleting != null)
                {
                    this.tJ_UpdateProgramUserCheckRowDeleting(this, new DataSetGES.EventArgs17((DataSetGES.Class61) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tJ_UpdateProgramUserCheckDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateCheckColumn
            {
                get
                {
                    return this.columndateCheck;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class61 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class61) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn loginColumn
            {
                get
                {
                    return this.columnlogin;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tL_RequestForRepairSchmObjListDataTable : TypedTableBase<DataSetGES.Class53>
        {
            private DataColumn columnDateBeg;
            private DataColumn columnDateEnd;
            private DataColumn columnDuration;
            private DataColumn columnid;
            private DataColumn columnidRequest;
            private DataColumn columnidSchmObj;
            private DataColumn columnNum;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate10 tL_RequestForRepairSchmObjListRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate10 tL_RequestForRepairSchmObjListRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate10 tL_RequestForRepairSchmObjListRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate10 tL_RequestForRepairSchmObjListRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tL_RequestForRepairSchmObjListDataTable()
            {
                base.TableName = "tL_RequestForRepairSchmObjList";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tL_RequestForRepairSchmObjListDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tL_RequestForRepairSchmObjListDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tL_RequestForRepairSchmObjListDataTable table1 = (DataSetGES.tL_RequestForRepairSchmObjListDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tL_RequestForRepairSchmObjListDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class53);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class53 class53_0)
            {
                base.Rows.Add(class53_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class53 method_1(int int_0, int int_1, DateTime dateTime_0, DateTime dateTime_1, string string_0, short short_0)
            {
                DataSetGES.Class53 row = (DataSetGES.Class53) base.NewRow();
                object[] objArray1 = new object[7];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = dateTime_0;
                objArray1[4] = dateTime_1;
                objArray1[5] = string_0;
                objArray1[6] = short_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class53 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class53) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnDateBeg = base.Columns["DateBeg"];
                this.columnDateEnd = base.Columns["DateEnd"];
                this.columnDuration = base.Columns["Duration"];
                this.columnNum = base.Columns["Num"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnDateBeg = new DataColumn("DateBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateBeg);
                this.columnDateEnd = new DataColumn("DateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateEnd);
                this.columnDuration = new DataColumn("Duration", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnNum = new DataColumn("Num", typeof(short), null, MappingType.Element);
                base.Columns.Add(this.columnNum);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columnidSchmObj.AllowDBNull = false;
                this.columnDateBeg.AllowDBNull = false;
                this.columnDateEnd.AllowDBNull = false;
                this.columnDuration.AllowDBNull = false;
                this.columnNum.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class53 method_5()
            {
                return (DataSetGES.Class53) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class53 class53_0)
            {
                base.Rows.Remove(class53_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class53(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tL_RequestForRepairSchmObjListRowChanged != null)
                {
                    this.tL_RequestForRepairSchmObjListRowChanged(this, new DataSetGES.EventArgs9((DataSetGES.Class53) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tL_RequestForRepairSchmObjListRowChanging != null)
                {
                    this.tL_RequestForRepairSchmObjListRowChanging(this, new DataSetGES.EventArgs9((DataSetGES.Class53) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tL_RequestForRepairSchmObjListRowDeleted != null)
                {
                    this.tL_RequestForRepairSchmObjListRowDeleted(this, new DataSetGES.EventArgs9((DataSetGES.Class53) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tL_RequestForRepairSchmObjListRowDeleting != null)
                {
                    this.tL_RequestForRepairSchmObjListRowDeleting(this, new DataSetGES.EventArgs9((DataSetGES.Class53) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tL_RequestForRepairSchmObjListDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateBegColumn
            {
                get
                {
                    return this.columnDateBeg;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateEndColumn
            {
                get
                {
                    return this.columnDateEnd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DurationColumn
            {
                get
                {
                    return this.columnDuration;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class53 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class53) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NumColumn
            {
                get
                {
                    return this.columnNum;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tL_SchmAbnDataTable : TypedTableBase<DataSetGES.Class68>
        {
            private DataColumn columnid;
            private DataColumn columnidAbn;
            private DataColumn columnidAbnObj;
            private DataColumn columnidDoc;
            private DataColumn columnidPoint;
            private DataColumn columnidSchmObj;
            private DataColumn columnTypeDoc;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate25 tL_SchmAbnRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate25 tL_SchmAbnRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate25 tL_SchmAbnRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate25 tL_SchmAbnRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tL_SchmAbnDataTable()
            {
                base.TableName = "tL_SchmAbn";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tL_SchmAbnDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tL_SchmAbnDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tL_SchmAbnDataTable table1 = (DataSetGES.tL_SchmAbnDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tL_SchmAbnDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class68);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class68 class68_0)
            {
                base.Rows.Add(class68_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class68 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, int int_5)
            {
                DataSetGES.Class68 row = (DataSetGES.Class68) base.NewRow();
                object[] objArray1 = new object[7];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                objArray1[3] = int_2;
                objArray1[4] = int_3;
                objArray1[5] = int_4;
                objArray1[6] = int_5;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class68 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class68) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnidAbnObj = base.Columns["idAbnObj"];
                this.columnidPoint = base.Columns["idPoint"];
                this.columnidDoc = base.Columns["idDoc"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnidAbnObj = new DataColumn("idAbnObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbnObj);
                this.columnidPoint = new DataColumn("idPoint", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidPoint);
                this.columnidDoc = new DataColumn("idDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidDoc);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidSchmObj.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class68 method_5()
            {
                return (DataSetGES.Class68) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class68 class68_0)
            {
                base.Rows.Remove(class68_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class68(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tL_SchmAbnRowChanged != null)
                {
                    this.tL_SchmAbnRowChanged(this, new DataSetGES.EventArgs24((DataSetGES.Class68) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tL_SchmAbnRowChanging != null)
                {
                    this.tL_SchmAbnRowChanging(this, new DataSetGES.EventArgs24((DataSetGES.Class68) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tL_SchmAbnRowDeleted != null)
                {
                    this.tL_SchmAbnRowDeleted(this, new DataSetGES.EventArgs24((DataSetGES.Class68) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tL_SchmAbnRowDeleting != null)
                {
                    this.tL_SchmAbnRowDeleting(this, new DataSetGES.EventArgs24((DataSetGES.Class68) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tL_SchmAbnDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idAbnObjColumn
            {
                get
                {
                    return this.columnidAbnObj;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idDocColumn
            {
                get
                {
                    return this.columnidDoc;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idPointColumn
            {
                get
                {
                    return this.columnidPoint;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class68 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class68) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tP_ValueListsDataTable : TypedTableBase<DataSetGES.Class64>
        {
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnisGroup;
            private DataColumn columnName;
            private DataColumn columnParentId;
            private DataColumn columnParentKey;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate21 tP_ValueListsRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate21 tP_ValueListsRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate21 tP_ValueListsRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate21 tP_ValueListsRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tP_ValueListsDataTable()
            {
                base.TableName = "tP_ValueLists";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tP_ValueListsDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tP_ValueListsDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tP_ValueListsDataTable table1 = (DataSetGES.tP_ValueListsDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tP_ValueListsDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class64);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class64 class64_0)
            {
                base.Rows.Add(class64_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class64 method_1(int int_0, string string_0, string string_1, bool bool_0, bool bool_1)
            {
                DataSetGES.Class64 row = (DataSetGES.Class64) base.NewRow();
                object[] objArray1 = new object[6];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = string_1;
                objArray1[4] = bool_0;
                objArray1[5] = bool_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class64 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class64) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnName = base.Columns["Name"];
                this.columnisGroup = base.Columns["isGroup"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnParentId = new DataColumn("ParentId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnisGroup = new DataColumn("isGroup", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisGroup);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnParentKey.MaxLength = 0x100;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class64 method_5()
            {
                return (DataSetGES.Class64) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class64 class64_0)
            {
                base.Rows.Remove(class64_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class64(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tP_ValueListsRowChanged != null)
                {
                    this.tP_ValueListsRowChanged(this, new DataSetGES.EventArgs20((DataSetGES.Class64) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tP_ValueListsRowChanging != null)
                {
                    this.tP_ValueListsRowChanging(this, new DataSetGES.EventArgs20((DataSetGES.Class64) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tP_ValueListsRowDeleted != null)
                {
                    this.tP_ValueListsRowDeleted(this, new DataSetGES.EventArgs20((DataSetGES.Class64) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tP_ValueListsRowDeleting != null)
                {
                    this.tP_ValueListsRowDeleting(this, new DataSetGES.EventArgs20((DataSetGES.Class64) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tP_ValueListsDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn isGroupColumn
            {
                get
                {
                    return this.columnisGroup;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class64 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class64) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentIdColumn
            {
                get
                {
                    return this.columnParentId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tR_CableAmperageDataTable : TypedTableBase<DataSetGES.Class76>
        {
            private DataColumn columnAmperage;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate33 tR_CableAmperageRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate33 tR_CableAmperageRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate33 tR_CableAmperageRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate33 tR_CableAmperageRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableAmperageDataTable()
            {
                base.TableName = "tR_CableAmperage";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_CableAmperageDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tR_CableAmperageDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableAmperageDataTable table1 = (DataSetGES.tR_CableAmperageDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableAmperageDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class76);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class76 class76_0)
            {
                base.Rows.Add(class76_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class76 method_1(double double_0)
            {
                DataSetGES.Class76 row = (DataSetGES.Class76) base.NewRow();
                object[] objArray = new object[] { double_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnAmperage = base.Columns["Amperage"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnAmperage = new DataColumn("Amperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnAmperage);
                this.columnAmperage.DefaultValue = 0.0;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class76 method_4()
            {
                return (DataSetGES.Class76) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class76 class76_0)
            {
                base.Rows.Remove(class76_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class76(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tR_CableAmperageRowChanged != null)
                {
                    this.tR_CableAmperageRowChanged(this, new DataSetGES.EventArgs32((DataSetGES.Class76) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tR_CableAmperageRowChanging != null)
                {
                    this.tR_CableAmperageRowChanging(this, new DataSetGES.EventArgs32((DataSetGES.Class76) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tR_CableAmperageRowDeleted != null)
                {
                    this.tR_CableAmperageRowDeleted(this, new DataSetGES.EventArgs32((DataSetGES.Class76) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tR_CableAmperageRowDeleting != null)
                {
                    this.tR_CableAmperageRowDeleting(this, new DataSetGES.EventArgs32((DataSetGES.Class76) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tR_CableAmperageDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AmperageColumn
            {
                get
                {
                    return this.columnAmperage;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class76 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class76) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tR_CableMakeupDataTable : TypedTableBase<DataSetGES.Class73>
        {
            private DataColumn columnCableMakeup;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate30 tR_CableMakeupRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate30 tR_CableMakeupRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate30 tR_CableMakeupRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate30 tR_CableMakeupRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_CableMakeupDataTable()
            {
                base.TableName = "tR_CableMakeup";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CableMakeupDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tR_CableMakeupDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableMakeupDataTable table1 = (DataSetGES.tR_CableMakeupDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableMakeupDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class73);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class73 class73_0)
            {
                base.Rows.Add(class73_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class73 method_1(string string_0)
            {
                DataSetGES.Class73 row = (DataSetGES.Class73) base.NewRow();
                object[] objArray = new object[] { string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnCableMakeup = base.Columns["CableMakeup"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnCableMakeup = new DataColumn("CableMakeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCableMakeup);
                this.columnCableMakeup.AllowDBNull = false;
                this.columnCableMakeup.MaxLength = 50;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class73 method_4()
            {
                return (DataSetGES.Class73) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class73 class73_0)
            {
                base.Rows.Remove(class73_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class73(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tR_CableMakeupRowChanged != null)
                {
                    this.tR_CableMakeupRowChanged(this, new DataSetGES.EventArgs29((DataSetGES.Class73) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tR_CableMakeupRowChanging != null)
                {
                    this.tR_CableMakeupRowChanging(this, new DataSetGES.EventArgs29((DataSetGES.Class73) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tR_CableMakeupRowDeleted != null)
                {
                    this.tR_CableMakeupRowDeleted(this, new DataSetGES.EventArgs29((DataSetGES.Class73) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tR_CableMakeupRowDeleting != null)
                {
                    this.tR_CableMakeupRowDeleting(this, new DataSetGES.EventArgs29((DataSetGES.Class73) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tR_CableMakeupDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CableMakeupColumn
            {
                get
                {
                    return this.columnCableMakeup;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class73 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class73) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tR_CableVoltageDataTable : TypedTableBase<DataSetGES.Class75>
        {
            private DataColumn columnId;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate32 tR_CableVoltageRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate32 tR_CableVoltageRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate32 tR_CableVoltageRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate32 tR_CableVoltageRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_CableVoltageDataTable()
            {
                base.TableName = "tR_CableVoltage";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CableVoltageDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tR_CableVoltageDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableVoltageDataTable table1 = (DataSetGES.tR_CableVoltageDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableVoltageDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class75);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class75 class75_0)
            {
                base.Rows.Add(class75_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class75 method_1(string string_0)
            {
                DataSetGES.Class75 row = (DataSetGES.Class75) base.NewRow();
                object[] objArray1 = new object[2];
                objArray1[1] = string_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class75 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class75) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class75 method_5()
            {
                return (DataSetGES.Class75) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class75 class75_0)
            {
                base.Rows.Remove(class75_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class75(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tR_CableVoltageRowChanged != null)
                {
                    this.tR_CableVoltageRowChanged(this, new DataSetGES.EventArgs31((DataSetGES.Class75) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tR_CableVoltageRowChanging != null)
                {
                    this.tR_CableVoltageRowChanging(this, new DataSetGES.EventArgs31((DataSetGES.Class75) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tR_CableVoltageRowDeleted != null)
                {
                    this.tR_CableVoltageRowDeleted(this, new DataSetGES.EventArgs31((DataSetGES.Class75) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tR_CableVoltageRowDeleting != null)
                {
                    this.tR_CableVoltageRowDeleting(this, new DataSetGES.EventArgs31((DataSetGES.Class75) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tR_CableVoltageDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class75 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class75) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tR_CableWiresDataTable : TypedTableBase<DataSetGES.Class77>
        {
            private DataColumn columnWires;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate34 tR_CableWiresRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate34 tR_CableWiresRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate34 tR_CableWiresRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate34 tR_CableWiresRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableWiresDataTable()
            {
                base.TableName = "tR_CableWires";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_CableWiresDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tR_CableWiresDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableWiresDataTable table1 = (DataSetGES.tR_CableWiresDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableWiresDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class77);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class77 class77_0)
            {
                base.Rows.Add(class77_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class77 method_1(int int_0)
            {
                DataSetGES.Class77 row = (DataSetGES.Class77) base.NewRow();
                object[] objArray = new object[] { int_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnWires = base.Columns["Wires"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnWires.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class77 method_4()
            {
                return (DataSetGES.Class77) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class77 class77_0)
            {
                base.Rows.Remove(class77_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class77(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tR_CableWiresRowChanged != null)
                {
                    this.tR_CableWiresRowChanged(this, new DataSetGES.EventArgs33((DataSetGES.Class77) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tR_CableWiresRowChanging != null)
                {
                    this.tR_CableWiresRowChanging(this, new DataSetGES.EventArgs33((DataSetGES.Class77) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tR_CableWiresRowDeleted != null)
                {
                    this.tR_CableWiresRowDeleted(this, new DataSetGES.EventArgs33((DataSetGES.Class77) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tR_CableWiresRowDeleting != null)
                {
                    this.tR_CableWiresRowDeleting(this, new DataSetGES.EventArgs33((DataSetGES.Class77) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tR_CableWiresDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class77 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class77) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tR_ClassifierDataTable : TypedTableBase<DataSetGES.Class50>
        {
            private DataColumn columnComment;
            private DataColumn columnDeleted;
            private DataColumn columnId;
            private DataColumn columnIsGroup;
            private DataColumn columnName;
            private DataColumn columnOtherId;
            private DataColumn columnParentId;
            private DataColumn columnParentKey;
            private DataColumn columnSocrName;
            private DataColumn columnValue;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate7 tR_ClassifierRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate7 tR_ClassifierRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate7 tR_ClassifierRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate7 tR_ClassifierRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_ClassifierDataTable()
            {
                base.TableName = "tR_Classifier";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_ClassifierDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tR_ClassifierDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_ClassifierDataTable table1 = (DataSetGES.tR_ClassifierDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_ClassifierDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class50);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class50 class50_0)
            {
                base.Rows.Add(class50_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class50 method_1(string string_0, string string_1, decimal decimal_0, string string_2, int int_0, string string_3, byte[] byte_0, bool bool_0, bool bool_1)
            {
                DataSetGES.Class50 row = (DataSetGES.Class50) base.NewRow();
                object[] objArray1 = new object[10];
                objArray1[1] = string_0;
                objArray1[2] = string_1;
                objArray1[3] = decimal_0;
                objArray1[4] = string_2;
                objArray1[5] = int_0;
                objArray1[6] = string_3;
                objArray1[7] = byte_0;
                objArray1[8] = bool_0;
                objArray1[9] = bool_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class50 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class50) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnSocrName = base.Columns["SocrName"];
                this.columnValue = base.Columns["Value"];
                this.columnComment = base.Columns["Comment"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnOtherId = base.Columns["OtherId"];
                this.columnIsGroup = base.Columns["IsGroup"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSocrName = new DataColumn("SocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSocrName);
                this.columnValue = new DataColumn("Value", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnParentId = new DataColumn("ParentId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnOtherId = new DataColumn("OtherId", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnOtherId);
                this.columnIsGroup = new DataColumn("IsGroup", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsGroup);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
                this.columnSocrName.MaxLength = 50;
                this.columnComment.MaxLength = 0x400;
                this.columnParentKey.MaxLength = 50;
                this.columnIsGroup.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class50 method_5()
            {
                return (DataSetGES.Class50) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class50 class50_0)
            {
                base.Rows.Remove(class50_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class50(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tR_ClassifierRowChanged != null)
                {
                    this.tR_ClassifierRowChanged(this, new DataSetGES.EventArgs6((DataSetGES.Class50) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tR_ClassifierRowChanging != null)
                {
                    this.tR_ClassifierRowChanging(this, new DataSetGES.EventArgs6((DataSetGES.Class50) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tR_ClassifierRowDeleted != null)
                {
                    this.tR_ClassifierRowDeleted(this, new DataSetGES.EventArgs6((DataSetGES.Class50) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tR_ClassifierRowDeleting != null)
                {
                    this.tR_ClassifierRowDeleting(this, new DataSetGES.EventArgs6((DataSetGES.Class50) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tR_ClassifierDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsGroupColumn
            {
                get
                {
                    return this.columnIsGroup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class50 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class50) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn OtherIdColumn
            {
                get
                {
                    return this.columnOtherId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ParentIdColumn
            {
                get
                {
                    return this.columnParentId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SocrNameColumn
            {
                get
                {
                    return this.columnSocrName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ValueColumn
            {
                get
                {
                    return this.columnValue;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tR_CrossSectionDataTable : TypedTableBase<DataSetGES.Class74>
        {
            private DataColumn columnCrossSection;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate31 tR_CrossSectionRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate31 tR_CrossSectionRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate31 tR_CrossSectionRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate31 tR_CrossSectionRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CrossSectionDataTable()
            {
                base.TableName = "tR_CrossSection";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CrossSectionDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tR_CrossSectionDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tR_CrossSectionDataTable table1 = (DataSetGES.tR_CrossSectionDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CrossSectionDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class74);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class74 class74_0)
            {
                base.Rows.Add(class74_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class74 method_1(double double_0)
            {
                DataSetGES.Class74 row = (DataSetGES.Class74) base.NewRow();
                object[] objArray = new object[] { double_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnCrossSection = base.Columns["CrossSection"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnCrossSection.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class74 method_4()
            {
                return (DataSetGES.Class74) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class74 class74_0)
            {
                base.Rows.Remove(class74_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class74(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tR_CrossSectionRowChanged != null)
                {
                    this.tR_CrossSectionRowChanged(this, new DataSetGES.EventArgs30((DataSetGES.Class74) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tR_CrossSectionRowChanging != null)
                {
                    this.tR_CrossSectionRowChanging(this, new DataSetGES.EventArgs30((DataSetGES.Class74) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tR_CrossSectionRowDeleted != null)
                {
                    this.tR_CrossSectionRowDeleted(this, new DataSetGES.EventArgs30((DataSetGES.Class74) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tR_CrossSectionRowDeleting != null)
                {
                    this.tR_CrossSectionRowDeleting(this, new DataSetGES.EventArgs30((DataSetGES.Class74) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tR_CrossSectionDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class74 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class74) base.Rows[int_0];
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tR_DocTemplateDataTable : TypedTableBase<DataSetGES.Class90>
        {
            private DataColumn columnDateIn;
            private DataColumn columnDeleted;
            private DataColumn columnFileData;
            private DataColumn columnFileName;
            private DataColumn columnid;
            private DataColumn columnidTypeDoc;
            private DataColumn columnLastChange;
            private DataColumn columnSize;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate47 tR_DocTemplateRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate47 tR_DocTemplateRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate47 tR_DocTemplateRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate47 tR_DocTemplateRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_DocTemplateDataTable()
            {
                base.TableName = "tR_DocTemplate";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_DocTemplateDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tR_DocTemplateDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tR_DocTemplateDataTable table1 = (DataSetGES.tR_DocTemplateDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_DocTemplateDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class90);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class90 class90_0)
            {
                base.Rows.Add(class90_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class90 method_1(int int_0, string string_0, byte[] byte_0, double double_0, DateTime dateTime_0, DateTime dateTime_1, bool bool_0)
            {
                DataSetGES.Class90 row = (DataSetGES.Class90) base.NewRow();
                object[] objArray1 = new object[8];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = byte_0;
                objArray1[4] = double_0;
                objArray1[5] = dateTime_0;
                objArray1[6] = dateTime_1;
                objArray1[7] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class90 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class90) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidTypeDoc = base.Columns["idTypeDoc"];
                this.columnFileName = base.Columns["FileName"];
                this.columnFileData = base.Columns["FileData"];
                this.columnSize = base.Columns["Size"];
                this.columnLastChange = base.Columns["LastChange"];
                this.columnDateIn = base.Columns["DateIn"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidTypeDoc = new DataColumn("idTypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTypeDoc);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnFileData = new DataColumn("FileData", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnFileData);
                this.columnSize = new DataColumn("Size", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnLastChange = new DataColumn("LastChange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnLastChange);
                this.columnDateIn = new DataColumn("DateIn", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateIn);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidTypeDoc.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 0x100;
                this.columnFileData.AllowDBNull = false;
                this.columnSize.AllowDBNull = false;
                this.columnLastChange.AllowDBNull = false;
                this.columnDateIn.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class90 method_5()
            {
                return (DataSetGES.Class90) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class90 class90_0)
            {
                base.Rows.Remove(class90_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class90(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tR_DocTemplateRowChanged != null)
                {
                    this.tR_DocTemplateRowChanged(this, new DataSetGES.EventArgs46((DataSetGES.Class90) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tR_DocTemplateRowChanging != null)
                {
                    this.tR_DocTemplateRowChanging(this, new DataSetGES.EventArgs46((DataSetGES.Class90) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tR_DocTemplateRowDeleted != null)
                {
                    this.tR_DocTemplateRowDeleted(this, new DataSetGES.EventArgs46((DataSetGES.Class90) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tR_DocTemplateRowDeleting != null)
                {
                    this.tR_DocTemplateRowDeleting(this, new DataSetGES.EventArgs46((DataSetGES.Class90) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tR_DocTemplateDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateInColumn
            {
                get
                {
                    return this.columnDateIn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FileDataColumn
            {
                get
                {
                    return this.columnFileData;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTypeDocColumn
            {
                get
                {
                    return this.columnidTypeDoc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class90 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class90) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn LastChangeColumn
            {
                get
                {
                    return this.columnLastChange;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SizeColumn
            {
                get
                {
                    return this.columnSize;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tSchm_ObjList1DataTable : TypedTableBase<DataSetGES.Class99>
        {
            private DataColumn columnDeleted;
            private DataColumn columnId;
            private DataColumn columnidGroup;
            private DataColumn columnIdParent;
            private DataColumn columnidParentAddl;
            private DataColumn columnLocation;
            private DataColumn columnName;
            private DataColumn columnNameP;
            private DataColumn columnOnOff;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate56 tSchm_ObjList1RowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate56 tSchm_ObjList1RowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate56 tSchm_ObjList1RowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate56 tSchm_ObjList1RowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tSchm_ObjList1DataTable()
            {
                base.TableName = "tSchm_ObjList1";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tSchm_ObjList1DataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tSchm_ObjList1DataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjList1DataTable table1 = (DataSetGES.tSchm_ObjList1DataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjList1DataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class99);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class99 class99_0)
            {
                base.Rows.Add(class99_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class99 method_1(string string_0, int int_0, int int_1, bool bool_0, int int_2, bool bool_1, int int_3, int int_4, int int_5)
            {
                DataSetGES.Class99 row = (DataSetGES.Class99) base.NewRow();
                object[] objArray1 = new object[10];
                objArray1[1] = string_0;
                objArray1[2] = int_0;
                objArray1[3] = int_1;
                objArray1[4] = bool_0;
                objArray1[5] = int_2;
                objArray1[6] = bool_1;
                objArray1[7] = int_3;
                objArray1[8] = int_4;
                objArray1[9] = int_5;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class99 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class99) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnOnOff = base.Columns["OnOff"];
                this.columnLocation = base.Columns["Location"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnNameP = base.Columns["NameP"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
                this.columnidGroup = base.Columns["idGroup"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnOnOff = new DataColumn("OnOff", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnOnOff);
                this.columnLocation = new DataColumn("Location", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnNameP = new DataColumn("NameP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNameP);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 0x200;
                this.columnDeleted.AllowDBNull = false;
                this.columnNameP.ReadOnly = true;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class99 method_5()
            {
                return (DataSetGES.Class99) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class99 class99_0)
            {
                base.Rows.Remove(class99_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class99(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList1RowChanged != null)
                {
                    this.tSchm_ObjList1RowChanged(this, new DataSetGES.EventArgs55((DataSetGES.Class99) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList1RowChanging != null)
                {
                    this.tSchm_ObjList1RowChanging(this, new DataSetGES.EventArgs55((DataSetGES.Class99) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList1RowDeleted != null)
                {
                    this.tSchm_ObjList1RowDeleted(this, new DataSetGES.EventArgs55((DataSetGES.Class99) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList1RowDeleting != null)
                {
                    this.tSchm_ObjList1RowDeleting(this, new DataSetGES.EventArgs55((DataSetGES.Class99) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tSchm_ObjList1DataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class99 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class99) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LocationColumn
            {
                get
                {
                    return this.columnLocation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NamePColumn
            {
                get
                {
                    return this.columnNameP;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OnOffColumn
            {
                get
                {
                    return this.columnOnOff;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tSchm_ObjList2DataTable : TypedTableBase<DataSetGES.Class111>
        {
            private DataColumn columnDeleted;
            private DataColumn columnId;
            private DataColumn columnidGroup;
            private DataColumn columnIdParent;
            private DataColumn columnidParentAddl;
            private DataColumn columnLocation;
            private DataColumn columnName;
            private DataColumn columnNameP;
            private DataColumn columnOnOff;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate68 tSchm_ObjList2RowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate68 tSchm_ObjList2RowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate68 tSchm_ObjList2RowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate68 tSchm_ObjList2RowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tSchm_ObjList2DataTable()
            {
                base.TableName = "tSchm_ObjList2";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tSchm_ObjList2DataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tSchm_ObjList2DataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjList2DataTable table1 = (DataSetGES.tSchm_ObjList2DataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjList2DataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class111);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class111 class111_0)
            {
                base.Rows.Add(class111_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class111 method_1(string string_0, int int_0, int int_1, bool bool_0, int int_2, bool bool_1, int int_3, int int_4, int int_5)
            {
                DataSetGES.Class111 row = (DataSetGES.Class111) base.NewRow();
                object[] objArray1 = new object[10];
                objArray1[1] = string_0;
                objArray1[2] = int_0;
                objArray1[3] = int_1;
                objArray1[4] = bool_0;
                objArray1[5] = int_2;
                objArray1[6] = bool_1;
                objArray1[7] = int_3;
                objArray1[8] = int_4;
                objArray1[9] = int_5;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class111 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class111) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnOnOff = base.Columns["OnOff"];
                this.columnLocation = base.Columns["Location"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnNameP = base.Columns["NameP"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
                this.columnidGroup = base.Columns["idGroup"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnOnOff = new DataColumn("OnOff", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnOnOff);
                this.columnLocation = new DataColumn("Location", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnNameP = new DataColumn("NameP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNameP);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 0x200;
                this.columnDeleted.AllowDBNull = false;
                this.columnNameP.ReadOnly = true;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class111 method_5()
            {
                return (DataSetGES.Class111) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class111 class111_0)
            {
                base.Rows.Remove(class111_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class111(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList2RowChanged != null)
                {
                    this.tSchm_ObjList2RowChanged(this, new DataSetGES.EventArgs67((DataSetGES.Class111) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList2RowChanging != null)
                {
                    this.tSchm_ObjList2RowChanging(this, new DataSetGES.EventArgs67((DataSetGES.Class111) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList2RowDeleted != null)
                {
                    this.tSchm_ObjList2RowDeleted(this, new DataSetGES.EventArgs67((DataSetGES.Class111) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList2RowDeleting != null)
                {
                    this.tSchm_ObjList2RowDeleting(this, new DataSetGES.EventArgs67((DataSetGES.Class111) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tSchm_ObjList2DataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class111 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class111) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LocationColumn
            {
                get
                {
                    return this.columnLocation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NamePColumn
            {
                get
                {
                    return this.columnNameP;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OnOffColumn
            {
                get
                {
                    return this.columnOnOff;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tSchm_ObjList3DataTable : TypedTableBase<DataSetGES.Class112>
        {
            private DataColumn columnDeleted;
            private DataColumn columnId;
            private DataColumn columnidGroup;
            private DataColumn columnIdParent;
            private DataColumn columnidParentAddl;
            private DataColumn columnLocation;
            private DataColumn columnName;
            private DataColumn columnNameP;
            private DataColumn columnOnOff;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate69 tSchm_ObjList3RowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate69 tSchm_ObjList3RowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate69 tSchm_ObjList3RowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate69 tSchm_ObjList3RowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tSchm_ObjList3DataTable()
            {
                base.TableName = "tSchm_ObjList3";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tSchm_ObjList3DataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tSchm_ObjList3DataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjList3DataTable table1 = (DataSetGES.tSchm_ObjList3DataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjList3DataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class112);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class112 class112_0)
            {
                base.Rows.Add(class112_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class112 method_1(string string_0, int int_0, int int_1, bool bool_0, int int_2, bool bool_1, int int_3, int int_4, int int_5)
            {
                DataSetGES.Class112 row = (DataSetGES.Class112) base.NewRow();
                object[] objArray1 = new object[10];
                objArray1[1] = string_0;
                objArray1[2] = int_0;
                objArray1[3] = int_1;
                objArray1[4] = bool_0;
                objArray1[5] = int_2;
                objArray1[6] = bool_1;
                objArray1[7] = int_3;
                objArray1[8] = int_4;
                objArray1[9] = int_5;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class112 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class112) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnOnOff = base.Columns["OnOff"];
                this.columnLocation = base.Columns["Location"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnNameP = base.Columns["NameP"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
                this.columnidGroup = base.Columns["idGroup"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnOnOff = new DataColumn("OnOff", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnOnOff);
                this.columnLocation = new DataColumn("Location", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnNameP = new DataColumn("NameP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNameP);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 0x200;
                this.columnDeleted.AllowDBNull = false;
                this.columnNameP.ReadOnly = true;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class112 method_5()
            {
                return (DataSetGES.Class112) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class112 class112_0)
            {
                base.Rows.Remove(class112_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class112(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList3RowChanged != null)
                {
                    this.tSchm_ObjList3RowChanged(this, new DataSetGES.EventArgs68((DataSetGES.Class112) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList3RowChanging != null)
                {
                    this.tSchm_ObjList3RowChanging(this, new DataSetGES.EventArgs68((DataSetGES.Class112) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList3RowDeleted != null)
                {
                    this.tSchm_ObjList3RowDeleted(this, new DataSetGES.EventArgs68((DataSetGES.Class112) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjList3RowDeleting != null)
                {
                    this.tSchm_ObjList3RowDeleting(this, new DataSetGES.EventArgs68((DataSetGES.Class112) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tSchm_ObjList3DataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class112 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class112) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LocationColumn
            {
                get
                {
                    return this.columnLocation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NamePColumn
            {
                get
                {
                    return this.columnNameP;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OnOffColumn
            {
                get
                {
                    return this.columnOnOff;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tSchm_ObjListDataTable : TypedTableBase<DataSetGES.Class62>
        {
            private DataColumn columnId;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate19 tSchm_ObjListRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate19 tSchm_ObjListRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate19 tSchm_ObjListRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate19 tSchm_ObjListRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tSchm_ObjListDataTable()
            {
                base.TableName = "tSchm_ObjList";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tSchm_ObjListDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tSchm_ObjListDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjListDataTable table1 = (DataSetGES.tSchm_ObjListDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjListDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class62);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class62 class62_0)
            {
                base.Rows.Add(class62_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class62 method_1(string string_0)
            {
                DataSetGES.Class62 row = (DataSetGES.Class62) base.NewRow();
                object[] objArray1 = new object[2];
                objArray1[1] = string_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class62 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class62) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class62 method_5()
            {
                return (DataSetGES.Class62) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class62 class62_0)
            {
                base.Rows.Remove(class62_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class62(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjListRowChanged != null)
                {
                    this.tSchm_ObjListRowChanged(this, new DataSetGES.EventArgs18((DataSetGES.Class62) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjListRowChanging != null)
                {
                    this.tSchm_ObjListRowChanging(this, new DataSetGES.EventArgs18((DataSetGES.Class62) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjListRowDeleted != null)
                {
                    this.tSchm_ObjListRowDeleted(this, new DataSetGES.EventArgs18((DataSetGES.Class62) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tSchm_ObjListRowDeleting != null)
                {
                    this.tSchm_ObjListRowDeleting(this, new DataSetGES.EventArgs18((DataSetGES.Class62) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tSchm_ObjListDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class62 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class62) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tTC_ActTCDataTable : TypedTableBase<DataSetGES.Class141>
        {
            private DataColumn columnCategory;
            private DataColumn columnDateTemporary;
            private DataColumn columnid;
            private DataColumn columnIsRegular;
            private DataColumn columnLabelReturn;
            private DataColumn columnPerformer;
            private DataColumn columnPowerAdd;
            private DataColumn columnPowerCurrent;
            private DataColumn columnPowerSum;
            private DataColumn columnVoltageLevel;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate98 tTC_ActTCRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate98 tTC_ActTCRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate98 tTC_ActTCRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate98 tTC_ActTCRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tTC_ActTCDataTable()
            {
                base.TableName = "tTC_ActTC";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tTC_ActTCDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tTC_ActTCDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tTC_ActTCDataTable table1 = (DataSetGES.tTC_ActTCDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tTC_ActTCDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class141);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class141 class141_0)
            {
                base.Rows.Add(class141_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class141 method_1(int int_0, DateTime dateTime_0, bool bool_0, DateTime dateTime_1, decimal decimal_0, decimal decimal_1, decimal decimal_2, int int_1, int int_2, int int_3)
            {
                DataSetGES.Class141 row = (DataSetGES.Class141) base.NewRow();
                object[] objArray = new object[] { int_0, dateTime_0, bool_0, dateTime_1, decimal_0, decimal_1, decimal_2, int_1, int_2, int_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class141 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class141) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnLabelReturn = base.Columns["LabelReturn"];
                this.columnIsRegular = base.Columns["IsRegular"];
                this.columnDateTemporary = base.Columns["DateTemporary"];
                this.columnPowerCurrent = base.Columns["PowerCurrent"];
                this.columnPowerAdd = base.Columns["PowerAdd"];
                this.columnPowerSum = base.Columns["PowerSum"];
                this.columnVoltageLevel = base.Columns["VoltageLevel"];
                this.columnCategory = base.Columns["Category"];
                this.columnPerformer = base.Columns["Performer"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnLabelReturn = new DataColumn("LabelReturn", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnLabelReturn);
                this.columnIsRegular = new DataColumn("IsRegular", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsRegular);
                this.columnDateTemporary = new DataColumn("DateTemporary", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTemporary);
                this.columnPowerCurrent = new DataColumn("PowerCurrent", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnPowerCurrent);
                this.columnPowerAdd = new DataColumn("PowerAdd", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnPowerAdd);
                this.columnPowerSum = new DataColumn("PowerSum", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnPowerSum);
                this.columnVoltageLevel = new DataColumn("VoltageLevel", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltageLevel);
                this.columnCategory = new DataColumn("Category", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnPerformer = new DataColumn("Performer", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPerformer);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class141 method_5()
            {
                return (DataSetGES.Class141) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class141 class141_0)
            {
                base.Rows.Remove(class141_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class141(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tTC_ActTCRowChanged != null)
                {
                    this.tTC_ActTCRowChanged(this, new DataSetGES.EventArgs97((DataSetGES.Class141) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tTC_ActTCRowChanging != null)
                {
                    this.tTC_ActTCRowChanging(this, new DataSetGES.EventArgs97((DataSetGES.Class141) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tTC_ActTCRowDeleted != null)
                {
                    this.tTC_ActTCRowDeleted(this, new DataSetGES.EventArgs97((DataSetGES.Class141) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tTC_ActTCRowDeleting != null)
                {
                    this.tTC_ActTCRowDeleting(this, new DataSetGES.EventArgs97((DataSetGES.Class141) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tTC_ActTCDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CategoryColumn
            {
                get
                {
                    return this.columnCategory;
                }
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateTemporaryColumn
            {
                get
                {
                    return this.columnDateTemporary;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsRegularColumn
            {
                get
                {
                    return this.columnIsRegular;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class141 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class141) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn LabelReturnColumn
            {
                get
                {
                    return this.columnLabelReturn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PerformerColumn
            {
                get
                {
                    return this.columnPerformer;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerAddColumn
            {
                get
                {
                    return this.columnPowerAdd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PowerCurrentColumn
            {
                get
                {
                    return this.columnPowerCurrent;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerSumColumn
            {
                get
                {
                    return this.columnPowerSum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageLevelColumn
            {
                get
                {
                    return this.columnVoltageLevel;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tTC_DocDataTable : TypedTableBase<DataSetGES.Class144>
        {
            private DataColumn columnBody;
            private DataColumn columnComment;
            private DataColumn columndateDoc;
            private DataColumn columnid;
            private DataColumn columnIdParent;
            private DataColumn columnnumDoc;
            private DataColumn columnTypeDoc;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate101 tTC_DocRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate101 tTC_DocRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate101 tTC_DocRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate101 tTC_DocRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tTC_DocDataTable()
            {
                base.TableName = "tTC_Doc";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tTC_DocDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tTC_DocDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tTC_DocDataTable table1 = (DataSetGES.tTC_DocDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tTC_DocDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class144);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class144 class144_0)
            {
                base.Rows.Add(class144_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class144 method_1(string string_0, DateTime dateTime_0, int int_0, string string_1, int int_1, string string_2)
            {
                DataSetGES.Class144 row = (DataSetGES.Class144) base.NewRow();
                object[] objArray1 = new object[7];
                objArray1[1] = string_0;
                objArray1[2] = dateTime_0;
                objArray1[3] = int_0;
                objArray1[4] = string_1;
                objArray1[5] = int_1;
                objArray1[6] = string_2;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class144 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class144) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnnumDoc = base.Columns["numDoc"];
                this.columndateDoc = base.Columns["dateDoc"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnBody = base.Columns["Body"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnComment = base.Columns["Comment"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnumDoc = new DataColumn("numDoc", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnumDoc);
                this.columndateDoc = new DataColumn("dateDoc", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateDoc);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnBody = new DataColumn("Body", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBody);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnnumDoc.MaxLength = 50;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnBody.MaxLength = 0x7fffffff;
                this.columnComment.MaxLength = 0x1388;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class144 method_5()
            {
                return (DataSetGES.Class144) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class144 class144_0)
            {
                base.Rows.Remove(class144_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class144(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tTC_DocRowChanged != null)
                {
                    this.tTC_DocRowChanged(this, new DataSetGES.EventArgs100((DataSetGES.Class144) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tTC_DocRowChanging != null)
                {
                    this.tTC_DocRowChanging(this, new DataSetGES.EventArgs100((DataSetGES.Class144) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tTC_DocRowDeleted != null)
                {
                    this.tTC_DocRowDeleted(this, new DataSetGES.EventArgs100((DataSetGES.Class144) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tTC_DocRowDeleting != null)
                {
                    this.tTC_DocRowDeleting(this, new DataSetGES.EventArgs100((DataSetGES.Class144) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tTC_DocDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn BodyColumn
            {
                get
                {
                    return this.columnBody;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateDocColumn
            {
                get
                {
                    return this.columndateDoc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class144 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class144) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn numDocColumn
            {
                get
                {
                    return this.columnnumDoc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class tUserDataTable : TypedTableBase<DataSetGES.Class44>
        {
            private DataColumn columnDeleted;
            private DataColumn columnIDUser;
            private DataColumn columnIdWorker;
            private DataColumn columnLogin;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate1 tUserRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate1 tUserRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate1 tUserRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate1 tUserRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tUserDataTable()
            {
                base.TableName = "tUser";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tUserDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tUserDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tUserDataTable table1 = (DataSetGES.tUserDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tUserDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class44);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class44 class44_0)
            {
                base.Rows.Add(class44_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class44 method_1(int int_0, string string_0, string string_1, bool bool_0)
            {
                DataSetGES.Class44 row = (DataSetGES.Class44) base.NewRow();
                object[] objArray1 = new object[5];
                objArray1[1] = int_0;
                objArray1[2] = string_0;
                objArray1[3] = string_1;
                objArray1[4] = bool_0;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class44 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class44) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnIDUser = base.Columns["IDUser"];
                this.columnIdWorker = base.Columns["IdWorker"];
                this.columnLogin = base.Columns["Login"];
                this.columnName = base.Columns["Name"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnIDUser = new DataColumn("IDUser", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIDUser);
                this.columnIdWorker = new DataColumn("IdWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdWorker);
                this.columnLogin = new DataColumn("Login", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnLogin);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnIDUser };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnIDUser.AutoIncrement = true;
                this.columnIDUser.AutoIncrementSeed = -1L;
                this.columnIDUser.AutoIncrementStep = -1L;
                this.columnIDUser.AllowDBNull = false;
                this.columnIDUser.ReadOnly = true;
                this.columnIDUser.Unique = true;
                this.columnLogin.AllowDBNull = false;
                this.columnLogin.MaxLength = 50;
                this.columnName.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class44 method_5()
            {
                return (DataSetGES.Class44) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class44 class44_0)
            {
                base.Rows.Remove(class44_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class44(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.tUserRowChanged != null)
                {
                    this.tUserRowChanged(this, new DataSetGES.EventArgs0((DataSetGES.Class44) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.tUserRowChanging != null)
                {
                    this.tUserRowChanging(this, new DataSetGES.EventArgs0((DataSetGES.Class44) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.tUserRowDeleted != null)
                {
                    this.tUserRowDeleted(this, new DataSetGES.EventArgs0((DataSetGES.Class44) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.tUserRowDeleting != null)
                {
                    this.tUserRowDeleting(this, new DataSetGES.EventArgs0((DataSetGES.Class44) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "tUserDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IDUserColumn
            {
                get
                {
                    return this.columnIDUser;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdWorkerColumn
            {
                get
                {
                    return this.columnIdWorker;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class44 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class44) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LoginColumn
            {
                get
                {
                    return this.columnLogin;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vAbnDataTable : TypedTableBase<DataSetGES.Class143>
        {
            private DataColumn columnCodeAbnStr;
            private DataColumn columnCodeAbonent;
            private DataColumn columndatechange;
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidReason;
            private DataColumn columnidWorker;
            private DataColumn columnisActive;
            private DataColumn columnName;
            private DataColumn columnReason;
            private DataColumn columnTypeAbn;
            private DataColumn columnTypeName;
            private DataColumn columnTypeNameSocr;
            private DataColumn columnWorker;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate100 vAbnRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate100 vAbnRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate100 vAbnRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate100 vAbnRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vAbnDataTable()
            {
                base.TableName = "vAbn";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vAbnDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vAbnDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vAbnDataTable table1 = (DataSetGES.vAbnDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vAbnDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class143);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class143 class143_0)
            {
                base.Rows.Add(class143_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class143 method_1(int int_0, int int_1, string string_0, int int_2, int int_3, bool bool_0, string string_1, string string_2, string string_3, bool bool_1, string string_4, DateTime dateTime_0, int int_4, string string_5)
            {
                DataSetGES.Class143 row = (DataSetGES.Class143) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, int_2, int_3, bool_0, string_1, string_2, string_3, bool_1, string_4, dateTime_0, int_4, string_5 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class143 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class143) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnCodeAbonent = base.Columns["CodeAbonent"];
                this.columnName = base.Columns["Name"];
                this.columnTypeAbn = base.Columns["TypeAbn"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnTypeNameSocr = base.Columns["TypeNameSocr"];
                this.columnWorker = base.Columns["Worker"];
                this.columnisActive = base.Columns["isActive"];
                this.columnReason = base.Columns["Reason"];
                this.columndatechange = base.Columns["datechange"];
                this.columnidReason = base.Columns["idReason"];
                this.columnCodeAbnStr = base.Columns["CodeAbnStr"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnCodeAbonent = new DataColumn("CodeAbonent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnCodeAbonent);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeAbn = new DataColumn("TypeAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeAbn);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnTypeName = new DataColumn("TypeName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnTypeNameSocr = new DataColumn("TypeNameSocr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTypeNameSocr);
                this.columnWorker = new DataColumn("Worker", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnWorker);
                this.columnisActive = new DataColumn("isActive", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisActive);
                this.columnReason = new DataColumn("Reason", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columndatechange = new DataColumn("datechange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndatechange);
                this.columnidReason = new DataColumn("idReason", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidReason);
                this.columnCodeAbnStr = new DataColumn("CodeAbnStr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCodeAbnStr);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnCodeAbonent.AllowDBNull = false;
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 0xff;
                this.columnTypeAbn.AllowDBNull = false;
                this.columnidWorker.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
                this.columnTypeName.MaxLength = 100;
                this.columnTypeNameSocr.MaxLength = 50;
                this.columnWorker.ReadOnly = true;
                this.columnWorker.MaxLength = 0x23;
                this.columnReason.MaxLength = 100;
                this.columndatechange.ReadOnly = true;
                this.columnCodeAbnStr.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class143 method_5()
            {
                return (DataSetGES.Class143) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class143 class143_0)
            {
                base.Rows.Remove(class143_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class143(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vAbnRowChanged != null)
                {
                    this.vAbnRowChanged(this, new DataSetGES.EventArgs99((DataSetGES.Class143) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vAbnRowChanging != null)
                {
                    this.vAbnRowChanging(this, new DataSetGES.EventArgs99((DataSetGES.Class143) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vAbnRowDeleted != null)
                {
                    this.vAbnRowDeleted(this, new DataSetGES.EventArgs99((DataSetGES.Class143) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vAbnRowDeleting != null)
                {
                    this.vAbnRowDeleting(this, new DataSetGES.EventArgs99((DataSetGES.Class143) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vAbnDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CodeAbnStrColumn
            {
                get
                {
                    return this.columnCodeAbnStr;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CodeAbonentColumn
            {
                get
                {
                    return this.columnCodeAbonent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn datechangeColumn
            {
                get
                {
                    return this.columndatechange;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idReasonColumn
            {
                get
                {
                    return this.columnidReason;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn isActiveColumn
            {
                get
                {
                    return this.columnisActive;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class143 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class143) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ReasonColumn
            {
                get
                {
                    return this.columnReason;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeAbnColumn
            {
                get
                {
                    return this.columnTypeAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeNameColumn
            {
                get
                {
                    return this.columnTypeName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeNameSocrColumn
            {
                get
                {
                    return this.columnTypeNameSocr;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WorkerColumn
            {
                get
                {
                    return this.columnWorker;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_BossUserDataTable : TypedTableBase<DataSetGES.Class148>
        {
            private DataColumn columnFIO;
            private DataColumn columnFirstName;
            private DataColumn columnFullFIO;
            private DataColumn columnId;
            private DataColumn columnidGroup;
            private DataColumn columnisGroup;
            private DataColumn columnLastName;
            private DataColumn columnMiddleInitial;
            private DataColumn columnParentKey;
            private DataColumn columnValue;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate105 vJ_BossUserRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate105 vJ_BossUserRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate105 vJ_BossUserRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate105 vJ_BossUserRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_BossUserDataTable()
            {
                base.TableName = "vJ_BossUser";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_BossUserDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_BossUserDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_BossUserDataTable table1 = (DataSetGES.vJ_BossUserDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_BossUserDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class148);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class148 class148_0)
            {
                base.Rows.Add(class148_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class148 method_1(int int_0, string string_0, string string_1, string string_2, string string_3, int int_1, string string_4, decimal decimal_0, bool bool_0, string string_5)
            {
                DataSetGES.Class148 row = (DataSetGES.Class148) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, string_1, string_2, string_3, int_1, string_4, decimal_0, bool_0, string_5 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnMiddleInitial = base.Columns["MiddleInitial"];
                this.columnFIO = base.Columns["FIO"];
                this.columnidGroup = base.Columns["idGroup"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnValue = base.Columns["Value"];
                this.columnisGroup = base.Columns["isGroup"];
                this.columnFullFIO = base.Columns["FullFIO"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnFirstName = new DataColumn("FirstName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new DataColumn("LastName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnMiddleInitial = new DataColumn("MiddleInitial", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMiddleInitial);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnValue = new DataColumn("Value", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnisGroup = new DataColumn("isGroup", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisGroup);
                this.columnFullFIO = new DataColumn("FullFIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFullFIO);
                this.columnId.AllowDBNull = false;
                this.columnFirstName.MaxLength = 50;
                this.columnLastName.MaxLength = 50;
                this.columnMiddleInitial.MaxLength = 50;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 0x38;
                this.columnParentKey.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class148 method_4()
            {
                return (DataSetGES.Class148) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class148 class148_0)
            {
                base.Rows.Remove(class148_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class148(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_BossUserRowChanged != null)
                {
                    this.vJ_BossUserRowChanged(this, new DataSetGES.EventArgs104((DataSetGES.Class148) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_BossUserRowChanging != null)
                {
                    this.vJ_BossUserRowChanging(this, new DataSetGES.EventArgs104((DataSetGES.Class148) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_BossUserRowDeleted != null)
                {
                    this.vJ_BossUserRowDeleted(this, new DataSetGES.EventArgs104((DataSetGES.Class148) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_BossUserRowDeleting != null)
                {
                    this.vJ_BossUserRowDeleting(this, new DataSetGES.EventArgs104((DataSetGES.Class148) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_BossUserDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FirstNameColumn
            {
                get
                {
                    return this.columnFirstName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FullFIOColumn
            {
                get
                {
                    return this.columnFullFIO;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn isGroupColumn
            {
                get
                {
                    return this.columnisGroup;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class148 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class148) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn LastNameColumn
            {
                get
                {
                    return this.columnLastName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MiddleInitialColumn
            {
                get
                {
                    return this.columnMiddleInitial;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ValueColumn
            {
                get
                {
                    return this.columnValue;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_BusesTransfSchemaDataTable : TypedTableBase<DataSetGES.Class121>
        {
            private DataColumn columnidBus;
            private DataColumn columnidSub;
            private DataColumn columnidTransf;
            private DataColumn columnnameBus;
            private DataColumn columnnameBusTransf;
            private DataColumn columnNameTransf;
            private DataColumn columnparentKeyBus;
            private DataColumn columntagBus;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate78 vJ_BusesTransfSchemaRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate78 vJ_BusesTransfSchemaRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate78 vJ_BusesTransfSchemaRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate78 vJ_BusesTransfSchemaRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_BusesTransfSchemaDataTable()
            {
                base.TableName = "vJ_BusesTransfSchema";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_BusesTransfSchemaDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_BusesTransfSchemaDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_BusesTransfSchemaDataTable table1 = (DataSetGES.vJ_BusesTransfSchemaDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_BusesTransfSchemaDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class121);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class121 class121_0)
            {
                base.Rows.Add(class121_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class121 method_1(int int_0, int int_1, string string_0, int int_2, string string_1, int int_3, string string_2, string string_3)
            {
                DataSetGES.Class121 row = (DataSetGES.Class121) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, int_2, string_1, int_3, string_2, string_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidSub = base.Columns["idSub"];
                this.columnidBus = base.Columns["idBus"];
                this.columnnameBus = base.Columns["nameBus"];
                this.columntagBus = base.Columns["tagBus"];
                this.columnparentKeyBus = base.Columns["parentKeyBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnnameBusTransf = base.Columns["nameBusTransf"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnnameBus = new DataColumn("nameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBus);
                this.columntagBus = new DataColumn("tagBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntagBus);
                this.columnparentKeyBus = new DataColumn("parentKeyBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnparentKeyBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnnameBusTransf = new DataColumn("nameBusTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBusTransf);
                this.columnidSub.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnnameBus.ReadOnly = true;
                this.columnnameBus.MaxLength = 0x235;
                this.columnparentKeyBus.MaxLength = 50;
                this.columnNameTransf.MaxLength = 0x200;
                this.columnnameBusTransf.ReadOnly = true;
                this.columnnameBusTransf.MaxLength = 0x438;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class121 method_4()
            {
                return (DataSetGES.Class121) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class121 class121_0)
            {
                base.Rows.Remove(class121_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class121(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfSchemaRowChanged != null)
                {
                    this.vJ_BusesTransfSchemaRowChanged(this, new DataSetGES.EventArgs77((DataSetGES.Class121) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfSchemaRowChanging != null)
                {
                    this.vJ_BusesTransfSchemaRowChanging(this, new DataSetGES.EventArgs77((DataSetGES.Class121) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfSchemaRowDeleted != null)
                {
                    this.vJ_BusesTransfSchemaRowDeleted(this, new DataSetGES.EventArgs77((DataSetGES.Class121) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfSchemaRowDeleting != null)
                {
                    this.vJ_BusesTransfSchemaRowDeleting(this, new DataSetGES.EventArgs77((DataSetGES.Class121) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_BusesTransfSchemaDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class121 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class121) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameBusColumn
            {
                get
                {
                    return this.columnnameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameBusTransfColumn
            {
                get
                {
                    return this.columnnameBusTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn parentKeyBusColumn
            {
                get
                {
                    return this.columnparentKeyBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn tagBusColumn
            {
                get
                {
                    return this.columntagBus;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_BusesTransfsDataTable : TypedTableBase<DataSetGES.Class122>
        {
            private DataColumn columnidBus;
            private DataColumn columnidmeasurement;
            private DataColumn columnidSubstation;
            private DataColumn columnidTransf;
            private DataColumn columnName;
            private DataColumn columnnameBus;
            private DataColumn columnnameTransf;
            private DataColumn columnTypeDoc;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate79 vJ_BusesTransfsRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate79 vJ_BusesTransfsRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate79 vJ_BusesTransfsRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate79 vJ_BusesTransfsRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_BusesTransfsDataTable()
            {
                base.TableName = "vJ_BusesTransfs";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_BusesTransfsDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_BusesTransfsDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_BusesTransfsDataTable table1 = (DataSetGES.vJ_BusesTransfsDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_BusesTransfsDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class122);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class122 class122_0)
            {
                base.Rows.Add(class122_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class122 method_1(int int_0, int int_1, int int_2, int int_3, string string_0, int int_4, string string_1, string string_2)
            {
                DataSetGES.Class122 row = (DataSetGES.Class122) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, int_3, string_0, int_4, string_1, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidmeasurement = base.Columns["idmeasurement"];
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnidBus = base.Columns["idBus"];
                this.columnnameBus = base.Columns["nameBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnnameTransf = base.Columns["nameTransf"];
                this.columnName = base.Columns["Name"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnidmeasurement = new DataColumn("idmeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidmeasurement);
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnnameBus = new DataColumn("nameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnnameTransf = new DataColumn("nameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameTransf);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidmeasurement.AllowDBNull = false;
                this.columnidSubstation.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnnameBus.MaxLength = 0x200;
                this.columnnameTransf.MaxLength = 0x200;
                this.columnName.MaxLength = 0x438;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class122 method_4()
            {
                return (DataSetGES.Class122) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class122 class122_0)
            {
                base.Rows.Remove(class122_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class122(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfsRowChanged != null)
                {
                    this.vJ_BusesTransfsRowChanged(this, new DataSetGES.EventArgs78((DataSetGES.Class122) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfsRowChanging != null)
                {
                    this.vJ_BusesTransfsRowChanging(this, new DataSetGES.EventArgs78((DataSetGES.Class122) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfsRowDeleted != null)
                {
                    this.vJ_BusesTransfsRowDeleted(this, new DataSetGES.EventArgs78((DataSetGES.Class122) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_BusesTransfsRowDeleting != null)
                {
                    this.vJ_BusesTransfsRowDeleting(this, new DataSetGES.EventArgs78((DataSetGES.Class122) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_BusesTransfsDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idmeasurementColumn
            {
                get
                {
                    return this.columnidmeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class122 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class122) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameBusColumn
            {
                get
                {
                    return this.columnnameBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameTransfColumn
            {
                get
                {
                    return this.columnnameTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_CableByCellDataTable : TypedTableBase<DataSetGES.Class108>
        {
            private DataColumn columnid;
            private DataColumn columnidCell;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate65 vJ_CableByCellRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate65 vJ_CableByCellRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate65 vJ_CableByCellRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate65 vJ_CableByCellRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CableByCellDataTable()
            {
                base.TableName = "vJ_CableByCell";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CableByCellDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_CableByCellDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableByCellDataTable table1 = (DataSetGES.vJ_CableByCellDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableByCellDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class108);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class108 class108_0)
            {
                base.Rows.Add(class108_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class108 method_1(int int_0, int int_1, string string_0)
            {
                DataSetGES.Class108 row = (DataSetGES.Class108) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnidCell = base.Columns["idCell"];
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidCell.Caption = "idCable";
                this.columnid.AllowDBNull = false;
                this.columnName.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class108 method_4()
            {
                return (DataSetGES.Class108) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class108 class108_0)
            {
                base.Rows.Remove(class108_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class108(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellRowChanged != null)
                {
                    this.vJ_CableByCellRowChanged(this, new DataSetGES.EventArgs64((DataSetGES.Class108) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellRowChanging != null)
                {
                    this.vJ_CableByCellRowChanging(this, new DataSetGES.EventArgs64((DataSetGES.Class108) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellRowDeleted != null)
                {
                    this.vJ_CableByCellRowDeleted(this, new DataSetGES.EventArgs64((DataSetGES.Class108) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellRowDeleting != null)
                {
                    this.vJ_CableByCellRowDeleting(this, new DataSetGES.EventArgs64((DataSetGES.Class108) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_CableByCellDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class108 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class108) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_CableByCellMeasDataTable : TypedTableBase<DataSetGES.Class126>
        {
            private DataColumn columnidBus;
            private DataColumn columnidCable;
            private DataColumn columnidCell;
            private DataColumn columnidMeasurement;
            private DataColumn columnidParentCell;
            private DataColumn columnidTransf;
            private DataColumn columnName;
            private DataColumn columnNameCable;
            private DataColumn columnNameCell;
            private DataColumn columnTypeCodeIdCell;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate83 vJ_CableByCellMeasRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate83 vJ_CableByCellMeasRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate83 vJ_CableByCellMeasRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate83 vJ_CableByCellMeasRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CableByCellMeasDataTable()
            {
                base.TableName = "vJ_CableByCellMeas";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CableByCellMeasDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_CableByCellMeasDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableByCellMeasDataTable table1 = (DataSetGES.vJ_CableByCellMeasDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableByCellMeasDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class126);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class126 class126_0)
            {
                base.Rows.Add(class126_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class126 method_1(int int_0, int int_1, string string_0, int int_2, int int_3, string string_1, int int_4, int int_5, int int_6, string string_2)
            {
                DataSetGES.Class126 row = (DataSetGES.Class126) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, int_2, int_3, string_1, int_4, int_5, int_6, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnName = base.Columns["Name"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnTypeCodeIdCell = base.Columns["TypeCodeIdCell"];
                this.columnidParentCell = base.Columns["idParentCell"];
                this.columnidCable = base.Columns["idCable"];
                this.columnNameCable = base.Columns["NameCable"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnTypeCodeIdCell = new DataColumn("TypeCodeIdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeIdCell);
                this.columnidParentCell = new DataColumn("idParentCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentCell);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnidMeasurement.AllowDBNull = false;
                this.columnName.MaxLength = 0x200;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameCell.MaxLength = 0x200;
                this.columnNameCable.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class126 method_4()
            {
                return (DataSetGES.Class126) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class126 class126_0)
            {
                base.Rows.Remove(class126_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class126(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellMeasRowChanged != null)
                {
                    this.vJ_CableByCellMeasRowChanged(this, new DataSetGES.EventArgs82((DataSetGES.Class126) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellMeasRowChanging != null)
                {
                    this.vJ_CableByCellMeasRowChanging(this, new DataSetGES.EventArgs82((DataSetGES.Class126) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellMeasRowDeleted != null)
                {
                    this.vJ_CableByCellMeasRowDeleted(this, new DataSetGES.EventArgs82((DataSetGES.Class126) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_CableByCellMeasRowDeleting != null)
                {
                    this.vJ_CableByCellMeasRowDeleting(this, new DataSetGES.EventArgs82((DataSetGES.Class126) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_CableByCellMeasDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idParentCellColumn
            {
                get
                {
                    return this.columnidParentCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class126 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class126) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdCellColumn
            {
                get
                {
                    return this.columnTypeCodeIdCell;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_CableMakeupDataTable : TypedTableBase<DataSetGES.Class65>
        {
            private DataColumn columnId;
            private DataColumn columnMakeup;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate22 vJ_CableMakeupRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate22 vJ_CableMakeupRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate22 vJ_CableMakeupRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate22 vJ_CableMakeupRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CableMakeupDataTable()
            {
                base.TableName = "vJ_CableMakeup";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableMakeupDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CableMakeupDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableMakeupDataTable table1 = (DataSetGES.vJ_CableMakeupDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableMakeupDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class65);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class65 class65_0)
            {
                base.Rows.Add(class65_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class65 method_1(int int_0, string string_0)
            {
                DataSetGES.Class65 row = (DataSetGES.Class65) base.NewRow();
                object[] objArray = new object[] { int_0, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class65 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class65) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnMakeup = base.Columns["Makeup"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnMakeup.ReadOnly = true;
                this.columnMakeup.MaxLength = 0x803;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class65 method_5()
            {
                return (DataSetGES.Class65) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class65 class65_0)
            {
                base.Rows.Remove(class65_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class65(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_CableMakeupRowChanged != null)
                {
                    this.vJ_CableMakeupRowChanged(this, new DataSetGES.EventArgs21((DataSetGES.Class65) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_CableMakeupRowChanging != null)
                {
                    this.vJ_CableMakeupRowChanging(this, new DataSetGES.EventArgs21((DataSetGES.Class65) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_CableMakeupRowDeleted != null)
                {
                    this.vJ_CableMakeupRowDeleted(this, new DataSetGES.EventArgs21((DataSetGES.Class65) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_CableMakeupRowDeleting != null)
                {
                    this.vJ_CableMakeupRowDeleting(this, new DataSetGES.EventArgs21((DataSetGES.Class65) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_CableMakeupDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class65 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class65) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_CableReferenceDataTable : TypedTableBase<DataSetGES.Class78>
        {
            private DataColumn columnAmperageType;
            private DataColumn columnAmperageValue;
            private DataColumn columnCableMakeup;
            private DataColumn columnCrossSection;
            private DataColumn columnCrossSectionAddl;
            private DataColumn columnid;
            private DataColumn columnidVoltage;
            private DataColumn columnResistance;
            private DataColumn columnResistanceAddl;
            private DataColumn columnVoltage;
            private DataColumn columnWires;
            private DataColumn columnWiresAddl;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate35 vJ_CableReferenceRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate35 vJ_CableReferenceRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate35 vJ_CableReferenceRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate35 vJ_CableReferenceRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CableReferenceDataTable()
            {
                base.TableName = "vJ_CableReference";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableReferenceDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_CableReferenceDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableReferenceDataTable table1 = (DataSetGES.vJ_CableReferenceDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableReferenceDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class78);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class78 class78_0)
            {
                base.Rows.Add(class78_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class78 method_1(int int_0, string string_0, int int_1, double double_0, int int_2, double double_1, double double_2, double double_3, int int_3, decimal decimal_0, string string_1, double double_4)
            {
                DataSetGES.Class78 row = (DataSetGES.Class78) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, double_0, int_2, double_1, double_2, double_3, int_3, decimal_0, string_1, double_4 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnCableMakeup = base.Columns["CableMakeup"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnWiresAddl = base.Columns["WiresAddl"];
                this.columnCrossSectionAddl = base.Columns["CrossSectionAddl"];
                this.columnResistance = base.Columns["Resistance"];
                this.columnResistanceAddl = base.Columns["ResistanceAddl"];
                this.columnidVoltage = base.Columns["idVoltage"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnAmperageType = base.Columns["AmperageType"];
                this.columnAmperageValue = base.Columns["AmperageValue"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnCableMakeup = new DataColumn("CableMakeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCableMakeup);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnWiresAddl = new DataColumn("WiresAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWiresAddl);
                this.columnCrossSectionAddl = new DataColumn("CrossSectionAddl", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSectionAddl);
                this.columnResistance = new DataColumn("Resistance", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnResistance);
                this.columnResistanceAddl = new DataColumn("ResistanceAddl", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnResistanceAddl);
                this.columnidVoltage = new DataColumn("idVoltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidVoltage);
                this.columnVoltage = new DataColumn("Voltage", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnAmperageType = new DataColumn("AmperageType", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAmperageType);
                this.columnAmperageValue = new DataColumn("AmperageValue", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnAmperageValue);
                this.columnid.AllowDBNull = false;
                this.columnCableMakeup.AllowDBNull = false;
                this.columnCableMakeup.MaxLength = 50;
                this.columnWires.AllowDBNull = false;
                this.columnCrossSection.AllowDBNull = false;
                this.columnAmperageType.MaxLength = 0x80;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class78 method_4()
            {
                return (DataSetGES.Class78) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class78 class78_0)
            {
                base.Rows.Remove(class78_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class78(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_CableReferenceRowChanged != null)
                {
                    this.vJ_CableReferenceRowChanged(this, new DataSetGES.EventArgs34((DataSetGES.Class78) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_CableReferenceRowChanging != null)
                {
                    this.vJ_CableReferenceRowChanging(this, new DataSetGES.EventArgs34((DataSetGES.Class78) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_CableReferenceRowDeleted != null)
                {
                    this.vJ_CableReferenceRowDeleted(this, new DataSetGES.EventArgs34((DataSetGES.Class78) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_CableReferenceRowDeleting != null)
                {
                    this.vJ_CableReferenceRowDeleting(this, new DataSetGES.EventArgs34((DataSetGES.Class78) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_CableReferenceDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AmperageTypeColumn
            {
                get
                {
                    return this.columnAmperageType;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AmperageValueColumn
            {
                get
                {
                    return this.columnAmperageValue;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CableMakeupColumn
            {
                get
                {
                    return this.columnCableMakeup;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionAddlColumn
            {
                get
                {
                    return this.columnCrossSectionAddl;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idVoltageColumn
            {
                get
                {
                    return this.columnidVoltage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class78 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class78) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ResistanceAddlColumn
            {
                get
                {
                    return this.columnResistanceAddl;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ResistanceColumn
            {
                get
                {
                    return this.columnResistance;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresAddlColumn
            {
                get
                {
                    return this.columnWiresAddl;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_CellByBusDataTable : TypedTableBase<DataSetGES.Class118>
        {
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidParent;
            private DataColumn columnName;
            private DataColumn columnNameBus;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate75 vJ_CellByBusRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate75 vJ_CellByBusRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate75 vJ_CellByBusRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate75 vJ_CellByBusRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CellByBusDataTable()
            {
                base.TableName = "vJ_CellByBus";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CellByBusDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CellByBusDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CellByBusDataTable table1 = (DataSetGES.vJ_CellByBusDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CellByBusDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class118);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class118 class118_0)
            {
                base.Rows.Add(class118_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class118 method_1(int int_0, string string_0, int int_1, string string_1, int int_2, int int_3)
            {
                DataSetGES.Class118 row = (DataSetGES.Class118) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, int_2, int_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnidBus = base.Columns["idBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnidParent = base.Columns["idParent"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnidParent = new DataColumn("idParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParent);
                this.columnidBus.AllowDBNull = false;
                this.columnNameBus.MaxLength = 0x200;
                this.columnid.AllowDBNull = false;
                this.columnName.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class118 method_4()
            {
                return (DataSetGES.Class118) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class118 class118_0)
            {
                base.Rows.Remove(class118_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class118(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_CellByBusRowChanged != null)
                {
                    this.vJ_CellByBusRowChanged(this, new DataSetGES.EventArgs74((DataSetGES.Class118) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_CellByBusRowChanging != null)
                {
                    this.vJ_CellByBusRowChanging(this, new DataSetGES.EventArgs74((DataSetGES.Class118) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_CellByBusRowDeleted != null)
                {
                    this.vJ_CellByBusRowDeleted(this, new DataSetGES.EventArgs74((DataSetGES.Class118) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_CellByBusRowDeleting != null)
                {
                    this.vJ_CellByBusRowDeleting(this, new DataSetGES.EventArgs74((DataSetGES.Class118) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_CellByBusDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idParentColumn
            {
                get
                {
                    return this.columnidParent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class118 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class118) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_CoefficientIrregularityDataTable : TypedTableBase<DataSetGES.Class88>
        {
            private DataColumn columnidNetRegion;
            private DataColumn columnKpfd;
            private DataColumn columnKpfn;
            private DataColumn columnNetRegion;
            private DataColumn columnPower;
            private DataColumn columnSSSocrName;
            private DataColumn columnSubstation;
            private DataColumn columnTransformer;
            private DataColumn columnYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate45 vJ_CoefficientIrregularityRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate45 vJ_CoefficientIrregularityRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate45 vJ_CoefficientIrregularityRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate45 vJ_CoefficientIrregularityRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CoefficientIrregularityDataTable()
            {
                base.TableName = "vJ_CoefficientIrregularity";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CoefficientIrregularityDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CoefficientIrregularityDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CoefficientIrregularityDataTable table1 = (DataSetGES.vJ_CoefficientIrregularityDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CoefficientIrregularityDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class88);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class88 class88_0)
            {
                base.Rows.Add(class88_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class88 method_1(int int_0, string string_0, int int_1, string string_1, string string_2, string string_3, int int_2, int int_3, int int_4)
            {
                DataSetGES.Class88 row = (DataSetGES.Class88) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, string_2, string_3, int_2, int_3, int_4 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnNetRegion = base.Columns["NetRegion"];
                this.columnidNetRegion = base.Columns["idNetRegion"];
                this.columnYear = base.Columns["Year"];
                this.columnSSSocrName = base.Columns["SSSocrName"];
                this.columnSubstation = base.Columns["Substation"];
                this.columnTransformer = base.Columns["Transformer"];
                this.columnPower = base.Columns["Power"];
                this.columnKpfd = base.Columns["Kpfd"];
                this.columnKpfn = base.Columns["Kpfn"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnNetRegion = new DataColumn("NetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegion);
                this.columnidNetRegion = new DataColumn("idNetRegion", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnidNetRegion);
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnSSSocrName = new DataColumn("SSSocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSSSocrName);
                this.columnSubstation = new DataColumn("Substation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubstation);
                this.columnTransformer = new DataColumn("Transformer", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTransformer);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnKpfd = new DataColumn("Kpfd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfd);
                this.columnKpfn = new DataColumn("Kpfn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfn);
                this.columnNetRegion.ReadOnly = true;
                this.columnidNetRegion.MaxLength = 0x200;
                this.columnSSSocrName.MaxLength = 50;
                this.columnSubstation.ReadOnly = true;
                this.columnSubstation.MaxLength = 0x233;
                this.columnTransformer.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class88 method_4()
            {
                return (DataSetGES.Class88) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class88 class88_0)
            {
                base.Rows.Remove(class88_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class88(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientIrregularityRowChanged != null)
                {
                    this.vJ_CoefficientIrregularityRowChanged(this, new DataSetGES.EventArgs44((DataSetGES.Class88) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientIrregularityRowChanging != null)
                {
                    this.vJ_CoefficientIrregularityRowChanging(this, new DataSetGES.EventArgs44((DataSetGES.Class88) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientIrregularityRowDeleted != null)
                {
                    this.vJ_CoefficientIrregularityRowDeleted(this, new DataSetGES.EventArgs44((DataSetGES.Class88) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientIrregularityRowDeleting != null)
                {
                    this.vJ_CoefficientIrregularityRowDeleting(this, new DataSetGES.EventArgs44((DataSetGES.Class88) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_CoefficientIrregularityDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idNetRegionColumn
            {
                get
                {
                    return this.columnidNetRegion;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class88 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class88) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KpfdColumn
            {
                get
                {
                    return this.columnKpfd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KpfnColumn
            {
                get
                {
                    return this.columnKpfn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NetRegionColumn
            {
                get
                {
                    return this.columnNetRegion;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SSSocrNameColumn
            {
                get
                {
                    return this.columnSSSocrName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SubstationColumn
            {
                get
                {
                    return this.columnSubstation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TransformerColumn
            {
                get
                {
                    return this.columnTransformer;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_CoefficientLoadingDataTable : TypedTableBase<DataSetGES.Class86>
        {
            private DataColumn columnKntd;
            private DataColumn columnKntn;
            private DataColumn columnNetRegion;
            private DataColumn columnPower;
            private DataColumn columnSocrName;
            private DataColumn columnSubstation;
            private DataColumn columnTransformer;
            private DataColumn columnYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate43 vJ_CoefficientLoadingRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate43 vJ_CoefficientLoadingRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate43 vJ_CoefficientLoadingRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate43 vJ_CoefficientLoadingRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CoefficientLoadingDataTable()
            {
                base.TableName = "vJ_CoefficientLoading";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CoefficientLoadingDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CoefficientLoadingDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CoefficientLoadingDataTable table1 = (DataSetGES.vJ_CoefficientLoadingDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CoefficientLoadingDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class86);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class86 class86_0)
            {
                base.Rows.Add(class86_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class86 method_1(int int_0, int int_1, string string_0, string string_1, string string_2, int int_2, int int_3, int int_4)
            {
                DataSetGES.Class86 row = (DataSetGES.Class86) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, string_1, string_2, int_2, int_3, int_4 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnNetRegion = base.Columns["NetRegion"];
                this.columnYear = base.Columns["Year"];
                this.columnSocrName = base.Columns["SocrName"];
                this.columnSubstation = base.Columns["Substation"];
                this.columnTransformer = base.Columns["Transformer"];
                this.columnPower = base.Columns["Power"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnNetRegion = new DataColumn("NetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegion);
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnSocrName = new DataColumn("SocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSocrName);
                this.columnSubstation = new DataColumn("Substation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubstation);
                this.columnTransformer = new DataColumn("Transformer", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTransformer);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnKntd = new DataColumn("Kntd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
                this.columnNetRegion.ReadOnly = true;
                this.columnSocrName.MaxLength = 50;
                this.columnSubstation.ReadOnly = true;
                this.columnSubstation.MaxLength = 0x233;
                this.columnTransformer.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class86 method_4()
            {
                return (DataSetGES.Class86) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class86 class86_0)
            {
                base.Rows.Remove(class86_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class86(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientLoadingRowChanged != null)
                {
                    this.vJ_CoefficientLoadingRowChanged(this, new DataSetGES.EventArgs42((DataSetGES.Class86) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientLoadingRowChanging != null)
                {
                    this.vJ_CoefficientLoadingRowChanging(this, new DataSetGES.EventArgs42((DataSetGES.Class86) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientLoadingRowDeleted != null)
                {
                    this.vJ_CoefficientLoadingRowDeleted(this, new DataSetGES.EventArgs42((DataSetGES.Class86) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_CoefficientLoadingRowDeleting != null)
                {
                    this.vJ_CoefficientLoadingRowDeleting(this, new DataSetGES.EventArgs42((DataSetGES.Class86) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_CoefficientLoadingDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class86 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class86) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NetRegionColumn
            {
                get
                {
                    return this.columnNetRegion;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SocrNameColumn
            {
                get
                {
                    return this.columnSocrName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubstationColumn
            {
                get
                {
                    return this.columnSubstation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TransformerColumn
            {
                get
                {
                    return this.columnTransformer;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_GetMeasYearsDataTable : TypedTableBase<DataSetGES.Class70>
        {
            private DataColumn columnidObjList;
            private DataColumn columnTypeDoc;
            private DataColumn columnYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate27 vJ_GetMeasYearsRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate27 vJ_GetMeasYearsRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate27 vJ_GetMeasYearsRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate27 vJ_GetMeasYearsRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_GetMeasYearsDataTable()
            {
                base.TableName = "vJ_GetMeasYears";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_GetMeasYearsDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_GetMeasYearsDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_GetMeasYearsDataTable table1 = (DataSetGES.vJ_GetMeasYearsDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_GetMeasYearsDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class70);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class70 class70_0)
            {
                base.Rows.Add(class70_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class70 method_1(int int_0, int int_1, int int_2)
            {
                DataSetGES.Class70 row = (DataSetGES.Class70) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnYear = base.Columns["Year"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnYear.ReadOnly = true;
                this.columnidObjList.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class70 method_4()
            {
                return (DataSetGES.Class70) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class70 class70_0)
            {
                base.Rows.Remove(class70_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class70(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_GetMeasYearsRowChanged != null)
                {
                    this.vJ_GetMeasYearsRowChanged(this, new DataSetGES.EventArgs26((DataSetGES.Class70) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_GetMeasYearsRowChanging != null)
                {
                    this.vJ_GetMeasYearsRowChanging(this, new DataSetGES.EventArgs26((DataSetGES.Class70) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_GetMeasYearsRowDeleted != null)
                {
                    this.vJ_GetMeasYearsRowDeleted(this, new DataSetGES.EventArgs26((DataSetGES.Class70) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_GetMeasYearsRowDeleting != null)
                {
                    this.vJ_GetMeasYearsRowDeleting(this, new DataSetGES.EventArgs26((DataSetGES.Class70) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_GetMeasYearsDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class70 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class70) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_LastCableInfoDataTable : TypedTableBase<DataSetGES.Class106>
        {
            private DataColumn columnAddress;
            private DataColumn columnCompany;
            private DataColumn columnCrossSection;
            private DataColumn columnidCable;
            private DataColumn columnidCell;
            private DataColumn columnidMeasurement;
            private DataColumn columnidSubstation;
            private DataColumn columnMakeup;
            private DataColumn columnPermisAmperage;
            private DataColumn columnVoltage;
            private DataColumn columnWires;
            private DataColumn columnYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate63 vJ_LastCableInfoRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate63 vJ_LastCableInfoRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate63 vJ_LastCableInfoRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate63 vJ_LastCableInfoRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_LastCableInfoDataTable()
            {
                base.TableName = "vJ_LastCableInfo";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_LastCableInfoDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_LastCableInfoDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_LastCableInfoDataTable table1 = (DataSetGES.vJ_LastCableInfoDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_LastCableInfoDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class106);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class106 class106_0)
            {
                base.Rows.Add(class106_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class106 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, string string_0, string string_1, string string_2, int int_5, int int_6, double double_0, double double_1)
            {
                DataSetGES.Class106 row = (DataSetGES.Class106) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, int_3, int_4, string_0, string_1, string_2, int_5, int_6, double_0, double_1 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnYear = base.Columns["Year"];
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidCell = base.Columns["idCell"];
                this.columnidCable = base.Columns["idCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnCompany = base.Columns["Company"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnidMeasurement.AllowDBNull = false;
                this.columnAddress.MaxLength = 0x80;
                this.columnCompany.MaxLength = 0x80;
                this.columnMakeup.MaxLength = 50;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class106 method_4()
            {
                return (DataSetGES.Class106) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class106 class106_0)
            {
                base.Rows.Remove(class106_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class106(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_LastCableInfoRowChanged != null)
                {
                    this.vJ_LastCableInfoRowChanged(this, new DataSetGES.EventArgs62((DataSetGES.Class106) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_LastCableInfoRowChanging != null)
                {
                    this.vJ_LastCableInfoRowChanging(this, new DataSetGES.EventArgs62((DataSetGES.Class106) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_LastCableInfoRowDeleted != null)
                {
                    this.vJ_LastCableInfoRowDeleted(this, new DataSetGES.EventArgs62((DataSetGES.Class106) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_LastCableInfoRowDeleting != null)
                {
                    this.vJ_LastCableInfoRowDeleting(this, new DataSetGES.EventArgs62((DataSetGES.Class106) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_LastCableInfoDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class106 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class106) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasAbnObjDataTable : TypedTableBase<DataSetGES.Class69>
        {
            private DataColumn columncodeAbonent;
            private DataColumn columnHouse;
            private DataColumn columnids;
            private DataColumn columnidSchmObj;
            private DataColumn columnName;
            private DataColumn columnStreet;
            private DataColumn columnTypeDoc;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate26 vJ_MeasAbnObjRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate26 vJ_MeasAbnObjRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate26 vJ_MeasAbnObjRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate26 vJ_MeasAbnObjRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasAbnObjDataTable()
            {
                base.TableName = "vJ_MeasAbnObj";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasAbnObjDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasAbnObjDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasAbnObjDataTable table1 = (DataSetGES.vJ_MeasAbnObjDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasAbnObjDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class69);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class69 class69_0)
            {
                base.Rows.Add(class69_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class69 method_1(int int_0, int int_1, string string_0, string string_1, string string_2, int int_2, string string_3)
            {
                DataSetGES.Class69 row = (DataSetGES.Class69) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, string_1, string_2, int_2, string_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnStreet = base.Columns["Street"];
                this.columnHouse = base.Columns["House"];
                this.columnName = base.Columns["Name"];
                this.columncodeAbonent = base.Columns["codeAbonent"];
                this.columnids = base.Columns["ids"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnStreet = new DataColumn("Street", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnHouse = new DataColumn("House", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnHouse);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columncodeAbonent = new DataColumn("codeAbonent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columncodeAbonent);
                this.columnids = new DataColumn("ids", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnids);
                this.columnidSchmObj.AllowDBNull = false;
                this.columnStreet.ReadOnly = true;
                this.columnStreet.MaxLength = 0x5c;
                this.columnName.MaxLength = 0xff;
                this.columnids.ReadOnly = true;
                this.columnids.MaxLength = 0x7fffffff;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class69 method_4()
            {
                return (DataSetGES.Class69) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class69 class69_0)
            {
                base.Rows.Remove(class69_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class69(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAbnObjRowChanged != null)
                {
                    this.vJ_MeasAbnObjRowChanged(this, new DataSetGES.EventArgs25((DataSetGES.Class69) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAbnObjRowChanging != null)
                {
                    this.vJ_MeasAbnObjRowChanging(this, new DataSetGES.EventArgs25((DataSetGES.Class69) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAbnObjRowDeleted != null)
                {
                    this.vJ_MeasAbnObjRowDeleted(this, new DataSetGES.EventArgs25((DataSetGES.Class69) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAbnObjRowDeleting != null)
                {
                    this.vJ_MeasAbnObjRowDeleting(this, new DataSetGES.EventArgs25((DataSetGES.Class69) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasAbnObjDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn codeAbonentColumn
            {
                get
                {
                    return this.columncodeAbonent;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn HouseColumn
            {
                get
                {
                    return this.columnHouse;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idsColumn
            {
                get
                {
                    return this.columnids;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class69 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class69) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StreetColumn
            {
                get
                {
                    return this.columnStreet;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasAmpSubTransf_TEMPDataTable : TypedTableBase<DataSetGES.Class114>
        {
            private DataColumn columnid;
            private DataColumn columnidSub;
            private DataColumn columnidTransf;
            private DataColumn columnNameTransf;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate71 vJ_MeasAmpSubTransf_TEMPRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate71 vJ_MeasAmpSubTransf_TEMPRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate71 vJ_MeasAmpSubTransf_TEMPRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate71 vJ_MeasAmpSubTransf_TEMPRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasAmpSubTransf_TEMPDataTable()
            {
                base.TableName = "vJ_MeasAmpSubTransf_TEMP";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasAmpSubTransf_TEMPDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasAmpSubTransf_TEMPDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable table1 = (DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class114);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class114 class114_0)
            {
                base.Rows.Add(class114_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class114 method_1(int int_0, int int_1, int int_2, string string_0)
            {
                DataSetGES.Class114 row = (DataSetGES.Class114) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class114 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class114) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidSub = base.Columns["idSub"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidSub.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameTransf.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class114 method_5()
            {
                return (DataSetGES.Class114) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class114 class114_0)
            {
                base.Rows.Remove(class114_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class114(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAmpSubTransf_TEMPRowChanged != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowChanged(this, new DataSetGES.EventArgs70((DataSetGES.Class114) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAmpSubTransf_TEMPRowChanging != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowChanging(this, new DataSetGES.EventArgs70((DataSetGES.Class114) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAmpSubTransf_TEMPRowDeleted != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowDeleted(this, new DataSetGES.EventArgs70((DataSetGES.Class114) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasAmpSubTransf_TEMPRowDeleting != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowDeleting(this, new DataSetGES.EventArgs70((DataSetGES.Class114) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasAmpSubTransf_TEMPDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class114 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class114) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasCableDataTable : TypedTableBase<DataSetGES.Class97>
        {
            private DataColumn columnAddress;
            private DataColumn columnComment;
            private DataColumn columnCompany;
            private DataColumn columnCrossSection;
            private DataColumn columnDeleted;
            private DataColumn columnIad;
            private DataColumn columnIan;
            private DataColumn columnIbd;
            private DataColumn columnIbn;
            private DataColumn columnIcd;
            private DataColumn columnIcn;
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidCable;
            private DataColumn columnidCell;
            private DataColumn columnidMeasurement;
            private DataColumn columnidSchmAbn;
            private DataColumn columnidTransf;
            private DataColumn columnIod;
            private DataColumn columnIon;
            private DataColumn columnMakeup;
            private DataColumn columnNameCable;
            private DataColumn columnNameCell;
            private DataColumn columnOldCell;
            private DataColumn columnPermisAmperage;
            private DataColumn columnVoltage;
            private DataColumn columnWires;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate54 vJ_MeasCableRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate54 vJ_MeasCableRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate54 vJ_MeasCableRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate54 vJ_MeasCableRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasCableDataTable()
            {
                base.TableName = "vJ_MeasCable";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasCableDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasCableDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCableDataTable table1 = (DataSetGES.vJ_MeasCableDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCableDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class97);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class97 class97_0)
            {
                base.Rows.Add(class97_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class97 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, short short_0, string string_0, string string_1, string string_2, string string_3, int int_5, int int_6, string string_4, int int_7, int int_8, double double_0, double double_1, int int_9, int int_10, int int_11, int int_12, int int_13, int int_14, int int_15, int int_16, string string_5, bool bool_0)
            {
                DataSetGES.Class97 row = (DataSetGES.Class97) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, int_2, int_3, int_4, short_0, string_0, string_1, string_2, string_3, int_5, int_6, string_4, int_7, int_8, double_0,
                    double_1, int_9, int_10, int_11, int_12, int_13, int_14, int_15, int_16, string_5, bool_0
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class97 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class97) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnOldCell = base.Columns["OldCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnNameCable = base.Columns["NameCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnCompany = base.Columns["Company"];
                this.columnidCable = base.Columns["idCable"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnOldCell = new DataColumn("OldCell", typeof(short), null, MappingType.Element);
                base.Columns.Add(this.columnOldCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameCell.MaxLength = 0x200;
                this.columnNameCable.MaxLength = 0x200;
                this.columnAddress.MaxLength = 0x80;
                this.columnCompany.MaxLength = 0x80;
                this.columnMakeup.MaxLength = 50;
                this.columnComment.MaxLength = 0x80;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class97 method_5()
            {
                return (DataSetGES.Class97) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class97 class97_0)
            {
                base.Rows.Remove(class97_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class97(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableRowChanged != null)
                {
                    this.vJ_MeasCableRowChanged(this, new DataSetGES.EventArgs53((DataSetGES.Class97) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableRowChanging != null)
                {
                    this.vJ_MeasCableRowChanging(this, new DataSetGES.EventArgs53((DataSetGES.Class97) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableRowDeleted != null)
                {
                    this.vJ_MeasCableRowDeleted(this, new DataSetGES.EventArgs53((DataSetGES.Class97) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableRowDeleting != null)
                {
                    this.vJ_MeasCableRowDeleting(this, new DataSetGES.EventArgs53((DataSetGES.Class97) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasCableDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class97 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class97) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OldCellColumn
            {
                get
                {
                    return this.columnOldCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasCableReport2DataTable : TypedTableBase<DataSetGES.Class125>
        {
            private DataColumn columnCellName;
            private DataColumn columnComment;
            private DataColumn columnCompany;
            private DataColumn columnCrossSection;
            private DataColumn columnFullHouse;
            private DataColumn columnHouse;
            private DataColumn columnIad;
            private DataColumn columnIan;
            private DataColumn columnIbd;
            private DataColumn columnIbn;
            private DataColumn columnIcd;
            private DataColumn columnIcn;
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidCable;
            private DataColumn columnidCell;
            private DataColumn columnidMeasurement;
            private DataColumn columnidSchmAbn;
            private DataColumn columnidTransf;
            private DataColumn columnIod;
            private DataColumn columnIon;
            private DataColumn columnMakeup;
            private DataColumn columnPermisAmperage;
            private DataColumn columnStreet;
            private DataColumn columnVoltage;
            private DataColumn columnWires;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate82 vJ_MeasCableReport2RowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate82 vJ_MeasCableReport2RowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate82 vJ_MeasCableReport2RowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate82 vJ_MeasCableReport2RowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasCableReport2DataTable()
            {
                base.TableName = "vJ_MeasCableReport2";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasCableReport2DataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasCableReport2DataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCableReport2DataTable table1 = (DataSetGES.vJ_MeasCableReport2DataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCableReport2DataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class125);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class125 class125_0)
            {
                base.Rows.Add(class125_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class125 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, string string_0, int int_5, string string_1, string string_2, int int_6, string string_3, int int_7, string string_4, int int_8, int int_9, double double_0, double double_1, int int_10, int int_11, int int_12, int int_13, int int_14, int int_15, int int_16, int int_17, string string_5)
            {
                DataSetGES.Class125 row = (DataSetGES.Class125) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, int_2, int_3, int_4, string_0, int_5, string_1, string_2, int_6, string_3, int_7, string_4, int_8, int_9, double_0,
                    double_1, int_10, int_11, int_12, int_13, int_14, int_15, int_16, int_17, string_5
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnCellName = base.Columns["CellName"];
                this.columnidCable = base.Columns["idCable"];
                this.columnCompany = base.Columns["Company"];
                this.columnStreet = base.Columns["Street"];
                this.columnHouse = base.Columns["House"];
                this.columnFullHouse = base.Columns["FullHouse"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnCellName = new DataColumn("CellName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCellName);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnStreet = new DataColumn("Street", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnHouse = new DataColumn("House", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnHouse);
                this.columnFullHouse = new DataColumn("FullHouse", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFullHouse);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnid.AllowDBNull = false;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnCellName.ReadOnly = true;
                this.columnCellName.MaxLength = 0x200;
                this.columnCompany.MaxLength = 0xff;
                this.columnStreet.MaxLength = 40;
                this.columnMakeup.ReadOnly = true;
                this.columnMakeup.MaxLength = 0x44;
                this.columnVoltage.ReadOnly = true;
                this.columnComment.MaxLength = 0x80;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class125 method_4()
            {
                return (DataSetGES.Class125) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class125 class125_0)
            {
                base.Rows.Remove(class125_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class125(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReport2RowChanged != null)
                {
                    this.vJ_MeasCableReport2RowChanged(this, new DataSetGES.EventArgs81((DataSetGES.Class125) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReport2RowChanging != null)
                {
                    this.vJ_MeasCableReport2RowChanging(this, new DataSetGES.EventArgs81((DataSetGES.Class125) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReport2RowDeleted != null)
                {
                    this.vJ_MeasCableReport2RowDeleted(this, new DataSetGES.EventArgs81((DataSetGES.Class125) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReport2RowDeleting != null)
                {
                    this.vJ_MeasCableReport2RowDeleting(this, new DataSetGES.EventArgs81((DataSetGES.Class125) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasCableReport2DataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CellNameColumn
            {
                get
                {
                    return this.columnCellName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FullHouseColumn
            {
                get
                {
                    return this.columnFullHouse;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn HouseColumn
            {
                get
                {
                    return this.columnHouse;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class125 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class125) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StreetColumn
            {
                get
                {
                    return this.columnStreet;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasCableReportDataTable : TypedTableBase<DataSetGES.Class123>
        {
            private DataColumn columnAddress;
            private DataColumn columnCellName;
            private DataColumn columnComment;
            private DataColumn columnCrossSection;
            private DataColumn columnIad;
            private DataColumn columnIan;
            private DataColumn columnIbd;
            private DataColumn columnIbn;
            private DataColumn columnIcd;
            private DataColumn columnIcn;
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidCable;
            private DataColumn columnidCell;
            private DataColumn columnidMeasurement;
            private DataColumn columnidSchmAbn;
            private DataColumn columnidTransf;
            private DataColumn columnIod;
            private DataColumn columnIon;
            private DataColumn columnMakeup;
            private DataColumn columnPermisAmperage;
            private DataColumn columnVoltage;
            private DataColumn columnWires;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate80 vJ_MeasCableReportRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate80 vJ_MeasCableReportRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate80 vJ_MeasCableReportRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate80 vJ_MeasCableReportRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasCableReportDataTable()
            {
                base.TableName = "vJ_MeasCableReport";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasCableReportDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasCableReportDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCableReportDataTable table1 = (DataSetGES.vJ_MeasCableReportDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCableReportDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class123);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class123 class123_0)
            {
                base.Rows.Add(class123_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class123 method_1(int int_0, int int_1, int int_2, int int_3, int int_4, string string_0, int int_5, string string_1, int int_6, string string_2, int int_7, int int_8, double double_0, double double_1, int int_9, int int_10, int int_11, int int_12, int int_13, int int_14, int int_15, int int_16, string string_3)
            {
                DataSetGES.Class123 row = (DataSetGES.Class123) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, int_2, int_3, int_4, string_0, int_5, string_1, int_6, string_2, int_7, int_8, double_0, double_1, int_9, int_10,
                    int_11, int_12, int_13, int_14, int_15, int_16, string_3
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnCellName = base.Columns["CellName"];
                this.columnidCable = base.Columns["idCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnCellName = new DataColumn("CellName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCellName);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnid.AllowDBNull = false;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnCellName.ReadOnly = true;
                this.columnCellName.MaxLength = 0x200;
                this.columnAddress.ReadOnly = true;
                this.columnAddress.MaxLength = 0x7fffffff;
                this.columnMakeup.ReadOnly = true;
                this.columnMakeup.MaxLength = 0x44;
                this.columnVoltage.ReadOnly = true;
                this.columnComment.MaxLength = 0x80;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class123 method_4()
            {
                return (DataSetGES.Class123) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class123 class123_0)
            {
                base.Rows.Remove(class123_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class123(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReportRowChanged != null)
                {
                    this.vJ_MeasCableReportRowChanged(this, new DataSetGES.EventArgs79((DataSetGES.Class123) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReportRowChanging != null)
                {
                    this.vJ_MeasCableReportRowChanging(this, new DataSetGES.EventArgs79((DataSetGES.Class123) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReportRowDeleted != null)
                {
                    this.vJ_MeasCableReportRowDeleted(this, new DataSetGES.EventArgs79((DataSetGES.Class123) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCableReportRowDeleting != null)
                {
                    this.vJ_MeasCableReportRowDeleting(this, new DataSetGES.EventArgs79((DataSetGES.Class123) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasCableReportDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CellNameColumn
            {
                get
                {
                    return this.columnCellName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class123 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class123) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasCellDataTable : TypedTableBase<DataSetGES.Class128>
        {
            private DataColumn columnComment;
            private DataColumn columnDeleted;
            private DataColumn columnIad;
            private DataColumn columnIan;
            private DataColumn columnIbd;
            private DataColumn columnIbn;
            private DataColumn columnIcd;
            private DataColumn columnIcn;
            private DataColumn columnid;
            private DataColumn columnidBus;
            private DataColumn columnidMeasurement;
            private DataColumn columnidTransf;
            private DataColumn columnNameBus;
            private DataColumn columnNameCell;
            private DataColumn columnPermissAmperage;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate85 vJ_MeasCellRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate85 vJ_MeasCellRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate85 vJ_MeasCellRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate85 vJ_MeasCellRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasCellDataTable()
            {
                base.TableName = "vJ_MeasCell";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasCellDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasCellDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCellDataTable table1 = (DataSetGES.vJ_MeasCellDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCellDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class128);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class128 class128_0)
            {
                base.Rows.Add(class128_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class128 method_1(int int_0, int int_1, int int_2, int int_3, string string_0, string string_1, double double_0, int int_4, int int_5, int int_6, int int_7, int int_8, int int_9, string string_2, bool bool_0)
            {
                DataSetGES.Class128 row = (DataSetGES.Class128) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, int_3, string_0, string_1, double_0, int_4, int_5, int_6, int_7, int_8, int_9, string_2, bool_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class128 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class128) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnPermissAmperage = base.Columns["PermissAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnPermissAmperage = new DataColumn("PermissAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermissAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnNameBus.MaxLength = 0x200;
                this.columnNameCell.MaxLength = 0x200;
                this.columnComment.MaxLength = 0x80;
                this.columnDeleted.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class128 method_5()
            {
                return (DataSetGES.Class128) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class128 class128_0)
            {
                base.Rows.Remove(class128_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class128(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCellRowChanged != null)
                {
                    this.vJ_MeasCellRowChanged(this, new DataSetGES.EventArgs84((DataSetGES.Class128) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCellRowChanging != null)
                {
                    this.vJ_MeasCellRowChanging(this, new DataSetGES.EventArgs84((DataSetGES.Class128) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCellRowDeleted != null)
                {
                    this.vJ_MeasCellRowDeleted(this, new DataSetGES.EventArgs84((DataSetGES.Class128) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasCellRowDeleting != null)
                {
                    this.vJ_MeasCellRowDeleting(this, new DataSetGES.EventArgs84((DataSetGES.Class128) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasCellDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class128 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class128) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermissAmperageColumn
            {
                get
                {
                    return this.columnPermissAmperage;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasPeriodBySubstationDataTable : TypedTableBase<DataSetGES.Class66>
        {
            private DataColumn columnid;
            private DataColumn columnidObjList;
            private DataColumn columnMeasYear;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate23 vJ_MeasPeriodBySubstationRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate23 vJ_MeasPeriodBySubstationRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate23 vJ_MeasPeriodBySubstationRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate23 vJ_MeasPeriodBySubstationRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasPeriodBySubstationDataTable()
            {
                base.TableName = "vJ_MeasPeriodBySubstation";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasPeriodBySubstationDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasPeriodBySubstationDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasPeriodBySubstationDataTable table1 = (DataSetGES.vJ_MeasPeriodBySubstationDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasPeriodBySubstationDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class66);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class66 class66_0)
            {
                base.Rows.Add(class66_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class66 method_1(int int_0, int int_1)
            {
                DataSetGES.Class66 row = (DataSetGES.Class66) base.NewRow();
                object[] objArray1 = new object[3];
                objArray1[1] = int_0;
                objArray1[2] = int_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class66 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class66) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnMeasYear = base.Columns["MeasYear"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnMeasYear = new DataColumn("MeasYear", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnMeasYear);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidObjList.AllowDBNull = false;
                this.columnMeasYear.ReadOnly = true;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class66 method_5()
            {
                return (DataSetGES.Class66) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class66 class66_0)
            {
                base.Rows.Remove(class66_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class66(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasPeriodBySubstationRowChanged != null)
                {
                    this.vJ_MeasPeriodBySubstationRowChanged(this, new DataSetGES.EventArgs22((DataSetGES.Class66) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasPeriodBySubstationRowChanging != null)
                {
                    this.vJ_MeasPeriodBySubstationRowChanging(this, new DataSetGES.EventArgs22((DataSetGES.Class66) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasPeriodBySubstationRowDeleted != null)
                {
                    this.vJ_MeasPeriodBySubstationRowDeleted(this, new DataSetGES.EventArgs22((DataSetGES.Class66) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasPeriodBySubstationRowDeleting != null)
                {
                    this.vJ_MeasPeriodBySubstationRowDeleting(this, new DataSetGES.EventArgs22((DataSetGES.Class66) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasPeriodBySubstationDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class66 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class66) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MeasYearColumn
            {
                get
                {
                    return this.columnMeasYear;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasSubTransf_TEMPDataTable : TypedTableBase<DataSetGES.Class115>
        {
            private DataColumn columnid;
            private DataColumn columnidSub;
            private DataColumn columnidTransf;
            private DataColumn columnNameTransf;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate72 vJ_MeasSubTransf_TEMPRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate72 vJ_MeasSubTransf_TEMPRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate72 vJ_MeasSubTransf_TEMPRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate72 vJ_MeasSubTransf_TEMPRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasSubTransf_TEMPDataTable()
            {
                base.TableName = "vJ_MeasSubTransf_TEMP";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasSubTransf_TEMPDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasSubTransf_TEMPDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasSubTransf_TEMPDataTable table1 = (DataSetGES.vJ_MeasSubTransf_TEMPDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasSubTransf_TEMPDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class115);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class115 class115_0)
            {
                base.Rows.Add(class115_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class115 method_1(int int_0, int int_1, int int_2, string string_0)
            {
                DataSetGES.Class115 row = (DataSetGES.Class115) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class115 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class115) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidSub = base.Columns["idSub"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidSub.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameTransf.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class115 method_5()
            {
                return (DataSetGES.Class115) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class115 class115_0)
            {
                base.Rows.Remove(class115_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class115(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasSubTransf_TEMPRowChanged != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowChanged(this, new DataSetGES.EventArgs71((DataSetGES.Class115) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasSubTransf_TEMPRowChanging != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowChanging(this, new DataSetGES.EventArgs71((DataSetGES.Class115) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasSubTransf_TEMPRowDeleted != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowDeleted(this, new DataSetGES.EventArgs71((DataSetGES.Class115) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasSubTransf_TEMPRowDeleting != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowDeleting(this, new DataSetGES.EventArgs71((DataSetGES.Class115) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasSubTransf_TEMPDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class115 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class115) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasTransfPassportDataTable : TypedTableBase<DataSetGES.Class95>
        {
            private DataColumn columnId;
            private DataColumn columnIdPassport;
            private DataColumn columnInom;
            private DataColumn columnInvNumber;
            private DataColumn columnPower;
            private DataColumn columnTransfName;
            private DataColumn columnType;
            private DataColumn columnUnom;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate52 vJ_MeasTransfPassportRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate52 vJ_MeasTransfPassportRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate52 vJ_MeasTransfPassportRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate52 vJ_MeasTransfPassportRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasTransfPassportDataTable()
            {
                base.TableName = "vJ_MeasTransfPassport";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasTransfPassportDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasTransfPassportDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasTransfPassportDataTable table1 = (DataSetGES.vJ_MeasTransfPassportDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasTransfPassportDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class95);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class95 class95_0)
            {
                base.Rows.Add(class95_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class95 method_1(int int_0, int int_1, string string_0, string string_1, string string_2, string string_3, string string_4, string string_5)
            {
                DataSetGES.Class95 row = (DataSetGES.Class95) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, string_1, string_2, string_3, string_4, string_5 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdPassport = base.Columns["IdPassport"];
                this.columnTransfName = base.Columns["TransfName"];
                this.columnType = base.Columns["Type"];
                this.columnPower = base.Columns["Power"];
                this.columnInvNumber = base.Columns["InvNumber"];
                this.columnUnom = base.Columns["Unom"];
                this.columnInom = base.Columns["Inom"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdPassport = new DataColumn("IdPassport", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdPassport);
                this.columnTransfName = new DataColumn("TransfName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTransfName);
                this.columnType = new DataColumn("Type", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPower = new DataColumn("Power", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnInvNumber = new DataColumn("InvNumber", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnInvNumber);
                this.columnUnom = new DataColumn("Unom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUnom);
                this.columnInom = new DataColumn("Inom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnInom);
                this.columnId.AllowDBNull = false;
                this.columnTransfName.MaxLength = 0x200;
                this.columnType.ReadOnly = true;
                this.columnType.MaxLength = 0x200;
                this.columnPower.ReadOnly = true;
                this.columnPower.MaxLength = 0x200;
                this.columnInvNumber.ReadOnly = true;
                this.columnInvNumber.MaxLength = 0x200;
                this.columnUnom.ReadOnly = true;
                this.columnUnom.MaxLength = 0x200;
                this.columnInom.ReadOnly = true;
                this.columnInom.MaxLength = 0x200;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class95 method_4()
            {
                return (DataSetGES.Class95) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class95 class95_0)
            {
                base.Rows.Remove(class95_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class95(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfPassportRowChanged != null)
                {
                    this.vJ_MeasTransfPassportRowChanged(this, new DataSetGES.EventArgs51((DataSetGES.Class95) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfPassportRowChanging != null)
                {
                    this.vJ_MeasTransfPassportRowChanging(this, new DataSetGES.EventArgs51((DataSetGES.Class95) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfPassportRowDeleted != null)
                {
                    this.vJ_MeasTransfPassportRowDeleted(this, new DataSetGES.EventArgs51((DataSetGES.Class95) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfPassportRowDeleting != null)
                {
                    this.vJ_MeasTransfPassportRowDeleting(this, new DataSetGES.EventArgs51((DataSetGES.Class95) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasTransfPassportDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdPassportColumn
            {
                get
                {
                    return this.columnIdPassport;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn InomColumn
            {
                get
                {
                    return this.columnInom;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn InvNumberColumn
            {
                get
                {
                    return this.columnInvNumber;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class95 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class95) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TransfNameColumn
            {
                get
                {
                    return this.columnTransfName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeColumn
            {
                get
                {
                    return this.columnType;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UnomColumn
            {
                get
                {
                    return this.columnUnom;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasTransfVoltageDataTable : TypedTableBase<DataSetGES.Class129>
        {
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidMeasurement;
            private DataColumn columnidObjList;
            private DataColumn columnidOldMeasurementTransf;
            private DataColumn columnidSwitchPosition;
            private DataColumn columnSwitchPosition;
            private DataColumn columnUabd;
            private DataColumn columnUabn;
            private DataColumn columnUaod;
            private DataColumn columnUaon;
            private DataColumn columnUbcd;
            private DataColumn columnUbcn;
            private DataColumn columnUbod;
            private DataColumn columnUbon;
            private DataColumn columnUcad;
            private DataColumn columnUcan;
            private DataColumn columnUcod;
            private DataColumn columnUcon;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate86 vJ_MeasTransfVoltageRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate86 vJ_MeasTransfVoltageRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate86 vJ_MeasTransfVoltageRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate86 vJ_MeasTransfVoltageRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasTransfVoltageDataTable()
            {
                base.TableName = "vJ_MeasTransfVoltage";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasTransfVoltageDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasTransfVoltageDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasTransfVoltageDataTable table1 = (DataSetGES.vJ_MeasTransfVoltageDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasTransfVoltageDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class129);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class129 class129_0)
            {
                base.Rows.Add(class129_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class129 method_1(int int_0, int int_1, int int_2, string string_0, int int_3, int int_4, int int_5, int int_6, int int_7, int int_8, int int_9, int int_10, int int_11, int int_12, int int_13, int int_14, int int_15, int int_16, bool bool_0)
            {
                DataSetGES.Class129 row = (DataSetGES.Class129) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, int_2, string_0, int_3, int_4, int_5, int_6, int_7, int_8, int_9, int_10, int_11, int_12, int_13, int_14,
                    int_15, int_16, bool_0
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class129 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class129) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnSwitchPosition = base.Columns["SwitchPosition"];
                this.columnidSwitchPosition = base.Columns["idSwitchPosition"];
                this.columnUabd = base.Columns["Uabd"];
                this.columnUabn = base.Columns["Uabn"];
                this.columnUbcd = base.Columns["Ubcd"];
                this.columnUbcn = base.Columns["Ubcn"];
                this.columnUcad = base.Columns["Ucad"];
                this.columnUcan = base.Columns["Ucan"];
                this.columnUaod = base.Columns["Uaod"];
                this.columnUaon = base.Columns["Uaon"];
                this.columnUbod = base.Columns["Ubod"];
                this.columnUbon = base.Columns["Ubon"];
                this.columnUcod = base.Columns["Ucod"];
                this.columnUcon = base.Columns["Ucon"];
                this.columnidOldMeasurementTransf = base.Columns["idOldMeasurementTransf"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnSwitchPosition = new DataColumn("SwitchPosition", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSwitchPosition);
                this.columnidSwitchPosition = new DataColumn("idSwitchPosition", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSwitchPosition);
                this.columnUabd = new DataColumn("Uabd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabd);
                this.columnUabn = new DataColumn("Uabn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabn);
                this.columnUbcd = new DataColumn("Ubcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcd);
                this.columnUbcn = new DataColumn("Ubcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcn);
                this.columnUcad = new DataColumn("Ucad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcad);
                this.columnUcan = new DataColumn("Ucan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcan);
                this.columnUaod = new DataColumn("Uaod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaod);
                this.columnUaon = new DataColumn("Uaon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaon);
                this.columnUbod = new DataColumn("Ubod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbod);
                this.columnUbon = new DataColumn("Ubon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbon);
                this.columnUcod = new DataColumn("Ucod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcod);
                this.columnUcon = new DataColumn("Ucon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcon);
                this.columnidOldMeasurementTransf = new DataColumn("idOldMeasurementTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurementTransf);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
                this.columnSwitchPosition.MaxLength = 100;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class129 method_5()
            {
                return (DataSetGES.Class129) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class129 class129_0)
            {
                base.Rows.Remove(class129_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class129(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfVoltageRowChanged != null)
                {
                    this.vJ_MeasTransfVoltageRowChanged(this, new DataSetGES.EventArgs85((DataSetGES.Class129) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfVoltageRowChanging != null)
                {
                    this.vJ_MeasTransfVoltageRowChanging(this, new DataSetGES.EventArgs85((DataSetGES.Class129) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfVoltageRowDeleted != null)
                {
                    this.vJ_MeasTransfVoltageRowDeleted(this, new DataSetGES.EventArgs85((DataSetGES.Class129) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasTransfVoltageRowDeleting != null)
                {
                    this.vJ_MeasTransfVoltageRowDeleting(this, new DataSetGES.EventArgs85((DataSetGES.Class129) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasTransfVoltageDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idOldMeasurementTransfColumn
            {
                get
                {
                    return this.columnidOldMeasurementTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSwitchPositionColumn
            {
                get
                {
                    return this.columnidSwitchPosition;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class129 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class129) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SwitchPositionColumn
            {
                get
                {
                    return this.columnSwitchPosition;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UabdColumn
            {
                get
                {
                    return this.columnUabd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UabnColumn
            {
                get
                {
                    return this.columnUabn;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UaodColumn
            {
                get
                {
                    return this.columnUaod;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UaonColumn
            {
                get
                {
                    return this.columnUaon;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbcdColumn
            {
                get
                {
                    return this.columnUbcd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbcnColumn
            {
                get
                {
                    return this.columnUbcn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbodColumn
            {
                get
                {
                    return this.columnUbod;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbonColumn
            {
                get
                {
                    return this.columnUbon;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcadColumn
            {
                get
                {
                    return this.columnUcad;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcanColumn
            {
                get
                {
                    return this.columnUcan;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcodColumn
            {
                get
                {
                    return this.columnUcod;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UconColumn
            {
                get
                {
                    return this.columnUcon;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MeasurementReportDataTable : TypedTableBase<DataSetGES.Class82>
        {
            private DataColumn columnDateD;
            private DataColumn columnDateN;
            private DataColumn columnDeleted;
            private DataColumn columnFIO;
            private DataColumn columnid;
            private DataColumn columnidObjList;
            private DataColumn columnidWorker;
            private DataColumn columnName;
            private DataColumn columnTemperatureD;
            private DataColumn columnTemperatureN;
            private DataColumn columnTypeDoc;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate39 vJ_MeasurementReportRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate39 vJ_MeasurementReportRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate39 vJ_MeasurementReportRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate39 vJ_MeasurementReportRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasurementReportDataTable()
            {
                base.TableName = "vJ_MeasurementReport";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasurementReportDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasurementReportDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasurementReportDataTable table1 = (DataSetGES.vJ_MeasurementReportDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasurementReportDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class82);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class82 class82_0)
            {
                base.Rows.Add(class82_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class82 method_1(int int_0, int int_1, string string_0, int int_2, DateTime dateTime_0, int int_3, DateTime dateTime_1, int int_4, int int_5, string string_1, bool bool_0)
            {
                DataSetGES.Class82 row = (DataSetGES.Class82) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, int_2, dateTime_0, int_3, dateTime_1, int_4, int_5, string_1, bool_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnName = base.Columns["Name"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnDateD = base.Columns["DateD"];
                this.columnTemperatureD = base.Columns["TemperatureD"];
                this.columnDateN = base.Columns["DateN"];
                this.columnTemperatureN = base.Columns["TemperatureN"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnFIO = base.Columns["FIO"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnDateD = new DataColumn("DateD", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateD);
                this.columnTemperatureD = new DataColumn("TemperatureD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureD);
                this.columnDateN = new DataColumn("DateN", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateN);
                this.columnTemperatureN = new DataColumn("TemperatureN", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureN);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnid.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 0x233;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 0x24;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class82 method_4()
            {
                return (DataSetGES.Class82) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class82 class82_0)
            {
                base.Rows.Remove(class82_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class82(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MeasurementReportRowChanged != null)
                {
                    this.vJ_MeasurementReportRowChanged(this, new DataSetGES.EventArgs38((DataSetGES.Class82) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MeasurementReportRowChanging != null)
                {
                    this.vJ_MeasurementReportRowChanging(this, new DataSetGES.EventArgs38((DataSetGES.Class82) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MeasurementReportRowDeleted != null)
                {
                    this.vJ_MeasurementReportRowDeleted(this, new DataSetGES.EventArgs38((DataSetGES.Class82) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MeasurementReportRowDeleting != null)
                {
                    this.vJ_MeasurementReportRowDeleting(this, new DataSetGES.EventArgs38((DataSetGES.Class82) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MeasurementReportDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateDColumn
            {
                get
                {
                    return this.columnDateD;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateNColumn
            {
                get
                {
                    return this.columnDateN;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class82 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class82) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TemperatureDColumn
            {
                get
                {
                    return this.columnTemperatureD;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TemperatureNColumn
            {
                get
                {
                    return this.columnTemperatureN;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MemCommissionDataTable : TypedTableBase<DataSetGES.Class156>
        {
            private DataColumn columnBody;
            private DataColumn columnComment;
            private DataColumn columnDateFact;
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidMemorandum;
            private DataColumn columnPerformer;
            private DataColumn columnStatus;
            private DataColumn columnSubject;
            private DataColumn columnUNID;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate113 vJ_MemCommissionRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate113 vJ_MemCommissionRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate113 vJ_MemCommissionRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate113 vJ_MemCommissionRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MemCommissionDataTable()
            {
                base.TableName = "vJ_MemCommission";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MemCommissionDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MemCommissionDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MemCommissionDataTable table1 = (DataSetGES.vJ_MemCommissionDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MemCommissionDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class156);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class156 class156_0)
            {
                base.Rows.Add(class156_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class156 method_1(int int_0, int int_1, string string_0, DateTime dateTime_0, string string_1, string string_2, string string_3, string string_4, int int_2, bool bool_0)
            {
                DataSetGES.Class156 row = (DataSetGES.Class156) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, dateTime_0, string_1, string_2, string_3, string_4, int_2, bool_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class156 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class156) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidMemorandum = base.Columns["idMemorandum"];
                this.columnUNID = base.Columns["UNID"];
                this.columnDateFact = base.Columns["DateFact"];
                this.columnStatus = base.Columns["Status"];
                this.columnSubject = base.Columns["Subject"];
                this.columnBody = base.Columns["Body"];
                this.columnComment = base.Columns["Comment"];
                this.columnPerformer = base.Columns["Performer"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMemorandum = new DataColumn("idMemorandum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMemorandum);
                this.columnUNID = new DataColumn("UNID", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUNID);
                this.columnDateFact = new DataColumn("DateFact", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateFact);
                this.columnStatus = new DataColumn("Status", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnSubject = new DataColumn("Subject", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnBody = new DataColumn("Body", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBody);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnPerformer = new DataColumn("Performer", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPerformer);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidMemorandum.AllowDBNull = false;
                this.columnUNID.MaxLength = 50;
                this.columnStatus.MaxLength = 100;
                this.columnSubject.MaxLength = 0x200;
                this.columnBody.MaxLength = 0x7fffffff;
                this.columnComment.MaxLength = 0x400;
                this.columnDeleted.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class156 method_5()
            {
                return (DataSetGES.Class156) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class156 class156_0)
            {
                base.Rows.Remove(class156_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class156(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MemCommissionRowChanged != null)
                {
                    this.vJ_MemCommissionRowChanged(this, new DataSetGES.EventArgs112((DataSetGES.Class156) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MemCommissionRowChanging != null)
                {
                    this.vJ_MemCommissionRowChanging(this, new DataSetGES.EventArgs112((DataSetGES.Class156) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MemCommissionRowDeleted != null)
                {
                    this.vJ_MemCommissionRowDeleted(this, new DataSetGES.EventArgs112((DataSetGES.Class156) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MemCommissionRowDeleting != null)
                {
                    this.vJ_MemCommissionRowDeleting(this, new DataSetGES.EventArgs112((DataSetGES.Class156) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MemCommissionDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn BodyColumn
            {
                get
                {
                    return this.columnBody;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateFactColumn
            {
                get
                {
                    return this.columnDateFact;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMemorandumColumn
            {
                get
                {
                    return this.columnidMemorandum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class156 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class156) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PerformerColumn
            {
                get
                {
                    return this.columnPerformer;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StatusColumn
            {
                get
                {
                    return this.columnStatus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubjectColumn
            {
                get
                {
                    return this.columnSubject;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UNIDColumn
            {
                get
                {
                    return this.columnUNID;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_MemorandumDataTable : TypedTableBase<DataSetGES.Class151>
        {
            private DataColumn columnBody_C;
            private DataColumn columnCorrName;
            private DataColumn columnctb_InheritedID;
            private DataColumn columnctbDateCreate;
            private DataColumn columnDeleted;
            private DataColumn columnid;
            private DataColumn columnidTehConnect;
            private DataColumn columnidWorker;
            private DataColumn columnRespDate;
            private DataColumn columnRespNum;
            private DataColumn columnRgNum;
            private DataColumn columnSignDate;
            private DataColumn columnStatus;
            private DataColumn columnStatusOrder;
            private DataColumn columnSubject;
            private DataColumn columnUniversalID;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate108 vJ_MemorandumRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate108 vJ_MemorandumRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate108 vJ_MemorandumRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate108 vJ_MemorandumRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MemorandumDataTable()
            {
                base.TableName = "vJ_Memorandum";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MemorandumDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MemorandumDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MemorandumDataTable table1 = (DataSetGES.vJ_MemorandumDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MemorandumDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class151);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class151 class151_0)
            {
                base.Rows.Add(class151_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class151 method_1(int int_0, int int_1, int int_2, string string_0, string string_1, string string_2, string string_3, string string_4, string string_5, DateTime dateTime_0, DateTime dateTime_1, string string_6, string string_7, string string_8, DateTime dateTime_2, bool bool_0)
            {
                DataSetGES.Class151 row = (DataSetGES.Class151) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, string_0, string_1, string_2, string_3, string_4, string_5, dateTime_0, dateTime_1, string_6, string_7, string_8, dateTime_2, bool_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnidTehConnect = base.Columns["idTehConnect"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnUniversalID = base.Columns["UniversalID"];
                this.columnctb_InheritedID = base.Columns["ctb_InheritedID"];
                this.columnStatus = base.Columns["Status"];
                this.columnStatusOrder = base.Columns["StatusOrder"];
                this.columnBody_C = base.Columns["Body_C"];
                this.columnSubject = base.Columns["Subject"];
                this.columnRespDate = base.Columns["RespDate"];
                this.columnSignDate = base.Columns["SignDate"];
                this.columnRgNum = base.Columns["RgNum"];
                this.columnRespNum = base.Columns["RespNum"];
                this.columnCorrName = base.Columns["CorrName"];
                this.columnctbDateCreate = base.Columns["ctbDateCreate"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidTehConnect = new DataColumn("idTehConnect", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTehConnect);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnUniversalID = new DataColumn("UniversalID", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUniversalID);
                this.columnctb_InheritedID = new DataColumn("ctb_InheritedID", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnctb_InheritedID);
                this.columnStatus = new DataColumn("Status", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnStatusOrder = new DataColumn("StatusOrder", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStatusOrder);
                this.columnBody_C = new DataColumn("Body_C", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBody_C);
                this.columnSubject = new DataColumn("Subject", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnRespDate = new DataColumn("RespDate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnRespDate);
                this.columnSignDate = new DataColumn("SignDate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnSignDate);
                this.columnRgNum = new DataColumn("RgNum", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnRgNum);
                this.columnRespNum = new DataColumn("RespNum", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnRespNum);
                this.columnCorrName = new DataColumn("CorrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCorrName);
                this.columnctbDateCreate = new DataColumn("ctbDateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnctbDateCreate);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnid.AllowDBNull = false;
                this.columnUniversalID.MaxLength = 50;
                this.columnctb_InheritedID.MaxLength = 50;
                this.columnStatus.MaxLength = 100;
                this.columnStatusOrder.ReadOnly = true;
                this.columnStatusOrder.MaxLength = 0x7fffffff;
                this.columnBody_C.MaxLength = 0x7fffffff;
                this.columnSubject.MaxLength = 0x200;
                this.columnRgNum.MaxLength = 50;
                this.columnRespNum.MaxLength = 50;
                this.columnCorrName.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class151 method_4()
            {
                return (DataSetGES.Class151) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class151 class151_0)
            {
                base.Rows.Remove(class151_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class151(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_MemorandumRowChanged != null)
                {
                    this.vJ_MemorandumRowChanged(this, new DataSetGES.EventArgs107((DataSetGES.Class151) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_MemorandumRowChanging != null)
                {
                    this.vJ_MemorandumRowChanging(this, new DataSetGES.EventArgs107((DataSetGES.Class151) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_MemorandumRowDeleted != null)
                {
                    this.vJ_MemorandumRowDeleted(this, new DataSetGES.EventArgs107((DataSetGES.Class151) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_MemorandumRowDeleting != null)
                {
                    this.vJ_MemorandumRowDeleting(this, new DataSetGES.EventArgs107((DataSetGES.Class151) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_MemorandumDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn Body_CColumn
            {
                get
                {
                    return this.columnBody_C;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CorrNameColumn
            {
                get
                {
                    return this.columnCorrName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ctb_InheritedIDColumn
            {
                get
                {
                    return this.columnctb_InheritedID;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ctbDateCreateColumn
            {
                get
                {
                    return this.columnctbDateCreate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTehConnectColumn
            {
                get
                {
                    return this.columnidTehConnect;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class151 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class151) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn RespDateColumn
            {
                get
                {
                    return this.columnRespDate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn RespNumColumn
            {
                get
                {
                    return this.columnRespNum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn RgNumColumn
            {
                get
                {
                    return this.columnRgNum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SignDateColumn
            {
                get
                {
                    return this.columnSignDate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StatusColumn
            {
                get
                {
                    return this.columnStatus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StatusOrderColumn
            {
                get
                {
                    return this.columnStatusOrder;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubjectColumn
            {
                get
                {
                    return this.columnSubject;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UniversalIDColumn
            {
                get
                {
                    return this.columnUniversalID;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_PowerISR_SSBusDataTable : TypedTableBase<DataSetGES.Class119>
        {
            private DataColumn columnidBus;
            private DataColumn columnidSub;
            private DataColumn columnidTransf;
            private DataColumn columnIsr;
            private DataColumn columnnameBus;
            private DataColumn columnNameSub;
            private DataColumn columnNameTransf;
            private DataColumn columnPower;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate76 vJ_PowerISR_SSBusRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate76 vJ_PowerISR_SSBusRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate76 vJ_PowerISR_SSBusRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate76 vJ_PowerISR_SSBusRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_PowerISR_SSBusDataTable()
            {
                base.TableName = "vJ_PowerISR_SSBus";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_PowerISR_SSBusDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_PowerISR_SSBusDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_PowerISR_SSBusDataTable table1 = (DataSetGES.vJ_PowerISR_SSBusDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_PowerISR_SSBusDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class119);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class119 class119_0)
            {
                base.Rows.Add(class119_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class119 method_1(int int_0, string string_0, int int_1, string string_1, int int_2, string string_2, string string_3, int int_3)
            {
                DataSetGES.Class119 row = (DataSetGES.Class119) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, int_2, string_2, string_3, int_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidSub = base.Columns["idSub"];
                this.columnNameSub = base.Columns["NameSub"];
                this.columnidBus = base.Columns["idBus"];
                this.columnnameBus = base.Columns["nameBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnPower = base.Columns["Power"];
                this.columnIsr = base.Columns["Isr"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnNameSub = new DataColumn("NameSub", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSub);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnnameBus = new DataColumn("nameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnPower = new DataColumn("Power", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnIsr = new DataColumn("Isr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsr);
                this.columnidSub.AllowDBNull = false;
                this.columnNameSub.MaxLength = 0x233;
                this.columnidBus.AllowDBNull = false;
                this.columnnameBus.MaxLength = 0x200;
                this.columnNameTransf.MaxLength = 0x200;
                this.columnPower.MaxLength = 0x200;
                this.columnIsr.ReadOnly = true;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class119 method_4()
            {
                return (DataSetGES.Class119) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class119 class119_0)
            {
                base.Rows.Remove(class119_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class119(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSBusRowChanged != null)
                {
                    this.vJ_PowerISR_SSBusRowChanged(this, new DataSetGES.EventArgs75((DataSetGES.Class119) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSBusRowChanging != null)
                {
                    this.vJ_PowerISR_SSBusRowChanging(this, new DataSetGES.EventArgs75((DataSetGES.Class119) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSBusRowDeleted != null)
                {
                    this.vJ_PowerISR_SSBusRowDeleted(this, new DataSetGES.EventArgs75((DataSetGES.Class119) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSBusRowDeleting != null)
                {
                    this.vJ_PowerISR_SSBusRowDeleting(this, new DataSetGES.EventArgs75((DataSetGES.Class119) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_PowerISR_SSBusDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsrColumn
            {
                get
                {
                    return this.columnIsr;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class119 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class119) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameBusColumn
            {
                get
                {
                    return this.columnnameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubColumn
            {
                get
                {
                    return this.columnNameSub;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_PowerISR_SSTransfDataTable : TypedTableBase<DataSetGES.Class102>
        {
            private DataColumn columnidSub;
            private DataColumn columnidTransf;
            private DataColumn columnIsr;
            private DataColumn columnNameSub;
            private DataColumn columnNameTransf;
            private DataColumn columnPower;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate59 vJ_PowerISR_SSTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate59 vJ_PowerISR_SSTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate59 vJ_PowerISR_SSTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate59 vJ_PowerISR_SSTransfRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_PowerISR_SSTransfDataTable()
            {
                base.TableName = "vJ_PowerISR_SSTransf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_PowerISR_SSTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_PowerISR_SSTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_PowerISR_SSTransfDataTable table1 = (DataSetGES.vJ_PowerISR_SSTransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_PowerISR_SSTransfDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class102);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class102 class102_0)
            {
                base.Rows.Add(class102_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class102 method_1(int int_0, string string_0, int int_1, string string_1, int int_2, int int_3)
            {
                DataSetGES.Class102 row = (DataSetGES.Class102) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, int_2, int_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidSub = base.Columns["idSub"];
                this.columnNameSub = base.Columns["NameSub"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnPower = base.Columns["Power"];
                this.columnIsr = base.Columns["Isr"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnNameSub = new DataColumn("NameSub", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSub);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnIsr = new DataColumn("Isr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsr);
                this.columnidSub.AllowDBNull = false;
                this.columnNameSub.MaxLength = 0x233;
                this.columnNameTransf.MaxLength = 0x200;
                this.columnIsr.ReadOnly = true;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class102 method_4()
            {
                return (DataSetGES.Class102) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class102 class102_0)
            {
                base.Rows.Remove(class102_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class102(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSTransfRowChanged != null)
                {
                    this.vJ_PowerISR_SSTransfRowChanged(this, new DataSetGES.EventArgs58((DataSetGES.Class102) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSTransfRowChanging != null)
                {
                    this.vJ_PowerISR_SSTransfRowChanging(this, new DataSetGES.EventArgs58((DataSetGES.Class102) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSTransfRowDeleted != null)
                {
                    this.vJ_PowerISR_SSTransfRowDeleted(this, new DataSetGES.EventArgs58((DataSetGES.Class102) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_SSTransfRowDeleting != null)
                {
                    this.vJ_PowerISR_SSTransfRowDeleting(this, new DataSetGES.EventArgs58((DataSetGES.Class102) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_PowerISR_SSTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrColumn
            {
                get
                {
                    return this.columnIsr;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class102 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class102) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubColumn
            {
                get
                {
                    return this.columnNameSub;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_PowerISR_TransfDataTable : TypedTableBase<DataSetGES.Class101>
        {
            private DataColumn columnidTransf;
            private DataColumn columnIsr;
            private DataColumn columnPower;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate58 vJ_PowerISR_TransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate58 vJ_PowerISR_TransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate58 vJ_PowerISR_TransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate58 vJ_PowerISR_TransfRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_PowerISR_TransfDataTable()
            {
                base.TableName = "vJ_PowerISR_Transf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_PowerISR_TransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_PowerISR_TransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_PowerISR_TransfDataTable table1 = (DataSetGES.vJ_PowerISR_TransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_PowerISR_TransfDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class101);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class101 class101_0)
            {
                base.Rows.Add(class101_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class101 method_1(int int_0, int int_1, int int_2)
            {
                DataSetGES.Class101 row = (DataSetGES.Class101) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidTransf = base.Columns["idTransf"];
                this.columnPower = base.Columns["Power"];
                this.columnIsr = base.Columns["Isr"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnIsr = new DataColumn("Isr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsr);
                this.columnidTransf.AllowDBNull = false;
                this.columnIsr.ReadOnly = true;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class101 method_4()
            {
                return (DataSetGES.Class101) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class101 class101_0)
            {
                base.Rows.Remove(class101_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class101(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_TransfRowChanged != null)
                {
                    this.vJ_PowerISR_TransfRowChanged(this, new DataSetGES.EventArgs57((DataSetGES.Class101) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_TransfRowChanging != null)
                {
                    this.vJ_PowerISR_TransfRowChanging(this, new DataSetGES.EventArgs57((DataSetGES.Class101) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_TransfRowDeleted != null)
                {
                    this.vJ_PowerISR_TransfRowDeleted(this, new DataSetGES.EventArgs57((DataSetGES.Class101) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_PowerISR_TransfRowDeleting != null)
                {
                    this.vJ_PowerISR_TransfRowDeleting(this, new DataSetGES.EventArgs57((DataSetGES.Class101) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_PowerISR_TransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrColumn
            {
                get
                {
                    return this.columnIsr;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class101 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class101) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_RelayProtectionAutomationDataTable : TypedTableBase<DataSetGES.Class57>
        {
            private DataColumn columnact_ozz;
            private DataColumn columnamp_mtz;
            private DataColumn columnamp_ozz;
            private DataColumn columnamp_primary;
            private DataColumn columnamp_secondary;
            private DataColumn columnamp_to;
            private DataColumn columnamp_urov;
            private DataColumn columnArcProtection;
            private DataColumn columnavr;
            private DataColumn columnbus_name;
            private DataColumn columnbusID;
            private DataColumn columncell_Name;
            private DataColumn columncellID;
            private DataColumn columncoefTR;
            private DataColumn columncomment;
            private DataColumn columncp;
            private DataColumn columncp_cell;
            private DataColumn columndateCreate;
            private DataColumn columndateIn;
            private DataColumn columndeleted;
            private DataColumn columndeletedObj;
            private DataColumn columnid;
            private DataColumn columnidTypeTr;
            private DataColumn columnlzsh;
            private DataColumn columnrelayidValue;
            private DataColumn columnrelName;
            private DataColumn columnspeed_mtz;
            private DataColumn columnsub_Name;
            private DataColumn columnsubId;
            private DataColumn columntime_mtz;
            private DataColumn columntime_ozz;
            private DataColumn columntime_to;
            private DataColumn columntime_urov;
            private DataColumn columntype_proc;
            private DataColumn columntype_relay;
            private DataColumn columntypeSub;
            private DataColumn columnTypetr;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate14 vJ_RelayProtectionAutomationRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate14 vJ_RelayProtectionAutomationRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate14 vJ_RelayProtectionAutomationRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate14 vJ_RelayProtectionAutomationRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_RelayProtectionAutomationDataTable() : this(false)
            {
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_RelayProtectionAutomationDataTable(bool bool_0)
            {
                base.TableName = "vJ_RelayProtectionAutomation";
                this.BeginInit();
                this.method_4();
                if (bool_0)
                {
                    this.method_6();
                }
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RelayProtectionAutomationDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_RelayProtectionAutomationDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RelayProtectionAutomationDataTable table1 = (DataSetGES.vJ_RelayProtectionAutomationDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RelayProtectionAutomationDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class57);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class57 class57_0)
            {
                base.Rows.Add(class57_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class57 method_1(int int_0, int int_1, int int_2, string string_0, int int_3, int int_4, string string_1, string string_2, int int_5, string string_3, int int_6, int int_7, int int_8, string string_4, int int_9, double double_0, int int_10, double double_1, int int_11, double double_2, string string_5, double double_3, int int_12, double double_4, bool bool_0, bool bool_1, string string_6, string string_7, string string_8, string string_9, string string_10, DateTime dateTime_0, DateTime dateTime_1, bool bool_2, string string_11, bool bool_3, bool bool_4)
            {
                DataSetGES.Class57 row = (DataSetGES.Class57) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, int_2, string_0, int_3, int_4, string_1, string_2, int_5, string_3, int_6, int_7, int_8, string_4, int_9, double_0,
                    int_10, double_1, int_11, double_2, string_5, double_3, int_12, double_4, bool_0, bool_1, string_6, string_7, string_8, string_9, string_10, dateTime_0,
                    dateTime_1, bool_2, string_11, bool_3, bool_4
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class57 method_2(int int_0, int int_1, int int_2, string string_0, int int_3, int int_4, string string_1, string string_2, int int_5, string string_3, int int_6, int int_7, int int_8, string string_4, int int_9, double double_0, int int_10, double double_1, int int_11, double double_2, string string_5, double double_3, int int_12, double double_4, bool bool_0, bool bool_1, string string_6, string string_7, string string_8, string string_9, string string_10, DateTime dateTime_0, DateTime dateTime_1, bool bool_2, bool bool_3, bool bool_4)
            {
                DataSetGES.Class57 row = (DataSetGES.Class57) base.NewRow();
                object[] objArray1 = new object[0x25];
                objArray1[0] = int_0;
                objArray1[1] = int_1;
                objArray1[2] = int_2;
                objArray1[3] = string_0;
                objArray1[4] = int_3;
                objArray1[5] = int_4;
                objArray1[6] = string_1;
                objArray1[7] = string_2;
                objArray1[8] = int_5;
                objArray1[9] = string_3;
                objArray1[10] = int_6;
                objArray1[11] = int_7;
                objArray1[12] = int_8;
                objArray1[13] = string_4;
                objArray1[14] = int_9;
                objArray1[15] = double_0;
                objArray1[0x10] = int_10;
                objArray1[0x11] = double_1;
                objArray1[0x12] = int_11;
                objArray1[0x13] = double_2;
                objArray1[20] = string_5;
                objArray1[0x15] = double_3;
                objArray1[0x16] = int_12;
                objArray1[0x17] = double_4;
                objArray1[0x18] = bool_0;
                objArray1[0x19] = bool_1;
                objArray1[0x1a] = string_6;
                objArray1[0x1b] = string_7;
                objArray1[0x1c] = string_8;
                objArray1[0x1d] = string_9;
                objArray1[30] = string_10;
                objArray1[0x1f] = dateTime_0;
                objArray1[0x20] = dateTime_1;
                objArray1[0x21] = bool_2;
                objArray1[0x23] = bool_3;
                objArray1[0x24] = bool_4;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnrelayidValue = base.Columns["relayidValue"];
                this.columnsubId = base.Columns["subId"];
                this.columnsub_Name = base.Columns["sub_Name"];
                this.columntypeSub = base.Columns["typeSub"];
                this.columnbusID = base.Columns["busID"];
                this.columnbus_name = base.Columns["bus_name"];
                this.columncell_Name = base.Columns["cell_Name"];
                this.columncellID = base.Columns["cellID"];
                this.columnrelName = base.Columns["relName"];
                this.columnamp_primary = base.Columns["amp_primary"];
                this.columnamp_secondary = base.Columns["amp_secondary"];
                this.columnidTypeTr = base.Columns["idTypeTr"];
                this.columnTypetr = base.Columns["Typetr"];
                this.columnamp_mtz = base.Columns["amp_mtz"];
                this.columntime_mtz = base.Columns["time_mtz"];
                this.columnamp_to = base.Columns["amp_to"];
                this.columntime_to = base.Columns["time_to"];
                this.columnamp_ozz = base.Columns["amp_ozz"];
                this.columntime_ozz = base.Columns["time_ozz"];
                this.columnact_ozz = base.Columns["act_ozz"];
                this.columnspeed_mtz = base.Columns["speed_mtz"];
                this.columnamp_urov = base.Columns["amp_urov"];
                this.columntime_urov = base.Columns["time_urov"];
                this.columnavr = base.Columns["avr"];
                this.columnlzsh = base.Columns["lzsh"];
                this.columntype_relay = base.Columns["type_relay"];
                this.columntype_proc = base.Columns["type_proc"];
                this.columncp = base.Columns["cp"];
                this.columncp_cell = base.Columns["cp_cell"];
                this.columncomment = base.Columns["comment"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columndateIn = base.Columns["dateIn"];
                this.columndeleted = base.Columns["deleted"];
                this.columncoefTR = base.Columns["coefTR"];
                this.columndeletedObj = base.Columns["deletedObj"];
                this.columnArcProtection = base.Columns["ArcProtection"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnrelayidValue = new DataColumn("relayidValue", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnrelayidValue);
                this.columnsubId = new DataColumn("subId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnsubId);
                this.columnsub_Name = new DataColumn("sub_Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnsub_Name);
                this.columntypeSub = new DataColumn("typeSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntypeSub);
                this.columnbusID = new DataColumn("busID", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnbusID);
                this.columnbus_name = new DataColumn("bus_name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnbus_name);
                this.columncell_Name = new DataColumn("cell_Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncell_Name);
                this.columncellID = new DataColumn("cellID", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columncellID);
                this.columnrelName = new DataColumn("relName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnrelName);
                this.columnamp_primary = new DataColumn("amp_primary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_primary);
                this.columnamp_secondary = new DataColumn("amp_secondary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_secondary);
                this.columnidTypeTr = new DataColumn("idTypeTr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTypeTr);
                this.columnTypetr = new DataColumn("Typetr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTypetr);
                this.columnamp_mtz = new DataColumn("amp_mtz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_mtz);
                this.columntime_mtz = new DataColumn("time_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_mtz);
                this.columnamp_to = new DataColumn("amp_to", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_to);
                this.columntime_to = new DataColumn("time_to", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_to);
                this.columnamp_ozz = new DataColumn("amp_ozz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_ozz);
                this.columntime_ozz = new DataColumn("time_ozz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_ozz);
                this.columnact_ozz = new DataColumn("act_ozz", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnact_ozz);
                this.columnspeed_mtz = new DataColumn("speed_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnspeed_mtz);
                this.columnamp_urov = new DataColumn("amp_urov", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_urov);
                this.columntime_urov = new DataColumn("time_urov", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_urov);
                this.columnavr = new DataColumn("avr", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnavr);
                this.columnlzsh = new DataColumn("lzsh", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnlzsh);
                this.columntype_relay = new DataColumn("type_relay", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_relay);
                this.columntype_proc = new DataColumn("type_proc", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_proc);
                this.columncp = new DataColumn("cp", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp);
                this.columncp_cell = new DataColumn("cp_cell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp_cell);
                this.columncomment = new DataColumn("comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncomment);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columndateIn = new DataColumn("dateIn", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateIn);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columncoefTR = new DataColumn("coefTR", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncoefTR);
                this.columndeletedObj = new DataColumn("deletedObj", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeletedObj);
                this.columnArcProtection = new DataColumn("ArcProtection", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnArcProtection);
                this.columnsub_Name.ReadOnly = true;
                this.columnsub_Name.MaxLength = 0x3e8;
                this.columnbus_name.MaxLength = 0x200;
                this.columncell_Name.MaxLength = 0x200;
                this.columnrelName.MaxLength = 100;
                this.columnTypetr.MaxLength = 100;
                this.columnact_ozz.MaxLength = 50;
                this.columntype_relay.MaxLength = 50;
                this.columntype_proc.MaxLength = 50;
                this.columncp.MaxLength = 100;
                this.columncp_cell.MaxLength = 0x19;
                this.columncomment.MaxLength = 0x100;
                this.columncoefTR.ReadOnly = true;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class57 method_5()
            {
                return (DataSetGES.Class57) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_6()
            {
                this.coefTRColumn.Expression = "amp_primary + '/' + amp_secondary";
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_7(DataSetGES.Class57 class57_0)
            {
                base.Rows.Remove(class57_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class57(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_RelayProtectionAutomationRowChanged != null)
                {
                    this.vJ_RelayProtectionAutomationRowChanged(this, new DataSetGES.EventArgs13((DataSetGES.Class57) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_RelayProtectionAutomationRowChanging != null)
                {
                    this.vJ_RelayProtectionAutomationRowChanging(this, new DataSetGES.EventArgs13((DataSetGES.Class57) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_RelayProtectionAutomationRowDeleted != null)
                {
                    this.vJ_RelayProtectionAutomationRowDeleted(this, new DataSetGES.EventArgs13((DataSetGES.Class57) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_RelayProtectionAutomationRowDeleting != null)
                {
                    this.vJ_RelayProtectionAutomationRowDeleting(this, new DataSetGES.EventArgs13((DataSetGES.Class57) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_RelayProtectionAutomationDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn act_ozzColumn
            {
                get
                {
                    return this.columnact_ozz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_mtzColumn
            {
                get
                {
                    return this.columnamp_mtz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_ozzColumn
            {
                get
                {
                    return this.columnamp_ozz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_primaryColumn
            {
                get
                {
                    return this.columnamp_primary;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_secondaryColumn
            {
                get
                {
                    return this.columnamp_secondary;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_toColumn
            {
                get
                {
                    return this.columnamp_to;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_urovColumn
            {
                get
                {
                    return this.columnamp_urov;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ArcProtectionColumn
            {
                get
                {
                    return this.columnArcProtection;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn avrColumn
            {
                get
                {
                    return this.columnavr;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn bus_nameColumn
            {
                get
                {
                    return this.columnbus_name;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn busIDColumn
            {
                get
                {
                    return this.columnbusID;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn cell_NameColumn
            {
                get
                {
                    return this.columncell_Name;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn cellIDColumn
            {
                get
                {
                    return this.columncellID;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn coefTRColumn
            {
                get
                {
                    return this.columncoefTR;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn commentColumn
            {
                get
                {
                    return this.columncomment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn cp_cellColumn
            {
                get
                {
                    return this.columncp_cell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn cpColumn
            {
                get
                {
                    return this.columncp;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateInColumn
            {
                get
                {
                    return this.columndateIn;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn deletedObjColumn
            {
                get
                {
                    return this.columndeletedObj;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTypeTrColumn
            {
                get
                {
                    return this.columnidTypeTr;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class57 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class57) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn lzshColumn
            {
                get
                {
                    return this.columnlzsh;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn relayidValueColumn
            {
                get
                {
                    return this.columnrelayidValue;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn relNameColumn
            {
                get
                {
                    return this.columnrelName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn speed_mtzColumn
            {
                get
                {
                    return this.columnspeed_mtz;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn sub_NameColumn
            {
                get
                {
                    return this.columnsub_Name;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn subIdColumn
            {
                get
                {
                    return this.columnsubId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_mtzColumn
            {
                get
                {
                    return this.columntime_mtz;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn time_ozzColumn
            {
                get
                {
                    return this.columntime_ozz;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_toColumn
            {
                get
                {
                    return this.columntime_to;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_urovColumn
            {
                get
                {
                    return this.columntime_urov;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn type_procColumn
            {
                get
                {
                    return this.columntype_proc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn type_relayColumn
            {
                get
                {
                    return this.columntype_relay;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn typeSubColumn
            {
                get
                {
                    return this.columntypeSub;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypetrColumn
            {
                get
                {
                    return this.columnTypetr;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_RequestDataTable : TypedTableBase<DataSetGES.Class47>
        {
            private DataColumn columnComment;
            private DataColumn columnDatePerfom;
            private DataColumn columnDateSendMail;
            private DataColumn columnDateTask;
            private DataColumn columnFIOSendMail;
            private DataColumn columnid;
            private DataColumn columnidUserPerfom;
            private DataColumn columnidUserTask;
            private DataColumn columnidUserWhom;
            private DataColumn columnModul;
            private DataColumn columnnameModul;
            private DataColumn columnnameStatusTask;
            private DataColumn columnNameTypeTask;
            private DataColumn columnnameUserPerfom;
            private DataColumn columnnameUserTask;
            private DataColumn columnNameUserWhom;
            private DataColumn columnStatusTask;
            private DataColumn columnTextTask;
            private DataColumn columnTextTaskBin;
            private DataColumn columnTypeTask;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate4 vJ_RequestRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate4 vJ_RequestRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate4 vJ_RequestRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate4 vJ_RequestRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RequestDataTable()
            {
                base.TableName = "vJ_Request";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_RequestDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_RequestDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RequestDataTable table1 = (DataSetGES.vJ_RequestDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RequestDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class47);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class47 class47_0)
            {
                base.Rows.Add(class47_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class47 method_1(int int_0, int int_1, string string_0, DateTime dateTime_0, int int_2, string string_1, byte[] byte_0, int int_3, string string_2, int int_4, string string_3, int int_5, string string_4, DateTime dateTime_1, string string_5, int int_6, string string_6, string string_7, DateTime dateTime_2, string string_8)
            {
                DataSetGES.Class47 row = (DataSetGES.Class47) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, string_0, dateTime_0, int_2, string_1, byte_0, int_3, string_2, int_4, string_3, int_5, string_4, dateTime_1, string_5, int_6,
                    string_6, string_7, dateTime_2, string_8
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class47 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class47) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidUserTask = base.Columns["idUserTask"];
                this.columnnameUserTask = base.Columns["nameUserTask"];
                this.columnDateTask = base.Columns["DateTask"];
                this.columnModul = base.Columns["Modul"];
                this.columnTextTask = base.Columns["TextTask"];
                this.columnTextTaskBin = base.Columns["TextTaskBin"];
                this.columnidUserWhom = base.Columns["idUserWhom"];
                this.columnNameUserWhom = base.Columns["NameUserWhom"];
                this.columnTypeTask = base.Columns["TypeTask"];
                this.columnNameTypeTask = base.Columns["NameTypeTask"];
                this.columnidUserPerfom = base.Columns["idUserPerfom"];
                this.columnnameUserPerfom = base.Columns["nameUserPerfom"];
                this.columnDatePerfom = base.Columns["DatePerfom"];
                this.columnComment = base.Columns["Comment"];
                this.columnStatusTask = base.Columns["StatusTask"];
                this.columnnameStatusTask = base.Columns["nameStatusTask"];
                this.columnnameModul = base.Columns["nameModul"];
                this.columnDateSendMail = base.Columns["DateSendMail"];
                this.columnFIOSendMail = base.Columns["FIOSendMail"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidUserTask = new DataColumn("idUserTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserTask);
                this.columnnameUserTask = new DataColumn("nameUserTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameUserTask);
                this.columnDateTask = new DataColumn("DateTask", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTask);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnTextTask = new DataColumn("TextTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextTask);
                this.columnTextTaskBin = new DataColumn("TextTaskBin", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnTextTaskBin);
                this.columnidUserWhom = new DataColumn("idUserWhom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserWhom);
                this.columnNameUserWhom = new DataColumn("NameUserWhom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameUserWhom);
                this.columnTypeTask = new DataColumn("TypeTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeTask);
                this.columnNameTypeTask = new DataColumn("NameTypeTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTypeTask);
                this.columnidUserPerfom = new DataColumn("idUserPerfom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserPerfom);
                this.columnnameUserPerfom = new DataColumn("nameUserPerfom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameUserPerfom);
                this.columnDatePerfom = new DataColumn("DatePerfom", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDatePerfom);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnStatusTask = new DataColumn("StatusTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnStatusTask);
                this.columnnameStatusTask = new DataColumn("nameStatusTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameStatusTask);
                this.columnnameModul = new DataColumn("nameModul", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameModul);
                this.columnDateSendMail = new DataColumn("DateSendMail", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateSendMail);
                this.columnFIOSendMail = new DataColumn("FIOSendMail", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIOSendMail);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidUserTask.AllowDBNull = false;
                this.columnnameUserTask.MaxLength = 50;
                this.columnDateTask.AllowDBNull = false;
                this.columnNameUserWhom.MaxLength = 50;
                this.columnNameTypeTask.MaxLength = 100;
                this.columnnameUserPerfom.MaxLength = 50;
                this.columnComment.MaxLength = 0x7d0;
                this.columnnameStatusTask.MaxLength = 100;
                this.columnnameModul.AllowDBNull = false;
                this.columnnameModul.MaxLength = 100;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class47 method_5()
            {
                return (DataSetGES.Class47) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class47 class47_0)
            {
                base.Rows.Remove(class47_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class47(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_RequestRowChanged != null)
                {
                    this.vJ_RequestRowChanged(this, new DataSetGES.EventArgs3((DataSetGES.Class47) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_RequestRowChanging != null)
                {
                    this.vJ_RequestRowChanging(this, new DataSetGES.EventArgs3((DataSetGES.Class47) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_RequestRowDeleted != null)
                {
                    this.vJ_RequestRowDeleted(this, new DataSetGES.EventArgs3((DataSetGES.Class47) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_RequestRowDeleting != null)
                {
                    this.vJ_RequestRowDeleting(this, new DataSetGES.EventArgs3((DataSetGES.Class47) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_RequestDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DatePerfomColumn
            {
                get
                {
                    return this.columnDatePerfom;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateSendMailColumn
            {
                get
                {
                    return this.columnDateSendMail;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateTaskColumn
            {
                get
                {
                    return this.columnDateTask;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FIOSendMailColumn
            {
                get
                {
                    return this.columnFIOSendMail;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserPerfomColumn
            {
                get
                {
                    return this.columnidUserPerfom;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserTaskColumn
            {
                get
                {
                    return this.columnidUserTask;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserWhomColumn
            {
                get
                {
                    return this.columnidUserWhom;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class47 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class47) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameModulColumn
            {
                get
                {
                    return this.columnnameModul;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameStatusTaskColumn
            {
                get
                {
                    return this.columnnameStatusTask;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTypeTaskColumn
            {
                get
                {
                    return this.columnNameTypeTask;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameUserPerfomColumn
            {
                get
                {
                    return this.columnnameUserPerfom;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameUserTaskColumn
            {
                get
                {
                    return this.columnnameUserTask;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameUserWhomColumn
            {
                get
                {
                    return this.columnNameUserWhom;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn StatusTaskColumn
            {
                get
                {
                    return this.columnStatusTask;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TextTaskBinColumn
            {
                get
                {
                    return this.columnTextTaskBin;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TextTaskColumn
            {
                get
                {
                    return this.columnTextTask;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeTaskColumn
            {
                get
                {
                    return this.columnTypeTask;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_RequestForRepairDailyDataTable : TypedTableBase<DataSetGES.Class52>
        {
            private DataColumn columnAddress;
            private DataColumn columnAgreed;
            private DataColumn columnAgreeWith;
            private DataColumn columnComment;
            private DataColumn columnDateAgreed;
            private DataColumn columndateBeg;
            private DataColumn columndateCreate;
            private DataColumn columndateEnd;
            private DataColumn columndateTripBeg;
            private DataColumn columndateTripEnd;
            private DataColumn columndeleted;
            private DataColumn columndivision;
            private DataColumn columnFIO;
            private DataColumn columnid;
            private DataColumn columniddivision;
            private DataColumn columnidSR;
            private DataColumn columnidUserCreate;
            private DataColumn columnidWorker;
            private DataColumn columnIsPlanned;
            private DataColumn columnnum;
            private DataColumn columnPurpose;
            private DataColumn columnreguestFiled;
            private DataColumn columnschmObj;
            private DataColumn columnSR;
            private DataColumn columntimeBeg;
            private DataColumn columntimeEnd;
            private DataColumn columnusername;
            private DataColumn columnWorkerAgreed;
            private DataColumn columnworkerCreate;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate9 vJ_RequestForRepairDailyRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate9 vJ_RequestForRepairDailyRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate9 vJ_RequestForRepairDailyRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate9 vJ_RequestForRepairDailyRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RequestForRepairDailyDataTable()
            {
                base.TableName = "vJ_RequestForRepairDaily";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RequestForRepairDailyDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_RequestForRepairDailyDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RequestForRepairDailyDataTable table1 = (DataSetGES.vJ_RequestForRepairDailyDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RequestForRepairDailyDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class52);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class52 class52_0)
            {
                base.Rows.Add(class52_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class52 method_1(int int_0, int int_1, DateTime dateTime_0, int int_2, string string_0, string string_1, int int_3, string string_2, string string_3, string string_4, bool bool_0, DateTime dateTime_1, DateTime dateTime_2, string string_5, string string_6, string string_7, bool bool_1, DateTime dateTime_3, int int_4, string string_8, int int_5, string string_9, int int_6, string string_10, bool bool_2, string string_11, string string_12, string string_13, string string_14)
            {
                DataSetGES.Class52 row = (DataSetGES.Class52) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, dateTime_0, int_2, string_0, string_1, int_3, string_2, string_3, string_4, bool_0, dateTime_1, dateTime_2, string_5, string_6, string_7,
                    bool_1, dateTime_3, int_4, string_8, int_5, string_9, int_6, string_10, bool_2, string_11, string_12, string_13, string_14
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnid = base.Columns["id"];
                this.columnnum = base.Columns["num"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnworkerCreate = base.Columns["workerCreate"];
                this.columnreguestFiled = base.Columns["reguestFiled"];
                this.columnidSR = base.Columns["idSR"];
                this.columnSR = base.Columns["SR"];
                this.columnschmObj = base.Columns["schmObj"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnIsPlanned = base.Columns["IsPlanned"];
                this.columndateTripBeg = base.Columns["dateTripBeg"];
                this.columndateTripEnd = base.Columns["dateTripEnd"];
                this.columnAgreeWith = base.Columns["AgreeWith"];
                this.columnComment = base.Columns["Comment"];
                this.columnAddress = base.Columns["Address"];
                this.columnAgreed = base.Columns["Agreed"];
                this.columnDateAgreed = base.Columns["DateAgreed"];
                this.columnWorkerAgreed = base.Columns["WorkerAgreed"];
                this.columnFIO = base.Columns["FIO"];
                this.columniddivision = base.Columns["iddivision"];
                this.columndivision = base.Columns["division"];
                this.columnidUserCreate = base.Columns["idUserCreate"];
                this.columnusername = base.Columns["username"];
                this.columndeleted = base.Columns["deleted"];
                this.columndateBeg = base.Columns["dateBeg"];
                this.columntimeBeg = base.Columns["timeBeg"];
                this.columndateEnd = base.Columns["dateEnd"];
                this.columntimeEnd = base.Columns["timeEnd"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnum = new DataColumn("num", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnworkerCreate = new DataColumn("workerCreate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnworkerCreate);
                this.columnreguestFiled = new DataColumn("reguestFiled", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnreguestFiled);
                this.columnidSR = new DataColumn("idSR", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSR);
                this.columnSR = new DataColumn("SR", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSR);
                this.columnschmObj = new DataColumn("schmObj", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnschmObj);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnIsPlanned = new DataColumn("IsPlanned", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsPlanned);
                this.columndateTripBeg = new DataColumn("dateTripBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateTripBeg);
                this.columndateTripEnd = new DataColumn("dateTripEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateTripEnd);
                this.columnAgreeWith = new DataColumn("AgreeWith", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAgreeWith);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAgreed = new DataColumn("Agreed", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnAgreed);
                this.columnDateAgreed = new DataColumn("DateAgreed", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateAgreed);
                this.columnWorkerAgreed = new DataColumn("WorkerAgreed", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWorkerAgreed);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columniddivision = new DataColumn("iddivision", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columniddivision);
                this.columndivision = new DataColumn("division", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndivision);
                this.columnidUserCreate = new DataColumn("idUserCreate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserCreate);
                this.columnusername = new DataColumn("username", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columndateBeg = new DataColumn("dateBeg", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndateBeg);
                this.columntimeBeg = new DataColumn("timeBeg", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntimeBeg);
                this.columndateEnd = new DataColumn("dateEnd", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndateEnd);
                this.columntimeEnd = new DataColumn("timeEnd", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntimeEnd);
                this.columnid.AllowDBNull = false;
                this.columnnum.AllowDBNull = false;
                this.columndateCreate.AllowDBNull = false;
                this.columnworkerCreate.ReadOnly = true;
                this.columnworkerCreate.MaxLength = 0x23;
                this.columnreguestFiled.AllowDBNull = false;
                this.columnreguestFiled.MaxLength = 0x100;
                this.columnidSR.AllowDBNull = false;
                this.columnSR.MaxLength = 100;
                this.columnschmObj.AllowDBNull = false;
                this.columnschmObj.MaxLength = 0x100;
                this.columnPurpose.AllowDBNull = false;
                this.columnPurpose.MaxLength = 0x100;
                this.columnIsPlanned.AllowDBNull = false;
                this.columnAgreeWith.MaxLength = 0x100;
                this.columnComment.MaxLength = 0x100;
                this.columnAgreed.AllowDBNull = false;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 0x23;
                this.columniddivision.AllowDBNull = false;
                this.columndivision.MaxLength = 100;
                this.columnusername.MaxLength = 50;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class52 method_4()
            {
                return (DataSetGES.Class52) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class52 class52_0)
            {
                base.Rows.Remove(class52_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class52(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairDailyRowChanged != null)
                {
                    this.vJ_RequestForRepairDailyRowChanged(this, new DataSetGES.EventArgs8((DataSetGES.Class52) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairDailyRowChanging != null)
                {
                    this.vJ_RequestForRepairDailyRowChanging(this, new DataSetGES.EventArgs8((DataSetGES.Class52) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairDailyRowDeleted != null)
                {
                    this.vJ_RequestForRepairDailyRowDeleted(this, new DataSetGES.EventArgs8((DataSetGES.Class52) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairDailyRowDeleting != null)
                {
                    this.vJ_RequestForRepairDailyRowDeleting(this, new DataSetGES.EventArgs8((DataSetGES.Class52) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_RequestForRepairDailyDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreedColumn
            {
                get
                {
                    return this.columnAgreed;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreeWithColumn
            {
                get
                {
                    return this.columnAgreeWith;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateAgreedColumn
            {
                get
                {
                    return this.columnDateAgreed;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateBegColumn
            {
                get
                {
                    return this.columndateBeg;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateEndColumn
            {
                get
                {
                    return this.columndateEnd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateTripBegColumn
            {
                get
                {
                    return this.columndateTripBeg;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateTripEndColumn
            {
                get
                {
                    return this.columndateTripEnd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn divisionColumn
            {
                get
                {
                    return this.columndivision;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn iddivisionColumn
            {
                get
                {
                    return this.columniddivision;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSRColumn
            {
                get
                {
                    return this.columnidSR;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUserCreateColumn
            {
                get
                {
                    return this.columnidUserCreate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsPlannedColumn
            {
                get
                {
                    return this.columnIsPlanned;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class52 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class52) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn numColumn
            {
                get
                {
                    return this.columnnum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PurposeColumn
            {
                get
                {
                    return this.columnPurpose;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn reguestFiledColumn
            {
                get
                {
                    return this.columnreguestFiled;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn schmObjColumn
            {
                get
                {
                    return this.columnschmObj;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SRColumn
            {
                get
                {
                    return this.columnSR;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn timeBegColumn
            {
                get
                {
                    return this.columntimeBeg;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn timeEndColumn
            {
                get
                {
                    return this.columntimeEnd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn usernameColumn
            {
                get
                {
                    return this.columnusername;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WorkerAgreedColumn
            {
                get
                {
                    return this.columnWorkerAgreed;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn workerCreateColumn
            {
                get
                {
                    return this.columnworkerCreate;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_RequestForRepairDataTable : TypedTableBase<DataSetGES.Class48>
        {
            private DataColumn columnAddress;
            private DataColumn columnAgreed;
            private DataColumn columnAgreeWith;
            private DataColumn columncolorStatus;
            private DataColumn columnComment;
            private DataColumn columnDateAgreed;
            private DataColumn columndateCreate;
            private DataColumn columnDateFactEnd;
            private DataColumn columnDateTripBeg;
            private DataColumn columnDateTripEnd;
            private DataColumn columndeleted;
            private DataColumn columndivision;
            private DataColumn columnFIO;
            private DataColumn columnid;
            private DataColumn columniddivision;
            private DataColumn columnidSR;
            private DataColumn columnidUserCreate;
            private DataColumn columnidWorker;
            private DataColumn columnIsPlanned;
            private DataColumn columnisSend;
            private DataColumn columnnum;
            private DataColumn columnPurpose;
            private DataColumn columnreguestFiled;
            private DataColumn columnschmObj;
            private DataColumn columnSendSite;
            private DataColumn columnSR;
            private DataColumn columnSRSocr;
            private DataColumn columnUserName;
            private DataColumn columnWorkerAgreed;
            private DataColumn columnworkerCreate;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate5 vJ_RequestForRepairRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate5 vJ_RequestForRepairRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate5 vJ_RequestForRepairRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate5 vJ_RequestForRepairRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RequestForRepairDataTable()
            {
                base.TableName = "vJ_RequestForRepair";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_RequestForRepairDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_RequestForRepairDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RequestForRepairDataTable table1 = (DataSetGES.vJ_RequestForRepairDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RequestForRepairDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class48);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class48 class48_0)
            {
                base.Rows.Add(class48_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class48 method_1(int int_0, int int_1, DateTime dateTime_0, int int_2, string string_0, string string_1, int int_3, string string_2, string string_3, string string_4, string string_5, bool bool_0, DateTime dateTime_1, DateTime dateTime_2, string string_6, string string_7, string string_8, bool bool_1, DateTime dateTime_3, int int_4, string string_9, int int_5, string string_10, int int_6, string string_11, bool bool_2, bool bool_3, string string_12, DateTime dateTime_4, bool bool_4)
            {
                DataSetGES.Class48 row = (DataSetGES.Class48) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, dateTime_0, int_2, string_0, string_1, int_3, string_2, string_3, string_4, string_5, bool_0, dateTime_1, dateTime_2, string_6, string_7,
                    string_8, bool_1, dateTime_3, int_4, string_9, int_5, string_10, int_6, string_11, bool_2, bool_3, string_12, dateTime_4, bool_4
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class48 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class48) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnnum = base.Columns["num"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnworkerCreate = base.Columns["workerCreate"];
                this.columnreguestFiled = base.Columns["reguestFiled"];
                this.columnidSR = base.Columns["idSR"];
                this.columnSR = base.Columns["SR"];
                this.columnSRSocr = base.Columns["SRSocr"];
                this.columnschmObj = base.Columns["schmObj"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnIsPlanned = base.Columns["IsPlanned"];
                this.columnDateTripBeg = base.Columns["DateTripBeg"];
                this.columnDateTripEnd = base.Columns["DateTripEnd"];
                this.columnAgreeWith = base.Columns["AgreeWith"];
                this.columnComment = base.Columns["Comment"];
                this.columnAddress = base.Columns["Address"];
                this.columnAgreed = base.Columns["Agreed"];
                this.columnDateAgreed = base.Columns["DateAgreed"];
                this.columnWorkerAgreed = base.Columns["WorkerAgreed"];
                this.columnFIO = base.Columns["FIO"];
                this.columniddivision = base.Columns["iddivision"];
                this.columndivision = base.Columns["division"];
                this.columnidUserCreate = base.Columns["idUserCreate"];
                this.columnUserName = base.Columns["UserName"];
                this.columndeleted = base.Columns["deleted"];
                this.columnisSend = base.Columns["isSend"];
                this.columncolorStatus = base.Columns["colorStatus"];
                this.columnDateFactEnd = base.Columns["DateFactEnd"];
                this.columnSendSite = base.Columns["SendSite"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnum = new DataColumn("num", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnworkerCreate = new DataColumn("workerCreate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnworkerCreate);
                this.columnreguestFiled = new DataColumn("reguestFiled", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnreguestFiled);
                this.columnidSR = new DataColumn("idSR", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSR);
                this.columnSR = new DataColumn("SR", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSR);
                this.columnSRSocr = new DataColumn("SRSocr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSRSocr);
                this.columnschmObj = new DataColumn("schmObj", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnschmObj);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnIsPlanned = new DataColumn("IsPlanned", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsPlanned);
                this.columnDateTripBeg = new DataColumn("DateTripBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTripBeg);
                this.columnDateTripEnd = new DataColumn("DateTripEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTripEnd);
                this.columnAgreeWith = new DataColumn("AgreeWith", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAgreeWith);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAgreed = new DataColumn("Agreed", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnAgreed);
                this.columnDateAgreed = new DataColumn("DateAgreed", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateAgreed);
                this.columnWorkerAgreed = new DataColumn("WorkerAgreed", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWorkerAgreed);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columniddivision = new DataColumn("iddivision", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columniddivision);
                this.columndivision = new DataColumn("division", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndivision);
                this.columnidUserCreate = new DataColumn("idUserCreate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserCreate);
                this.columnUserName = new DataColumn("UserName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columnisSend = new DataColumn("isSend", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisSend);
                this.columncolorStatus = new DataColumn("colorStatus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncolorStatus);
                this.columnDateFactEnd = new DataColumn("DateFactEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateFactEnd);
                this.columnSendSite = new DataColumn("SendSite", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnSendSite);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnnum.AllowDBNull = false;
                this.columndateCreate.AllowDBNull = false;
                this.columnworkerCreate.ReadOnly = true;
                this.columnworkerCreate.MaxLength = 0x23;
                this.columnreguestFiled.AllowDBNull = false;
                this.columnreguestFiled.MaxLength = 0x100;
                this.columnidSR.AllowDBNull = false;
                this.columnSR.MaxLength = 100;
                this.columnschmObj.AllowDBNull = false;
                this.columnschmObj.MaxLength = 0x100;
                this.columnPurpose.AllowDBNull = false;
                this.columnPurpose.MaxLength = 0x100;
                this.columnIsPlanned.AllowDBNull = false;
                this.columnAgreeWith.MaxLength = 0x100;
                this.columnAgreed.AllowDBNull = false;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 0x23;
                this.columniddivision.AllowDBNull = false;
                this.columndivision.MaxLength = 100;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class48 method_5()
            {
                return (DataSetGES.Class48) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class48 class48_0)
            {
                base.Rows.Remove(class48_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class48(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairRowChanged != null)
                {
                    this.vJ_RequestForRepairRowChanged(this, new DataSetGES.EventArgs4((DataSetGES.Class48) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairRowChanging != null)
                {
                    this.vJ_RequestForRepairRowChanging(this, new DataSetGES.EventArgs4((DataSetGES.Class48) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairRowDeleted != null)
                {
                    this.vJ_RequestForRepairRowDeleted(this, new DataSetGES.EventArgs4((DataSetGES.Class48) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_RequestForRepairRowDeleting != null)
                {
                    this.vJ_RequestForRepairRowDeleting(this, new DataSetGES.EventArgs4((DataSetGES.Class48) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_RequestForRepairDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AgreedColumn
            {
                get
                {
                    return this.columnAgreed;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AgreeWithColumn
            {
                get
                {
                    return this.columnAgreeWith;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn colorStatusColumn
            {
                get
                {
                    return this.columncolorStatus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateAgreedColumn
            {
                get
                {
                    return this.columnDateAgreed;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateFactEndColumn
            {
                get
                {
                    return this.columnDateFactEnd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateTripBegColumn
            {
                get
                {
                    return this.columnDateTripBeg;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateTripEndColumn
            {
                get
                {
                    return this.columnDateTripEnd;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn divisionColumn
            {
                get
                {
                    return this.columndivision;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn iddivisionColumn
            {
                get
                {
                    return this.columniddivision;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSRColumn
            {
                get
                {
                    return this.columnidSR;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUserCreateColumn
            {
                get
                {
                    return this.columnidUserCreate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsPlannedColumn
            {
                get
                {
                    return this.columnIsPlanned;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn isSendColumn
            {
                get
                {
                    return this.columnisSend;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class48 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class48) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn numColumn
            {
                get
                {
                    return this.columnnum;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PurposeColumn
            {
                get
                {
                    return this.columnPurpose;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn reguestFiledColumn
            {
                get
                {
                    return this.columnreguestFiled;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn schmObjColumn
            {
                get
                {
                    return this.columnschmObj;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SendSiteColumn
            {
                get
                {
                    return this.columnSendSite;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SRColumn
            {
                get
                {
                    return this.columnSR;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SRSocrColumn
            {
                get
                {
                    return this.columnSRSocr;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WorkerAgreedColumn
            {
                get
                {
                    return this.columnWorkerAgreed;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn workerCreateColumn
            {
                get
                {
                    return this.columnworkerCreate;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_TransfByCellDataTable : TypedTableBase<DataSetGES.Class107>
        {
            private DataColumn columnid;
            private DataColumn columnidCell;
            private DataColumn columnidParentAddl;
            private DataColumn columnName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate64 vJ_TransfByCellRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate64 vJ_TransfByCellRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate64 vJ_TransfByCellRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate64 vJ_TransfByCellRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_TransfByCellDataTable()
            {
                base.TableName = "vJ_TransfByCell";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_TransfByCellDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_TransfByCellDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_TransfByCellDataTable table1 = (DataSetGES.vJ_TransfByCellDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_TransfByCellDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class107);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class107 class107_0)
            {
                base.Rows.Add(class107_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class107 method_1(int int_0, int int_1, string string_0, int int_2)
            {
                DataSetGES.Class107 row = (DataSetGES.Class107) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, string_0, int_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class107 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class107) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnidCell = base.Columns["idCell"];
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnName.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class107 method_5()
            {
                return (DataSetGES.Class107) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class107 class107_0)
            {
                base.Rows.Remove(class107_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class107(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_TransfByCellRowChanged != null)
                {
                    this.vJ_TransfByCellRowChanged(this, new DataSetGES.EventArgs63((DataSetGES.Class107) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_TransfByCellRowChanging != null)
                {
                    this.vJ_TransfByCellRowChanging(this, new DataSetGES.EventArgs63((DataSetGES.Class107) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_TransfByCellRowDeleted != null)
                {
                    this.vJ_TransfByCellRowDeleted(this, new DataSetGES.EventArgs63((DataSetGES.Class107) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_TransfByCellRowDeleting != null)
                {
                    this.vJ_TransfByCellRowDeleting(this, new DataSetGES.EventArgs63((DataSetGES.Class107) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_TransfByCellDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class107 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class107) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_TransfBySubstationDataTable : TypedTableBase<DataSetGES.Class100>
        {
            private DataColumn columnidBus;
            private DataColumn columnidCell;
            private DataColumn columnidSS;
            private DataColumn columnidTransf;
            private DataColumn columnNameBus;
            private DataColumn columnNameCell;
            private DataColumn columnNameSS;
            private DataColumn columnNameTransf;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate57 vJ_TransfBySubstationRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate57 vJ_TransfBySubstationRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate57 vJ_TransfBySubstationRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate57 vJ_TransfBySubstationRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_TransfBySubstationDataTable()
            {
                base.TableName = "vJ_TransfBySubstation";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_TransfBySubstationDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_TransfBySubstationDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_TransfBySubstationDataTable table1 = (DataSetGES.vJ_TransfBySubstationDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_TransfBySubstationDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class100);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class100 class100_0)
            {
                base.Rows.Add(class100_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class100 method_1(string string_0, string string_1, string string_2, string string_3, int int_0, int int_1, int int_2, int int_3)
            {
                DataSetGES.Class100 row = (DataSetGES.Class100) base.NewRow();
                object[] objArray = new object[] { string_0, string_1, string_2, string_3, int_0, int_1, int_2, int_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnNameSS = base.Columns["NameSS"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnidSS = base.Columns["idSS"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidCell = base.Columns["idCell"];
                this.columnidTransf = base.Columns["idTransf"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnNameSS = new DataColumn("NameSS", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSS);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnidSS = new DataColumn("idSS", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSS);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameSS.MaxLength = 0x233;
                this.columnNameBus.MaxLength = 0x200;
                this.columnNameCell.MaxLength = 0x200;
                this.columnNameTransf.MaxLength = 0x200;
                this.columnidSS.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnidCell.AllowDBNull = false;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class100 method_4()
            {
                return (DataSetGES.Class100) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class100 class100_0)
            {
                base.Rows.Remove(class100_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class100(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_TransfBySubstationRowChanged != null)
                {
                    this.vJ_TransfBySubstationRowChanged(this, new DataSetGES.EventArgs56((DataSetGES.Class100) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_TransfBySubstationRowChanging != null)
                {
                    this.vJ_TransfBySubstationRowChanging(this, new DataSetGES.EventArgs56((DataSetGES.Class100) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_TransfBySubstationRowDeleted != null)
                {
                    this.vJ_TransfBySubstationRowDeleted(this, new DataSetGES.EventArgs56((DataSetGES.Class100) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_TransfBySubstationRowDeleting != null)
                {
                    this.vJ_TransfBySubstationRowDeleting(this, new DataSetGES.EventArgs56((DataSetGES.Class100) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_TransfBySubstationDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSSColumn
            {
                get
                {
                    return this.columnidSS;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class100 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class100) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSSColumn
            {
                get
                {
                    return this.columnNameSS;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_TransfsDataTable : TypedTableBase<DataSetGES.Class79>
        {
            private DataColumn columnidSubstation;
            private DataColumn columnidTransf;
            private DataColumn columnName;
            private DataColumn columnTypeDoc;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate36 vJ_TransfsRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate36 vJ_TransfsRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate36 vJ_TransfsRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate36 vJ_TransfsRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_TransfsDataTable()
            {
                base.TableName = "vJ_Transfs";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_TransfsDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_TransfsDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_TransfsDataTable table1 = (DataSetGES.vJ_TransfsDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_TransfsDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class79);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class79 class79_0)
            {
                base.Rows.Add(class79_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class79 method_1(int int_0, int int_1, int int_2, string string_0)
            {
                DataSetGES.Class79 row = (DataSetGES.Class79) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, string_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnName = base.Columns["Name"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidSubstation.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class79 method_4()
            {
                return (DataSetGES.Class79) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class79 class79_0)
            {
                base.Rows.Remove(class79_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class79(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_TransfsRowChanged != null)
                {
                    this.vJ_TransfsRowChanged(this, new DataSetGES.EventArgs35((DataSetGES.Class79) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_TransfsRowChanging != null)
                {
                    this.vJ_TransfsRowChanging(this, new DataSetGES.EventArgs35((DataSetGES.Class79) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_TransfsRowDeleted != null)
                {
                    this.vJ_TransfsRowDeleted(this, new DataSetGES.EventArgs35((DataSetGES.Class79) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_TransfsRowDeleting != null)
                {
                    this.vJ_TransfsRowDeleting(this, new DataSetGES.EventArgs35((DataSetGES.Class79) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_TransfsDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class79 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class79) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_UpdateProgramDataTable : TypedTableBase<DataSetGES.Class60>
        {
            private DataColumn columnDateUpdate;
            private DataColumn columnDescription;
            private DataColumn columnid;
            private DataColumn columnModul;
            private DataColumn columnmodulname;
            private DataColumn columnTextUpdate;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate17 vJ_UpdateProgramRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate17 vJ_UpdateProgramRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate17 vJ_UpdateProgramRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate17 vJ_UpdateProgramRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_UpdateProgramDataTable()
            {
                base.TableName = "vJ_UpdateProgram";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_UpdateProgramDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_UpdateProgramDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_UpdateProgramDataTable table1 = (DataSetGES.vJ_UpdateProgramDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_UpdateProgramDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class60);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class60 class60_0)
            {
                base.Rows.Add(class60_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class60 method_1(int int_0, DateTime dateTime_0, int int_1, string string_0, string string_1, string string_2)
            {
                DataSetGES.Class60 row = (DataSetGES.Class60) base.NewRow();
                object[] objArray = new object[] { int_0, dateTime_0, int_1, string_0, string_1, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class60 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class60) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnDateUpdate = base.Columns["DateUpdate"];
                this.columnModul = base.Columns["Modul"];
                this.columnmodulname = base.Columns["modulname"];
                this.columnDescription = base.Columns["Description"];
                this.columnTextUpdate = base.Columns["TextUpdate"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnDateUpdate = new DataColumn("DateUpdate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateUpdate);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnmodulname = new DataColumn("modulname", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnmodulname);
                this.columnDescription = new DataColumn("Description", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnTextUpdate = new DataColumn("TextUpdate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextUpdate);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnDateUpdate.AllowDBNull = false;
                this.columnmodulname.AllowDBNull = false;
                this.columnmodulname.MaxLength = 100;
                this.columnDescription.MaxLength = 0x200;
                this.columnTextUpdate.MaxLength = 0x1388;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class60 method_5()
            {
                return (DataSetGES.Class60) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class60 class60_0)
            {
                base.Rows.Remove(class60_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class60(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_UpdateProgramRowChanged != null)
                {
                    this.vJ_UpdateProgramRowChanged(this, new DataSetGES.EventArgs16((DataSetGES.Class60) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_UpdateProgramRowChanging != null)
                {
                    this.vJ_UpdateProgramRowChanging(this, new DataSetGES.EventArgs16((DataSetGES.Class60) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_UpdateProgramRowDeleted != null)
                {
                    this.vJ_UpdateProgramRowDeleted(this, new DataSetGES.EventArgs16((DataSetGES.Class60) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_UpdateProgramRowDeleting != null)
                {
                    this.vJ_UpdateProgramRowDeleting(this, new DataSetGES.EventArgs16((DataSetGES.Class60) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_UpdateProgramDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateUpdateColumn
            {
                get
                {
                    return this.columnDateUpdate;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DescriptionColumn
            {
                get
                {
                    return this.columnDescription;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class60 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class60) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn modulnameColumn
            {
                get
                {
                    return this.columnmodulname;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TextUpdateColumn
            {
                get
                {
                    return this.columnTextUpdate;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vJ_WorkerDataTable : TypedTableBase<DataSetGES.Class153>
        {
            private DataColumn columnDateBegin;
            private DataColumn columnDateEnd;
            private DataColumn columnF;
            private DataColumn columnFIO;
            private DataColumn columnI;
            private DataColumn columnId;
            private DataColumn columnO;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate110 vJ_WorkerRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate110 vJ_WorkerRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate110 vJ_WorkerRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate110 vJ_WorkerRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_WorkerDataTable()
            {
                base.TableName = "vJ_Worker";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_WorkerDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_WorkerDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_WorkerDataTable table1 = (DataSetGES.vJ_WorkerDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_WorkerDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class153);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class153 class153_0)
            {
                base.Rows.Add(class153_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class153 method_1(string string_0, string string_1, string string_2, string string_3, DateTime dateTime_0, DateTime dateTime_1)
            {
                DataSetGES.Class153 row = (DataSetGES.Class153) base.NewRow();
                object[] objArray1 = new object[7];
                objArray1[1] = string_0;
                objArray1[2] = string_1;
                objArray1[3] = string_2;
                objArray1[4] = string_3;
                objArray1[5] = dateTime_0;
                objArray1[6] = dateTime_1;
                object[] objArray = objArray1;
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class153 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class153) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnF = base.Columns["F"];
                this.columnI = base.Columns["I"];
                this.columnO = base.Columns["O"];
                this.columnFIO = base.Columns["FIO"];
                this.columnDateBegin = base.Columns["DateBegin"];
                this.columnDateEnd = base.Columns["DateEnd"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnF = new DataColumn("F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnF);
                this.columnI = new DataColumn("I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI);
                this.columnO = new DataColumn("O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnO);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnDateBegin = new DataColumn("DateBegin", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateBegin);
                this.columnDateEnd = new DataColumn("DateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateEnd);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnF.AllowDBNull = false;
                this.columnF.MaxLength = 30;
                this.columnI.MaxLength = 20;
                this.columnO.MaxLength = 20;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 0x24;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class153 method_5()
            {
                return (DataSetGES.Class153) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class153 class153_0)
            {
                base.Rows.Remove(class153_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class153(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vJ_WorkerRowChanged != null)
                {
                    this.vJ_WorkerRowChanged(this, new DataSetGES.EventArgs109((DataSetGES.Class153) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vJ_WorkerRowChanging != null)
                {
                    this.vJ_WorkerRowChanging(this, new DataSetGES.EventArgs109((DataSetGES.Class153) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vJ_WorkerRowDeleted != null)
                {
                    this.vJ_WorkerRowDeleted(this, new DataSetGES.EventArgs109((DataSetGES.Class153) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vJ_WorkerRowDeleting != null)
                {
                    this.vJ_WorkerRowDeleting(this, new DataSetGES.EventArgs109((DataSetGES.Class153) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vJ_WorkerDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateBeginColumn
            {
                get
                {
                    return this.columnDateBegin;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateEndColumn
            {
                get
                {
                    return this.columnDateEnd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FColumn
            {
                get
                {
                    return this.columnF;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IColumn
            {
                get
                {
                    return this.columnI;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class153 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class153) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OColumn
            {
                get
                {
                    return this.columnO;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vP_SubstationBusDataTable : TypedTableBase<DataSetGES.Class117>
        {
            private DataColumn columnId;
            private DataColumn columnIdParent;
            private DataColumn columnName;
            private DataColumn columnTypeCodeId;
            private DataColumn columnTypeName;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate74 vP_SubstationBusRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate74 vP_SubstationBusRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate74 vP_SubstationBusRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate74 vP_SubstationBusRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_SubstationBusDataTable()
            {
                base.TableName = "vP_SubstationBus";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vP_SubstationBusDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vP_SubstationBusDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vP_SubstationBusDataTable table1 = (DataSetGES.vP_SubstationBusDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_SubstationBusDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class117);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class117 class117_0)
            {
                base.Rows.Add(class117_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class117 method_1(int int_0, int int_1, int int_2, string string_0, string string_1)
            {
                DataSetGES.Class117 row = (DataSetGES.Class117) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, string_0, string_1 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class117 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class117) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnName = base.Columns["Name"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnTypeName = new DataColumn("TypeName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnTypeName.AllowDBNull = false;
                this.columnTypeName.MaxLength = 100;
                this.columnName.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class117 method_5()
            {
                return (DataSetGES.Class117) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class117 class117_0)
            {
                base.Rows.Remove(class117_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class117(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vP_SubstationBusRowChanged != null)
                {
                    this.vP_SubstationBusRowChanged(this, new DataSetGES.EventArgs73((DataSetGES.Class117) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vP_SubstationBusRowChanging != null)
                {
                    this.vP_SubstationBusRowChanging(this, new DataSetGES.EventArgs73((DataSetGES.Class117) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vP_SubstationBusRowDeleted != null)
                {
                    this.vP_SubstationBusRowDeleted(this, new DataSetGES.EventArgs73((DataSetGES.Class117) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vP_SubstationBusRowDeleting != null)
                {
                    this.vP_SubstationBusRowDeleting(this, new DataSetGES.EventArgs73((DataSetGES.Class117) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vP_SubstationBusDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class117 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class117) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeNameColumn
            {
                get
                {
                    return this.columnTypeName;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vP_SubstationTransfDataTable : TypedTableBase<DataSetGES.Class89>
        {
            private DataColumn columnCountChild;
            private DataColumn columnId;
            private DataColumn columnIdParent;
            private DataColumn columnName;
            private DataColumn columnParentKey;
            private DataColumn columnText;
            private DataColumn columnTypeCodeId;
            private DataColumn columnValue;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate46 vP_SubstationTransfRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate46 vP_SubstationTransfRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate46 vP_SubstationTransfRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate46 vP_SubstationTransfRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_SubstationTransfDataTable()
            {
                base.TableName = "vP_SubstationTransf";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vP_SubstationTransfDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vP_SubstationTransfDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vP_SubstationTransfDataTable table1 = (DataSetGES.vP_SubstationTransfDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_SubstationTransfDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class89);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_0(DataSetGES.Class89 class89_0)
            {
                base.Rows.Add(class89_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class89 method_1(int int_0, int int_1, int int_2, string string_0, decimal decimal_0, string string_1, string string_2, int int_3)
            {
                DataSetGES.Class89 row = (DataSetGES.Class89) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, string_0, decimal_0, string_1, string_2, int_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnValue = base.Columns["Value"];
                this.columnName = base.Columns["Name"];
                this.columnText = base.Columns["Text"];
                this.columnCountChild = base.Columns["CountChild"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnValue = new DataColumn("Value", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnText = new DataColumn("Text", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnText);
                this.columnCountChild = new DataColumn("CountChild", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnCountChild);
                this.columnId.AllowDBNull = false;
                this.columnIdParent.AllowDBNull = false;
                this.columnParentKey.MaxLength = 50;
                this.columnName.MaxLength = 0x200;
                this.columnText.MaxLength = 0x235;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class89 method_4()
            {
                return (DataSetGES.Class89) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class89 class89_0)
            {
                base.Rows.Remove(class89_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class89(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vP_SubstationTransfRowChanged != null)
                {
                    this.vP_SubstationTransfRowChanged(this, new DataSetGES.EventArgs45((DataSetGES.Class89) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vP_SubstationTransfRowChanging != null)
                {
                    this.vP_SubstationTransfRowChanging(this, new DataSetGES.EventArgs45((DataSetGES.Class89) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vP_SubstationTransfRowDeleted != null)
                {
                    this.vP_SubstationTransfRowDeleted(this, new DataSetGES.EventArgs45((DataSetGES.Class89) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vP_SubstationTransfRowDeleting != null)
                {
                    this.vP_SubstationTransfRowDeleting(this, new DataSetGES.EventArgs45((DataSetGES.Class89) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vP_SubstationTransfDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CountChildColumn
            {
                get
                {
                    return this.columnCountChild;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class89 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class89) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TextColumn
            {
                get
                {
                    return this.columnText;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ValueColumn
            {
                get
                {
                    return this.columnValue;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vP_TransfBySubstationDataTable : TypedTableBase<DataSetGES.Class113>
        {
            private DataColumn columnidNetRegion;
            private DataColumn columnidPassport;
            private DataColumn columnidSubstation;
            private DataColumn columnidTransf;
            private DataColumn columnNameSubstation;
            private DataColumn columnNameTransfName;
            private DataColumn columnNetRegionValue;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate70 vP_TransfBySubstationRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate70 vP_TransfBySubstationRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate70 vP_TransfBySubstationRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate70 vP_TransfBySubstationRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_TransfBySubstationDataTable()
            {
                base.TableName = "vP_TransfBySubstation";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vP_TransfBySubstationDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vP_TransfBySubstationDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vP_TransfBySubstationDataTable table1 = (DataSetGES.vP_TransfBySubstationDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_TransfBySubstationDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class113);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class113 class113_0)
            {
                base.Rows.Add(class113_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class113 method_1(int int_0, int int_1, decimal decimal_0, string string_0, int int_2, string string_1, int int_3)
            {
                DataSetGES.Class113 row = (DataSetGES.Class113) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, decimal_0, string_0, int_2, string_1, int_3 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_2()
            {
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnidNetRegion = base.Columns["idNetRegion"];
                this.columnNetRegionValue = base.Columns["NetRegionValue"];
                this.columnNameSubstation = base.Columns["NameSubstation"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransfName = base.Columns["NameTransfName"];
                this.columnidPassport = base.Columns["idPassport"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_3()
            {
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnidNetRegion = new DataColumn("idNetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidNetRegion);
                this.columnNetRegionValue = new DataColumn("NetRegionValue", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegionValue);
                this.columnNameSubstation = new DataColumn("NameSubstation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSubstation);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransfName = new DataColumn("NameTransfName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransfName);
                this.columnidPassport = new DataColumn("idPassport", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidPassport);
                this.columnidSubstation.AllowDBNull = false;
                this.columnidNetRegion.ReadOnly = true;
                this.columnNetRegionValue.ReadOnly = true;
                this.columnNameSubstation.MaxLength = 0x200;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameTransfName.MaxLength = 0x200;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class113 method_4()
            {
                return (DataSetGES.Class113) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class113 class113_0)
            {
                base.Rows.Remove(class113_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class113(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vP_TransfBySubstationRowChanged != null)
                {
                    this.vP_TransfBySubstationRowChanged(this, new DataSetGES.EventArgs69((DataSetGES.Class113) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vP_TransfBySubstationRowChanging != null)
                {
                    this.vP_TransfBySubstationRowChanging(this, new DataSetGES.EventArgs69((DataSetGES.Class113) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vP_TransfBySubstationRowDeleted != null)
                {
                    this.vP_TransfBySubstationRowDeleted(this, new DataSetGES.EventArgs69((DataSetGES.Class113) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vP_TransfBySubstationRowDeleting != null)
                {
                    this.vP_TransfBySubstationRowDeleting(this, new DataSetGES.EventArgs69((DataSetGES.Class113) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vP_TransfBySubstationDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idNetRegionColumn
            {
                get
                {
                    return this.columnidNetRegion;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idPassportColumn
            {
                get
                {
                    return this.columnidPassport;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class113 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class113) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameSubstationColumn
            {
                get
                {
                    return this.columnNameSubstation;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfNameColumn
            {
                get
                {
                    return this.columnNameTransfName;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NetRegionValueColumn
            {
                get
                {
                    return this.columnNetRegionValue;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vP_WorkerDataTable : TypedTableBase<DataSetGES.Class63>
        {
            private DataColumn columnDateBegin;
            private DataColumn columnDateEnd;
            private DataColumn columnF;
            private DataColumn columnFIO;
            private DataColumn columnI;
            private DataColumn columnId;
            private DataColumn columnidGroup;
            private DataColumn columnisGroup;
            private DataColumn columnO;
            private DataColumn columnParentKey;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate20 vP_WorkerRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate20 vP_WorkerRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate20 vP_WorkerRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate20 vP_WorkerRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_WorkerDataTable()
            {
                base.TableName = "vP_Worker";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vP_WorkerDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vP_WorkerDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vP_WorkerDataTable table1 = (DataSetGES.vP_WorkerDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_WorkerDataTable();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class63);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class63 class63_0)
            {
                base.Rows.Add(class63_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class63 method_1(int int_0, string string_0, string string_1, string string_2, string string_3, DateTime dateTime_0, DateTime dateTime_1, int int_1, string string_4, bool bool_0)
            {
                DataSetGES.Class63 row = (DataSetGES.Class63) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, string_1, string_2, string_3, dateTime_0, dateTime_1, int_1, string_4, bool_0 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnF = base.Columns["F"];
                this.columnI = base.Columns["I"];
                this.columnO = base.Columns["O"];
                this.columnFIO = base.Columns["FIO"];
                this.columnDateBegin = base.Columns["DateBegin"];
                this.columnDateEnd = base.Columns["DateEnd"];
                this.columnidGroup = base.Columns["idGroup"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnisGroup = base.Columns["isGroup"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnF = new DataColumn("F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnF);
                this.columnI = new DataColumn("I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI);
                this.columnO = new DataColumn("O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnO);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnDateBegin = new DataColumn("DateBegin", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateBegin);
                this.columnDateEnd = new DataColumn("DateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateEnd);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnisGroup = new DataColumn("isGroup", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisGroup);
                this.columnId.AllowDBNull = false;
                this.columnF.AllowDBNull = false;
                this.columnF.MaxLength = 30;
                this.columnI.MaxLength = 20;
                this.columnO.MaxLength = 20;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 0x24;
                this.columnidGroup.AllowDBNull = false;
                this.columnParentKey.MaxLength = 50;
                this.columnisGroup.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class63 method_4()
            {
                return (DataSetGES.Class63) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_5(DataSetGES.Class63 class63_0)
            {
                base.Rows.Remove(class63_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class63(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vP_WorkerRowChanged != null)
                {
                    this.vP_WorkerRowChanged(this, new DataSetGES.EventArgs19((DataSetGES.Class63) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vP_WorkerRowChanging != null)
                {
                    this.vP_WorkerRowChanging(this, new DataSetGES.EventArgs19((DataSetGES.Class63) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vP_WorkerRowDeleted != null)
                {
                    this.vP_WorkerRowDeleted(this, new DataSetGES.EventArgs19((DataSetGES.Class63) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vP_WorkerRowDeleting != null)
                {
                    this.vP_WorkerRowDeleting(this, new DataSetGES.EventArgs19((DataSetGES.Class63) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vP_WorkerDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateBeginColumn
            {
                get
                {
                    return this.columnDateBegin;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateEndColumn
            {
                get
                {
                    return this.columnDateEnd;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FColumn
            {
                get
                {
                    return this.columnF;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IColumn
            {
                get
                {
                    return this.columnI;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn isGroupColumn
            {
                get
                {
                    return this.columnisGroup;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class63 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class63) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OColumn
            {
                get
                {
                    return this.columnO;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vSchm_ObjListDataTable : TypedTableBase<DataSetGES.Class145>
        {
            private DataColumn columnDeleted;
            private DataColumn columnId;
            private DataColumn columnIdParent;
            private DataColumn columnName;
            private DataColumn columnNameP;
            private DataColumn columnOnOff;
            private DataColumn columntypecode;
            private DataColumn columnTypeCodeId;
            private DataColumn columntypeCodeSocr;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate102 vSchm_ObjListRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate102 vSchm_ObjListRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate102 vSchm_ObjListRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate102 vSchm_ObjListRowDeleting;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vSchm_ObjListDataTable()
            {
                base.TableName = "vSchm_ObjList";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vSchm_ObjListDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vSchm_ObjListDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vSchm_ObjListDataTable table1 = (DataSetGES.vSchm_ObjListDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vSchm_ObjListDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class145);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class145 class145_0)
            {
                base.Rows.Add(class145_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class145 method_1(int int_0, string string_0, int int_1, string string_1, string string_2, int int_2, bool bool_0, int int_3, bool bool_1)
            {
                DataSetGES.Class145 row = (DataSetGES.Class145) base.NewRow();
                object[] objArray = new object[] { int_0, string_0, int_1, string_1, string_2, int_2, bool_0, int_3, bool_1 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class145 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class145) base.Rows.Find(keys);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_3()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columntypecode = base.Columns["typecode"];
                this.columntypeCodeSocr = base.Columns["typeCodeSocr"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnOnOff = base.Columns["OnOff"];
                this.columnNameP = base.Columns["NameP"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_4()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columntypecode = new DataColumn("typecode", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntypecode);
                this.columntypeCodeSocr = new DataColumn("typeCodeSocr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntypeCodeSocr);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnOnOff = new DataColumn("OnOff", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnOnOff);
                this.columnNameP = new DataColumn("NameP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNameP);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                DataColumn[] columns = new DataColumn[] { this.columnId };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 0x200;
                this.columntypecode.MaxLength = 100;
                this.columntypeCodeSocr.MaxLength = 50;
                this.columnNameP.ReadOnly = true;
                this.columnDeleted.AllowDBNull = false;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class145 method_5()
            {
                return (DataSetGES.Class145) base.NewRow();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void method_6(DataSetGES.Class145 class145_0)
            {
                base.Rows.Remove(class145_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class145(builder);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vSchm_ObjListRowChanged != null)
                {
                    this.vSchm_ObjListRowChanged(this, new DataSetGES.EventArgs101((DataSetGES.Class145) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vSchm_ObjListRowChanging != null)
                {
                    this.vSchm_ObjListRowChanging(this, new DataSetGES.EventArgs101((DataSetGES.Class145) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vSchm_ObjListRowDeleted != null)
                {
                    this.vSchm_ObjListRowDeleted(this, new DataSetGES.EventArgs101((DataSetGES.Class145) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vSchm_ObjListRowDeleting != null)
                {
                    this.vSchm_ObjListRowDeleting(this, new DataSetGES.EventArgs101((DataSetGES.Class145) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vSchm_ObjListDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class145 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class145) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NamePColumn
            {
                get
                {
                    return this.columnNameP;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OnOffColumn
            {
                get
                {
                    return this.columnOnOff;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn typecodeColumn
            {
                get
                {
                    return this.columntypecode;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn typeCodeSocrColumn
            {
                get
                {
                    return this.columntypeCodeSocr;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vSchm_TreeCellLineDataTable : TypedTableBase<DataSetGES.Class146>
        {
            private DataColumn columnFullName;
            private DataColumn columnId;
            private DataColumn columnName;
            private DataColumn columnParentKey;
            private DataColumn columnParentLink;
            private DataColumn columnTypeCodeId;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate103 vSchm_TreeCellLineRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate103 vSchm_TreeCellLineRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate103 vSchm_TreeCellLineRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate103 vSchm_TreeCellLineRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vSchm_TreeCellLineDataTable()
            {
                base.TableName = "vSchm_TreeCellLine";
                this.BeginInit();
                this.method_3();
                this.EndInit();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vSchm_TreeCellLineDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vSchm_TreeCellLineDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_2();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vSchm_TreeCellLineDataTable table1 = (DataSetGES.vSchm_TreeCellLineDataTable) base.Clone();
                table1.method_2();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vSchm_TreeCellLineDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class146);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class146 class146_0)
            {
                base.Rows.Add(class146_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class146 method_1(int int_0, int int_1, int int_2, string string_0, string string_1, string string_2)
            {
                DataSetGES.Class146 row = (DataSetGES.Class146) base.NewRow();
                object[] objArray = new object[] { int_0, int_1, int_2, string_0, string_1, string_2 };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void method_2()
            {
                this.columnId = base.Columns["Id"];
                this.columnParentLink = base.Columns["ParentLink"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnName = base.Columns["Name"];
                this.columnFullName = base.Columns["FullName"];
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void method_3()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnParentLink = new DataColumn("ParentLink", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnParentLink);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnFullName = new DataColumn("FullName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnId.AllowDBNull = false;
                this.columnParentLink.AllowDBNull = false;
                this.columnParentKey.MaxLength = 50;
                this.columnName.MaxLength = 0x200;
                this.columnFullName.ReadOnly = true;
                this.columnFullName.MaxLength = 0x235;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class146 method_4()
            {
                return (DataSetGES.Class146) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_5(DataSetGES.Class146 class146_0)
            {
                base.Rows.Remove(class146_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class146(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vSchm_TreeCellLineRowChanged != null)
                {
                    this.vSchm_TreeCellLineRowChanged(this, new DataSetGES.EventArgs102((DataSetGES.Class146) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vSchm_TreeCellLineRowChanging != null)
                {
                    this.vSchm_TreeCellLineRowChanging(this, new DataSetGES.EventArgs102((DataSetGES.Class146) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vSchm_TreeCellLineRowDeleted != null)
                {
                    this.vSchm_TreeCellLineRowDeleted(this, new DataSetGES.EventArgs102((DataSetGES.Class146) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vSchm_TreeCellLineRowDeleting != null)
                {
                    this.vSchm_TreeCellLineRowDeleting(this, new DataSetGES.EventArgs102((DataSetGES.Class146) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vSchm_TreeCellLineDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FullNameColumn
            {
                get
                {
                    return this.columnFullName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class146 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class146) base.Rows[int_0];
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentLinkColumn
            {
                get
                {
                    return this.columnParentLink;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }
        }

        [Serializable, XmlSchemaProvider("GetTypedTableSchema")]
        public class vTC_TUPointAttachDataTable : TypedTableBase<DataSetGES.Class142>
        {
            private DataColumn columnAttachmentPoint;
            private DataColumn columnBusCP;
            private DataColumn columnBusFullPoint;
            private DataColumn columnBusPoint;
            private DataColumn columnCategory;
            private DataColumn columnCellCP;
            private DataColumn columnCellFullPoint;
            private DataColumn columnCellPoint;
            private DataColumn columnid;
            private DataColumn columnidBusCP;
            private DataColumn columnidBusPoint;
            private DataColumn columnidCellCP;
            private DataColumn columnidCellPoint;
            private DataColumn columnidSubCP;
            private DataColumn columnidSubPoint;
            private DataColumn columnidTU;
            private DataColumn columnnum;
            private DataColumn columnpowersum;
            private DataColumn columnPowerSupply;
            private DataColumn columnSubCP;
            private DataColumn columnSubPoint;
            private DataColumn columnTypeDoc;
            private DataColumn columnvoltagelevel;
            private DataColumn columnvoltagelevelname;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate99 vTC_TUPointAttachRowChanged;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate99 vTC_TUPointAttachRowChanging;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate99 vTC_TUPointAttachRowDeleted;

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [field: CompilerGenerated]
            public event DataSetGES.Delegate99 vTC_TUPointAttachRowDeleting;

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vTC_TUPointAttachDataTable()
            {
                base.TableName = "vTC_TUPointAttach";
                this.BeginInit();
                this.method_4();
                this.EndInit();
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vTC_TUPointAttachDataTable(DataTable dataTable_0)
            {
                base.TableName = dataTable_0.TableName;
                if (dataTable_0.CaseSensitive != dataTable_0.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = dataTable_0.CaseSensitive;
                }
                if (dataTable_0.Locale.ToString() != dataTable_0.DataSet.Locale.ToString())
                {
                    base.Locale = dataTable_0.Locale;
                }
                if (dataTable_0.Namespace != dataTable_0.DataSet.Namespace)
                {
                    base.Namespace = dataTable_0.Namespace;
                }
                base.Prefix = dataTable_0.Prefix;
                base.MinimumCapacity = dataTable_0.MinimumCapacity;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vTC_TUPointAttachDataTable(SerializationInfo serializationInfo_0, StreamingContext streamingContext_0) : base(serializationInfo_0, streamingContext_0)
            {
                this.method_3();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vTC_TUPointAttachDataTable table1 = (DataSetGES.vTC_TUPointAttachDataTable) base.Clone();
                table1.method_3();
                return table1;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vTC_TUPointAttachDataTable();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.Class142);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_0(DataSetGES.Class142 class142_0)
            {
                base.Rows.Add(class142_0);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class142 method_1(int int_0, int int_1, int int_2, int int_3, string string_0, int int_4, string string_1, string string_2, int int_5, string string_3, string string_4, int int_6, string string_5, int int_7, string string_6, int int_8, string string_7, string string_8, string string_9, int int_9, string string_10, decimal decimal_0, string string_11, int int_10)
            {
                DataSetGES.Class142 row = (DataSetGES.Class142) base.NewRow();
                object[] objArray = new object[] { 
                    int_0, int_1, int_2, int_3, string_0, int_4, string_1, string_2, int_5, string_3, string_4, int_6, string_5, int_7, string_6, int_8,
                    string_7, string_8, string_9, int_9, string_10, decimal_0, string_11, int_10
                };
                row.ItemArray = objArray;
                base.Rows.Add(row);
                return row;
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class142 method_2(int int_0)
            {
                object[] keys = new object[] { int_0 };
                return (DataSetGES.Class142) base.Rows.Find(keys);
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void method_3()
            {
                this.columnid = base.Columns["id"];
                this.columnidTU = base.Columns["idTU"];
                this.columnnum = base.Columns["num"];
                this.columnidSubPoint = base.Columns["idSubPoint"];
                this.columnSubPoint = base.Columns["SubPoint"];
                this.columnidBusPoint = base.Columns["idBusPoint"];
                this.columnBusPoint = base.Columns["BusPoint"];
                this.columnBusFullPoint = base.Columns["BusFullPoint"];
                this.columnidCellPoint = base.Columns["idCellPoint"];
                this.columnCellPoint = base.Columns["CellPoint"];
                this.columnCellFullPoint = base.Columns["CellFullPoint"];
                this.columnidSubCP = base.Columns["idSubCP"];
                this.columnSubCP = base.Columns["SubCP"];
                this.columnidBusCP = base.Columns["idBusCP"];
                this.columnBusCP = base.Columns["BusCP"];
                this.columnidCellCP = base.Columns["idCellCP"];
                this.columnCellCP = base.Columns["CellCP"];
                this.columnAttachmentPoint = base.Columns["AttachmentPoint"];
                this.columnPowerSupply = base.Columns["PowerSupply"];
                this.columnvoltagelevel = base.Columns["voltagelevel"];
                this.columnvoltagelevelname = base.Columns["voltagelevelname"];
                this.columnpowersum = base.Columns["powersum"];
                this.columnCategory = base.Columns["Category"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void method_4()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidTU = new DataColumn("idTU", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTU);
                this.columnnum = new DataColumn("num", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columnidSubPoint = new DataColumn("idSubPoint", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubPoint);
                this.columnSubPoint = new DataColumn("SubPoint", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubPoint);
                this.columnidBusPoint = new DataColumn("idBusPoint", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBusPoint);
                this.columnBusPoint = new DataColumn("BusPoint", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBusPoint);
                this.columnBusFullPoint = new DataColumn("BusFullPoint", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBusFullPoint);
                this.columnidCellPoint = new DataColumn("idCellPoint", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCellPoint);
                this.columnCellPoint = new DataColumn("CellPoint", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCellPoint);
                this.columnCellFullPoint = new DataColumn("CellFullPoint", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCellFullPoint);
                this.columnidSubCP = new DataColumn("idSubCP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubCP);
                this.columnSubCP = new DataColumn("SubCP", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubCP);
                this.columnidBusCP = new DataColumn("idBusCP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBusCP);
                this.columnBusCP = new DataColumn("BusCP", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnBusCP);
                this.columnidCellCP = new DataColumn("idCellCP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCellCP);
                this.columnCellCP = new DataColumn("CellCP", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCellCP);
                this.columnAttachmentPoint = new DataColumn("AttachmentPoint", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAttachmentPoint);
                this.columnPowerSupply = new DataColumn("PowerSupply", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPowerSupply);
                this.columnvoltagelevel = new DataColumn("voltagelevel", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnvoltagelevel);
                this.columnvoltagelevelname = new DataColumn("voltagelevelname", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnvoltagelevelname);
                this.columnpowersum = new DataColumn("powersum", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnpowersum);
                this.columnCategory = new DataColumn("Category", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                DataColumn[] columns = new DataColumn[] { this.columnid };
                base.Constraints.Add(new UniqueConstraint("Constraint1", columns, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidTU.AllowDBNull = false;
                this.columnSubPoint.ReadOnly = true;
                this.columnSubPoint.MaxLength = 0x233;
                this.columnBusPoint.MaxLength = 0x200;
                this.columnBusFullPoint.ReadOnly = true;
                this.columnBusFullPoint.MaxLength = 0x233;
                this.columnCellPoint.MaxLength = 0x200;
                this.columnCellFullPoint.ReadOnly = true;
                this.columnCellFullPoint.MaxLength = 0x233;
                this.columnSubCP.ReadOnly = true;
                this.columnSubCP.MaxLength = 0x233;
                this.columnBusCP.MaxLength = 0x200;
                this.columnCellCP.MaxLength = 0x200;
                this.columnAttachmentPoint.ReadOnly = true;
                this.columnAttachmentPoint.MaxLength = 0x69b;
                this.columnPowerSupply.ReadOnly = true;
                this.columnPowerSupply.MaxLength = 0x69b;
                this.columnvoltagelevelname.MaxLength = 100;
                this.columnCategory.MaxLength = 100;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.Class142 method_5()
            {
                return (DataSetGES.Class142) base.NewRow();
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void method_6(DataSetGES.Class142 class142_0)
            {
                base.Rows.Remove(class142_0);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.Class142(builder);
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanged(dataRowChangeEventArgs_0);
                if (this.vTC_TUPointAttachRowChanged != null)
                {
                    this.vTC_TUPointAttachRowChanged(this, new DataSetGES.EventArgs98((DataSetGES.Class142) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowChanging(dataRowChangeEventArgs_0);
                if (this.vTC_TUPointAttachRowChanging != null)
                {
                    this.vTC_TUPointAttachRowChanging(this, new DataSetGES.EventArgs98((DataSetGES.Class142) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleted(dataRowChangeEventArgs_0);
                if (this.vTC_TUPointAttachRowDeleted != null)
                {
                    this.vTC_TUPointAttachRowDeleted(this, new DataSetGES.EventArgs98((DataSetGES.Class142) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs dataRowChangeEventArgs_0)
            {
                base.OnRowDeleting(dataRowChangeEventArgs_0);
                if (this.vTC_TUPointAttachRowDeleting != null)
                {
                    this.vTC_TUPointAttachRowDeleting(this, new DataSetGES.EventArgs98((DataSetGES.Class142) dataRowChangeEventArgs_0.Row, dataRowChangeEventArgs_0.Action));
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType smethod_0(XmlSchemaSet xmlSchemaSet_0)
            {
                XmlSchemaComplexType type = new XmlSchemaComplexType();
                XmlSchemaSequence sequence = new XmlSchemaSequence();
                DataSetGES tges = new DataSetGES();
                XmlSchemaAny item = new XmlSchemaAny {
                    Namespace = "http://www.w3.org/2001/XMLSchema",
                    MinOccurs = 0M,
                    MaxOccurs = 79228162514264337593543950335M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(item);
                XmlSchemaAny any2 = new XmlSchemaAny {
                    Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1",
                    MinOccurs = 1M,
                    ProcessContents = XmlSchemaContentProcessing.Lax
                };
                sequence.Items.Add(any2);
                XmlSchemaAttribute attribute = new XmlSchemaAttribute {
                    Name = "namespace",
                    FixedValue = tges.Namespace
                };
                type.Attributes.Add(attribute);
                XmlSchemaAttribute attribute2 = new XmlSchemaAttribute {
                    Name = "tableTypeName",
                    FixedValue = "vTC_TUPointAttachDataTable"
                };
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                XmlSchema schemaSerializable = tges.GetSchemaSerializable();
                if (xmlSchemaSet_0.Contains(schemaSerializable.TargetNamespace))
                {
                    XmlSchemaComplexType type2;
                    MemoryStream stream = new MemoryStream();
                    MemoryStream stream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(stream);
                        IEnumerator enumerator = xmlSchemaSet_0.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            stream2.SetLength(0L);
                            ((XmlSchema) enumerator.Current).Write(stream2);
                            if (stream.Length == stream2.Length)
                            {
                                stream.Position = 0L;
                                stream2.Position = 0L;
                                while (stream.Position != stream.Length)
                                {
                                    if (stream.ReadByte() != stream2.ReadByte())
                                    {
                                        break;
                                    }
                                }
                                if (stream.Position == stream.Length)
                                {
                                    goto Label_01CE;
                                }
                            }
                        }
                        goto Label_01ED;
                    Label_01CE:
                        type2 = type;
                    }
                    finally
                    {
                        if (stream != null)
                        {
                            stream.Close();
                        }
                        if (stream2 != null)
                        {
                            stream2.Close();
                        }
                    }
                    return type2;
                }
            Label_01ED:
                xmlSchemaSet_0.Add(schemaSerializable);
                return type;
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AttachmentPointColumn
            {
                get
                {
                    return this.columnAttachmentPoint;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn BusCPColumn
            {
                get
                {
                    return this.columnBusCP;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn BusFullPointColumn
            {
                get
                {
                    return this.columnBusFullPoint;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn BusPointColumn
            {
                get
                {
                    return this.columnBusPoint;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CategoryColumn
            {
                get
                {
                    return this.columnCategory;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CellCPColumn
            {
                get
                {
                    return this.columnCellCP;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CellFullPointColumn
            {
                get
                {
                    return this.columnCellFullPoint;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CellPointColumn
            {
                get
                {
                    return this.columnCellPoint;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusCPColumn
            {
                get
                {
                    return this.columnidBusCP;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusPointColumn
            {
                get
                {
                    return this.columnidBusPoint;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellCPColumn
            {
                get
                {
                    return this.columnidCellCP;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellPointColumn
            {
                get
                {
                    return this.columnidCellPoint;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubCPColumn
            {
                get
                {
                    return this.columnidSubCP;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubPointColumn
            {
                get
                {
                    return this.columnidSubPoint;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTUColumn
            {
                get
                {
                    return this.columnidTU;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.Class142 this[int int_0]
            {
                get
                {
                    return (DataSetGES.Class142) base.Rows[int_0];
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn numColumn
            {
                get
                {
                    return this.columnnum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn powersumColumn
            {
                get
                {
                    return this.columnpowersum;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerSupplyColumn
            {
                get
                {
                    return this.columnPowerSupply;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SubCPColumn
            {
                get
                {
                    return this.columnSubCP;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubPointColumn
            {
                get
                {
                    return this.columnSubPoint;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn voltagelevelColumn
            {
                get
                {
                    return this.columnvoltagelevel;
                }
            }

            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn voltagelevelnameColumn
            {
                get
                {
                    return this.columnvoltagelevelname;
                }
            }
        }
    }
}

