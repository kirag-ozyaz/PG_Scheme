using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Runtime.Serialization;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;

namespace Documents.DataSetGESNumber
{
    // Token: 0x02000072 RID: 114
    [XmlSchemaProvider("GetTypedDataSetSchema"), ToolboxItem(true), HelpKeyword("vs.data.DataSet"), XmlRoot("DataSetGES"), DesignerCategory("code")]
    [Serializable]
    internal class DataSetGES : DataSet
    {
        // Token: 0x06000868 RID: 2152 RVA: 0x0005DD98 File Offset: 0x0005BF98
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DataSetGES()
        {
            base.BeginInit();
            this.InitClass();
            CollectionChangeEventHandler value = new CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += value;
            base.Relations.CollectionChanged += value;
            base.EndInit();
            this.InitExpressions();
        }

        // Token: 0x06000869 RID: 2153 RVA: 0x0005DDF0 File Offset: 0x0005BFF0
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetGES(SerializationInfo info, StreamingContext context) : base(info, context, false)
        {
            if (base.IsBinarySerialized(info, context))
            {
                this.InitVars(false);
                CollectionChangeEventHandler value = new CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += value;
                this.Relations.CollectionChanged += value;
                if (base.DetermineSchemaSerializationMode(info, context) == SchemaSerializationMode.ExcludeSchema)
                {
                    this.InitExpressions();
                }
                return;
            }
            string s = (string)info.GetValue("XmlSchema", typeof(string));
            if (base.DetermineSchemaSerializationMode(info, context) == SchemaSerializationMode.IncludeSchema)
            {
                DataSet dataSet = new DataSet();
                dataSet.ReadXmlSchema(new XmlTextReader(new StringReader(s)));
                if (dataSet.Tables["tUser"] != null)
                {
                    base.Tables.Add(new DataSetGES.tUserDataTable(dataSet.Tables["tUser"]));
                }
                if (dataSet.Tables["tJ_RequestDoc"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestDocDataTable(dataSet.Tables["tJ_RequestDoc"]));
                }
                if (dataSet.Tables["tJ_Request"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestDataTable(dataSet.Tables["tJ_Request"]));
                }
                if (dataSet.Tables["vJ_Request"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RequestDataTable(dataSet.Tables["vJ_Request"]));
                }
                if (dataSet.Tables["vJ_RequestForRepair"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RequestForRepairDataTable(dataSet.Tables["vJ_RequestForRepair"]));
                }
                if (dataSet.Tables["tJ_RequestForRepair"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestForRepairDataTable(dataSet.Tables["tJ_RequestForRepair"]));
                }
                if (dataSet.Tables["tR_Classifier"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_ClassifierDataTable(dataSet.Tables["tR_Classifier"]));
                }
                if (dataSet.Tables["tJ_RequestForRepairDaily"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestForRepairDailyDataTable(dataSet.Tables["tJ_RequestForRepairDaily"]));
                }
                if (dataSet.Tables["vJ_RequestForRepairDaily"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RequestForRepairDailyDataTable(dataSet.Tables["vJ_RequestForRepairDaily"]));
                }
                if (dataSet.Tables["tL_RequestForRepairSchmObjList"] != null)
                {
                    base.Tables.Add(new DataSetGES.tL_RequestForRepairSchmObjListDataTable(dataSet.Tables["tL_RequestForRepairSchmObjList"]));
                }
                if (dataSet.Tables["tJ_RequestForRepairDoc"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestForRepairDocDataTable(dataSet.Tables["tJ_RequestForRepairDoc"]));
                }
                if (dataSet.Tables["tJ_RelayProtectionAutomation"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RelayProtectionAutomationDataTable(dataSet.Tables["tJ_RelayProtectionAutomation"]));
                }
                if (dataSet.Tables["tJ_RelayProtectionAutomationValue"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RelayProtectionAutomationValueDataTable(dataSet.Tables["tJ_RelayProtectionAutomationValue"]));
                }
                if (dataSet.Tables["vJ_RelayProtectionAutomation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RelayProtectionAutomationDataTable(dataSet.Tables["vJ_RelayProtectionAutomation"]));
                }
                if (dataSet.Tables["tJ_UpdateProgram"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_UpdateProgramDataTable(dataSet.Tables["tJ_UpdateProgram"]));
                }
                if (dataSet.Tables["tJ_UpdateProgramDoc"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_UpdateProgramDocDataTable(dataSet.Tables["tJ_UpdateProgramDoc"]));
                }
                if (dataSet.Tables["vJ_UpdateProgram"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_UpdateProgramDataTable(dataSet.Tables["vJ_UpdateProgram"]));
                }
                if (dataSet.Tables["tJ_UpdateProgramUserCheck"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_UpdateProgramUserCheckDataTable(dataSet.Tables["tJ_UpdateProgramUserCheck"]));
                }
                if (dataSet.Tables["tMeas_Measurement"] != null)
                {
                    base.Tables.Add(new DataSetGES.tMeas_MeasurementDataTable(dataSet.Tables["tMeas_Measurement"]));
                }
                if (dataSet.Tables["tMeas_Trans"] != null)
                {
                    base.Tables.Add(new DataSetGES.tMeas_TransDataTable(dataSet.Tables["tMeas_Trans"]));
                }
                if (dataSet.Tables["tMeas_Cab"] != null)
                {
                    base.Tables.Add(new DataSetGES.tMeas_CabDataTable(dataSet.Tables["tMeas_Cab"]));
                }
                if (dataSet.Tables["tSchm_ObjList"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjListDataTable(dataSet.Tables["tSchm_ObjList"]));
                }
                if (dataSet.Tables["vP_Worker"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_WorkerDataTable(dataSet.Tables["vP_Worker"]));
                }
                if (dataSet.Tables["tP_ValueLists"] != null)
                {
                    base.Tables.Add(new DataSetGES.tP_ValueListsDataTable(dataSet.Tables["tP_ValueLists"]));
                }
                if (dataSet.Tables["vJ_CableMakeup"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableMakeupDataTable(dataSet.Tables["vJ_CableMakeup"]));
                }
                if (dataSet.Tables["vJ_MeasPeriodBySubstation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasPeriodBySubstationDataTable(dataSet.Tables["vJ_MeasPeriodBySubstation"]));
                }
                if (dataSet.Tables["fn_J_GetCellCableLVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellCableLVByTransfDataTable(dataSet.Tables["fn_J_GetCellCableLVByTransf"]));
                }
                if (dataSet.Tables["tL_SchmAbn"] != null)
                {
                    base.Tables.Add(new DataSetGES.tL_SchmAbnDataTable(dataSet.Tables["tL_SchmAbn"]));
                }
                if (dataSet.Tables["vJ_MeasAbnObj"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasAbnObjDataTable(dataSet.Tables["vJ_MeasAbnObj"]));
                }
                if (dataSet.Tables["vJ_GetMeasYears"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_GetMeasYearsDataTable(dataSet.Tables["vJ_GetMeasYears"]));
                }
                if (dataSet.Tables["fn_J_GetCellLVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellLVByTransfDataTable(dataSet.Tables["fn_J_GetCellLVByTransf"]));
                }
                if (dataSet.Tables["fn_J_MeasCableCalcResults"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_MeasCableCalcResultsDataTable(dataSet.Tables["fn_J_MeasCableCalcResults"]));
                }
                if (dataSet.Tables["tR_CableMakeup"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableMakeupDataTable(dataSet.Tables["tR_CableMakeup"]));
                }
                if (dataSet.Tables["tR_CrossSection"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CrossSectionDataTable(dataSet.Tables["tR_CrossSection"]));
                }
                if (dataSet.Tables["tR_CableVoltage"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableVoltageDataTable(dataSet.Tables["tR_CableVoltage"]));
                }
                if (dataSet.Tables["tR_CableAmperage"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableAmperageDataTable(dataSet.Tables["tR_CableAmperage"]));
                }
                if (dataSet.Tables["tR_CableWires"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableWiresDataTable(dataSet.Tables["tR_CableWires"]));
                }
                if (dataSet.Tables["vJ_CableReference"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableReferenceDataTable(dataSet.Tables["vJ_CableReference"]));
                }
                if (dataSet.Tables["vJ_Transfs"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_TransfsDataTable(dataSet.Tables["vJ_Transfs"]));
                }
                if (dataSet.Tables["dtMeasCableRatio"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtMeasCableRatioDataTable(dataSet.Tables["dtMeasCableRatio"]));
                }
                if (dataSet.Tables["fn_J_GetBusLVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetBusLVByTransfDataTable(dataSet.Tables["fn_J_GetBusLVByTransf"]));
                }
                if (dataSet.Tables["vJ_MeasurementReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasurementReportDataTable(dataSet.Tables["vJ_MeasurementReport"]));
                }
                if (dataSet.Tables["dtMeasTransfAmperageDopDataReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtMeasTransfAmperageDopDataReportDataTable(dataSet.Tables["dtMeasTransfAmperageDopDataReport"]));
                }
                if (dataSet.Tables["fn_J_ExcelessLoadReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_ExcelessLoadReportDataTable(dataSet.Tables["fn_J_ExcelessLoadReport"]));
                }
                if (dataSet.Tables["dtExcelessLoadAddlReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtExcelessLoadAddlReportDataTable(dataSet.Tables["dtExcelessLoadAddlReport"]));
                }
                if (dataSet.Tables["vJ_CoefficientLoading"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CoefficientLoadingDataTable(dataSet.Tables["vJ_CoefficientLoading"]));
                }
                if (dataSet.Tables["dtCoefficientLoadingAddl"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtCoefficientLoadingAddlDataTable(dataSet.Tables["dtCoefficientLoadingAddl"]));
                }
                if (dataSet.Tables["vJ_CoefficientIrregularity"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CoefficientIrregularityDataTable(dataSet.Tables["vJ_CoefficientIrregularity"]));
                }
                if (dataSet.Tables["vP_SubstationTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_SubstationTransfDataTable(dataSet.Tables["vP_SubstationTransf"]));
                }
                if (dataSet.Tables["tR_DocTemplate"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_DocTemplateDataTable(dataSet.Tables["tR_DocTemplate"]));
                }
                if (dataSet.Tables["fn_J_GetCellTransfByBusLV"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellTransfByBusLVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusLV"]));
                }
                if (dataSet.Tables["dtBuses"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtBusesDataTable(dataSet.Tables["dtBuses"]));
                }
                if (dataSet.Tables["dtCells"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtCellsDataTable(dataSet.Tables["dtCells"]));
                }
                if (dataSet.Tables["tJ_Measurement"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasurementDataTable(dataSet.Tables["tJ_Measurement"]));
                }
                if (dataSet.Tables["vJ_MeasTransfPassport"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasTransfPassportDataTable(dataSet.Tables["vJ_MeasTransfPassport"]));
                }
                if (dataSet.Tables["fn_J_MeasTransfPassport"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_MeasTransfPassportDataTable(dataSet.Tables["fn_J_MeasTransfPassport"]));
                }
                if (dataSet.Tables["vJ_MeasCable"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCableDataTable(dataSet.Tables["vJ_MeasCable"]));
                }
                if (dataSet.Tables["dtMeasCellRatio"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtMeasCellRatioDataTable(dataSet.Tables["dtMeasCellRatio"]));
                }
                if (dataSet.Tables["tSchm_ObjList1"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjList1DataTable(dataSet.Tables["tSchm_ObjList1"]));
                }
                if (dataSet.Tables["vJ_TransfBySubstation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_TransfBySubstationDataTable(dataSet.Tables["vJ_TransfBySubstation"]));
                }
                if (dataSet.Tables["vJ_PowerISR_Transf"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_PowerISR_TransfDataTable(dataSet.Tables["vJ_PowerISR_Transf"]));
                }
                if (dataSet.Tables["vJ_PowerISR_SSTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_PowerISR_SSTransfDataTable(dataSet.Tables["vJ_PowerISR_SSTransf"]));
                }
                if (dataSet.Tables["dtAmountFreeCapasity"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtAmountFreeCapasityDataTable(dataSet.Tables["dtAmountFreeCapasity"]));
                }
                if (dataSet.Tables["fn_J_GetCellTransfByBusHV"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellTransfByBusHVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusHV"]));
                }
                if (dataSet.Tables["tJ_MeasCable"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasCableDataTable(dataSet.Tables["tJ_MeasCable"]));
                }
                if (dataSet.Tables["vJ_LastCableInfo"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_LastCableInfoDataTable(dataSet.Tables["vJ_LastCableInfo"]));
                }
                if (dataSet.Tables["vJ_TransfByCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_TransfByCellDataTable(dataSet.Tables["vJ_TransfByCell"]));
                }
                if (dataSet.Tables["vJ_CableByCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableByCellDataTable(dataSet.Tables["vJ_CableByCell"]));
                }
                if (dataSet.Tables["fn_J_GetBusMVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetBusMVByTransfDataTable(dataSet.Tables["fn_J_GetBusMVByTransf"]));
                }
                if (dataSet.Tables["tJ_MeasAmperageTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasAmperageTransfDataTable(dataSet.Tables["tJ_MeasAmperageTransf"]));
                }
                if (dataSet.Tables["tSchm_ObjList2"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjList2DataTable(dataSet.Tables["tSchm_ObjList2"]));
                }
                if (dataSet.Tables["tSchm_ObjList3"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjList3DataTable(dataSet.Tables["tSchm_ObjList3"]));
                }
                if (dataSet.Tables["vP_TransfBySubstation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_TransfBySubstationDataTable(dataSet.Tables["vP_TransfBySubstation"]));
                }
                if (dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"]));
                }
                if (dataSet.Tables["vJ_MeasSubTransf_TEMP"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasSubTransf_TEMP"]));
                }
                if (dataSet.Tables["fn_J_GetTransfByBusLV"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetTransfByBusLVDataTable(dataSet.Tables["fn_J_GetTransfByBusLV"]));
                }
                if (dataSet.Tables["vP_SubstationBus"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_SubstationBusDataTable(dataSet.Tables["vP_SubstationBus"]));
                }
                if (dataSet.Tables["vJ_CellByBus"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CellByBusDataTable(dataSet.Tables["vJ_CellByBus"]));
                }
                if (dataSet.Tables["vJ_PowerISR_SSBus"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_PowerISR_SSBusDataTable(dataSet.Tables["vJ_PowerISR_SSBus"]));
                }
                if (dataSet.Tables["dtBusesTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtBusesTransfDataTable(dataSet.Tables["dtBusesTransf"]));
                }
                if (dataSet.Tables["vJ_BusesTransfSchema"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_BusesTransfSchemaDataTable(dataSet.Tables["vJ_BusesTransfSchema"]));
                }
                if (dataSet.Tables["vJ_BusesTransfs"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_BusesTransfsDataTable(dataSet.Tables["vJ_BusesTransfs"]));
                }
                if (dataSet.Tables["vJ_MeasCableReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCableReportDataTable(dataSet.Tables["vJ_MeasCableReport"]));
                }
                if (dataSet.Tables["tJ_MeasVoltageTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasVoltageTransfDataTable(dataSet.Tables["tJ_MeasVoltageTransf"]));
                }
                if (dataSet.Tables["vJ_MeasCableReport2"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCableReport2DataTable(dataSet.Tables["vJ_MeasCableReport2"]));
                }
                if (dataSet.Tables["vJ_CableByCellMeas"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableByCellMeasDataTable(dataSet.Tables["vJ_CableByCellMeas"]));
                }
                if (dataSet.Tables["tJ_MeasCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasCellDataTable(dataSet.Tables["tJ_MeasCell"]));
                }
                if (dataSet.Tables["vJ_MeasCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCellDataTable(dataSet.Tables["vJ_MeasCell"]));
                }
                if (dataSet.Tables["vJ_MeasTransfVoltage"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasTransfVoltageDataTable(dataSet.Tables["vJ_MeasTransfVoltage"]));
                }
                base.DataSetName = dataSet.DataSetName;
                base.Prefix = dataSet.Prefix;
                base.Namespace = dataSet.Namespace;
                base.Locale = dataSet.Locale;
                base.CaseSensitive = dataSet.CaseSensitive;
                base.EnforceConstraints = dataSet.EnforceConstraints;
                base.Merge(dataSet, false, MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                base.ReadXmlSchema(new XmlTextReader(new StringReader(s)));
                this.InitExpressions();
            }
            base.GetSerializationData(info, context);
            CollectionChangeEventHandler value2 = new CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += value2;
            this.Relations.CollectionChanged += value2;
        }

        // Token: 0x170001B3 RID: 435
        // (get) Token: 0x0600086A RID: 2154 RVA: 0x0005F094 File Offset: 0x0005D294
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.tUserDataTable tUser
        {
            get
            {
                return this.tabletUser;
            }
        }

        // Token: 0x170001B4 RID: 436
        // (get) Token: 0x0600086B RID: 2155 RVA: 0x0005F09C File Offset: 0x0005D29C
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.tJ_RequestDocDataTable tJ_RequestDoc
        {
            get
            {
                return this.tabletJ_RequestDoc;
            }
        }

        // Token: 0x170001B5 RID: 437
        // (get) Token: 0x0600086C RID: 2156 RVA: 0x0005F0A4 File Offset: 0x0005D2A4
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.tJ_RequestDataTable tJ_Request
        {
            get
            {
                return this.tabletJ_Request;
            }
        }

        // Token: 0x170001B6 RID: 438
        // (get) Token: 0x0600086D RID: 2157 RVA: 0x0005F0AC File Offset: 0x0005D2AC
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.vJ_RequestDataTable vJ_Request
        {
            get
            {
                return this.tablevJ_Request;
            }
        }

        // Token: 0x170001B7 RID: 439
        // (get) Token: 0x0600086E RID: 2158 RVA: 0x0005F0B4 File Offset: 0x0005D2B4
        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_RequestForRepairDataTable vJ_RequestForRepair
        {
            get
            {
                return this.tablevJ_RequestForRepair;
            }
        }

        // Token: 0x170001B8 RID: 440
        // (get) Token: 0x0600086F RID: 2159 RVA: 0x0005F0BC File Offset: 0x0005D2BC
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.tJ_RequestForRepairDataTable tJ_RequestForRepair
        {
            get
            {
                return this.tabletJ_RequestForRepair;
            }
        }

        // Token: 0x170001B9 RID: 441
        // (get) Token: 0x06000870 RID: 2160 RVA: 0x0005F0C4 File Offset: 0x0005D2C4
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.tR_ClassifierDataTable tR_Classifier
        {
            get
            {
                return this.tabletR_Classifier;
            }
        }

        // Token: 0x170001BA RID: 442
        // (get) Token: 0x06000871 RID: 2161 RVA: 0x0005F0CC File Offset: 0x0005D2CC
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.tJ_RequestForRepairDailyDataTable tJ_RequestForRepairDaily
        {
            get
            {
                return this.tabletJ_RequestForRepairDaily;
            }
        }

        // Token: 0x170001BB RID: 443
        // (get) Token: 0x06000872 RID: 2162 RVA: 0x0005F0D4 File Offset: 0x0005D2D4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vJ_RequestForRepairDailyDataTable vJ_RequestForRepairDaily
        {
            get
            {
                return this.tablevJ_RequestForRepairDaily;
            }
        }

        // Token: 0x170001BC RID: 444
        // (get) Token: 0x06000873 RID: 2163 RVA: 0x0005F0DC File Offset: 0x0005D2DC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public DataSetGES.tL_RequestForRepairSchmObjListDataTable tL_RequestForRepairSchmObjList
        {
            get
            {
                return this.tabletL_RequestForRepairSchmObjList;
            }
        }

        // Token: 0x170001BD RID: 445
        // (get) Token: 0x06000874 RID: 2164 RVA: 0x0005F0E4 File Offset: 0x0005D2E4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.tJ_RequestForRepairDocDataTable tJ_RequestForRepairDoc
        {
            get
            {
                return this.tabletJ_RequestForRepairDoc;
            }
        }

        // Token: 0x170001BE RID: 446
        // (get) Token: 0x06000875 RID: 2165 RVA: 0x0005F0EC File Offset: 0x0005D2EC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public DataSetGES.tJ_RelayProtectionAutomationDataTable tJ_RelayProtectionAutomation
        {
            get
            {
                return this.tabletJ_RelayProtectionAutomation;
            }
        }

        // Token: 0x170001BF RID: 447
        // (get) Token: 0x06000876 RID: 2166 RVA: 0x0005F0F4 File Offset: 0x0005D2F4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.tJ_RelayProtectionAutomationValueDataTable tJ_RelayProtectionAutomationValue
        {
            get
            {
                return this.tabletJ_RelayProtectionAutomationValue;
            }
        }

        // Token: 0x170001C0 RID: 448
        // (get) Token: 0x06000877 RID: 2167 RVA: 0x0005F0FC File Offset: 0x0005D2FC
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.vJ_RelayProtectionAutomationDataTable vJ_RelayProtectionAutomation
        {
            get
            {
                return this.tablevJ_RelayProtectionAutomation;
            }
        }

        // Token: 0x170001C1 RID: 449
        // (get) Token: 0x06000878 RID: 2168 RVA: 0x0005F104 File Offset: 0x0005D304
        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.tJ_UpdateProgramDataTable tJ_UpdateProgram
        {
            get
            {
                return this.tabletJ_UpdateProgram;
            }
        }

        // Token: 0x170001C2 RID: 450
        // (get) Token: 0x06000879 RID: 2169 RVA: 0x0005F10C File Offset: 0x0005D30C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.tJ_UpdateProgramDocDataTable tJ_UpdateProgramDoc
        {
            get
            {
                return this.tabletJ_UpdateProgramDoc;
            }
        }

        // Token: 0x170001C3 RID: 451
        // (get) Token: 0x0600087A RID: 2170 RVA: 0x0005F114 File Offset: 0x0005D314
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.vJ_UpdateProgramDataTable vJ_UpdateProgram
        {
            get
            {
                return this.tablevJ_UpdateProgram;
            }
        }

        // Token: 0x170001C4 RID: 452
        // (get) Token: 0x0600087B RID: 2171 RVA: 0x0005F11C File Offset: 0x0005D31C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.tJ_UpdateProgramUserCheckDataTable tJ_UpdateProgramUserCheck
        {
            get
            {
                return this.tabletJ_UpdateProgramUserCheck;
            }
        }

        // Token: 0x170001C5 RID: 453
        // (get) Token: 0x0600087C RID: 2172 RVA: 0x0005F124 File Offset: 0x0005D324
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.tMeas_MeasurementDataTable tMeas_Measurement
        {
            get
            {
                return this.tabletMeas_Measurement;
            }
        }

        // Token: 0x170001C6 RID: 454
        // (get) Token: 0x0600087D RID: 2173 RVA: 0x0005F12C File Offset: 0x0005D32C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.tMeas_TransDataTable tMeas_Trans
        {
            get
            {
                return this.tabletMeas_Trans;
            }
        }

        // Token: 0x170001C7 RID: 455
        // (get) Token: 0x0600087E RID: 2174 RVA: 0x0005F134 File Offset: 0x0005D334
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.tMeas_CabDataTable tMeas_Cab
        {
            get
            {
                return this.tabletMeas_Cab;
            }
        }

        // Token: 0x170001C8 RID: 456
        // (get) Token: 0x0600087F RID: 2175 RVA: 0x0005F13C File Offset: 0x0005D33C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.tSchm_ObjListDataTable tSchm_ObjList
        {
            get
            {
                return this.tabletSchm_ObjList;
            }
        }

        // Token: 0x170001C9 RID: 457
        // (get) Token: 0x06000880 RID: 2176 RVA: 0x0005F144 File Offset: 0x0005D344
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vP_WorkerDataTable vP_Worker
        {
            get
            {
                return this.tablevP_Worker;
            }
        }

        // Token: 0x170001CA RID: 458
        // (get) Token: 0x06000881 RID: 2177 RVA: 0x0005F14C File Offset: 0x0005D34C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.tP_ValueListsDataTable tP_ValueLists
        {
            get
            {
                return this.tabletP_ValueLists;
            }
        }

        // Token: 0x170001CB RID: 459
        // (get) Token: 0x06000882 RID: 2178 RVA: 0x0005F154 File Offset: 0x0005D354
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.vJ_CableMakeupDataTable vJ_CableMakeup
        {
            get
            {
                return this.tablevJ_CableMakeup;
            }
        }

        // Token: 0x170001CC RID: 460
        // (get) Token: 0x06000883 RID: 2179 RVA: 0x0005F15C File Offset: 0x0005D35C
        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vJ_MeasPeriodBySubstationDataTable vJ_MeasPeriodBySubstation
        {
            get
            {
                return this.tablevJ_MeasPeriodBySubstation;
            }
        }

        // Token: 0x170001CD RID: 461
        // (get) Token: 0x06000884 RID: 2180 RVA: 0x0005F164 File Offset: 0x0005D364
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.fn_J_GetCellCableLVByTransfDataTable fn_J_GetCellCableLVByTransf
        {
            get
            {
                return this.tablefn_J_GetCellCableLVByTransf;
            }
        }

        // Token: 0x170001CE RID: 462
        // (get) Token: 0x06000885 RID: 2181 RVA: 0x0005F16C File Offset: 0x0005D36C
        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.tL_SchmAbnDataTable tL_SchmAbn
        {
            get
            {
                return this.tabletL_SchmAbn;
            }
        }

        // Token: 0x170001CF RID: 463
        // (get) Token: 0x06000886 RID: 2182 RVA: 0x0005F174 File Offset: 0x0005D374
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public DataSetGES.vJ_MeasAbnObjDataTable vJ_MeasAbnObj
        {
            get
            {
                return this.tablevJ_MeasAbnObj;
            }
        }

        // Token: 0x170001D0 RID: 464
        // (get) Token: 0x06000887 RID: 2183 RVA: 0x0005F17C File Offset: 0x0005D37C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vJ_GetMeasYearsDataTable vJ_GetMeasYears
        {
            get
            {
                return this.tablevJ_GetMeasYears;
            }
        }

        // Token: 0x170001D1 RID: 465
        // (get) Token: 0x06000888 RID: 2184 RVA: 0x0005F184 File Offset: 0x0005D384
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.fn_J_GetCellLVByTransfDataTable fn_J_GetCellLVByTransf
        {
            get
            {
                return this.tablefn_J_GetCellLVByTransf;
            }
        }

        // Token: 0x170001D2 RID: 466
        // (get) Token: 0x06000889 RID: 2185 RVA: 0x0005F18C File Offset: 0x0005D38C
        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.fn_J_MeasCableCalcResultsDataTable fn_J_MeasCableCalcResults
        {
            get
            {
                return this.tablefn_J_MeasCableCalcResults;
            }
        }

        // Token: 0x170001D3 RID: 467
        // (get) Token: 0x0600088A RID: 2186 RVA: 0x0005F194 File Offset: 0x0005D394
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.tR_CableMakeupDataTable tR_CableMakeup
        {
            get
            {
                return this.tabletR_CableMakeup;
            }
        }

        // Token: 0x170001D4 RID: 468
        // (get) Token: 0x0600088B RID: 2187 RVA: 0x0005F19C File Offset: 0x0005D39C
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.tR_CrossSectionDataTable tR_CrossSection
        {
            get
            {
                return this.tabletR_CrossSection;
            }
        }

        // Token: 0x170001D5 RID: 469
        // (get) Token: 0x0600088C RID: 2188 RVA: 0x0005F1A4 File Offset: 0x0005D3A4
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.tR_CableVoltageDataTable tR_CableVoltage
        {
            get
            {
                return this.tabletR_CableVoltage;
            }
        }

        // Token: 0x170001D6 RID: 470
        // (get) Token: 0x0600088D RID: 2189 RVA: 0x0005F1AC File Offset: 0x0005D3AC
        [Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.tR_CableAmperageDataTable tR_CableAmperage
        {
            get
            {
                return this.tabletR_CableAmperage;
            }
        }

        // Token: 0x170001D7 RID: 471
        // (get) Token: 0x0600088E RID: 2190 RVA: 0x0005F1B4 File Offset: 0x0005D3B4
        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DataSetGES.tR_CableWiresDataTable tR_CableWires
        {
            get
            {
                return this.tabletR_CableWires;
            }
        }

        // Token: 0x170001D8 RID: 472
        // (get) Token: 0x0600088F RID: 2191 RVA: 0x0005F1BC File Offset: 0x0005D3BC
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_CableReferenceDataTable vJ_CableReference
        {
            get
            {
                return this.tablevJ_CableReference;
            }
        }

        // Token: 0x170001D9 RID: 473
        // (get) Token: 0x06000890 RID: 2192 RVA: 0x0005F1C4 File Offset: 0x0005D3C4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.vJ_TransfsDataTable vJ_Transfs
        {
            get
            {
                return this.tablevJ_Transfs;
            }
        }

        // Token: 0x170001DA RID: 474
        // (get) Token: 0x06000891 RID: 2193 RVA: 0x0005F1CC File Offset: 0x0005D3CC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.dtMeasCableRatioDataTable dtMeasCableRatio
        {
            get
            {
                return this.tabledtMeasCableRatio;
            }
        }

        // Token: 0x170001DB RID: 475
        // (get) Token: 0x06000892 RID: 2194 RVA: 0x0005F1D4 File Offset: 0x0005D3D4
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.fn_J_GetBusLVByTransfDataTable fn_J_GetBusLVByTransf
        {
            get
            {
                return this.tablefn_J_GetBusLVByTransf;
            }
        }

        // Token: 0x170001DC RID: 476
        // (get) Token: 0x06000893 RID: 2195 RVA: 0x0005F1DC File Offset: 0x0005D3DC
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.vJ_MeasurementReportDataTable vJ_MeasurementReport
        {
            get
            {
                return this.tablevJ_MeasurementReport;
            }
        }

        // Token: 0x170001DD RID: 477
        // (get) Token: 0x06000894 RID: 2196 RVA: 0x0005F1E4 File Offset: 0x0005D3E4
        [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.dtMeasTransfAmperageDopDataReportDataTable dtMeasTransfAmperageDopDataReport
        {
            get
            {
                return this.tabledtMeasTransfAmperageDopDataReport;
            }
        }

        // Token: 0x170001DE RID: 478
        // (get) Token: 0x06000895 RID: 2197 RVA: 0x0005F1EC File Offset: 0x0005D3EC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.fn_J_ExcelessLoadReportDataTable fn_J_ExcelessLoadReport
        {
            get
            {
                return this.tablefn_J_ExcelessLoadReport;
            }
        }

        // Token: 0x170001DF RID: 479
        // (get) Token: 0x06000896 RID: 2198 RVA: 0x0005F1F4 File Offset: 0x0005D3F4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.dtExcelessLoadAddlReportDataTable dtExcelessLoadAddlReport
        {
            get
            {
                return this.tabledtExcelessLoadAddlReport;
            }
        }

        // Token: 0x170001E0 RID: 480
        // (get) Token: 0x06000897 RID: 2199 RVA: 0x0005F1FC File Offset: 0x0005D3FC
        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vJ_CoefficientLoadingDataTable vJ_CoefficientLoading
        {
            get
            {
                return this.tablevJ_CoefficientLoading;
            }
        }

        // Token: 0x170001E1 RID: 481
        // (get) Token: 0x06000898 RID: 2200 RVA: 0x0005F204 File Offset: 0x0005D404
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.dtCoefficientLoadingAddlDataTable dtCoefficientLoadingAddl
        {
            get
            {
                return this.tabledtCoefficientLoadingAddl;
            }
        }

        // Token: 0x170001E2 RID: 482
        // (get) Token: 0x06000899 RID: 2201 RVA: 0x0005F20C File Offset: 0x0005D40C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.vJ_CoefficientIrregularityDataTable vJ_CoefficientIrregularity
        {
            get
            {
                return this.tablevJ_CoefficientIrregularity;
            }
        }

        // Token: 0x170001E3 RID: 483
        // (get) Token: 0x0600089A RID: 2202 RVA: 0x0005F214 File Offset: 0x0005D414
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vP_SubstationTransfDataTable vP_SubstationTransf
        {
            get
            {
                return this.tablevP_SubstationTransf;
            }
        }

        // Token: 0x170001E4 RID: 484
        // (get) Token: 0x0600089B RID: 2203 RVA: 0x0005F21C File Offset: 0x0005D41C
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.tR_DocTemplateDataTable tR_DocTemplate
        {
            get
            {
                return this.tabletR_DocTemplate;
            }
        }

        // Token: 0x170001E5 RID: 485
        // (get) Token: 0x0600089C RID: 2204 RVA: 0x0005F224 File Offset: 0x0005D424
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.fn_J_GetCellTransfByBusLVDataTable fn_J_GetCellTransfByBusLV
        {
            get
            {
                return this.tablefn_J_GetCellTransfByBusLV;
            }
        }

        // Token: 0x170001E6 RID: 486
        // (get) Token: 0x0600089D RID: 2205 RVA: 0x0005F22C File Offset: 0x0005D42C
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.dtBusesDataTable dtBuses
        {
            get
            {
                return this.tabledtBuses;
            }
        }

        // Token: 0x170001E7 RID: 487
        // (get) Token: 0x0600089E RID: 2206 RVA: 0x0005F234 File Offset: 0x0005D434
        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.dtCellsDataTable dtCells
        {
            get
            {
                return this.tabledtCells;
            }
        }

        // Token: 0x170001E8 RID: 488
        // (get) Token: 0x0600089F RID: 2207 RVA: 0x0005F23C File Offset: 0x0005D43C
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.tJ_MeasurementDataTable tJ_Measurement
        {
            get
            {
                return this.tabletJ_Measurement;
            }
        }

        // Token: 0x170001E9 RID: 489
        // (get) Token: 0x060008A0 RID: 2208 RVA: 0x0005F244 File Offset: 0x0005D444
        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_MeasTransfPassportDataTable vJ_MeasTransfPassport
        {
            get
            {
                return this.tablevJ_MeasTransfPassport;
            }
        }

        // Token: 0x170001EA RID: 490
        // (get) Token: 0x060008A1 RID: 2209 RVA: 0x0005F24C File Offset: 0x0005D44C
        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.fn_J_MeasTransfPassportDataTable fn_J_MeasTransfPassport
        {
            get
            {
                return this.tablefn_J_MeasTransfPassport;
            }
        }

        // Token: 0x170001EB RID: 491
        // (get) Token: 0x060008A2 RID: 2210 RVA: 0x0005F254 File Offset: 0x0005D454
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.vJ_MeasCableDataTable vJ_MeasCable
        {
            get
            {
                return this.tablevJ_MeasCable;
            }
        }

        // Token: 0x170001EC RID: 492
        // (get) Token: 0x060008A3 RID: 2211 RVA: 0x0005F25C File Offset: 0x0005D45C
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.dtMeasCellRatioDataTable dtMeasCellRatio
        {
            get
            {
                return this.tabledtMeasCellRatio;
            }
        }

        // Token: 0x170001ED RID: 493
        // (get) Token: 0x060008A4 RID: 2212 RVA: 0x0005F264 File Offset: 0x0005D464
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.tSchm_ObjList1DataTable tSchm_ObjList1
        {
            get
            {
                return this.tabletSchm_ObjList1;
            }
        }

        // Token: 0x170001EE RID: 494
        // (get) Token: 0x060008A5 RID: 2213 RVA: 0x0005F26C File Offset: 0x0005D46C
        [Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_TransfBySubstationDataTable vJ_TransfBySubstation
        {
            get
            {
                return this.tablevJ_TransfBySubstation;
            }
        }

        // Token: 0x170001EF RID: 495
        // (get) Token: 0x060008A6 RID: 2214 RVA: 0x0005F274 File Offset: 0x0005D474
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_PowerISR_TransfDataTable vJ_PowerISR_Transf
        {
            get
            {
                return this.tablevJ_PowerISR_Transf;
            }
        }

        // Token: 0x170001F0 RID: 496
        // (get) Token: 0x060008A7 RID: 2215 RVA: 0x0005F27C File Offset: 0x0005D47C
        [Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_PowerISR_SSTransfDataTable vJ_PowerISR_SSTransf
        {
            get
            {
                return this.tablevJ_PowerISR_SSTransf;
            }
        }

        // Token: 0x170001F1 RID: 497
        // (get) Token: 0x060008A8 RID: 2216 RVA: 0x0005F284 File Offset: 0x0005D484
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.dtAmountFreeCapasityDataTable dtAmountFreeCapasity
        {
            get
            {
                return this.tabledtAmountFreeCapasity;
            }
        }

        // Token: 0x170001F2 RID: 498
        // (get) Token: 0x060008A9 RID: 2217 RVA: 0x0005F28C File Offset: 0x0005D48C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.fn_J_GetCellTransfByBusHVDataTable fn_J_GetCellTransfByBusHV
        {
            get
            {
                return this.tablefn_J_GetCellTransfByBusHV;
            }
        }

        // Token: 0x170001F3 RID: 499
        // (get) Token: 0x060008AA RID: 2218 RVA: 0x0005F294 File Offset: 0x0005D494
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.tJ_MeasCableDataTable tJ_MeasCable
        {
            get
            {
                return this.tabletJ_MeasCable;
            }
        }

        // Token: 0x170001F4 RID: 500
        // (get) Token: 0x060008AB RID: 2219 RVA: 0x0005F29C File Offset: 0x0005D49C
        [Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_LastCableInfoDataTable vJ_LastCableInfo
        {
            get
            {
                return this.tablevJ_LastCableInfo;
            }
        }

        // Token: 0x170001F5 RID: 501
        // (get) Token: 0x060008AC RID: 2220 RVA: 0x0005F2A4 File Offset: 0x0005D4A4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vJ_TransfByCellDataTable vJ_TransfByCell
        {
            get
            {
                return this.tablevJ_TransfByCell;
            }
        }

        // Token: 0x170001F6 RID: 502
        // (get) Token: 0x060008AD RID: 2221 RVA: 0x0005F2AC File Offset: 0x0005D4AC
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_CableByCellDataTable vJ_CableByCell
        {
            get
            {
                return this.tablevJ_CableByCell;
            }
        }

        // Token: 0x170001F7 RID: 503
        // (get) Token: 0x060008AE RID: 2222 RVA: 0x0005F2B4 File Offset: 0x0005D4B4
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.fn_J_GetBusMVByTransfDataTable fn_J_GetBusMVByTransf
        {
            get
            {
                return this.tablefn_J_GetBusMVByTransf;
            }
        }

        // Token: 0x170001F8 RID: 504
        // (get) Token: 0x060008AF RID: 2223 RVA: 0x0005F2BC File Offset: 0x0005D4BC
        [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.tJ_MeasAmperageTransfDataTable tJ_MeasAmperageTransf
        {
            get
            {
                return this.tabletJ_MeasAmperageTransf;
            }
        }

        // Token: 0x170001F9 RID: 505
        // (get) Token: 0x060008B0 RID: 2224 RVA: 0x0005F2C4 File Offset: 0x0005D4C4
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.tSchm_ObjList2DataTable tSchm_ObjList2
        {
            get
            {
                return this.tabletSchm_ObjList2;
            }
        }

        // Token: 0x170001FA RID: 506
        // (get) Token: 0x060008B1 RID: 2225 RVA: 0x0005F2CC File Offset: 0x0005D4CC
        [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.tSchm_ObjList3DataTable tSchm_ObjList3
        {
            get
            {
                return this.tabletSchm_ObjList3;
            }
        }

        // Token: 0x170001FB RID: 507
        // (get) Token: 0x060008B2 RID: 2226 RVA: 0x0005F2D4 File Offset: 0x0005D4D4
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.vP_TransfBySubstationDataTable vP_TransfBySubstation
        {
            get
            {
                return this.tablevP_TransfBySubstation;
            }
        }

        // Token: 0x170001FC RID: 508
        // (get) Token: 0x060008B3 RID: 2227 RVA: 0x0005F2DC File Offset: 0x0005D4DC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable vJ_MeasAmpSubTransf_TEMP
        {
            get
            {
                return this.tablevJ_MeasAmpSubTransf_TEMP;
            }
        }

        // Token: 0x170001FD RID: 509
        // (get) Token: 0x060008B4 RID: 2228 RVA: 0x0005F2E4 File Offset: 0x0005D4E4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode]
        public DataSetGES.vJ_MeasSubTransf_TEMPDataTable vJ_MeasSubTransf_TEMP
        {
            get
            {
                return this.tablevJ_MeasSubTransf_TEMP;
            }
        }

        // Token: 0x170001FE RID: 510
        // (get) Token: 0x060008B5 RID: 2229 RVA: 0x0005F2EC File Offset: 0x0005D4EC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.fn_J_GetTransfByBusLVDataTable fn_J_GetTransfByBusLV
        {
            get
            {
                return this.tablefn_J_GetTransfByBusLV;
            }
        }

        // Token: 0x170001FF RID: 511
        // (get) Token: 0x060008B6 RID: 2230 RVA: 0x0005F2F4 File Offset: 0x0005D4F4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.vP_SubstationBusDataTable vP_SubstationBus
        {
            get
            {
                return this.tablevP_SubstationBus;
            }
        }

        // Token: 0x17000200 RID: 512
        // (get) Token: 0x060008B7 RID: 2231 RVA: 0x0005F2FC File Offset: 0x0005D4FC
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_CellByBusDataTable vJ_CellByBus
        {
            get
            {
                return this.tablevJ_CellByBus;
            }
        }

        // Token: 0x17000201 RID: 513
        // (get) Token: 0x060008B8 RID: 2232 RVA: 0x0005F304 File Offset: 0x0005D504
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), Browsable(false)]
        public DataSetGES.vJ_PowerISR_SSBusDataTable vJ_PowerISR_SSBus
        {
            get
            {
                return this.tablevJ_PowerISR_SSBus;
            }
        }

        // Token: 0x17000202 RID: 514
        // (get) Token: 0x060008B9 RID: 2233 RVA: 0x0005F30C File Offset: 0x0005D50C
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.dtBusesTransfDataTable dtBusesTransf
        {
            get
            {
                return this.tabledtBusesTransf;
            }
        }

        // Token: 0x17000203 RID: 515
        // (get) Token: 0x060008BA RID: 2234 RVA: 0x0005F314 File Offset: 0x0005D514
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.vJ_BusesTransfSchemaDataTable vJ_BusesTransfSchema
        {
            get
            {
                return this.tablevJ_BusesTransfSchema;
            }
        }

        // Token: 0x17000204 RID: 516
        // (get) Token: 0x060008BB RID: 2235 RVA: 0x0005F31C File Offset: 0x0005D51C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.vJ_BusesTransfsDataTable vJ_BusesTransfs
        {
            get
            {
                return this.tablevJ_BusesTransfs;
            }
        }

        // Token: 0x17000205 RID: 517
        // (get) Token: 0x060008BC RID: 2236 RVA: 0x0005F324 File Offset: 0x0005D524
        [DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
        public DataSetGES.vJ_MeasCableReportDataTable vJ_MeasCableReport
        {
            get
            {
                return this.tablevJ_MeasCableReport;
            }
        }

        // Token: 0x17000206 RID: 518
        // (get) Token: 0x060008BD RID: 2237 RVA: 0x0005F32C File Offset: 0x0005D52C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.tJ_MeasVoltageTransfDataTable tJ_MeasVoltageTransf
        {
            get
            {
                return this.tabletJ_MeasVoltageTransf;
            }
        }

        // Token: 0x17000207 RID: 519
        // (get) Token: 0x060008BE RID: 2238 RVA: 0x0005F334 File Offset: 0x0005D534
        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_MeasCableReport2DataTable vJ_MeasCableReport2
        {
            get
            {
                return this.tablevJ_MeasCableReport2;
            }
        }

        // Token: 0x17000208 RID: 520
        // (get) Token: 0x060008BF RID: 2239 RVA: 0x0005F33C File Offset: 0x0005D53C
        [DebuggerNonUserCode, Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetGES.vJ_CableByCellMeasDataTable vJ_CableByCellMeas
        {
            get
            {
                return this.tablevJ_CableByCellMeas;
            }
        }

        // Token: 0x17000209 RID: 521
        // (get) Token: 0x060008C0 RID: 2240 RVA: 0x0005F344 File Offset: 0x0005D544
        [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        public DataSetGES.tJ_MeasCellDataTable tJ_MeasCell
        {
            get
            {
                return this.tabletJ_MeasCell;
            }
        }

        // Token: 0x1700020A RID: 522
        // (get) Token: 0x060008C1 RID: 2241 RVA: 0x0005F34C File Offset: 0x0005D54C
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
        public DataSetGES.vJ_MeasCellDataTable vJ_MeasCell
        {
            get
            {
                return this.tablevJ_MeasCell;
            }
        }

        // Token: 0x1700020B RID: 523
        // (get) Token: 0x060008C2 RID: 2242 RVA: 0x0005F354 File Offset: 0x0005D554
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DesignerSerializationVisibility(DesignerSerializationVisibility.Content), DebuggerNonUserCode]
        public DataSetGES.vJ_MeasTransfVoltageDataTable vJ_MeasTransfVoltage
        {
            get
            {
                return this.tablevJ_MeasTransfVoltage;
            }
        }

        // Token: 0x1700020C RID: 524
        // (get) Token: 0x060008C3 RID: 2243 RVA: 0x0005F35C File Offset: 0x0005D55C
        // (set) Token: 0x060008C4 RID: 2244 RVA: 0x0005F364 File Offset: 0x0005D564
        [Browsable(true), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)]
        public override SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        // Token: 0x1700020D RID: 525
        // (get) Token: 0x060008C5 RID: 2245 RVA: 0x0005F36D File Offset: 0x0005D56D
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
        public new DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        // Token: 0x1700020E RID: 526
        // (get) Token: 0x060008C6 RID: 2246 RVA: 0x0005F375 File Offset: 0x0005D575
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden), DebuggerNonUserCode]
        public new DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        // Token: 0x060008C7 RID: 2247 RVA: 0x0005F37D File Offset: 0x0005D57D
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected override void InitializeDerivedDataSet()
        {
            base.BeginInit();
            this.InitClass();
            base.EndInit();
        }

        // Token: 0x060008C8 RID: 2248 RVA: 0x0005F394 File Offset: 0x0005D594
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public override DataSet Clone()
        {
            DataSetGES dataSetGES = (DataSetGES)base.Clone();
            dataSetGES.InitVars();
            dataSetGES.InitExpressions();
            dataSetGES.SchemaSerializationMode = this.SchemaSerializationMode;
            return dataSetGES;
        }

        // Token: 0x060008C9 RID: 2249 RVA: 0x0005F3C6 File Offset: 0x0005D5C6
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        // Token: 0x060008CA RID: 2250 RVA: 0x0005F3C9 File Offset: 0x0005D5C9
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        // Token: 0x060008CB RID: 2251 RVA: 0x0005F3CC File Offset: 0x0005D5CC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected override void ReadXmlSerializable(XmlReader reader)
        {
            if (base.DetermineSchemaSerializationMode(reader) == SchemaSerializationMode.IncludeSchema)
            {
                this.Reset();
                DataSet dataSet = new DataSet();
                dataSet.ReadXml(reader);
                if (dataSet.Tables["tUser"] != null)
                {
                    base.Tables.Add(new DataSetGES.tUserDataTable(dataSet.Tables["tUser"]));
                }
                if (dataSet.Tables["tJ_RequestDoc"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestDocDataTable(dataSet.Tables["tJ_RequestDoc"]));
                }
                if (dataSet.Tables["tJ_Request"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestDataTable(dataSet.Tables["tJ_Request"]));
                }
                if (dataSet.Tables["vJ_Request"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RequestDataTable(dataSet.Tables["vJ_Request"]));
                }
                if (dataSet.Tables["vJ_RequestForRepair"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RequestForRepairDataTable(dataSet.Tables["vJ_RequestForRepair"]));
                }
                if (dataSet.Tables["tJ_RequestForRepair"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestForRepairDataTable(dataSet.Tables["tJ_RequestForRepair"]));
                }
                if (dataSet.Tables["tR_Classifier"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_ClassifierDataTable(dataSet.Tables["tR_Classifier"]));
                }
                if (dataSet.Tables["tJ_RequestForRepairDaily"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestForRepairDailyDataTable(dataSet.Tables["tJ_RequestForRepairDaily"]));
                }
                if (dataSet.Tables["vJ_RequestForRepairDaily"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RequestForRepairDailyDataTable(dataSet.Tables["vJ_RequestForRepairDaily"]));
                }
                if (dataSet.Tables["tL_RequestForRepairSchmObjList"] != null)
                {
                    base.Tables.Add(new DataSetGES.tL_RequestForRepairSchmObjListDataTable(dataSet.Tables["tL_RequestForRepairSchmObjList"]));
                }
                if (dataSet.Tables["tJ_RequestForRepairDoc"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RequestForRepairDocDataTable(dataSet.Tables["tJ_RequestForRepairDoc"]));
                }
                if (dataSet.Tables["tJ_RelayProtectionAutomation"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RelayProtectionAutomationDataTable(dataSet.Tables["tJ_RelayProtectionAutomation"]));
                }
                if (dataSet.Tables["tJ_RelayProtectionAutomationValue"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_RelayProtectionAutomationValueDataTable(dataSet.Tables["tJ_RelayProtectionAutomationValue"]));
                }
                if (dataSet.Tables["vJ_RelayProtectionAutomation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_RelayProtectionAutomationDataTable(dataSet.Tables["vJ_RelayProtectionAutomation"]));
                }
                if (dataSet.Tables["tJ_UpdateProgram"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_UpdateProgramDataTable(dataSet.Tables["tJ_UpdateProgram"]));
                }
                if (dataSet.Tables["tJ_UpdateProgramDoc"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_UpdateProgramDocDataTable(dataSet.Tables["tJ_UpdateProgramDoc"]));
                }
                if (dataSet.Tables["vJ_UpdateProgram"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_UpdateProgramDataTable(dataSet.Tables["vJ_UpdateProgram"]));
                }
                if (dataSet.Tables["tJ_UpdateProgramUserCheck"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_UpdateProgramUserCheckDataTable(dataSet.Tables["tJ_UpdateProgramUserCheck"]));
                }
                if (dataSet.Tables["tMeas_Measurement"] != null)
                {
                    base.Tables.Add(new DataSetGES.tMeas_MeasurementDataTable(dataSet.Tables["tMeas_Measurement"]));
                }
                if (dataSet.Tables["tMeas_Trans"] != null)
                {
                    base.Tables.Add(new DataSetGES.tMeas_TransDataTable(dataSet.Tables["tMeas_Trans"]));
                }
                if (dataSet.Tables["tMeas_Cab"] != null)
                {
                    base.Tables.Add(new DataSetGES.tMeas_CabDataTable(dataSet.Tables["tMeas_Cab"]));
                }
                if (dataSet.Tables["tSchm_ObjList"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjListDataTable(dataSet.Tables["tSchm_ObjList"]));
                }
                if (dataSet.Tables["vP_Worker"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_WorkerDataTable(dataSet.Tables["vP_Worker"]));
                }
                if (dataSet.Tables["tP_ValueLists"] != null)
                {
                    base.Tables.Add(new DataSetGES.tP_ValueListsDataTable(dataSet.Tables["tP_ValueLists"]));
                }
                if (dataSet.Tables["vJ_CableMakeup"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableMakeupDataTable(dataSet.Tables["vJ_CableMakeup"]));
                }
                if (dataSet.Tables["vJ_MeasPeriodBySubstation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasPeriodBySubstationDataTable(dataSet.Tables["vJ_MeasPeriodBySubstation"]));
                }
                if (dataSet.Tables["fn_J_GetCellCableLVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellCableLVByTransfDataTable(dataSet.Tables["fn_J_GetCellCableLVByTransf"]));
                }
                if (dataSet.Tables["tL_SchmAbn"] != null)
                {
                    base.Tables.Add(new DataSetGES.tL_SchmAbnDataTable(dataSet.Tables["tL_SchmAbn"]));
                }
                if (dataSet.Tables["vJ_MeasAbnObj"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasAbnObjDataTable(dataSet.Tables["vJ_MeasAbnObj"]));
                }
                if (dataSet.Tables["vJ_GetMeasYears"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_GetMeasYearsDataTable(dataSet.Tables["vJ_GetMeasYears"]));
                }
                if (dataSet.Tables["fn_J_GetCellLVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellLVByTransfDataTable(dataSet.Tables["fn_J_GetCellLVByTransf"]));
                }
                if (dataSet.Tables["fn_J_MeasCableCalcResults"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_MeasCableCalcResultsDataTable(dataSet.Tables["fn_J_MeasCableCalcResults"]));
                }
                if (dataSet.Tables["tR_CableMakeup"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableMakeupDataTable(dataSet.Tables["tR_CableMakeup"]));
                }
                if (dataSet.Tables["tR_CrossSection"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CrossSectionDataTable(dataSet.Tables["tR_CrossSection"]));
                }
                if (dataSet.Tables["tR_CableVoltage"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableVoltageDataTable(dataSet.Tables["tR_CableVoltage"]));
                }
                if (dataSet.Tables["tR_CableAmperage"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableAmperageDataTable(dataSet.Tables["tR_CableAmperage"]));
                }
                if (dataSet.Tables["tR_CableWires"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_CableWiresDataTable(dataSet.Tables["tR_CableWires"]));
                }
                if (dataSet.Tables["vJ_CableReference"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableReferenceDataTable(dataSet.Tables["vJ_CableReference"]));
                }
                if (dataSet.Tables["vJ_Transfs"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_TransfsDataTable(dataSet.Tables["vJ_Transfs"]));
                }
                if (dataSet.Tables["dtMeasCableRatio"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtMeasCableRatioDataTable(dataSet.Tables["dtMeasCableRatio"]));
                }
                if (dataSet.Tables["fn_J_GetBusLVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetBusLVByTransfDataTable(dataSet.Tables["fn_J_GetBusLVByTransf"]));
                }
                if (dataSet.Tables["vJ_MeasurementReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasurementReportDataTable(dataSet.Tables["vJ_MeasurementReport"]));
                }
                if (dataSet.Tables["dtMeasTransfAmperageDopDataReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtMeasTransfAmperageDopDataReportDataTable(dataSet.Tables["dtMeasTransfAmperageDopDataReport"]));
                }
                if (dataSet.Tables["fn_J_ExcelessLoadReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_ExcelessLoadReportDataTable(dataSet.Tables["fn_J_ExcelessLoadReport"]));
                }
                if (dataSet.Tables["dtExcelessLoadAddlReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtExcelessLoadAddlReportDataTable(dataSet.Tables["dtExcelessLoadAddlReport"]));
                }
                if (dataSet.Tables["vJ_CoefficientLoading"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CoefficientLoadingDataTable(dataSet.Tables["vJ_CoefficientLoading"]));
                }
                if (dataSet.Tables["dtCoefficientLoadingAddl"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtCoefficientLoadingAddlDataTable(dataSet.Tables["dtCoefficientLoadingAddl"]));
                }
                if (dataSet.Tables["vJ_CoefficientIrregularity"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CoefficientIrregularityDataTable(dataSet.Tables["vJ_CoefficientIrregularity"]));
                }
                if (dataSet.Tables["vP_SubstationTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_SubstationTransfDataTable(dataSet.Tables["vP_SubstationTransf"]));
                }
                if (dataSet.Tables["tR_DocTemplate"] != null)
                {
                    base.Tables.Add(new DataSetGES.tR_DocTemplateDataTable(dataSet.Tables["tR_DocTemplate"]));
                }
                if (dataSet.Tables["fn_J_GetCellTransfByBusLV"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellTransfByBusLVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusLV"]));
                }
                if (dataSet.Tables["dtBuses"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtBusesDataTable(dataSet.Tables["dtBuses"]));
                }
                if (dataSet.Tables["dtCells"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtCellsDataTable(dataSet.Tables["dtCells"]));
                }
                if (dataSet.Tables["tJ_Measurement"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasurementDataTable(dataSet.Tables["tJ_Measurement"]));
                }
                if (dataSet.Tables["vJ_MeasTransfPassport"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasTransfPassportDataTable(dataSet.Tables["vJ_MeasTransfPassport"]));
                }
                if (dataSet.Tables["fn_J_MeasTransfPassport"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_MeasTransfPassportDataTable(dataSet.Tables["fn_J_MeasTransfPassport"]));
                }
                if (dataSet.Tables["vJ_MeasCable"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCableDataTable(dataSet.Tables["vJ_MeasCable"]));
                }
                if (dataSet.Tables["dtMeasCellRatio"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtMeasCellRatioDataTable(dataSet.Tables["dtMeasCellRatio"]));
                }
                if (dataSet.Tables["tSchm_ObjList1"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjList1DataTable(dataSet.Tables["tSchm_ObjList1"]));
                }
                if (dataSet.Tables["vJ_TransfBySubstation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_TransfBySubstationDataTable(dataSet.Tables["vJ_TransfBySubstation"]));
                }
                if (dataSet.Tables["vJ_PowerISR_Transf"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_PowerISR_TransfDataTable(dataSet.Tables["vJ_PowerISR_Transf"]));
                }
                if (dataSet.Tables["vJ_PowerISR_SSTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_PowerISR_SSTransfDataTable(dataSet.Tables["vJ_PowerISR_SSTransf"]));
                }
                if (dataSet.Tables["dtAmountFreeCapasity"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtAmountFreeCapasityDataTable(dataSet.Tables["dtAmountFreeCapasity"]));
                }
                if (dataSet.Tables["fn_J_GetCellTransfByBusHV"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetCellTransfByBusHVDataTable(dataSet.Tables["fn_J_GetCellTransfByBusHV"]));
                }
                if (dataSet.Tables["tJ_MeasCable"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasCableDataTable(dataSet.Tables["tJ_MeasCable"]));
                }
                if (dataSet.Tables["vJ_LastCableInfo"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_LastCableInfoDataTable(dataSet.Tables["vJ_LastCableInfo"]));
                }
                if (dataSet.Tables["vJ_TransfByCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_TransfByCellDataTable(dataSet.Tables["vJ_TransfByCell"]));
                }
                if (dataSet.Tables["vJ_CableByCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableByCellDataTable(dataSet.Tables["vJ_CableByCell"]));
                }
                if (dataSet.Tables["fn_J_GetBusMVByTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetBusMVByTransfDataTable(dataSet.Tables["fn_J_GetBusMVByTransf"]));
                }
                if (dataSet.Tables["tJ_MeasAmperageTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasAmperageTransfDataTable(dataSet.Tables["tJ_MeasAmperageTransf"]));
                }
                if (dataSet.Tables["tSchm_ObjList2"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjList2DataTable(dataSet.Tables["tSchm_ObjList2"]));
                }
                if (dataSet.Tables["tSchm_ObjList3"] != null)
                {
                    base.Tables.Add(new DataSetGES.tSchm_ObjList3DataTable(dataSet.Tables["tSchm_ObjList3"]));
                }
                if (dataSet.Tables["vP_TransfBySubstation"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_TransfBySubstationDataTable(dataSet.Tables["vP_TransfBySubstation"]));
                }
                if (dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasAmpSubTransf_TEMP"]));
                }
                if (dataSet.Tables["vJ_MeasSubTransf_TEMP"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasSubTransf_TEMPDataTable(dataSet.Tables["vJ_MeasSubTransf_TEMP"]));
                }
                if (dataSet.Tables["fn_J_GetTransfByBusLV"] != null)
                {
                    base.Tables.Add(new DataSetGES.fn_J_GetTransfByBusLVDataTable(dataSet.Tables["fn_J_GetTransfByBusLV"]));
                }
                if (dataSet.Tables["vP_SubstationBus"] != null)
                {
                    base.Tables.Add(new DataSetGES.vP_SubstationBusDataTable(dataSet.Tables["vP_SubstationBus"]));
                }
                if (dataSet.Tables["vJ_CellByBus"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CellByBusDataTable(dataSet.Tables["vJ_CellByBus"]));
                }
                if (dataSet.Tables["vJ_PowerISR_SSBus"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_PowerISR_SSBusDataTable(dataSet.Tables["vJ_PowerISR_SSBus"]));
                }
                if (dataSet.Tables["dtBusesTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.dtBusesTransfDataTable(dataSet.Tables["dtBusesTransf"]));
                }
                if (dataSet.Tables["vJ_BusesTransfSchema"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_BusesTransfSchemaDataTable(dataSet.Tables["vJ_BusesTransfSchema"]));
                }
                if (dataSet.Tables["vJ_BusesTransfs"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_BusesTransfsDataTable(dataSet.Tables["vJ_BusesTransfs"]));
                }
                if (dataSet.Tables["vJ_MeasCableReport"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCableReportDataTable(dataSet.Tables["vJ_MeasCableReport"]));
                }
                if (dataSet.Tables["tJ_MeasVoltageTransf"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasVoltageTransfDataTable(dataSet.Tables["tJ_MeasVoltageTransf"]));
                }
                if (dataSet.Tables["vJ_MeasCableReport2"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCableReport2DataTable(dataSet.Tables["vJ_MeasCableReport2"]));
                }
                if (dataSet.Tables["vJ_CableByCellMeas"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_CableByCellMeasDataTable(dataSet.Tables["vJ_CableByCellMeas"]));
                }
                if (dataSet.Tables["tJ_MeasCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.tJ_MeasCellDataTable(dataSet.Tables["tJ_MeasCell"]));
                }
                if (dataSet.Tables["vJ_MeasCell"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasCellDataTable(dataSet.Tables["vJ_MeasCell"]));
                }
                if (dataSet.Tables["vJ_MeasTransfVoltage"] != null)
                {
                    base.Tables.Add(new DataSetGES.vJ_MeasTransfVoltageDataTable(dataSet.Tables["vJ_MeasTransfVoltage"]));
                }
                base.DataSetName = dataSet.DataSetName;
                base.Prefix = dataSet.Prefix;
                base.Namespace = dataSet.Namespace;
                base.Locale = dataSet.Locale;
                base.CaseSensitive = dataSet.CaseSensitive;
                base.EnforceConstraints = dataSet.EnforceConstraints;
                base.Merge(dataSet, false, MissingSchemaAction.Add);
                this.InitVars();
                return;
            }
            base.ReadXml(reader);
            this.InitVars();
        }

        // Token: 0x060008CC RID: 2252 RVA: 0x000605C4 File Offset: 0x0005E7C4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected override XmlSchema GetSchemaSerializable()
        {
            MemoryStream memoryStream = new MemoryStream();
            base.WriteXmlSchema(new XmlTextWriter(memoryStream, null));
            memoryStream.Position = 0L;
            return XmlSchema.Read(new XmlTextReader(memoryStream), null);
        }

        // Token: 0x060008CD RID: 2253 RVA: 0x000605F8 File Offset: 0x0005E7F8
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        // Token: 0x060008CE RID: 2254 RVA: 0x00060604 File Offset: 0x0005E804
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        internal void InitVars(bool initTable)
        {
            this.tabletUser = (DataSetGES.tUserDataTable)base.Tables["tUser"];
            if (initTable && this.tabletUser != null)
            {
                this.tabletUser.InitVars();
            }
            this.tabletJ_RequestDoc = (DataSetGES.tJ_RequestDocDataTable)base.Tables["tJ_RequestDoc"];
            if (initTable && this.tabletJ_RequestDoc != null)
            {
                this.tabletJ_RequestDoc.InitVars();
            }
            this.tabletJ_Request = (DataSetGES.tJ_RequestDataTable)base.Tables["tJ_Request"];
            if (initTable && this.tabletJ_Request != null)
            {
                this.tabletJ_Request.InitVars();
            }
            this.tablevJ_Request = (DataSetGES.vJ_RequestDataTable)base.Tables["vJ_Request"];
            if (initTable && this.tablevJ_Request != null)
            {
                this.tablevJ_Request.InitVars();
            }
            this.tablevJ_RequestForRepair = (DataSetGES.vJ_RequestForRepairDataTable)base.Tables["vJ_RequestForRepair"];
            if (initTable && this.tablevJ_RequestForRepair != null)
            {
                this.tablevJ_RequestForRepair.InitVars();
            }
            this.tabletJ_RequestForRepair = (DataSetGES.tJ_RequestForRepairDataTable)base.Tables["tJ_RequestForRepair"];
            if (initTable && this.tabletJ_RequestForRepair != null)
            {
                this.tabletJ_RequestForRepair.InitVars();
            }
            this.tabletR_Classifier = (DataSetGES.tR_ClassifierDataTable)base.Tables["tR_Classifier"];
            if (initTable && this.tabletR_Classifier != null)
            {
                this.tabletR_Classifier.InitVars();
            }
            this.tabletJ_RequestForRepairDaily = (DataSetGES.tJ_RequestForRepairDailyDataTable)base.Tables["tJ_RequestForRepairDaily"];
            if (initTable && this.tabletJ_RequestForRepairDaily != null)
            {
                this.tabletJ_RequestForRepairDaily.InitVars();
            }
            this.tablevJ_RequestForRepairDaily = (DataSetGES.vJ_RequestForRepairDailyDataTable)base.Tables["vJ_RequestForRepairDaily"];
            if (initTable && this.tablevJ_RequestForRepairDaily != null)
            {
                this.tablevJ_RequestForRepairDaily.InitVars();
            }
            this.tabletL_RequestForRepairSchmObjList = (DataSetGES.tL_RequestForRepairSchmObjListDataTable)base.Tables["tL_RequestForRepairSchmObjList"];
            if (initTable && this.tabletL_RequestForRepairSchmObjList != null)
            {
                this.tabletL_RequestForRepairSchmObjList.InitVars();
            }
            this.tabletJ_RequestForRepairDoc = (DataSetGES.tJ_RequestForRepairDocDataTable)base.Tables["tJ_RequestForRepairDoc"];
            if (initTable && this.tabletJ_RequestForRepairDoc != null)
            {
                this.tabletJ_RequestForRepairDoc.InitVars();
            }
            this.tabletJ_RelayProtectionAutomation = (DataSetGES.tJ_RelayProtectionAutomationDataTable)base.Tables["tJ_RelayProtectionAutomation"];
            if (initTable && this.tabletJ_RelayProtectionAutomation != null)
            {
                this.tabletJ_RelayProtectionAutomation.InitVars();
            }
            this.tabletJ_RelayProtectionAutomationValue = (DataSetGES.tJ_RelayProtectionAutomationValueDataTable)base.Tables["tJ_RelayProtectionAutomationValue"];
            if (initTable && this.tabletJ_RelayProtectionAutomationValue != null)
            {
                this.tabletJ_RelayProtectionAutomationValue.InitVars();
            }
            this.tablevJ_RelayProtectionAutomation = (DataSetGES.vJ_RelayProtectionAutomationDataTable)base.Tables["vJ_RelayProtectionAutomation"];
            if (initTable && this.tablevJ_RelayProtectionAutomation != null)
            {
                this.tablevJ_RelayProtectionAutomation.InitVars();
            }
            this.tabletJ_UpdateProgram = (DataSetGES.tJ_UpdateProgramDataTable)base.Tables["tJ_UpdateProgram"];
            if (initTable && this.tabletJ_UpdateProgram != null)
            {
                this.tabletJ_UpdateProgram.InitVars();
            }
            this.tabletJ_UpdateProgramDoc = (DataSetGES.tJ_UpdateProgramDocDataTable)base.Tables["tJ_UpdateProgramDoc"];
            if (initTable && this.tabletJ_UpdateProgramDoc != null)
            {
                this.tabletJ_UpdateProgramDoc.InitVars();
            }
            this.tablevJ_UpdateProgram = (DataSetGES.vJ_UpdateProgramDataTable)base.Tables["vJ_UpdateProgram"];
            if (initTable && this.tablevJ_UpdateProgram != null)
            {
                this.tablevJ_UpdateProgram.InitVars();
            }
            this.tabletJ_UpdateProgramUserCheck = (DataSetGES.tJ_UpdateProgramUserCheckDataTable)base.Tables["tJ_UpdateProgramUserCheck"];
            if (initTable && this.tabletJ_UpdateProgramUserCheck != null)
            {
                this.tabletJ_UpdateProgramUserCheck.InitVars();
            }
            this.tabletMeas_Measurement = (DataSetGES.tMeas_MeasurementDataTable)base.Tables["tMeas_Measurement"];
            if (initTable && this.tabletMeas_Measurement != null)
            {
                this.tabletMeas_Measurement.InitVars();
            }
            this.tabletMeas_Trans = (DataSetGES.tMeas_TransDataTable)base.Tables["tMeas_Trans"];
            if (initTable && this.tabletMeas_Trans != null)
            {
                this.tabletMeas_Trans.InitVars();
            }
            this.tabletMeas_Cab = (DataSetGES.tMeas_CabDataTable)base.Tables["tMeas_Cab"];
            if (initTable && this.tabletMeas_Cab != null)
            {
                this.tabletMeas_Cab.InitVars();
            }
            this.tabletSchm_ObjList = (DataSetGES.tSchm_ObjListDataTable)base.Tables["tSchm_ObjList"];
            if (initTable && this.tabletSchm_ObjList != null)
            {
                this.tabletSchm_ObjList.InitVars();
            }
            this.tablevP_Worker = (DataSetGES.vP_WorkerDataTable)base.Tables["vP_Worker"];
            if (initTable && this.tablevP_Worker != null)
            {
                this.tablevP_Worker.InitVars();
            }
            this.tabletP_ValueLists = (DataSetGES.tP_ValueListsDataTable)base.Tables["tP_ValueLists"];
            if (initTable && this.tabletP_ValueLists != null)
            {
                this.tabletP_ValueLists.InitVars();
            }
            this.tablevJ_CableMakeup = (DataSetGES.vJ_CableMakeupDataTable)base.Tables["vJ_CableMakeup"];
            if (initTable && this.tablevJ_CableMakeup != null)
            {
                this.tablevJ_CableMakeup.InitVars();
            }
            this.tablevJ_MeasPeriodBySubstation = (DataSetGES.vJ_MeasPeriodBySubstationDataTable)base.Tables["vJ_MeasPeriodBySubstation"];
            if (initTable && this.tablevJ_MeasPeriodBySubstation != null)
            {
                this.tablevJ_MeasPeriodBySubstation.InitVars();
            }
            this.tablefn_J_GetCellCableLVByTransf = (DataSetGES.fn_J_GetCellCableLVByTransfDataTable)base.Tables["fn_J_GetCellCableLVByTransf"];
            if (initTable && this.tablefn_J_GetCellCableLVByTransf != null)
            {
                this.tablefn_J_GetCellCableLVByTransf.InitVars();
            }
            this.tabletL_SchmAbn = (DataSetGES.tL_SchmAbnDataTable)base.Tables["tL_SchmAbn"];
            if (initTable && this.tabletL_SchmAbn != null)
            {
                this.tabletL_SchmAbn.InitVars();
            }
            this.tablevJ_MeasAbnObj = (DataSetGES.vJ_MeasAbnObjDataTable)base.Tables["vJ_MeasAbnObj"];
            if (initTable && this.tablevJ_MeasAbnObj != null)
            {
                this.tablevJ_MeasAbnObj.InitVars();
            }
            this.tablevJ_GetMeasYears = (DataSetGES.vJ_GetMeasYearsDataTable)base.Tables["vJ_GetMeasYears"];
            if (initTable && this.tablevJ_GetMeasYears != null)
            {
                this.tablevJ_GetMeasYears.InitVars();
            }
            this.tablefn_J_GetCellLVByTransf = (DataSetGES.fn_J_GetCellLVByTransfDataTable)base.Tables["fn_J_GetCellLVByTransf"];
            if (initTable && this.tablefn_J_GetCellLVByTransf != null)
            {
                this.tablefn_J_GetCellLVByTransf.InitVars();
            }
            this.tablefn_J_MeasCableCalcResults = (DataSetGES.fn_J_MeasCableCalcResultsDataTable)base.Tables["fn_J_MeasCableCalcResults"];
            if (initTable && this.tablefn_J_MeasCableCalcResults != null)
            {
                this.tablefn_J_MeasCableCalcResults.InitVars();
            }
            this.tabletR_CableMakeup = (DataSetGES.tR_CableMakeupDataTable)base.Tables["tR_CableMakeup"];
            if (initTable && this.tabletR_CableMakeup != null)
            {
                this.tabletR_CableMakeup.InitVars();
            }
            this.tabletR_CrossSection = (DataSetGES.tR_CrossSectionDataTable)base.Tables["tR_CrossSection"];
            if (initTable && this.tabletR_CrossSection != null)
            {
                this.tabletR_CrossSection.InitVars();
            }
            this.tabletR_CableVoltage = (DataSetGES.tR_CableVoltageDataTable)base.Tables["tR_CableVoltage"];
            if (initTable && this.tabletR_CableVoltage != null)
            {
                this.tabletR_CableVoltage.InitVars();
            }
            this.tabletR_CableAmperage = (DataSetGES.tR_CableAmperageDataTable)base.Tables["tR_CableAmperage"];
            if (initTable && this.tabletR_CableAmperage != null)
            {
                this.tabletR_CableAmperage.InitVars();
            }
            this.tabletR_CableWires = (DataSetGES.tR_CableWiresDataTable)base.Tables["tR_CableWires"];
            if (initTable && this.tabletR_CableWires != null)
            {
                this.tabletR_CableWires.InitVars();
            }
            this.tablevJ_CableReference = (DataSetGES.vJ_CableReferenceDataTable)base.Tables["vJ_CableReference"];
            if (initTable && this.tablevJ_CableReference != null)
            {
                this.tablevJ_CableReference.InitVars();
            }
            this.tablevJ_Transfs = (DataSetGES.vJ_TransfsDataTable)base.Tables["vJ_Transfs"];
            if (initTable && this.tablevJ_Transfs != null)
            {
                this.tablevJ_Transfs.InitVars();
            }
            this.tabledtMeasCableRatio = (DataSetGES.dtMeasCableRatioDataTable)base.Tables["dtMeasCableRatio"];
            if (initTable && this.tabledtMeasCableRatio != null)
            {
                this.tabledtMeasCableRatio.InitVars();
            }
            this.tablefn_J_GetBusLVByTransf = (DataSetGES.fn_J_GetBusLVByTransfDataTable)base.Tables["fn_J_GetBusLVByTransf"];
            if (initTable && this.tablefn_J_GetBusLVByTransf != null)
            {
                this.tablefn_J_GetBusLVByTransf.InitVars();
            }
            this.tablevJ_MeasurementReport = (DataSetGES.vJ_MeasurementReportDataTable)base.Tables["vJ_MeasurementReport"];
            if (initTable && this.tablevJ_MeasurementReport != null)
            {
                this.tablevJ_MeasurementReport.InitVars();
            }
            this.tabledtMeasTransfAmperageDopDataReport = (DataSetGES.dtMeasTransfAmperageDopDataReportDataTable)base.Tables["dtMeasTransfAmperageDopDataReport"];
            if (initTable && this.tabledtMeasTransfAmperageDopDataReport != null)
            {
                this.tabledtMeasTransfAmperageDopDataReport.InitVars();
            }
            this.tablefn_J_ExcelessLoadReport = (DataSetGES.fn_J_ExcelessLoadReportDataTable)base.Tables["fn_J_ExcelessLoadReport"];
            if (initTable && this.tablefn_J_ExcelessLoadReport != null)
            {
                this.tablefn_J_ExcelessLoadReport.InitVars();
            }
            this.tabledtExcelessLoadAddlReport = (DataSetGES.dtExcelessLoadAddlReportDataTable)base.Tables["dtExcelessLoadAddlReport"];
            if (initTable && this.tabledtExcelessLoadAddlReport != null)
            {
                this.tabledtExcelessLoadAddlReport.InitVars();
            }
            this.tablevJ_CoefficientLoading = (DataSetGES.vJ_CoefficientLoadingDataTable)base.Tables["vJ_CoefficientLoading"];
            if (initTable && this.tablevJ_CoefficientLoading != null)
            {
                this.tablevJ_CoefficientLoading.InitVars();
            }
            this.tabledtCoefficientLoadingAddl = (DataSetGES.dtCoefficientLoadingAddlDataTable)base.Tables["dtCoefficientLoadingAddl"];
            if (initTable && this.tabledtCoefficientLoadingAddl != null)
            {
                this.tabledtCoefficientLoadingAddl.InitVars();
            }
            this.tablevJ_CoefficientIrregularity = (DataSetGES.vJ_CoefficientIrregularityDataTable)base.Tables["vJ_CoefficientIrregularity"];
            if (initTable && this.tablevJ_CoefficientIrregularity != null)
            {
                this.tablevJ_CoefficientIrregularity.InitVars();
            }
            this.tablevP_SubstationTransf = (DataSetGES.vP_SubstationTransfDataTable)base.Tables["vP_SubstationTransf"];
            if (initTable && this.tablevP_SubstationTransf != null)
            {
                this.tablevP_SubstationTransf.InitVars();
            }
            this.tabletR_DocTemplate = (DataSetGES.tR_DocTemplateDataTable)base.Tables["tR_DocTemplate"];
            if (initTable && this.tabletR_DocTemplate != null)
            {
                this.tabletR_DocTemplate.InitVars();
            }
            this.tablefn_J_GetCellTransfByBusLV = (DataSetGES.fn_J_GetCellTransfByBusLVDataTable)base.Tables["fn_J_GetCellTransfByBusLV"];
            if (initTable && this.tablefn_J_GetCellTransfByBusLV != null)
            {
                this.tablefn_J_GetCellTransfByBusLV.InitVars();
            }
            this.tabledtBuses = (DataSetGES.dtBusesDataTable)base.Tables["dtBuses"];
            if (initTable && this.tabledtBuses != null)
            {
                this.tabledtBuses.InitVars();
            }
            this.tabledtCells = (DataSetGES.dtCellsDataTable)base.Tables["dtCells"];
            if (initTable && this.tabledtCells != null)
            {
                this.tabledtCells.InitVars();
            }
            this.tabletJ_Measurement = (DataSetGES.tJ_MeasurementDataTable)base.Tables["tJ_Measurement"];
            if (initTable && this.tabletJ_Measurement != null)
            {
                this.tabletJ_Measurement.InitVars();
            }
            this.tablevJ_MeasTransfPassport = (DataSetGES.vJ_MeasTransfPassportDataTable)base.Tables["vJ_MeasTransfPassport"];
            if (initTable && this.tablevJ_MeasTransfPassport != null)
            {
                this.tablevJ_MeasTransfPassport.InitVars();
            }
            this.tablefn_J_MeasTransfPassport = (DataSetGES.fn_J_MeasTransfPassportDataTable)base.Tables["fn_J_MeasTransfPassport"];
            if (initTable && this.tablefn_J_MeasTransfPassport != null)
            {
                this.tablefn_J_MeasTransfPassport.InitVars();
            }
            this.tablevJ_MeasCable = (DataSetGES.vJ_MeasCableDataTable)base.Tables["vJ_MeasCable"];
            if (initTable && this.tablevJ_MeasCable != null)
            {
                this.tablevJ_MeasCable.InitVars();
            }
            this.tabledtMeasCellRatio = (DataSetGES.dtMeasCellRatioDataTable)base.Tables["dtMeasCellRatio"];
            if (initTable && this.tabledtMeasCellRatio != null)
            {
                this.tabledtMeasCellRatio.InitVars();
            }
            this.tabletSchm_ObjList1 = (DataSetGES.tSchm_ObjList1DataTable)base.Tables["tSchm_ObjList1"];
            if (initTable && this.tabletSchm_ObjList1 != null)
            {
                this.tabletSchm_ObjList1.InitVars();
            }
            this.tablevJ_TransfBySubstation = (DataSetGES.vJ_TransfBySubstationDataTable)base.Tables["vJ_TransfBySubstation"];
            if (initTable && this.tablevJ_TransfBySubstation != null)
            {
                this.tablevJ_TransfBySubstation.InitVars();
            }
            this.tablevJ_PowerISR_Transf = (DataSetGES.vJ_PowerISR_TransfDataTable)base.Tables["vJ_PowerISR_Transf"];
            if (initTable && this.tablevJ_PowerISR_Transf != null)
            {
                this.tablevJ_PowerISR_Transf.InitVars();
            }
            this.tablevJ_PowerISR_SSTransf = (DataSetGES.vJ_PowerISR_SSTransfDataTable)base.Tables["vJ_PowerISR_SSTransf"];
            if (initTable && this.tablevJ_PowerISR_SSTransf != null)
            {
                this.tablevJ_PowerISR_SSTransf.InitVars();
            }
            this.tabledtAmountFreeCapasity = (DataSetGES.dtAmountFreeCapasityDataTable)base.Tables["dtAmountFreeCapasity"];
            if (initTable && this.tabledtAmountFreeCapasity != null)
            {
                this.tabledtAmountFreeCapasity.InitVars();
            }
            this.tablefn_J_GetCellTransfByBusHV = (DataSetGES.fn_J_GetCellTransfByBusHVDataTable)base.Tables["fn_J_GetCellTransfByBusHV"];
            if (initTable && this.tablefn_J_GetCellTransfByBusHV != null)
            {
                this.tablefn_J_GetCellTransfByBusHV.InitVars();
            }
            this.tabletJ_MeasCable = (DataSetGES.tJ_MeasCableDataTable)base.Tables["tJ_MeasCable"];
            if (initTable && this.tabletJ_MeasCable != null)
            {
                this.tabletJ_MeasCable.InitVars();
            }
            this.tablevJ_LastCableInfo = (DataSetGES.vJ_LastCableInfoDataTable)base.Tables["vJ_LastCableInfo"];
            if (initTable && this.tablevJ_LastCableInfo != null)
            {
                this.tablevJ_LastCableInfo.InitVars();
            }
            this.tablevJ_TransfByCell = (DataSetGES.vJ_TransfByCellDataTable)base.Tables["vJ_TransfByCell"];
            if (initTable && this.tablevJ_TransfByCell != null)
            {
                this.tablevJ_TransfByCell.InitVars();
            }
            this.tablevJ_CableByCell = (DataSetGES.vJ_CableByCellDataTable)base.Tables["vJ_CableByCell"];
            if (initTable && this.tablevJ_CableByCell != null)
            {
                this.tablevJ_CableByCell.InitVars();
            }
            this.tablefn_J_GetBusMVByTransf = (DataSetGES.fn_J_GetBusMVByTransfDataTable)base.Tables["fn_J_GetBusMVByTransf"];
            if (initTable && this.tablefn_J_GetBusMVByTransf != null)
            {
                this.tablefn_J_GetBusMVByTransf.InitVars();
            }
            this.tabletJ_MeasAmperageTransf = (DataSetGES.tJ_MeasAmperageTransfDataTable)base.Tables["tJ_MeasAmperageTransf"];
            if (initTable && this.tabletJ_MeasAmperageTransf != null)
            {
                this.tabletJ_MeasAmperageTransf.InitVars();
            }
            this.tabletSchm_ObjList2 = (DataSetGES.tSchm_ObjList2DataTable)base.Tables["tSchm_ObjList2"];
            if (initTable && this.tabletSchm_ObjList2 != null)
            {
                this.tabletSchm_ObjList2.InitVars();
            }
            this.tabletSchm_ObjList3 = (DataSetGES.tSchm_ObjList3DataTable)base.Tables["tSchm_ObjList3"];
            if (initTable && this.tabletSchm_ObjList3 != null)
            {
                this.tabletSchm_ObjList3.InitVars();
            }
            this.tablevP_TransfBySubstation = (DataSetGES.vP_TransfBySubstationDataTable)base.Tables["vP_TransfBySubstation"];
            if (initTable && this.tablevP_TransfBySubstation != null)
            {
                this.tablevP_TransfBySubstation.InitVars();
            }
            this.tablevJ_MeasAmpSubTransf_TEMP = (DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable)base.Tables["vJ_MeasAmpSubTransf_TEMP"];
            if (initTable && this.tablevJ_MeasAmpSubTransf_TEMP != null)
            {
                this.tablevJ_MeasAmpSubTransf_TEMP.InitVars();
            }
            this.tablevJ_MeasSubTransf_TEMP = (DataSetGES.vJ_MeasSubTransf_TEMPDataTable)base.Tables["vJ_MeasSubTransf_TEMP"];
            if (initTable && this.tablevJ_MeasSubTransf_TEMP != null)
            {
                this.tablevJ_MeasSubTransf_TEMP.InitVars();
            }
            this.tablefn_J_GetTransfByBusLV = (DataSetGES.fn_J_GetTransfByBusLVDataTable)base.Tables["fn_J_GetTransfByBusLV"];
            if (initTable && this.tablefn_J_GetTransfByBusLV != null)
            {
                this.tablefn_J_GetTransfByBusLV.InitVars();
            }
            this.tablevP_SubstationBus = (DataSetGES.vP_SubstationBusDataTable)base.Tables["vP_SubstationBus"];
            if (initTable && this.tablevP_SubstationBus != null)
            {
                this.tablevP_SubstationBus.InitVars();
            }
            this.tablevJ_CellByBus = (DataSetGES.vJ_CellByBusDataTable)base.Tables["vJ_CellByBus"];
            if (initTable && this.tablevJ_CellByBus != null)
            {
                this.tablevJ_CellByBus.InitVars();
            }
            this.tablevJ_PowerISR_SSBus = (DataSetGES.vJ_PowerISR_SSBusDataTable)base.Tables["vJ_PowerISR_SSBus"];
            if (initTable && this.tablevJ_PowerISR_SSBus != null)
            {
                this.tablevJ_PowerISR_SSBus.InitVars();
            }
            this.tabledtBusesTransf = (DataSetGES.dtBusesTransfDataTable)base.Tables["dtBusesTransf"];
            if (initTable && this.tabledtBusesTransf != null)
            {
                this.tabledtBusesTransf.InitVars();
            }
            this.tablevJ_BusesTransfSchema = (DataSetGES.vJ_BusesTransfSchemaDataTable)base.Tables["vJ_BusesTransfSchema"];
            if (initTable && this.tablevJ_BusesTransfSchema != null)
            {
                this.tablevJ_BusesTransfSchema.InitVars();
            }
            this.tablevJ_BusesTransfs = (DataSetGES.vJ_BusesTransfsDataTable)base.Tables["vJ_BusesTransfs"];
            if (initTable && this.tablevJ_BusesTransfs != null)
            {
                this.tablevJ_BusesTransfs.InitVars();
            }
            this.tablevJ_MeasCableReport = (DataSetGES.vJ_MeasCableReportDataTable)base.Tables["vJ_MeasCableReport"];
            if (initTable && this.tablevJ_MeasCableReport != null)
            {
                this.tablevJ_MeasCableReport.InitVars();
            }
            this.tabletJ_MeasVoltageTransf = (DataSetGES.tJ_MeasVoltageTransfDataTable)base.Tables["tJ_MeasVoltageTransf"];
            if (initTable && this.tabletJ_MeasVoltageTransf != null)
            {
                this.tabletJ_MeasVoltageTransf.InitVars();
            }
            this.tablevJ_MeasCableReport2 = (DataSetGES.vJ_MeasCableReport2DataTable)base.Tables["vJ_MeasCableReport2"];
            if (initTable && this.tablevJ_MeasCableReport2 != null)
            {
                this.tablevJ_MeasCableReport2.InitVars();
            }
            this.tablevJ_CableByCellMeas = (DataSetGES.vJ_CableByCellMeasDataTable)base.Tables["vJ_CableByCellMeas"];
            if (initTable && this.tablevJ_CableByCellMeas != null)
            {
                this.tablevJ_CableByCellMeas.InitVars();
            }
            this.tabletJ_MeasCell = (DataSetGES.tJ_MeasCellDataTable)base.Tables["tJ_MeasCell"];
            if (initTable && this.tabletJ_MeasCell != null)
            {
                this.tabletJ_MeasCell.InitVars();
            }
            this.tablevJ_MeasCell = (DataSetGES.vJ_MeasCellDataTable)base.Tables["vJ_MeasCell"];
            if (initTable && this.tablevJ_MeasCell != null)
            {
                this.tablevJ_MeasCell.InitVars();
            }
            this.tablevJ_MeasTransfVoltage = (DataSetGES.vJ_MeasTransfVoltageDataTable)base.Tables["vJ_MeasTransfVoltage"];
            if (initTable && this.tablevJ_MeasTransfVoltage != null)
            {
                this.tablevJ_MeasTransfVoltage.InitVars();
            }
            this.relationtJ_RequestForRepair_tJ_RequestForRepairDaily = this.Relations["tJ_RequestForRepair_tJ_RequestForRepairDaily"];
            this.relationvJ_RequestForRepair_tJ_RequestForRepairDaily = this.Relations["vJ_RequestForRepair_tJ_RequestForRepairDaily"];
        }

        // Token: 0x060008CF RID: 2255 RVA: 0x00061748 File Offset: 0x0005F948
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private void InitClass()
        {
            base.DataSetName = "DataSetGES";
            base.Prefix = "";
            base.Namespace = "http://tempuri.org/DataSetGES.xsd";
            base.EnforceConstraints = true;
            this.SchemaSerializationMode = SchemaSerializationMode.IncludeSchema;
            this.tabletUser = new DataSetGES.tUserDataTable();
            base.Tables.Add(this.tabletUser);
            this.tabletJ_RequestDoc = new DataSetGES.tJ_RequestDocDataTable();
            base.Tables.Add(this.tabletJ_RequestDoc);
            this.tabletJ_Request = new DataSetGES.tJ_RequestDataTable();
            base.Tables.Add(this.tabletJ_Request);
            this.tablevJ_Request = new DataSetGES.vJ_RequestDataTable();
            base.Tables.Add(this.tablevJ_Request);
            this.tablevJ_RequestForRepair = new DataSetGES.vJ_RequestForRepairDataTable();
            base.Tables.Add(this.tablevJ_RequestForRepair);
            this.tabletJ_RequestForRepair = new DataSetGES.tJ_RequestForRepairDataTable();
            base.Tables.Add(this.tabletJ_RequestForRepair);
            this.tabletR_Classifier = new DataSetGES.tR_ClassifierDataTable();
            base.Tables.Add(this.tabletR_Classifier);
            this.tabletJ_RequestForRepairDaily = new DataSetGES.tJ_RequestForRepairDailyDataTable();
            base.Tables.Add(this.tabletJ_RequestForRepairDaily);
            this.tablevJ_RequestForRepairDaily = new DataSetGES.vJ_RequestForRepairDailyDataTable();
            base.Tables.Add(this.tablevJ_RequestForRepairDaily);
            this.tabletL_RequestForRepairSchmObjList = new DataSetGES.tL_RequestForRepairSchmObjListDataTable();
            base.Tables.Add(this.tabletL_RequestForRepairSchmObjList);
            this.tabletJ_RequestForRepairDoc = new DataSetGES.tJ_RequestForRepairDocDataTable();
            base.Tables.Add(this.tabletJ_RequestForRepairDoc);
            this.tabletJ_RelayProtectionAutomation = new DataSetGES.tJ_RelayProtectionAutomationDataTable();
            base.Tables.Add(this.tabletJ_RelayProtectionAutomation);
            this.tabletJ_RelayProtectionAutomationValue = new DataSetGES.tJ_RelayProtectionAutomationValueDataTable();
            base.Tables.Add(this.tabletJ_RelayProtectionAutomationValue);
            this.tablevJ_RelayProtectionAutomation = new DataSetGES.vJ_RelayProtectionAutomationDataTable(false);
            base.Tables.Add(this.tablevJ_RelayProtectionAutomation);
            this.tabletJ_UpdateProgram = new DataSetGES.tJ_UpdateProgramDataTable();
            base.Tables.Add(this.tabletJ_UpdateProgram);
            this.tabletJ_UpdateProgramDoc = new DataSetGES.tJ_UpdateProgramDocDataTable();
            base.Tables.Add(this.tabletJ_UpdateProgramDoc);
            this.tablevJ_UpdateProgram = new DataSetGES.vJ_UpdateProgramDataTable();
            base.Tables.Add(this.tablevJ_UpdateProgram);
            this.tabletJ_UpdateProgramUserCheck = new DataSetGES.tJ_UpdateProgramUserCheckDataTable();
            base.Tables.Add(this.tabletJ_UpdateProgramUserCheck);
            this.tabletMeas_Measurement = new DataSetGES.tMeas_MeasurementDataTable();
            base.Tables.Add(this.tabletMeas_Measurement);
            this.tabletMeas_Trans = new DataSetGES.tMeas_TransDataTable();
            base.Tables.Add(this.tabletMeas_Trans);
            this.tabletMeas_Cab = new DataSetGES.tMeas_CabDataTable();
            base.Tables.Add(this.tabletMeas_Cab);
            this.tabletSchm_ObjList = new DataSetGES.tSchm_ObjListDataTable();
            base.Tables.Add(this.tabletSchm_ObjList);
            this.tablevP_Worker = new DataSetGES.vP_WorkerDataTable();
            base.Tables.Add(this.tablevP_Worker);
            this.tabletP_ValueLists = new DataSetGES.tP_ValueListsDataTable();
            base.Tables.Add(this.tabletP_ValueLists);
            this.tablevJ_CableMakeup = new DataSetGES.vJ_CableMakeupDataTable();
            base.Tables.Add(this.tablevJ_CableMakeup);
            this.tablevJ_MeasPeriodBySubstation = new DataSetGES.vJ_MeasPeriodBySubstationDataTable();
            base.Tables.Add(this.tablevJ_MeasPeriodBySubstation);
            this.tablefn_J_GetCellCableLVByTransf = new DataSetGES.fn_J_GetCellCableLVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetCellCableLVByTransf);
            this.tabletL_SchmAbn = new DataSetGES.tL_SchmAbnDataTable();
            base.Tables.Add(this.tabletL_SchmAbn);
            this.tablevJ_MeasAbnObj = new DataSetGES.vJ_MeasAbnObjDataTable();
            base.Tables.Add(this.tablevJ_MeasAbnObj);
            this.tablevJ_GetMeasYears = new DataSetGES.vJ_GetMeasYearsDataTable();
            base.Tables.Add(this.tablevJ_GetMeasYears);
            this.tablefn_J_GetCellLVByTransf = new DataSetGES.fn_J_GetCellLVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetCellLVByTransf);
            this.tablefn_J_MeasCableCalcResults = new DataSetGES.fn_J_MeasCableCalcResultsDataTable();
            base.Tables.Add(this.tablefn_J_MeasCableCalcResults);
            this.tabletR_CableMakeup = new DataSetGES.tR_CableMakeupDataTable();
            base.Tables.Add(this.tabletR_CableMakeup);
            this.tabletR_CrossSection = new DataSetGES.tR_CrossSectionDataTable();
            base.Tables.Add(this.tabletR_CrossSection);
            this.tabletR_CableVoltage = new DataSetGES.tR_CableVoltageDataTable();
            base.Tables.Add(this.tabletR_CableVoltage);
            this.tabletR_CableAmperage = new DataSetGES.tR_CableAmperageDataTable();
            base.Tables.Add(this.tabletR_CableAmperage);
            this.tabletR_CableWires = new DataSetGES.tR_CableWiresDataTable();
            base.Tables.Add(this.tabletR_CableWires);
            this.tablevJ_CableReference = new DataSetGES.vJ_CableReferenceDataTable();
            base.Tables.Add(this.tablevJ_CableReference);
            this.tablevJ_Transfs = new DataSetGES.vJ_TransfsDataTable();
            base.Tables.Add(this.tablevJ_Transfs);
            this.tabledtMeasCableRatio = new DataSetGES.dtMeasCableRatioDataTable();
            base.Tables.Add(this.tabledtMeasCableRatio);
            this.tablefn_J_GetBusLVByTransf = new DataSetGES.fn_J_GetBusLVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetBusLVByTransf);
            this.tablevJ_MeasurementReport = new DataSetGES.vJ_MeasurementReportDataTable();
            base.Tables.Add(this.tablevJ_MeasurementReport);
            this.tabledtMeasTransfAmperageDopDataReport = new DataSetGES.dtMeasTransfAmperageDopDataReportDataTable();
            base.Tables.Add(this.tabledtMeasTransfAmperageDopDataReport);
            this.tablefn_J_ExcelessLoadReport = new DataSetGES.fn_J_ExcelessLoadReportDataTable();
            base.Tables.Add(this.tablefn_J_ExcelessLoadReport);
            this.tabledtExcelessLoadAddlReport = new DataSetGES.dtExcelessLoadAddlReportDataTable();
            base.Tables.Add(this.tabledtExcelessLoadAddlReport);
            this.tablevJ_CoefficientLoading = new DataSetGES.vJ_CoefficientLoadingDataTable();
            base.Tables.Add(this.tablevJ_CoefficientLoading);
            this.tabledtCoefficientLoadingAddl = new DataSetGES.dtCoefficientLoadingAddlDataTable();
            base.Tables.Add(this.tabledtCoefficientLoadingAddl);
            this.tablevJ_CoefficientIrregularity = new DataSetGES.vJ_CoefficientIrregularityDataTable();
            base.Tables.Add(this.tablevJ_CoefficientIrregularity);
            this.tablevP_SubstationTransf = new DataSetGES.vP_SubstationTransfDataTable();
            base.Tables.Add(this.tablevP_SubstationTransf);
            this.tabletR_DocTemplate = new DataSetGES.tR_DocTemplateDataTable();
            base.Tables.Add(this.tabletR_DocTemplate);
            this.tablefn_J_GetCellTransfByBusLV = new DataSetGES.fn_J_GetCellTransfByBusLVDataTable();
            base.Tables.Add(this.tablefn_J_GetCellTransfByBusLV);
            this.tabledtBuses = new DataSetGES.dtBusesDataTable();
            base.Tables.Add(this.tabledtBuses);
            this.tabledtCells = new DataSetGES.dtCellsDataTable();
            base.Tables.Add(this.tabledtCells);
            this.tabletJ_Measurement = new DataSetGES.tJ_MeasurementDataTable();
            base.Tables.Add(this.tabletJ_Measurement);
            this.tablevJ_MeasTransfPassport = new DataSetGES.vJ_MeasTransfPassportDataTable();
            base.Tables.Add(this.tablevJ_MeasTransfPassport);
            this.tablefn_J_MeasTransfPassport = new DataSetGES.fn_J_MeasTransfPassportDataTable();
            base.Tables.Add(this.tablefn_J_MeasTransfPassport);
            this.tablevJ_MeasCable = new DataSetGES.vJ_MeasCableDataTable();
            base.Tables.Add(this.tablevJ_MeasCable);
            this.tabledtMeasCellRatio = new DataSetGES.dtMeasCellRatioDataTable();
            base.Tables.Add(this.tabledtMeasCellRatio);
            this.tabletSchm_ObjList1 = new DataSetGES.tSchm_ObjList1DataTable();
            base.Tables.Add(this.tabletSchm_ObjList1);
            this.tablevJ_TransfBySubstation = new DataSetGES.vJ_TransfBySubstationDataTable();
            base.Tables.Add(this.tablevJ_TransfBySubstation);
            this.tablevJ_PowerISR_Transf = new DataSetGES.vJ_PowerISR_TransfDataTable();
            base.Tables.Add(this.tablevJ_PowerISR_Transf);
            this.tablevJ_PowerISR_SSTransf = new DataSetGES.vJ_PowerISR_SSTransfDataTable();
            base.Tables.Add(this.tablevJ_PowerISR_SSTransf);
            this.tabledtAmountFreeCapasity = new DataSetGES.dtAmountFreeCapasityDataTable();
            base.Tables.Add(this.tabledtAmountFreeCapasity);
            this.tablefn_J_GetCellTransfByBusHV = new DataSetGES.fn_J_GetCellTransfByBusHVDataTable();
            base.Tables.Add(this.tablefn_J_GetCellTransfByBusHV);
            this.tabletJ_MeasCable = new DataSetGES.tJ_MeasCableDataTable();
            base.Tables.Add(this.tabletJ_MeasCable);
            this.tablevJ_LastCableInfo = new DataSetGES.vJ_LastCableInfoDataTable();
            base.Tables.Add(this.tablevJ_LastCableInfo);
            this.tablevJ_TransfByCell = new DataSetGES.vJ_TransfByCellDataTable();
            base.Tables.Add(this.tablevJ_TransfByCell);
            this.tablevJ_CableByCell = new DataSetGES.vJ_CableByCellDataTable();
            base.Tables.Add(this.tablevJ_CableByCell);
            this.tablefn_J_GetBusMVByTransf = new DataSetGES.fn_J_GetBusMVByTransfDataTable();
            base.Tables.Add(this.tablefn_J_GetBusMVByTransf);
            this.tabletJ_MeasAmperageTransf = new DataSetGES.tJ_MeasAmperageTransfDataTable();
            base.Tables.Add(this.tabletJ_MeasAmperageTransf);
            this.tabletSchm_ObjList2 = new DataSetGES.tSchm_ObjList2DataTable();
            base.Tables.Add(this.tabletSchm_ObjList2);
            this.tabletSchm_ObjList3 = new DataSetGES.tSchm_ObjList3DataTable();
            base.Tables.Add(this.tabletSchm_ObjList3);
            this.tablevP_TransfBySubstation = new DataSetGES.vP_TransfBySubstationDataTable();
            base.Tables.Add(this.tablevP_TransfBySubstation);
            this.tablevJ_MeasAmpSubTransf_TEMP = new DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable();
            base.Tables.Add(this.tablevJ_MeasAmpSubTransf_TEMP);
            this.tablevJ_MeasSubTransf_TEMP = new DataSetGES.vJ_MeasSubTransf_TEMPDataTable();
            base.Tables.Add(this.tablevJ_MeasSubTransf_TEMP);
            this.tablefn_J_GetTransfByBusLV = new DataSetGES.fn_J_GetTransfByBusLVDataTable();
            base.Tables.Add(this.tablefn_J_GetTransfByBusLV);
            this.tablevP_SubstationBus = new DataSetGES.vP_SubstationBusDataTable();
            base.Tables.Add(this.tablevP_SubstationBus);
            this.tablevJ_CellByBus = new DataSetGES.vJ_CellByBusDataTable();
            base.Tables.Add(this.tablevJ_CellByBus);
            this.tablevJ_PowerISR_SSBus = new DataSetGES.vJ_PowerISR_SSBusDataTable();
            base.Tables.Add(this.tablevJ_PowerISR_SSBus);
            this.tabledtBusesTransf = new DataSetGES.dtBusesTransfDataTable();
            base.Tables.Add(this.tabledtBusesTransf);
            this.tablevJ_BusesTransfSchema = new DataSetGES.vJ_BusesTransfSchemaDataTable();
            base.Tables.Add(this.tablevJ_BusesTransfSchema);
            this.tablevJ_BusesTransfs = new DataSetGES.vJ_BusesTransfsDataTable();
            base.Tables.Add(this.tablevJ_BusesTransfs);
            this.tablevJ_MeasCableReport = new DataSetGES.vJ_MeasCableReportDataTable();
            base.Tables.Add(this.tablevJ_MeasCableReport);
            this.tabletJ_MeasVoltageTransf = new DataSetGES.tJ_MeasVoltageTransfDataTable();
            base.Tables.Add(this.tabletJ_MeasVoltageTransf);
            this.tablevJ_MeasCableReport2 = new DataSetGES.vJ_MeasCableReport2DataTable();
            base.Tables.Add(this.tablevJ_MeasCableReport2);
            this.tablevJ_CableByCellMeas = new DataSetGES.vJ_CableByCellMeasDataTable();
            base.Tables.Add(this.tablevJ_CableByCellMeas);
            this.tabletJ_MeasCell = new DataSetGES.tJ_MeasCellDataTable();
            base.Tables.Add(this.tabletJ_MeasCell);
            this.tablevJ_MeasCell = new DataSetGES.vJ_MeasCellDataTable();
            base.Tables.Add(this.tablevJ_MeasCell);
            this.tablevJ_MeasTransfVoltage = new DataSetGES.vJ_MeasTransfVoltageDataTable();
            base.Tables.Add(this.tablevJ_MeasTransfVoltage);
            this.relationtJ_RequestForRepair_tJ_RequestForRepairDaily = new DataRelation("tJ_RequestForRepair_tJ_RequestForRepairDaily", new DataColumn[]
            {
                this.tabletJ_RequestForRepair.idColumn
            }, new DataColumn[]
            {
                this.tabletJ_RequestForRepairDaily.idRequestColumn
            }, false);
            this.Relations.Add(this.relationtJ_RequestForRepair_tJ_RequestForRepairDaily);
            this.relationvJ_RequestForRepair_tJ_RequestForRepairDaily = new DataRelation("vJ_RequestForRepair_tJ_RequestForRepairDaily", new DataColumn[]
            {
                this.tablevJ_RequestForRepair.idColumn
            }, new DataColumn[]
            {
                this.tabletJ_RequestForRepairDaily.idRequestColumn
            }, false);
            this.Relations.Add(this.relationvJ_RequestForRepair_tJ_RequestForRepairDaily);
        }

        // Token: 0x060008D0 RID: 2256 RVA: 0x000621DD File Offset: 0x000603DD
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetUser()
        {
            return false;
        }

        // Token: 0x060008D1 RID: 2257 RVA: 0x000621E0 File Offset: 0x000603E0
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_RequestDoc()
        {
            return false;
        }

        // Token: 0x060008D2 RID: 2258 RVA: 0x000621E3 File Offset: 0x000603E3
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_Request()
        {
            return false;
        }

        // Token: 0x060008D3 RID: 2259 RVA: 0x000621E6 File Offset: 0x000603E6
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_Request()
        {
            return false;
        }

        // Token: 0x060008D4 RID: 2260 RVA: 0x000621E9 File Offset: 0x000603E9
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_RequestForRepair()
        {
            return false;
        }

        // Token: 0x060008D5 RID: 2261 RVA: 0x000621EC File Offset: 0x000603EC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_RequestForRepair()
        {
            return false;
        }

        // Token: 0x060008D6 RID: 2262 RVA: 0x000621EF File Offset: 0x000603EF
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetR_Classifier()
        {
            return false;
        }

        // Token: 0x060008D7 RID: 2263 RVA: 0x000621F2 File Offset: 0x000603F2
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_RequestForRepairDaily()
        {
            return false;
        }

        // Token: 0x060008D8 RID: 2264 RVA: 0x000621F5 File Offset: 0x000603F5
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_RequestForRepairDaily()
        {
            return false;
        }

        // Token: 0x060008D9 RID: 2265 RVA: 0x000621F8 File Offset: 0x000603F8
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetL_RequestForRepairSchmObjList()
        {
            return false;
        }

        // Token: 0x060008DA RID: 2266 RVA: 0x000621FB File Offset: 0x000603FB
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_RequestForRepairDoc()
        {
            return false;
        }

        // Token: 0x060008DB RID: 2267 RVA: 0x000621FE File Offset: 0x000603FE
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_RelayProtectionAutomation()
        {
            return false;
        }

        // Token: 0x060008DC RID: 2268 RVA: 0x00062201 File Offset: 0x00060401
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_RelayProtectionAutomationValue()
        {
            return false;
        }

        // Token: 0x060008DD RID: 2269 RVA: 0x00062204 File Offset: 0x00060404
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_RelayProtectionAutomation()
        {
            return false;
        }

        // Token: 0x060008DE RID: 2270 RVA: 0x00062207 File Offset: 0x00060407
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_UpdateProgram()
        {
            return false;
        }

        // Token: 0x060008DF RID: 2271 RVA: 0x0006220A File Offset: 0x0006040A
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetJ_UpdateProgramDoc()
        {
            return false;
        }

        // Token: 0x060008E0 RID: 2272 RVA: 0x0006220D File Offset: 0x0006040D
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_UpdateProgram()
        {
            return false;
        }

        // Token: 0x060008E1 RID: 2273 RVA: 0x00062210 File Offset: 0x00060410
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_UpdateProgramUserCheck()
        {
            return false;
        }

        // Token: 0x060008E2 RID: 2274 RVA: 0x00062213 File Offset: 0x00060413
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetMeas_Measurement()
        {
            return false;
        }

        // Token: 0x060008E3 RID: 2275 RVA: 0x00062216 File Offset: 0x00060416
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetMeas_Trans()
        {
            return false;
        }

        // Token: 0x060008E4 RID: 2276 RVA: 0x00062219 File Offset: 0x00060419
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetMeas_Cab()
        {
            return false;
        }

        // Token: 0x060008E5 RID: 2277 RVA: 0x0006221C File Offset: 0x0006041C
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetSchm_ObjList()
        {
            return false;
        }

        // Token: 0x060008E6 RID: 2278 RVA: 0x0006221F File Offset: 0x0006041F
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevP_Worker()
        {
            return false;
        }

        // Token: 0x060008E7 RID: 2279 RVA: 0x00062222 File Offset: 0x00060422
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetP_ValueLists()
        {
            return false;
        }

        // Token: 0x060008E8 RID: 2280 RVA: 0x00062225 File Offset: 0x00060425
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_CableMakeup()
        {
            return false;
        }

        // Token: 0x060008E9 RID: 2281 RVA: 0x00062228 File Offset: 0x00060428
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_MeasPeriodBySubstation()
        {
            return false;
        }

        // Token: 0x060008EA RID: 2282 RVA: 0x0006222B File Offset: 0x0006042B
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializefn_J_GetCellCableLVByTransf()
        {
            return false;
        }

        // Token: 0x060008EB RID: 2283 RVA: 0x0006222E File Offset: 0x0006042E
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetL_SchmAbn()
        {
            return false;
        }

        // Token: 0x060008EC RID: 2284 RVA: 0x00062231 File Offset: 0x00060431
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_MeasAbnObj()
        {
            return false;
        }

        // Token: 0x060008ED RID: 2285 RVA: 0x00062234 File Offset: 0x00060434
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_GetMeasYears()
        {
            return false;
        }

        // Token: 0x060008EE RID: 2286 RVA: 0x00062237 File Offset: 0x00060437
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializefn_J_GetCellLVByTransf()
        {
            return false;
        }

        // Token: 0x060008EF RID: 2287 RVA: 0x0006223A File Offset: 0x0006043A
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializefn_J_MeasCableCalcResults()
        {
            return false;
        }

        // Token: 0x060008F0 RID: 2288 RVA: 0x0006223D File Offset: 0x0006043D
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetR_CableMakeup()
        {
            return false;
        }

        // Token: 0x060008F1 RID: 2289 RVA: 0x00062240 File Offset: 0x00060440
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetR_CrossSection()
        {
            return false;
        }

        // Token: 0x060008F2 RID: 2290 RVA: 0x00062243 File Offset: 0x00060443
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetR_CableVoltage()
        {
            return false;
        }

        // Token: 0x060008F3 RID: 2291 RVA: 0x00062246 File Offset: 0x00060446
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetR_CableAmperage()
        {
            return false;
        }

        // Token: 0x060008F4 RID: 2292 RVA: 0x00062249 File Offset: 0x00060449
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetR_CableWires()
        {
            return false;
        }

        // Token: 0x060008F5 RID: 2293 RVA: 0x0006224C File Offset: 0x0006044C
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_CableReference()
        {
            return false;
        }

        // Token: 0x060008F6 RID: 2294 RVA: 0x0006224F File Offset: 0x0006044F
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_Transfs()
        {
            return false;
        }

        // Token: 0x060008F7 RID: 2295 RVA: 0x00062252 File Offset: 0x00060452
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtMeasCableRatio()
        {
            return false;
        }

        // Token: 0x060008F8 RID: 2296 RVA: 0x00062255 File Offset: 0x00060455
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializefn_J_GetBusLVByTransf()
        {
            return false;
        }

        // Token: 0x060008F9 RID: 2297 RVA: 0x00062258 File Offset: 0x00060458
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_MeasurementReport()
        {
            return false;
        }

        // Token: 0x060008FA RID: 2298 RVA: 0x0006225B File Offset: 0x0006045B
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtMeasTransfAmperageDopDataReport()
        {
            return false;
        }

        // Token: 0x060008FB RID: 2299 RVA: 0x0006225E File Offset: 0x0006045E
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializefn_J_ExcelessLoadReport()
        {
            return false;
        }

        // Token: 0x060008FC RID: 2300 RVA: 0x00062261 File Offset: 0x00060461
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializedtExcelessLoadAddlReport()
        {
            return false;
        }

        // Token: 0x060008FD RID: 2301 RVA: 0x00062264 File Offset: 0x00060464
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_CoefficientLoading()
        {
            return false;
        }

        // Token: 0x060008FE RID: 2302 RVA: 0x00062267 File Offset: 0x00060467
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializedtCoefficientLoadingAddl()
        {
            return false;
        }

        // Token: 0x060008FF RID: 2303 RVA: 0x0006226A File Offset: 0x0006046A
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_CoefficientIrregularity()
        {
            return false;
        }

        // Token: 0x06000900 RID: 2304 RVA: 0x0006226D File Offset: 0x0006046D
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevP_SubstationTransf()
        {
            return false;
        }

        // Token: 0x06000901 RID: 2305 RVA: 0x00062270 File Offset: 0x00060470
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetR_DocTemplate()
        {
            return false;
        }

        // Token: 0x06000902 RID: 2306 RVA: 0x00062273 File Offset: 0x00060473
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefn_J_GetCellTransfByBusLV()
        {
            return false;
        }

        // Token: 0x06000903 RID: 2307 RVA: 0x00062276 File Offset: 0x00060476
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializedtBuses()
        {
            return false;
        }

        // Token: 0x06000904 RID: 2308 RVA: 0x00062279 File Offset: 0x00060479
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializedtCells()
        {
            return false;
        }

        // Token: 0x06000905 RID: 2309 RVA: 0x0006227C File Offset: 0x0006047C
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_Measurement()
        {
            return false;
        }

        // Token: 0x06000906 RID: 2310 RVA: 0x0006227F File Offset: 0x0006047F
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_MeasTransfPassport()
        {
            return false;
        }

        // Token: 0x06000907 RID: 2311 RVA: 0x00062282 File Offset: 0x00060482
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializefn_J_MeasTransfPassport()
        {
            return false;
        }

        // Token: 0x06000908 RID: 2312 RVA: 0x00062285 File Offset: 0x00060485
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_MeasCable()
        {
            return false;
        }

        // Token: 0x06000909 RID: 2313 RVA: 0x00062288 File Offset: 0x00060488
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtMeasCellRatio()
        {
            return false;
        }

        // Token: 0x0600090A RID: 2314 RVA: 0x0006228B File Offset: 0x0006048B
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetSchm_ObjList1()
        {
            return false;
        }

        // Token: 0x0600090B RID: 2315 RVA: 0x0006228E File Offset: 0x0006048E
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_TransfBySubstation()
        {
            return false;
        }

        // Token: 0x0600090C RID: 2316 RVA: 0x00062291 File Offset: 0x00060491
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_PowerISR_Transf()
        {
            return false;
        }

        // Token: 0x0600090D RID: 2317 RVA: 0x00062294 File Offset: 0x00060494
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_PowerISR_SSTransf()
        {
            return false;
        }

        // Token: 0x0600090E RID: 2318 RVA: 0x00062297 File Offset: 0x00060497
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializedtAmountFreeCapasity()
        {
            return false;
        }

        // Token: 0x0600090F RID: 2319 RVA: 0x0006229A File Offset: 0x0006049A
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializefn_J_GetCellTransfByBusHV()
        {
            return false;
        }

        // Token: 0x06000910 RID: 2320 RVA: 0x0006229D File Offset: 0x0006049D
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_MeasCable()
        {
            return false;
        }

        // Token: 0x06000911 RID: 2321 RVA: 0x000622A0 File Offset: 0x000604A0
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_LastCableInfo()
        {
            return false;
        }

        // Token: 0x06000912 RID: 2322 RVA: 0x000622A3 File Offset: 0x000604A3
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_TransfByCell()
        {
            return false;
        }

        // Token: 0x06000913 RID: 2323 RVA: 0x000622A6 File Offset: 0x000604A6
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_CableByCell()
        {
            return false;
        }

        // Token: 0x06000914 RID: 2324 RVA: 0x000622A9 File Offset: 0x000604A9
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefn_J_GetBusMVByTransf()
        {
            return false;
        }

        // Token: 0x06000915 RID: 2325 RVA: 0x000622AC File Offset: 0x000604AC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_MeasAmperageTransf()
        {
            return false;
        }

        // Token: 0x06000916 RID: 2326 RVA: 0x000622AF File Offset: 0x000604AF
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetSchm_ObjList2()
        {
            return false;
        }

        // Token: 0x06000917 RID: 2327 RVA: 0x000622B2 File Offset: 0x000604B2
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetSchm_ObjList3()
        {
            return false;
        }

        // Token: 0x06000918 RID: 2328 RVA: 0x000622B5 File Offset: 0x000604B5
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevP_TransfBySubstation()
        {
            return false;
        }

        // Token: 0x06000919 RID: 2329 RVA: 0x000622B8 File Offset: 0x000604B8
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_MeasAmpSubTransf_TEMP()
        {
            return false;
        }

        // Token: 0x0600091A RID: 2330 RVA: 0x000622BB File Offset: 0x000604BB
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_MeasSubTransf_TEMP()
        {
            return false;
        }

        // Token: 0x0600091B RID: 2331 RVA: 0x000622BE File Offset: 0x000604BE
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializefn_J_GetTransfByBusLV()
        {
            return false;
        }

        // Token: 0x0600091C RID: 2332 RVA: 0x000622C1 File Offset: 0x000604C1
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevP_SubstationBus()
        {
            return false;
        }

        // Token: 0x0600091D RID: 2333 RVA: 0x000622C4 File Offset: 0x000604C4
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_CellByBus()
        {
            return false;
        }

        // Token: 0x0600091E RID: 2334 RVA: 0x000622C7 File Offset: 0x000604C7
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_PowerISR_SSBus()
        {
            return false;
        }

        // Token: 0x0600091F RID: 2335 RVA: 0x000622CA File Offset: 0x000604CA
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializedtBusesTransf()
        {
            return false;
        }

        // Token: 0x06000920 RID: 2336 RVA: 0x000622CD File Offset: 0x000604CD
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_BusesTransfSchema()
        {
            return false;
        }

        // Token: 0x06000921 RID: 2337 RVA: 0x000622D0 File Offset: 0x000604D0
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_BusesTransfs()
        {
            return false;
        }

        // Token: 0x06000922 RID: 2338 RVA: 0x000622D3 File Offset: 0x000604D3
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevJ_MeasCableReport()
        {
            return false;
        }

        // Token: 0x06000923 RID: 2339 RVA: 0x000622D6 File Offset: 0x000604D6
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_MeasVoltageTransf()
        {
            return false;
        }

        // Token: 0x06000924 RID: 2340 RVA: 0x000622D9 File Offset: 0x000604D9
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_MeasCableReport2()
        {
            return false;
        }

        // Token: 0x06000925 RID: 2341 RVA: 0x000622DC File Offset: 0x000604DC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_CableByCellMeas()
        {
            return false;
        }

        // Token: 0x06000926 RID: 2342 RVA: 0x000622DF File Offset: 0x000604DF
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializetJ_MeasCell()
        {
            return false;
        }

        // Token: 0x06000927 RID: 2343 RVA: 0x000622E2 File Offset: 0x000604E2
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_MeasCell()
        {
            return false;
        }

        // Token: 0x06000928 RID: 2344 RVA: 0x000622E5 File Offset: 0x000604E5
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private bool ShouldSerializevJ_MeasTransfVoltage()
        {
            return false;
        }

        // Token: 0x06000929 RID: 2345 RVA: 0x000622E8 File Offset: 0x000604E8
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private void SchemaChanged(object sender, CollectionChangeEventArgs e)
        {
            if (e.Action == CollectionChangeAction.Remove)
            {
                this.InitVars();
            }
        }

        // Token: 0x0600092A RID: 2346 RVA: 0x000622FC File Offset: 0x000604FC
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public static XmlSchemaComplexType GetTypedDataSetSchema(XmlSchemaSet xs)
        {
            DataSetGES dataSetGES = new DataSetGES();
            XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
            XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
            XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
            xmlSchemaAny.Namespace = dataSetGES.Namespace;
            xmlSchemaSequence.Items.Add(xmlSchemaAny);
            xmlSchemaComplexType.Particle = xmlSchemaSequence;
            XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
            if (xs.Contains(schemaSerializable.TargetNamespace))
            {
                MemoryStream memoryStream = new MemoryStream();
                MemoryStream memoryStream2 = new MemoryStream();
                try
                {
                    schemaSerializable.Write(memoryStream);
                    IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                    while (enumerator.MoveNext())
                    {
                        XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                        memoryStream2.SetLength(0L);
                        xmlSchema.Write(memoryStream2);
                        if (memoryStream.Length == memoryStream2.Length)
                        {
                            memoryStream.Position = 0L;
                            memoryStream2.Position = 0L;
                            while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                            {
                            }
                            if (memoryStream.Position == memoryStream.Length)
                            {
                                return xmlSchemaComplexType;
                            }
                        }
                    }
                }
                finally
                {
                    if (memoryStream != null)
                    {
                        memoryStream.Close();
                    }
                    if (memoryStream2 != null)
                    {
                        memoryStream2.Close();
                    }
                }
            }
            xs.Add(schemaSerializable);
            return xmlSchemaComplexType;
        }

        // Token: 0x0600092B RID: 2347 RVA: 0x00062444 File Offset: 0x00060644
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private void InitExpressions()
        {
            this.vJ_RelayProtectionAutomation.coefTRColumn.Expression = "amp_primary + '/' + amp_secondary";
        }

        // Token: 0x0400069B RID: 1691
        private DataSetGES.tUserDataTable tabletUser;

        // Token: 0x0400069C RID: 1692
        private DataSetGES.tJ_RequestDocDataTable tabletJ_RequestDoc;

        // Token: 0x0400069D RID: 1693
        private DataSetGES.tJ_RequestDataTable tabletJ_Request;

        // Token: 0x0400069E RID: 1694
        private DataSetGES.vJ_RequestDataTable tablevJ_Request;

        // Token: 0x0400069F RID: 1695
        private DataSetGES.vJ_RequestForRepairDataTable tablevJ_RequestForRepair;

        // Token: 0x040006A0 RID: 1696
        private DataSetGES.tJ_RequestForRepairDataTable tabletJ_RequestForRepair;

        // Token: 0x040006A1 RID: 1697
        private DataSetGES.tR_ClassifierDataTable tabletR_Classifier;

        // Token: 0x040006A2 RID: 1698
        private DataSetGES.tJ_RequestForRepairDailyDataTable tabletJ_RequestForRepairDaily;

        // Token: 0x040006A3 RID: 1699
        private DataSetGES.vJ_RequestForRepairDailyDataTable tablevJ_RequestForRepairDaily;

        // Token: 0x040006A4 RID: 1700
        private DataSetGES.tL_RequestForRepairSchmObjListDataTable tabletL_RequestForRepairSchmObjList;

        // Token: 0x040006A5 RID: 1701
        private DataSetGES.tJ_RequestForRepairDocDataTable tabletJ_RequestForRepairDoc;

        // Token: 0x040006A6 RID: 1702
        private DataSetGES.tJ_RelayProtectionAutomationDataTable tabletJ_RelayProtectionAutomation;

        // Token: 0x040006A7 RID: 1703
        private DataSetGES.tJ_RelayProtectionAutomationValueDataTable tabletJ_RelayProtectionAutomationValue;

        // Token: 0x040006A8 RID: 1704
        private DataSetGES.vJ_RelayProtectionAutomationDataTable tablevJ_RelayProtectionAutomation;

        // Token: 0x040006A9 RID: 1705
        private DataSetGES.tJ_UpdateProgramDataTable tabletJ_UpdateProgram;

        // Token: 0x040006AA RID: 1706
        private DataSetGES.tJ_UpdateProgramDocDataTable tabletJ_UpdateProgramDoc;

        // Token: 0x040006AB RID: 1707
        private DataSetGES.vJ_UpdateProgramDataTable tablevJ_UpdateProgram;

        // Token: 0x040006AC RID: 1708
        private DataSetGES.tJ_UpdateProgramUserCheckDataTable tabletJ_UpdateProgramUserCheck;

        // Token: 0x040006AD RID: 1709
        private DataSetGES.tMeas_MeasurementDataTable tabletMeas_Measurement;

        // Token: 0x040006AE RID: 1710
        private DataSetGES.tMeas_TransDataTable tabletMeas_Trans;

        // Token: 0x040006AF RID: 1711
        private DataSetGES.tMeas_CabDataTable tabletMeas_Cab;

        // Token: 0x040006B0 RID: 1712
        private DataSetGES.tSchm_ObjListDataTable tabletSchm_ObjList;

        // Token: 0x040006B1 RID: 1713
        private DataSetGES.vP_WorkerDataTable tablevP_Worker;

        // Token: 0x040006B2 RID: 1714
        private DataSetGES.tP_ValueListsDataTable tabletP_ValueLists;

        // Token: 0x040006B3 RID: 1715
        private DataSetGES.vJ_CableMakeupDataTable tablevJ_CableMakeup;

        // Token: 0x040006B4 RID: 1716
        private DataSetGES.vJ_MeasPeriodBySubstationDataTable tablevJ_MeasPeriodBySubstation;

        // Token: 0x040006B5 RID: 1717
        private DataSetGES.fn_J_GetCellCableLVByTransfDataTable tablefn_J_GetCellCableLVByTransf;

        // Token: 0x040006B6 RID: 1718
        private DataSetGES.tL_SchmAbnDataTable tabletL_SchmAbn;

        // Token: 0x040006B7 RID: 1719
        private DataSetGES.vJ_MeasAbnObjDataTable tablevJ_MeasAbnObj;

        // Token: 0x040006B8 RID: 1720
        private DataSetGES.vJ_GetMeasYearsDataTable tablevJ_GetMeasYears;

        // Token: 0x040006B9 RID: 1721
        private DataSetGES.fn_J_GetCellLVByTransfDataTable tablefn_J_GetCellLVByTransf;

        // Token: 0x040006BA RID: 1722
        private DataSetGES.fn_J_MeasCableCalcResultsDataTable tablefn_J_MeasCableCalcResults;

        // Token: 0x040006BB RID: 1723
        private DataSetGES.tR_CableMakeupDataTable tabletR_CableMakeup;

        // Token: 0x040006BC RID: 1724
        private DataSetGES.tR_CrossSectionDataTable tabletR_CrossSection;

        // Token: 0x040006BD RID: 1725
        private DataSetGES.tR_CableVoltageDataTable tabletR_CableVoltage;

        // Token: 0x040006BE RID: 1726
        private DataSetGES.tR_CableAmperageDataTable tabletR_CableAmperage;

        // Token: 0x040006BF RID: 1727
        private DataSetGES.tR_CableWiresDataTable tabletR_CableWires;

        // Token: 0x040006C0 RID: 1728
        private DataSetGES.vJ_CableReferenceDataTable tablevJ_CableReference;

        // Token: 0x040006C1 RID: 1729
        private DataSetGES.vJ_TransfsDataTable tablevJ_Transfs;

        // Token: 0x040006C2 RID: 1730
        private DataSetGES.dtMeasCableRatioDataTable tabledtMeasCableRatio;

        // Token: 0x040006C3 RID: 1731
        private DataSetGES.fn_J_GetBusLVByTransfDataTable tablefn_J_GetBusLVByTransf;

        // Token: 0x040006C4 RID: 1732
        private DataSetGES.vJ_MeasurementReportDataTable tablevJ_MeasurementReport;

        // Token: 0x040006C5 RID: 1733
        private DataSetGES.dtMeasTransfAmperageDopDataReportDataTable tabledtMeasTransfAmperageDopDataReport;

        // Token: 0x040006C6 RID: 1734
        private DataSetGES.fn_J_ExcelessLoadReportDataTable tablefn_J_ExcelessLoadReport;

        // Token: 0x040006C7 RID: 1735
        private DataSetGES.dtExcelessLoadAddlReportDataTable tabledtExcelessLoadAddlReport;

        // Token: 0x040006C8 RID: 1736
        private DataSetGES.vJ_CoefficientLoadingDataTable tablevJ_CoefficientLoading;

        // Token: 0x040006C9 RID: 1737
        private DataSetGES.dtCoefficientLoadingAddlDataTable tabledtCoefficientLoadingAddl;

        // Token: 0x040006CA RID: 1738
        private DataSetGES.vJ_CoefficientIrregularityDataTable tablevJ_CoefficientIrregularity;

        // Token: 0x040006CB RID: 1739
        private DataSetGES.vP_SubstationTransfDataTable tablevP_SubstationTransf;

        // Token: 0x040006CC RID: 1740
        private DataSetGES.tR_DocTemplateDataTable tabletR_DocTemplate;

        // Token: 0x040006CD RID: 1741
        private DataSetGES.fn_J_GetCellTransfByBusLVDataTable tablefn_J_GetCellTransfByBusLV;

        // Token: 0x040006CE RID: 1742
        private DataSetGES.dtBusesDataTable tabledtBuses;

        // Token: 0x040006CF RID: 1743
        private DataSetGES.dtCellsDataTable tabledtCells;

        // Token: 0x040006D0 RID: 1744
        private DataSetGES.tJ_MeasurementDataTable tabletJ_Measurement;

        // Token: 0x040006D1 RID: 1745
        private DataSetGES.vJ_MeasTransfPassportDataTable tablevJ_MeasTransfPassport;

        // Token: 0x040006D2 RID: 1746
        private DataSetGES.fn_J_MeasTransfPassportDataTable tablefn_J_MeasTransfPassport;

        // Token: 0x040006D3 RID: 1747
        private DataSetGES.vJ_MeasCableDataTable tablevJ_MeasCable;

        // Token: 0x040006D4 RID: 1748
        private DataSetGES.dtMeasCellRatioDataTable tabledtMeasCellRatio;

        // Token: 0x040006D5 RID: 1749
        private DataSetGES.tSchm_ObjList1DataTable tabletSchm_ObjList1;

        // Token: 0x040006D6 RID: 1750
        private DataSetGES.vJ_TransfBySubstationDataTable tablevJ_TransfBySubstation;

        // Token: 0x040006D7 RID: 1751
        private DataSetGES.vJ_PowerISR_TransfDataTable tablevJ_PowerISR_Transf;

        // Token: 0x040006D8 RID: 1752
        private DataSetGES.vJ_PowerISR_SSTransfDataTable tablevJ_PowerISR_SSTransf;

        // Token: 0x040006D9 RID: 1753
        private DataSetGES.dtAmountFreeCapasityDataTable tabledtAmountFreeCapasity;

        // Token: 0x040006DA RID: 1754
        private DataSetGES.fn_J_GetCellTransfByBusHVDataTable tablefn_J_GetCellTransfByBusHV;

        // Token: 0x040006DB RID: 1755
        private DataSetGES.tJ_MeasCableDataTable tabletJ_MeasCable;

        // Token: 0x040006DC RID: 1756
        private DataSetGES.vJ_LastCableInfoDataTable tablevJ_LastCableInfo;

        // Token: 0x040006DD RID: 1757
        private DataSetGES.vJ_TransfByCellDataTable tablevJ_TransfByCell;

        // Token: 0x040006DE RID: 1758
        private DataSetGES.vJ_CableByCellDataTable tablevJ_CableByCell;

        // Token: 0x040006DF RID: 1759
        private DataSetGES.fn_J_GetBusMVByTransfDataTable tablefn_J_GetBusMVByTransf;

        // Token: 0x040006E0 RID: 1760
        private DataSetGES.tJ_MeasAmperageTransfDataTable tabletJ_MeasAmperageTransf;

        // Token: 0x040006E1 RID: 1761
        private DataSetGES.tSchm_ObjList2DataTable tabletSchm_ObjList2;

        // Token: 0x040006E2 RID: 1762
        private DataSetGES.tSchm_ObjList3DataTable tabletSchm_ObjList3;

        // Token: 0x040006E3 RID: 1763
        private DataSetGES.vP_TransfBySubstationDataTable tablevP_TransfBySubstation;

        // Token: 0x040006E4 RID: 1764
        private DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable tablevJ_MeasAmpSubTransf_TEMP;

        // Token: 0x040006E5 RID: 1765
        private DataSetGES.vJ_MeasSubTransf_TEMPDataTable tablevJ_MeasSubTransf_TEMP;

        // Token: 0x040006E6 RID: 1766
        private DataSetGES.fn_J_GetTransfByBusLVDataTable tablefn_J_GetTransfByBusLV;

        // Token: 0x040006E7 RID: 1767
        private DataSetGES.vP_SubstationBusDataTable tablevP_SubstationBus;

        // Token: 0x040006E8 RID: 1768
        private DataSetGES.vJ_CellByBusDataTable tablevJ_CellByBus;

        // Token: 0x040006E9 RID: 1769
        private DataSetGES.vJ_PowerISR_SSBusDataTable tablevJ_PowerISR_SSBus;

        // Token: 0x040006EA RID: 1770
        private DataSetGES.dtBusesTransfDataTable tabledtBusesTransf;

        // Token: 0x040006EB RID: 1771
        private DataSetGES.vJ_BusesTransfSchemaDataTable tablevJ_BusesTransfSchema;

        // Token: 0x040006EC RID: 1772
        private DataSetGES.vJ_BusesTransfsDataTable tablevJ_BusesTransfs;

        // Token: 0x040006ED RID: 1773
        private DataSetGES.vJ_MeasCableReportDataTable tablevJ_MeasCableReport;

        // Token: 0x040006EE RID: 1774
        private DataSetGES.tJ_MeasVoltageTransfDataTable tabletJ_MeasVoltageTransf;

        // Token: 0x040006EF RID: 1775
        private DataSetGES.vJ_MeasCableReport2DataTable tablevJ_MeasCableReport2;

        // Token: 0x040006F0 RID: 1776
        private DataSetGES.vJ_CableByCellMeasDataTable tablevJ_CableByCellMeas;

        // Token: 0x040006F1 RID: 1777
        private DataSetGES.tJ_MeasCellDataTable tabletJ_MeasCell;

        // Token: 0x040006F2 RID: 1778
        private DataSetGES.vJ_MeasCellDataTable tablevJ_MeasCell;

        // Token: 0x040006F3 RID: 1779
        private DataSetGES.vJ_MeasTransfVoltageDataTable tablevJ_MeasTransfVoltage;

        // Token: 0x040006F4 RID: 1780
        private DataRelation relationtJ_RequestForRepair_tJ_RequestForRepairDaily;

        // Token: 0x040006F5 RID: 1781
        private DataRelation relationvJ_RequestForRepair_tJ_RequestForRepairDaily;

        // Token: 0x040006F6 RID: 1782
        private SchemaSerializationMode _schemaSerializationMode = SchemaSerializationMode.IncludeSchema;

        // Token: 0x02000073 RID: 115
        // (Invoke) Token: 0x0600092D RID: 2349
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tUserRowChangeEventHandler(object sender, DataSetGES.tUserRowChangeEvent e);

        // Token: 0x02000074 RID: 116
        // (Invoke) Token: 0x06000931 RID: 2353
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_RequestDocRowChangeEventHandler(object sender, DataSetGES.tJ_RequestDocRowChangeEvent e);

        // Token: 0x02000075 RID: 117
        // (Invoke) Token: 0x06000935 RID: 2357
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_RequestRowChangeEventHandler(object sender, DataSetGES.tJ_RequestRowChangeEvent e);

        // Token: 0x02000076 RID: 118
        // (Invoke) Token: 0x06000939 RID: 2361
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_RequestRowChangeEventHandler(object sender, DataSetGES.vJ_RequestRowChangeEvent e);

        // Token: 0x02000077 RID: 119
        // (Invoke) Token: 0x0600093D RID: 2365
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_RequestForRepairRowChangeEventHandler(object sender, DataSetGES.vJ_RequestForRepairRowChangeEvent e);

        // Token: 0x02000078 RID: 120
        // (Invoke) Token: 0x06000941 RID: 2369
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_RequestForRepairRowChangeEventHandler(object sender, DataSetGES.tJ_RequestForRepairRowChangeEvent e);

        // Token: 0x02000079 RID: 121
        // (Invoke) Token: 0x06000945 RID: 2373
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tR_ClassifierRowChangeEventHandler(object sender, DataSetGES.tR_ClassifierRowChangeEvent e);

        // Token: 0x0200007A RID: 122
        // (Invoke) Token: 0x06000949 RID: 2377
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_RequestForRepairDailyRowChangeEventHandler(object sender, DataSetGES.tJ_RequestForRepairDailyRowChangeEvent e);

        // Token: 0x0200007B RID: 123
        // (Invoke) Token: 0x0600094D RID: 2381
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_RequestForRepairDailyRowChangeEventHandler(object sender, DataSetGES.vJ_RequestForRepairDailyRowChangeEvent e);

        // Token: 0x0200007C RID: 124
        // (Invoke) Token: 0x06000951 RID: 2385
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tL_RequestForRepairSchmObjListRowChangeEventHandler(object sender, DataSetGES.tL_RequestForRepairSchmObjListRowChangeEvent e);

        // Token: 0x0200007D RID: 125
        // (Invoke) Token: 0x06000955 RID: 2389
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_RequestForRepairDocRowChangeEventHandler(object sender, DataSetGES.tJ_RequestForRepairDocRowChangeEvent e);

        // Token: 0x0200007E RID: 126
        // (Invoke) Token: 0x06000959 RID: 2393
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_RelayProtectionAutomationRowChangeEventHandler(object sender, DataSetGES.tJ_RelayProtectionAutomationRowChangeEvent e);

        // Token: 0x0200007F RID: 127
        // (Invoke) Token: 0x0600095D RID: 2397
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_RelayProtectionAutomationValueRowChangeEventHandler(object sender, DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEvent e);

        // Token: 0x02000080 RID: 128
        // (Invoke) Token: 0x06000961 RID: 2401
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_RelayProtectionAutomationRowChangeEventHandler(object sender, DataSetGES.vJ_RelayProtectionAutomationRowChangeEvent e);

        // Token: 0x02000081 RID: 129
        // (Invoke) Token: 0x06000965 RID: 2405
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_UpdateProgramRowChangeEventHandler(object sender, DataSetGES.tJ_UpdateProgramRowChangeEvent e);

        // Token: 0x02000082 RID: 130
        // (Invoke) Token: 0x06000969 RID: 2409
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_UpdateProgramDocRowChangeEventHandler(object sender, DataSetGES.tJ_UpdateProgramDocRowChangeEvent e);

        // Token: 0x02000083 RID: 131
        // (Invoke) Token: 0x0600096D RID: 2413
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_UpdateProgramRowChangeEventHandler(object sender, DataSetGES.vJ_UpdateProgramRowChangeEvent e);

        // Token: 0x02000084 RID: 132
        // (Invoke) Token: 0x06000971 RID: 2417
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_UpdateProgramUserCheckRowChangeEventHandler(object sender, DataSetGES.tJ_UpdateProgramUserCheckRowChangeEvent e);

        // Token: 0x02000085 RID: 133
        // (Invoke) Token: 0x06000975 RID: 2421
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tMeas_MeasurementRowChangeEventHandler(object sender, DataSetGES.tMeas_MeasurementRowChangeEvent e);

        // Token: 0x02000086 RID: 134
        // (Invoke) Token: 0x06000979 RID: 2425
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tMeas_TransRowChangeEventHandler(object sender, DataSetGES.tMeas_TransRowChangeEvent e);

        // Token: 0x02000087 RID: 135
        // (Invoke) Token: 0x0600097D RID: 2429
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tMeas_CabRowChangeEventHandler(object sender, DataSetGES.tMeas_CabRowChangeEvent e);

        // Token: 0x02000088 RID: 136
        // (Invoke) Token: 0x06000981 RID: 2433
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tSchm_ObjListRowChangeEventHandler(object sender, DataSetGES.tSchm_ObjListRowChangeEvent e);

        // Token: 0x02000089 RID: 137
        // (Invoke) Token: 0x06000985 RID: 2437
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vP_WorkerRowChangeEventHandler(object sender, DataSetGES.vP_WorkerRowChangeEvent e);

        // Token: 0x0200008A RID: 138
        // (Invoke) Token: 0x06000989 RID: 2441
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tP_ValueListsRowChangeEventHandler(object sender, DataSetGES.tP_ValueListsRowChangeEvent e);

        // Token: 0x0200008B RID: 139
        // (Invoke) Token: 0x0600098D RID: 2445
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_CableMakeupRowChangeEventHandler(object sender, DataSetGES.vJ_CableMakeupRowChangeEvent e);

        // Token: 0x0200008C RID: 140
        // (Invoke) Token: 0x06000991 RID: 2449
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasPeriodBySubstationRowChangeEventHandler(object sender, DataSetGES.vJ_MeasPeriodBySubstationRowChangeEvent e);

        // Token: 0x0200008D RID: 141
        // (Invoke) Token: 0x06000995 RID: 2453
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_GetCellCableLVByTransfRowChangeEventHandler(object sender, DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEvent e);

        // Token: 0x0200008E RID: 142
        // (Invoke) Token: 0x06000999 RID: 2457
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tL_SchmAbnRowChangeEventHandler(object sender, DataSetGES.tL_SchmAbnRowChangeEvent e);

        // Token: 0x0200008F RID: 143
        // (Invoke) Token: 0x0600099D RID: 2461
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasAbnObjRowChangeEventHandler(object sender, DataSetGES.vJ_MeasAbnObjRowChangeEvent e);

        // Token: 0x02000090 RID: 144
        // (Invoke) Token: 0x060009A1 RID: 2465
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_GetMeasYearsRowChangeEventHandler(object sender, DataSetGES.vJ_GetMeasYearsRowChangeEvent e);

        // Token: 0x02000091 RID: 145
        // (Invoke) Token: 0x060009A5 RID: 2469
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_GetCellLVByTransfRowChangeEventHandler(object sender, DataSetGES.fn_J_GetCellLVByTransfRowChangeEvent e);

        // Token: 0x02000092 RID: 146
        // (Invoke) Token: 0x060009A9 RID: 2473
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_MeasCableCalcResultsRowChangeEventHandler(object sender, DataSetGES.fn_J_MeasCableCalcResultsRowChangeEvent e);

        // Token: 0x02000093 RID: 147
        // (Invoke) Token: 0x060009AD RID: 2477
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tR_CableMakeupRowChangeEventHandler(object sender, DataSetGES.tR_CableMakeupRowChangeEvent e);

        // Token: 0x02000094 RID: 148
        // (Invoke) Token: 0x060009B1 RID: 2481
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tR_CrossSectionRowChangeEventHandler(object sender, DataSetGES.tR_CrossSectionRowChangeEvent e);

        // Token: 0x02000095 RID: 149
        // (Invoke) Token: 0x060009B5 RID: 2485
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tR_CableVoltageRowChangeEventHandler(object sender, DataSetGES.tR_CableVoltageRowChangeEvent e);

        // Token: 0x02000096 RID: 150
        // (Invoke) Token: 0x060009B9 RID: 2489
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tR_CableAmperageRowChangeEventHandler(object sender, DataSetGES.tR_CableAmperageRowChangeEvent e);

        // Token: 0x02000097 RID: 151
        // (Invoke) Token: 0x060009BD RID: 2493
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tR_CableWiresRowChangeEventHandler(object sender, DataSetGES.tR_CableWiresRowChangeEvent e);

        // Token: 0x02000098 RID: 152
        // (Invoke) Token: 0x060009C1 RID: 2497
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_CableReferenceRowChangeEventHandler(object sender, DataSetGES.vJ_CableReferenceRowChangeEvent e);

        // Token: 0x02000099 RID: 153
        // (Invoke) Token: 0x060009C5 RID: 2501
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_TransfsRowChangeEventHandler(object sender, DataSetGES.vJ_TransfsRowChangeEvent e);

        // Token: 0x0200009A RID: 154
        // (Invoke) Token: 0x060009C9 RID: 2505
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtMeasCableRatioRowChangeEventHandler(object sender, DataSetGES.dtMeasCableRatioRowChangeEvent e);

        // Token: 0x0200009B RID: 155
        // (Invoke) Token: 0x060009CD RID: 2509
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_GetBusLVByTransfRowChangeEventHandler(object sender, DataSetGES.fn_J_GetBusLVByTransfRowChangeEvent e);

        // Token: 0x0200009C RID: 156
        // (Invoke) Token: 0x060009D1 RID: 2513
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasurementReportRowChangeEventHandler(object sender, DataSetGES.vJ_MeasurementReportRowChangeEvent e);

        // Token: 0x0200009D RID: 157
        // (Invoke) Token: 0x060009D5 RID: 2517
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtMeasTransfAmperageDopDataReportRowChangeEventHandler(object sender, DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEvent e);

        // Token: 0x0200009E RID: 158
        // (Invoke) Token: 0x060009D9 RID: 2521
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_ExcelessLoadReportRowChangeEventHandler(object sender, DataSetGES.fn_J_ExcelessLoadReportRowChangeEvent e);

        // Token: 0x0200009F RID: 159
        // (Invoke) Token: 0x060009DD RID: 2525
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtExcelessLoadAddlReportRowChangeEventHandler(object sender, DataSetGES.dtExcelessLoadAddlReportRowChangeEvent e);

        // Token: 0x020000A0 RID: 160
        // (Invoke) Token: 0x060009E1 RID: 2529
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_CoefficientLoadingRowChangeEventHandler(object sender, DataSetGES.vJ_CoefficientLoadingRowChangeEvent e);

        // Token: 0x020000A1 RID: 161
        // (Invoke) Token: 0x060009E5 RID: 2533
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtCoefficientLoadingAddlRowChangeEventHandler(object sender, DataSetGES.dtCoefficientLoadingAddlRowChangeEvent e);

        // Token: 0x020000A2 RID: 162
        // (Invoke) Token: 0x060009E9 RID: 2537
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_CoefficientIrregularityRowChangeEventHandler(object sender, DataSetGES.vJ_CoefficientIrregularityRowChangeEvent e);

        // Token: 0x020000A3 RID: 163
        // (Invoke) Token: 0x060009ED RID: 2541
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vP_SubstationTransfRowChangeEventHandler(object sender, DataSetGES.vP_SubstationTransfRowChangeEvent e);

        // Token: 0x020000A4 RID: 164
        // (Invoke) Token: 0x060009F1 RID: 2545
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tR_DocTemplateRowChangeEventHandler(object sender, DataSetGES.tR_DocTemplateRowChangeEvent e);

        // Token: 0x020000A5 RID: 165
        // (Invoke) Token: 0x060009F5 RID: 2549
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_GetCellTransfByBusLVRowChangeEventHandler(object sender, DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEvent e);

        // Token: 0x020000A6 RID: 166
        // (Invoke) Token: 0x060009F9 RID: 2553
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtBusesRowChangeEventHandler(object sender, DataSetGES.dtBusesRowChangeEvent e);

        // Token: 0x020000A7 RID: 167
        // (Invoke) Token: 0x060009FD RID: 2557
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtCellsRowChangeEventHandler(object sender, DataSetGES.dtCellsRowChangeEvent e);

        // Token: 0x020000A8 RID: 168
        // (Invoke) Token: 0x06000A01 RID: 2561
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_MeasurementRowChangeEventHandler(object sender, DataSetGES.tJ_MeasurementRowChangeEvent e);

        // Token: 0x020000A9 RID: 169
        // (Invoke) Token: 0x06000A05 RID: 2565
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasTransfPassportRowChangeEventHandler(object sender, DataSetGES.vJ_MeasTransfPassportRowChangeEvent e);

        // Token: 0x020000AA RID: 170
        // (Invoke) Token: 0x06000A09 RID: 2569
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_MeasTransfPassportRowChangeEventHandler(object sender, DataSetGES.fn_J_MeasTransfPassportRowChangeEvent e);

        // Token: 0x020000AB RID: 171
        // (Invoke) Token: 0x06000A0D RID: 2573
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasCableRowChangeEventHandler(object sender, DataSetGES.vJ_MeasCableRowChangeEvent e);

        // Token: 0x020000AC RID: 172
        // (Invoke) Token: 0x06000A11 RID: 2577
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtMeasCellRatioRowChangeEventHandler(object sender, DataSetGES.dtMeasCellRatioRowChangeEvent e);

        // Token: 0x020000AD RID: 173
        // (Invoke) Token: 0x06000A15 RID: 2581
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tSchm_ObjList1RowChangeEventHandler(object sender, DataSetGES.tSchm_ObjList1RowChangeEvent e);

        // Token: 0x020000AE RID: 174
        // (Invoke) Token: 0x06000A19 RID: 2585
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_TransfBySubstationRowChangeEventHandler(object sender, DataSetGES.vJ_TransfBySubstationRowChangeEvent e);

        // Token: 0x020000AF RID: 175
        // (Invoke) Token: 0x06000A1D RID: 2589
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_PowerISR_TransfRowChangeEventHandler(object sender, DataSetGES.vJ_PowerISR_TransfRowChangeEvent e);

        // Token: 0x020000B0 RID: 176
        // (Invoke) Token: 0x06000A21 RID: 2593
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_PowerISR_SSTransfRowChangeEventHandler(object sender, DataSetGES.vJ_PowerISR_SSTransfRowChangeEvent e);

        // Token: 0x020000B1 RID: 177
        // (Invoke) Token: 0x06000A25 RID: 2597
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtAmountFreeCapasityRowChangeEventHandler(object sender, DataSetGES.dtAmountFreeCapasityRowChangeEvent e);

        // Token: 0x020000B2 RID: 178
        // (Invoke) Token: 0x06000A29 RID: 2601
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_GetCellTransfByBusHVRowChangeEventHandler(object sender, DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEvent e);

        // Token: 0x020000B3 RID: 179
        // (Invoke) Token: 0x06000A2D RID: 2605
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_MeasCableRowChangeEventHandler(object sender, DataSetGES.tJ_MeasCableRowChangeEvent e);

        // Token: 0x020000B4 RID: 180
        // (Invoke) Token: 0x06000A31 RID: 2609
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_LastCableInfoRowChangeEventHandler(object sender, DataSetGES.vJ_LastCableInfoRowChangeEvent e);

        // Token: 0x020000B5 RID: 181
        // (Invoke) Token: 0x06000A35 RID: 2613
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_TransfByCellRowChangeEventHandler(object sender, DataSetGES.vJ_TransfByCellRowChangeEvent e);

        // Token: 0x020000B6 RID: 182
        // (Invoke) Token: 0x06000A39 RID: 2617
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_CableByCellRowChangeEventHandler(object sender, DataSetGES.vJ_CableByCellRowChangeEvent e);

        // Token: 0x020000B7 RID: 183
        // (Invoke) Token: 0x06000A3D RID: 2621
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_GetBusMVByTransfRowChangeEventHandler(object sender, DataSetGES.fn_J_GetBusMVByTransfRowChangeEvent e);

        // Token: 0x020000B8 RID: 184
        // (Invoke) Token: 0x06000A41 RID: 2625
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_MeasAmperageTransfRowChangeEventHandler(object sender, DataSetGES.tJ_MeasAmperageTransfRowChangeEvent e);

        // Token: 0x020000B9 RID: 185
        // (Invoke) Token: 0x06000A45 RID: 2629
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tSchm_ObjList2RowChangeEventHandler(object sender, DataSetGES.tSchm_ObjList2RowChangeEvent e);

        // Token: 0x020000BA RID: 186
        // (Invoke) Token: 0x06000A49 RID: 2633
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tSchm_ObjList3RowChangeEventHandler(object sender, DataSetGES.tSchm_ObjList3RowChangeEvent e);

        // Token: 0x020000BB RID: 187
        // (Invoke) Token: 0x06000A4D RID: 2637
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vP_TransfBySubstationRowChangeEventHandler(object sender, DataSetGES.vP_TransfBySubstationRowChangeEvent e);

        // Token: 0x020000BC RID: 188
        // (Invoke) Token: 0x06000A51 RID: 2641
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasAmpSubTransf_TEMPRowChangeEventHandler(object sender, DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEvent e);

        // Token: 0x020000BD RID: 189
        // (Invoke) Token: 0x06000A55 RID: 2645
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasSubTransf_TEMPRowChangeEventHandler(object sender, DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEvent e);

        // Token: 0x020000BE RID: 190
        // (Invoke) Token: 0x06000A59 RID: 2649
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void fn_J_GetTransfByBusLVRowChangeEventHandler(object sender, DataSetGES.fn_J_GetTransfByBusLVRowChangeEvent e);

        // Token: 0x020000BF RID: 191
        // (Invoke) Token: 0x06000A5D RID: 2653
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vP_SubstationBusRowChangeEventHandler(object sender, DataSetGES.vP_SubstationBusRowChangeEvent e);

        // Token: 0x020000C0 RID: 192
        // (Invoke) Token: 0x06000A61 RID: 2657
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_CellByBusRowChangeEventHandler(object sender, DataSetGES.vJ_CellByBusRowChangeEvent e);

        // Token: 0x020000C1 RID: 193
        // (Invoke) Token: 0x06000A65 RID: 2661
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_PowerISR_SSBusRowChangeEventHandler(object sender, DataSetGES.vJ_PowerISR_SSBusRowChangeEvent e);

        // Token: 0x020000C2 RID: 194
        // (Invoke) Token: 0x06000A69 RID: 2665
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtBusesTransfRowChangeEventHandler(object sender, DataSetGES.dtBusesTransfRowChangeEvent e);

        // Token: 0x020000C3 RID: 195
        // (Invoke) Token: 0x06000A6D RID: 2669
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_BusesTransfSchemaRowChangeEventHandler(object sender, DataSetGES.vJ_BusesTransfSchemaRowChangeEvent e);

        // Token: 0x020000C4 RID: 196
        // (Invoke) Token: 0x06000A71 RID: 2673
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_BusesTransfsRowChangeEventHandler(object sender, DataSetGES.vJ_BusesTransfsRowChangeEvent e);

        // Token: 0x020000C5 RID: 197
        // (Invoke) Token: 0x06000A75 RID: 2677
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasCableReportRowChangeEventHandler(object sender, DataSetGES.vJ_MeasCableReportRowChangeEvent e);

        // Token: 0x020000C6 RID: 198
        // (Invoke) Token: 0x06000A79 RID: 2681
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_MeasVoltageTransfRowChangeEventHandler(object sender, DataSetGES.tJ_MeasVoltageTransfRowChangeEvent e);

        // Token: 0x020000C7 RID: 199
        // (Invoke) Token: 0x06000A7D RID: 2685
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasCableReport2RowChangeEventHandler(object sender, DataSetGES.vJ_MeasCableReport2RowChangeEvent e);

        // Token: 0x020000C8 RID: 200
        // (Invoke) Token: 0x06000A81 RID: 2689
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_CableByCellMeasRowChangeEventHandler(object sender, DataSetGES.vJ_CableByCellMeasRowChangeEvent e);

        // Token: 0x020000C9 RID: 201
        // (Invoke) Token: 0x06000A85 RID: 2693
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tJ_MeasCellRowChangeEventHandler(object sender, DataSetGES.tJ_MeasCellRowChangeEvent e);

        // Token: 0x020000CA RID: 202
        // (Invoke) Token: 0x06000A89 RID: 2697
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasCellRowChangeEventHandler(object sender, DataSetGES.vJ_MeasCellRowChangeEvent e);

        // Token: 0x020000CB RID: 203
        // (Invoke) Token: 0x06000A8D RID: 2701
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vJ_MeasTransfVoltageRowChangeEventHandler(object sender, DataSetGES.vJ_MeasTransfVoltageRowChangeEvent e);

        // Token: 0x020000CC RID: 204
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tUserDataTable : TypedTableBase<DataSetGES.tUserRow>
        {
            // Token: 0x06000A90 RID: 2704 RVA: 0x0006245B File Offset: 0x0006065B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tUserDataTable()
            {
                base.TableName = "tUser";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000A91 RID: 2705 RVA: 0x00062480 File Offset: 0x00060680
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tUserDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000A92 RID: 2706 RVA: 0x00062528 File Offset: 0x00060728
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tUserDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700020F RID: 527
            // (get) Token: 0x06000A93 RID: 2707 RVA: 0x00062538 File Offset: 0x00060738
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IDUserColumn
            {
                get
                {
                    return this.columnIDUser;
                }
            }

            // Token: 0x17000210 RID: 528
            // (get) Token: 0x06000A94 RID: 2708 RVA: 0x00062540 File Offset: 0x00060740
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdWorkerColumn
            {
                get
                {
                    return this.columnIdWorker;
                }
            }

            // Token: 0x17000211 RID: 529
            // (get) Token: 0x06000A95 RID: 2709 RVA: 0x00062548 File Offset: 0x00060748
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LoginColumn
            {
                get
                {
                    return this.columnLogin;
                }
            }

            // Token: 0x17000212 RID: 530
            // (get) Token: 0x06000A96 RID: 2710 RVA: 0x00062550 File Offset: 0x00060750
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000213 RID: 531
            // (get) Token: 0x06000A97 RID: 2711 RVA: 0x00062558 File Offset: 0x00060758
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x17000214 RID: 532
            // (get) Token: 0x06000A98 RID: 2712 RVA: 0x00062560 File Offset: 0x00060760
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000215 RID: 533
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tUserRow this[int index]
            {
                get
                {
                    return (DataSetGES.tUserRow)base.Rows[index];
                }
            }

            // Token: 0x14000049 RID: 73
            // (add) Token: 0x06000A9A RID: 2714 RVA: 0x00062580 File Offset: 0x00060780
            // (remove) Token: 0x06000A9B RID: 2715 RVA: 0x000625B8 File Offset: 0x000607B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tUserRowChangeEventHandler tUserRowChanging;

            // Token: 0x1400004A RID: 74
            // (add) Token: 0x06000A9C RID: 2716 RVA: 0x000625F0 File Offset: 0x000607F0
            // (remove) Token: 0x06000A9D RID: 2717 RVA: 0x00062628 File Offset: 0x00060828
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tUserRowChangeEventHandler tUserRowChanged;

            // Token: 0x1400004B RID: 75
            // (add) Token: 0x06000A9E RID: 2718 RVA: 0x00062660 File Offset: 0x00060860
            // (remove) Token: 0x06000A9F RID: 2719 RVA: 0x00062698 File Offset: 0x00060898
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tUserRowChangeEventHandler tUserRowDeleting;

            // Token: 0x1400004C RID: 76
            // (add) Token: 0x06000AA0 RID: 2720 RVA: 0x000626D0 File Offset: 0x000608D0
            // (remove) Token: 0x06000AA1 RID: 2721 RVA: 0x00062708 File Offset: 0x00060908
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tUserRowChangeEventHandler tUserRowDeleted;

            // Token: 0x06000AA2 RID: 2722 RVA: 0x0006273D File Offset: 0x0006093D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtUserRow(DataSetGES.tUserRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000AA3 RID: 2723 RVA: 0x0006274C File Offset: 0x0006094C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tUserRow AddtUserRow(int IdWorker, string Login, string Name, bool Deleted)
            {
                DataSetGES.tUserRow tUserRow = (DataSetGES.tUserRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    IdWorker,
                    Login,
                    Name,
                    Deleted
                };
                tUserRow.ItemArray = itemArray;
                base.Rows.Add(tUserRow);
                return tUserRow;
            }

            // Token: 0x06000AA4 RID: 2724 RVA: 0x000627A0 File Offset: 0x000609A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tUserRow FindByIDUser(int IDUser)
            {
                return (DataSetGES.tUserRow)base.Rows.Find(new object[]
                {
                    IDUser
                });
            }

            // Token: 0x06000AA5 RID: 2725 RVA: 0x000627D0 File Offset: 0x000609D0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tUserDataTable tUserDataTable = (DataSetGES.tUserDataTable)base.Clone();
                tUserDataTable.InitVars();
                return tUserDataTable;
            }

            // Token: 0x06000AA6 RID: 2726 RVA: 0x000627F0 File Offset: 0x000609F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tUserDataTable();
            }

            // Token: 0x06000AA7 RID: 2727 RVA: 0x000627F8 File Offset: 0x000609F8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnIDUser = base.Columns["IDUser"];
                this.columnIdWorker = base.Columns["IdWorker"];
                this.columnLogin = base.Columns["Login"];
                this.columnName = base.Columns["Name"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x06000AA8 RID: 2728 RVA: 0x00062874 File Offset: 0x00060A74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnIDUser = new DataColumn("IDUser", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIDUser);
                this.columnIdWorker = new DataColumn("IdWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdWorker);
                this.columnLogin = new DataColumn("Login", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnLogin);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnIDUser
                }, true));
                this.columnIDUser.AutoIncrement = true;
                this.columnIDUser.AutoIncrementSeed = -1L;
                this.columnIDUser.AutoIncrementStep = -1L;
                this.columnIDUser.AllowDBNull = false;
                this.columnIDUser.ReadOnly = true;
                this.columnIDUser.Unique = true;
                this.columnLogin.AllowDBNull = false;
                this.columnLogin.MaxLength = 50;
                this.columnName.MaxLength = 50;
                this.columnDeleted.AllowDBNull = false;
            }

            // Token: 0x06000AA9 RID: 2729 RVA: 0x00062A05 File Offset: 0x00060C05
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tUserRow NewtUserRow()
            {
                return (DataSetGES.tUserRow)base.NewRow();
            }

            // Token: 0x06000AAA RID: 2730 RVA: 0x00062A12 File Offset: 0x00060C12
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tUserRow(builder);
            }

            // Token: 0x06000AAB RID: 2731 RVA: 0x00062A1A File Offset: 0x00060C1A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tUserRow);
            }

            // Token: 0x06000AAC RID: 2732 RVA: 0x00062A26 File Offset: 0x00060C26
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tUserRowChanged != null)
                {
                    this.tUserRowChanged(this, new DataSetGES.tUserRowChangeEvent((DataSetGES.tUserRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AAD RID: 2733 RVA: 0x00062A59 File Offset: 0x00060C59
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tUserRowChanging != null)
                {
                    this.tUserRowChanging(this, new DataSetGES.tUserRowChangeEvent((DataSetGES.tUserRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AAE RID: 2734 RVA: 0x00062A8C File Offset: 0x00060C8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tUserRowDeleted != null)
                {
                    this.tUserRowDeleted(this, new DataSetGES.tUserRowChangeEvent((DataSetGES.tUserRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AAF RID: 2735 RVA: 0x00062ABF File Offset: 0x00060CBF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tUserRowDeleting != null)
                {
                    this.tUserRowDeleting(this, new DataSetGES.tUserRowChangeEvent((DataSetGES.tUserRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AB0 RID: 2736 RVA: 0x00062AF2 File Offset: 0x00060CF2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetUserRow(DataSetGES.tUserRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000AB1 RID: 2737 RVA: 0x00062B00 File Offset: 0x00060D00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tUserDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040006F7 RID: 1783
            private DataColumn columnIDUser;

            // Token: 0x040006F8 RID: 1784
            private DataColumn columnIdWorker;

            // Token: 0x040006F9 RID: 1785
            private DataColumn columnLogin;

            // Token: 0x040006FA RID: 1786
            private DataColumn columnName;

            // Token: 0x040006FB RID: 1787
            private DataColumn columnDeleted;
        }

        // Token: 0x020000CD RID: 205
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_RequestDocDataTable : TypedTableBase<DataSetGES.tJ_RequestDocRow>
        {
            // Token: 0x06000AB2 RID: 2738 RVA: 0x00062CF8 File Offset: 0x00060EF8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestDocDataTable()
            {
                base.TableName = "tJ_RequestDoc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000AB3 RID: 2739 RVA: 0x00062D20 File Offset: 0x00060F20
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestDocDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000AB4 RID: 2740 RVA: 0x00062DC8 File Offset: 0x00060FC8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_RequestDocDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000216 RID: 534
            // (get) Token: 0x06000AB5 RID: 2741 RVA: 0x00062DD8 File Offset: 0x00060FD8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000217 RID: 535
            // (get) Token: 0x06000AB6 RID: 2742 RVA: 0x00062DE0 File Offset: 0x00060FE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            // Token: 0x17000218 RID: 536
            // (get) Token: 0x06000AB7 RID: 2743 RVA: 0x00062DE8 File Offset: 0x00060FE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DocumentColumn
            {
                get
                {
                    return this.columnDocument;
                }
            }

            // Token: 0x17000219 RID: 537
            // (get) Token: 0x06000AB8 RID: 2744 RVA: 0x00062DF0 File Offset: 0x00060FF0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            // Token: 0x1700021A RID: 538
            // (get) Token: 0x06000AB9 RID: 2745 RVA: 0x00062DF8 File Offset: 0x00060FF8
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700021B RID: 539
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestDocRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_RequestDocRow)base.Rows[index];
                }
            }

            // Token: 0x1400004D RID: 77
            // (add) Token: 0x06000ABB RID: 2747 RVA: 0x00062E18 File Offset: 0x00061018
            // (remove) Token: 0x06000ABC RID: 2748 RVA: 0x00062E50 File Offset: 0x00061050
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestDocRowChangeEventHandler tJ_RequestDocRowChanging;

            // Token: 0x1400004E RID: 78
            // (add) Token: 0x06000ABD RID: 2749 RVA: 0x00062E88 File Offset: 0x00061088
            // (remove) Token: 0x06000ABE RID: 2750 RVA: 0x00062EC0 File Offset: 0x000610C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestDocRowChangeEventHandler tJ_RequestDocRowChanged;

            // Token: 0x1400004F RID: 79
            // (add) Token: 0x06000ABF RID: 2751 RVA: 0x00062EF8 File Offset: 0x000610F8
            // (remove) Token: 0x06000AC0 RID: 2752 RVA: 0x00062F30 File Offset: 0x00061130
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestDocRowChangeEventHandler tJ_RequestDocRowDeleting;

            // Token: 0x14000050 RID: 80
            // (add) Token: 0x06000AC1 RID: 2753 RVA: 0x00062F68 File Offset: 0x00061168
            // (remove) Token: 0x06000AC2 RID: 2754 RVA: 0x00062FA0 File Offset: 0x000611A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestDocRowChangeEventHandler tJ_RequestDocRowDeleted;

            // Token: 0x06000AC3 RID: 2755 RVA: 0x00062FD5 File Offset: 0x000611D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_RequestDocRow(DataSetGES.tJ_RequestDocRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000AC4 RID: 2756 RVA: 0x00062FE4 File Offset: 0x000611E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestDocRow AddtJ_RequestDocRow(int idRequest, byte[] Document, string FileName)
            {
                DataSetGES.tJ_RequestDocRow tJ_RequestDocRow = (DataSetGES.tJ_RequestDocRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idRequest,
                    Document,
                    FileName
                };
                tJ_RequestDocRow.ItemArray = itemArray;
                base.Rows.Add(tJ_RequestDocRow);
                return tJ_RequestDocRow;
            }

            // Token: 0x06000AC5 RID: 2757 RVA: 0x0006302C File Offset: 0x0006122C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestDocRow FindByid(int id)
            {
                return (DataSetGES.tJ_RequestDocRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000AC6 RID: 2758 RVA: 0x0006305C File Offset: 0x0006125C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestDocDataTable tJ_RequestDocDataTable = (DataSetGES.tJ_RequestDocDataTable)base.Clone();
                tJ_RequestDocDataTable.InitVars();
                return tJ_RequestDocDataTable;
            }

            // Token: 0x06000AC7 RID: 2759 RVA: 0x0006307C File Offset: 0x0006127C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestDocDataTable();
            }

            // Token: 0x06000AC8 RID: 2760 RVA: 0x00063084 File Offset: 0x00061284
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columnDocument = base.Columns["Document"];
                this.columnFileName = base.Columns["FileName"];
            }

            // Token: 0x06000AC9 RID: 2761 RVA: 0x000630EC File Offset: 0x000612EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columnDocument = new DataColumn("Document", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnDocument);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columnDocument.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 1024;
            }

            // Token: 0x06000ACA RID: 2762 RVA: 0x00063252 File Offset: 0x00061452
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestDocRow NewtJ_RequestDocRow()
            {
                return (DataSetGES.tJ_RequestDocRow)base.NewRow();
            }

            // Token: 0x06000ACB RID: 2763 RVA: 0x0006325F File Offset: 0x0006145F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_RequestDocRow(builder);
            }

            // Token: 0x06000ACC RID: 2764 RVA: 0x00063267 File Offset: 0x00061467
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_RequestDocRow);
            }

            // Token: 0x06000ACD RID: 2765 RVA: 0x00063273 File Offset: 0x00061473
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_RequestDocRowChanged != null)
                {
                    this.tJ_RequestDocRowChanged(this, new DataSetGES.tJ_RequestDocRowChangeEvent((DataSetGES.tJ_RequestDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000ACE RID: 2766 RVA: 0x000632A6 File Offset: 0x000614A6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_RequestDocRowChanging != null)
                {
                    this.tJ_RequestDocRowChanging(this, new DataSetGES.tJ_RequestDocRowChangeEvent((DataSetGES.tJ_RequestDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000ACF RID: 2767 RVA: 0x000632D9 File Offset: 0x000614D9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_RequestDocRowDeleted != null)
                {
                    this.tJ_RequestDocRowDeleted(this, new DataSetGES.tJ_RequestDocRowChangeEvent((DataSetGES.tJ_RequestDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AD0 RID: 2768 RVA: 0x0006330C File Offset: 0x0006150C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_RequestDocRowDeleting != null)
                {
                    this.tJ_RequestDocRowDeleting(this, new DataSetGES.tJ_RequestDocRowChangeEvent((DataSetGES.tJ_RequestDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AD1 RID: 2769 RVA: 0x0006333F File Offset: 0x0006153F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetJ_RequestDocRow(DataSetGES.tJ_RequestDocRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000AD2 RID: 2770 RVA: 0x00063350 File Offset: 0x00061550
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_RequestDocDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000700 RID: 1792
            private DataColumn columnid;

            // Token: 0x04000701 RID: 1793
            private DataColumn columnidRequest;

            // Token: 0x04000702 RID: 1794
            private DataColumn columnDocument;

            // Token: 0x04000703 RID: 1795
            private DataColumn columnFileName;
        }

        // Token: 0x020000CE RID: 206
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_RequestDataTable : TypedTableBase<DataSetGES.tJ_RequestRow>
        {
            // Token: 0x06000AD3 RID: 2771 RVA: 0x00063548 File Offset: 0x00061748
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestDataTable()
            {
                base.TableName = "tJ_Request";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000AD4 RID: 2772 RVA: 0x00063570 File Offset: 0x00061770
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RequestDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000AD5 RID: 2773 RVA: 0x00063618 File Offset: 0x00061818
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RequestDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700021C RID: 540
            // (get) Token: 0x06000AD6 RID: 2774 RVA: 0x00063628 File Offset: 0x00061828
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700021D RID: 541
            // (get) Token: 0x06000AD7 RID: 2775 RVA: 0x00063630 File Offset: 0x00061830
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserTaskColumn
            {
                get
                {
                    return this.columnidUserTask;
                }
            }

            // Token: 0x1700021E RID: 542
            // (get) Token: 0x06000AD8 RID: 2776 RVA: 0x00063638 File Offset: 0x00061838
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateTaskColumn
            {
                get
                {
                    return this.columnDateTask;
                }
            }

            // Token: 0x1700021F RID: 543
            // (get) Token: 0x06000AD9 RID: 2777 RVA: 0x00063640 File Offset: 0x00061840
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            // Token: 0x17000220 RID: 544
            // (get) Token: 0x06000ADA RID: 2778 RVA: 0x00063648 File Offset: 0x00061848
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TextTaskColumn
            {
                get
                {
                    return this.columnTextTask;
                }
            }

            // Token: 0x17000221 RID: 545
            // (get) Token: 0x06000ADB RID: 2779 RVA: 0x00063650 File Offset: 0x00061850
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TextTaskBinColumn
            {
                get
                {
                    return this.columnTextTaskBin;
                }
            }

            // Token: 0x17000222 RID: 546
            // (get) Token: 0x06000ADC RID: 2780 RVA: 0x00063658 File Offset: 0x00061858
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUserWhomColumn
            {
                get
                {
                    return this.columnidUserWhom;
                }
            }

            // Token: 0x17000223 RID: 547
            // (get) Token: 0x06000ADD RID: 2781 RVA: 0x00063660 File Offset: 0x00061860
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeTaskColumn
            {
                get
                {
                    return this.columnTypeTask;
                }
            }

            // Token: 0x17000224 RID: 548
            // (get) Token: 0x06000ADE RID: 2782 RVA: 0x00063668 File Offset: 0x00061868
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StatusTaskColumn
            {
                get
                {
                    return this.columnStatusTask;
                }
            }

            // Token: 0x17000225 RID: 549
            // (get) Token: 0x06000ADF RID: 2783 RVA: 0x00063670 File Offset: 0x00061870
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserPerfomColumn
            {
                get
                {
                    return this.columnidUserPerfom;
                }
            }

            // Token: 0x17000226 RID: 550
            // (get) Token: 0x06000AE0 RID: 2784 RVA: 0x00063678 File Offset: 0x00061878
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DatePerfomColumn
            {
                get
                {
                    return this.columnDatePerfom;
                }
            }

            // Token: 0x17000227 RID: 551
            // (get) Token: 0x06000AE1 RID: 2785 RVA: 0x00063680 File Offset: 0x00061880
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000228 RID: 552
            // (get) Token: 0x06000AE2 RID: 2786 RVA: 0x00063688 File Offset: 0x00061888
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000229 RID: 553
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_RequestRow)base.Rows[index];
                }
            }

            // Token: 0x14000051 RID: 81
            // (add) Token: 0x06000AE4 RID: 2788 RVA: 0x000636A8 File Offset: 0x000618A8
            // (remove) Token: 0x06000AE5 RID: 2789 RVA: 0x000636E0 File Offset: 0x000618E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestRowChangeEventHandler tJ_RequestRowChanging;

            // Token: 0x14000052 RID: 82
            // (add) Token: 0x06000AE6 RID: 2790 RVA: 0x00063718 File Offset: 0x00061918
            // (remove) Token: 0x06000AE7 RID: 2791 RVA: 0x00063750 File Offset: 0x00061950
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestRowChangeEventHandler tJ_RequestRowChanged;

            // Token: 0x14000053 RID: 83
            // (add) Token: 0x06000AE8 RID: 2792 RVA: 0x00063788 File Offset: 0x00061988
            // (remove) Token: 0x06000AE9 RID: 2793 RVA: 0x000637C0 File Offset: 0x000619C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestRowChangeEventHandler tJ_RequestRowDeleting;

            // Token: 0x14000054 RID: 84
            // (add) Token: 0x06000AEA RID: 2794 RVA: 0x000637F8 File Offset: 0x000619F8
            // (remove) Token: 0x06000AEB RID: 2795 RVA: 0x00063830 File Offset: 0x00061A30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestRowChangeEventHandler tJ_RequestRowDeleted;

            // Token: 0x06000AEC RID: 2796 RVA: 0x00063865 File Offset: 0x00061A65
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_RequestRow(DataSetGES.tJ_RequestRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000AED RID: 2797 RVA: 0x00063874 File Offset: 0x00061A74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestRow AddtJ_RequestRow(int idUserTask, DateTime DateTask, int Modul, string TextTask, byte[] TextTaskBin, int idUserWhom, int TypeTask, string StatusTask, int idUserPerfom, DateTime DatePerfom, string Comment)
            {
                DataSetGES.tJ_RequestRow tJ_RequestRow = (DataSetGES.tJ_RequestRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idUserTask,
                    DateTask,
                    Modul,
                    TextTask,
                    TextTaskBin,
                    idUserWhom,
                    TypeTask,
                    StatusTask,
                    idUserPerfom,
                    DatePerfom,
                    Comment
                };
                tJ_RequestRow.ItemArray = itemArray;
                base.Rows.Add(tJ_RequestRow);
                return tJ_RequestRow;
            }

            // Token: 0x06000AEE RID: 2798 RVA: 0x00063908 File Offset: 0x00061B08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestRow FindByid(int id)
            {
                return (DataSetGES.tJ_RequestRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000AEF RID: 2799 RVA: 0x00063938 File Offset: 0x00061B38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestDataTable tJ_RequestDataTable = (DataSetGES.tJ_RequestDataTable)base.Clone();
                tJ_RequestDataTable.InitVars();
                return tJ_RequestDataTable;
            }

            // Token: 0x06000AF0 RID: 2800 RVA: 0x00063958 File Offset: 0x00061B58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestDataTable();
            }

            // Token: 0x06000AF1 RID: 2801 RVA: 0x00063960 File Offset: 0x00061B60
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidUserTask = base.Columns["idUserTask"];
                this.columnDateTask = base.Columns["DateTask"];
                this.columnModul = base.Columns["Modul"];
                this.columnTextTask = base.Columns["TextTask"];
                this.columnTextTaskBin = base.Columns["TextTaskBin"];
                this.columnidUserWhom = base.Columns["idUserWhom"];
                this.columnTypeTask = base.Columns["TypeTask"];
                this.columnStatusTask = base.Columns["StatusTask"];
                this.columnidUserPerfom = base.Columns["idUserPerfom"];
                this.columnDatePerfom = base.Columns["DatePerfom"];
                this.columnComment = base.Columns["Comment"];
            }

            // Token: 0x06000AF2 RID: 2802 RVA: 0x00063A78 File Offset: 0x00061C78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidUserTask = new DataColumn("idUserTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserTask);
                this.columnDateTask = new DataColumn("DateTask", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTask);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnTextTask = new DataColumn("TextTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextTask);
                this.columnTextTaskBin = new DataColumn("TextTaskBin", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnTextTaskBin);
                this.columnidUserWhom = new DataColumn("idUserWhom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserWhom);
                this.columnTypeTask = new DataColumn("TypeTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeTask);
                this.columnStatusTask = new DataColumn("StatusTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStatusTask);
                this.columnidUserPerfom = new DataColumn("idUserPerfom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserPerfom);
                this.columnDatePerfom = new DataColumn("DatePerfom", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDatePerfom);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidUserTask.AllowDBNull = false;
                this.columnDateTask.AllowDBNull = false;
                this.columnComment.MaxLength = 2000;
            }

            // Token: 0x06000AF3 RID: 2803 RVA: 0x00063D3A File Offset: 0x00061F3A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestRow NewtJ_RequestRow()
            {
                return (DataSetGES.tJ_RequestRow)base.NewRow();
            }

            // Token: 0x06000AF4 RID: 2804 RVA: 0x00063D47 File Offset: 0x00061F47
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_RequestRow(builder);
            }

            // Token: 0x06000AF5 RID: 2805 RVA: 0x00063D4F File Offset: 0x00061F4F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_RequestRow);
            }

            // Token: 0x06000AF6 RID: 2806 RVA: 0x00063D5B File Offset: 0x00061F5B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_RequestRowChanged != null)
                {
                    this.tJ_RequestRowChanged(this, new DataSetGES.tJ_RequestRowChangeEvent((DataSetGES.tJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AF7 RID: 2807 RVA: 0x00063D8E File Offset: 0x00061F8E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_RequestRowChanging != null)
                {
                    this.tJ_RequestRowChanging(this, new DataSetGES.tJ_RequestRowChangeEvent((DataSetGES.tJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AF8 RID: 2808 RVA: 0x00063DC1 File Offset: 0x00061FC1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_RequestRowDeleted != null)
                {
                    this.tJ_RequestRowDeleted(this, new DataSetGES.tJ_RequestRowChangeEvent((DataSetGES.tJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AF9 RID: 2809 RVA: 0x00063DF4 File Offset: 0x00061FF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_RequestRowDeleting != null)
                {
                    this.tJ_RequestRowDeleting(this, new DataSetGES.tJ_RequestRowChangeEvent((DataSetGES.tJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000AFA RID: 2810 RVA: 0x00063E27 File Offset: 0x00062027
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_RequestRow(DataSetGES.tJ_RequestRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000AFB RID: 2811 RVA: 0x00063E38 File Offset: 0x00062038
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_RequestDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000708 RID: 1800
            private DataColumn columnid;

            // Token: 0x04000709 RID: 1801
            private DataColumn columnidUserTask;

            // Token: 0x0400070A RID: 1802
            private DataColumn columnDateTask;

            // Token: 0x0400070B RID: 1803
            private DataColumn columnModul;

            // Token: 0x0400070C RID: 1804
            private DataColumn columnTextTask;

            // Token: 0x0400070D RID: 1805
            private DataColumn columnTextTaskBin;

            // Token: 0x0400070E RID: 1806
            private DataColumn columnidUserWhom;

            // Token: 0x0400070F RID: 1807
            private DataColumn columnTypeTask;

            // Token: 0x04000710 RID: 1808
            private DataColumn columnStatusTask;

            // Token: 0x04000711 RID: 1809
            private DataColumn columnidUserPerfom;

            // Token: 0x04000712 RID: 1810
            private DataColumn columnDatePerfom;

            // Token: 0x04000713 RID: 1811
            private DataColumn columnComment;
        }

        // Token: 0x020000CF RID: 207
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_RequestDataTable : TypedTableBase<DataSetGES.vJ_RequestRow>
        {
            // Token: 0x06000AFC RID: 2812 RVA: 0x00064030 File Offset: 0x00062230
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RequestDataTable()
            {
                base.TableName = "vJ_Request";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000AFD RID: 2813 RVA: 0x00064058 File Offset: 0x00062258
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_RequestDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000AFE RID: 2814 RVA: 0x00064100 File Offset: 0x00062300
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_RequestDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700022A RID: 554
            // (get) Token: 0x06000AFF RID: 2815 RVA: 0x00064110 File Offset: 0x00062310
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700022B RID: 555
            // (get) Token: 0x06000B00 RID: 2816 RVA: 0x00064118 File Offset: 0x00062318
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserTaskColumn
            {
                get
                {
                    return this.columnidUserTask;
                }
            }

            // Token: 0x1700022C RID: 556
            // (get) Token: 0x06000B01 RID: 2817 RVA: 0x00064120 File Offset: 0x00062320
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameUserTaskColumn
            {
                get
                {
                    return this.columnnameUserTask;
                }
            }

            // Token: 0x1700022D RID: 557
            // (get) Token: 0x06000B02 RID: 2818 RVA: 0x00064128 File Offset: 0x00062328
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateTaskColumn
            {
                get
                {
                    return this.columnDateTask;
                }
            }

            // Token: 0x1700022E RID: 558
            // (get) Token: 0x06000B03 RID: 2819 RVA: 0x00064130 File Offset: 0x00062330
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            // Token: 0x1700022F RID: 559
            // (get) Token: 0x06000B04 RID: 2820 RVA: 0x00064138 File Offset: 0x00062338
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TextTaskColumn
            {
                get
                {
                    return this.columnTextTask;
                }
            }

            // Token: 0x17000230 RID: 560
            // (get) Token: 0x06000B05 RID: 2821 RVA: 0x00064140 File Offset: 0x00062340
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TextTaskBinColumn
            {
                get
                {
                    return this.columnTextTaskBin;
                }
            }

            // Token: 0x17000231 RID: 561
            // (get) Token: 0x06000B06 RID: 2822 RVA: 0x00064148 File Offset: 0x00062348
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserWhomColumn
            {
                get
                {
                    return this.columnidUserWhom;
                }
            }

            // Token: 0x17000232 RID: 562
            // (get) Token: 0x06000B07 RID: 2823 RVA: 0x00064150 File Offset: 0x00062350
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameUserWhomColumn
            {
                get
                {
                    return this.columnNameUserWhom;
                }
            }

            // Token: 0x17000233 RID: 563
            // (get) Token: 0x06000B08 RID: 2824 RVA: 0x00064158 File Offset: 0x00062358
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeTaskColumn
            {
                get
                {
                    return this.columnTypeTask;
                }
            }

            // Token: 0x17000234 RID: 564
            // (get) Token: 0x06000B09 RID: 2825 RVA: 0x00064160 File Offset: 0x00062360
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTypeTaskColumn
            {
                get
                {
                    return this.columnNameTypeTask;
                }
            }

            // Token: 0x17000235 RID: 565
            // (get) Token: 0x06000B0A RID: 2826 RVA: 0x00064168 File Offset: 0x00062368
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserPerfomColumn
            {
                get
                {
                    return this.columnidUserPerfom;
                }
            }

            // Token: 0x17000236 RID: 566
            // (get) Token: 0x06000B0B RID: 2827 RVA: 0x00064170 File Offset: 0x00062370
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameUserPerfomColumn
            {
                get
                {
                    return this.columnnameUserPerfom;
                }
            }

            // Token: 0x17000237 RID: 567
            // (get) Token: 0x06000B0C RID: 2828 RVA: 0x00064178 File Offset: 0x00062378
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DatePerfomColumn
            {
                get
                {
                    return this.columnDatePerfom;
                }
            }

            // Token: 0x17000238 RID: 568
            // (get) Token: 0x06000B0D RID: 2829 RVA: 0x00064180 File Offset: 0x00062380
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000239 RID: 569
            // (get) Token: 0x06000B0E RID: 2830 RVA: 0x00064188 File Offset: 0x00062388
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn StatusTaskColumn
            {
                get
                {
                    return this.columnStatusTask;
                }
            }

            // Token: 0x1700023A RID: 570
            // (get) Token: 0x06000B0F RID: 2831 RVA: 0x00064190 File Offset: 0x00062390
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameStatusTaskColumn
            {
                get
                {
                    return this.columnnameStatusTask;
                }
            }

            // Token: 0x1700023B RID: 571
            // (get) Token: 0x06000B10 RID: 2832 RVA: 0x00064198 File Offset: 0x00062398
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameModulColumn
            {
                get
                {
                    return this.columnnameModul;
                }
            }

            // Token: 0x1700023C RID: 572
            // (get) Token: 0x06000B11 RID: 2833 RVA: 0x000641A0 File Offset: 0x000623A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700023D RID: 573
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_RequestRow)base.Rows[index];
                }
            }

            // Token: 0x14000055 RID: 85
            // (add) Token: 0x06000B13 RID: 2835 RVA: 0x000641C0 File Offset: 0x000623C0
            // (remove) Token: 0x06000B14 RID: 2836 RVA: 0x000641F8 File Offset: 0x000623F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestRowChangeEventHandler vJ_RequestRowChanging;

            // Token: 0x14000056 RID: 86
            // (add) Token: 0x06000B15 RID: 2837 RVA: 0x00064230 File Offset: 0x00062430
            // (remove) Token: 0x06000B16 RID: 2838 RVA: 0x00064268 File Offset: 0x00062468
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestRowChangeEventHandler vJ_RequestRowChanged;

            // Token: 0x14000057 RID: 87
            // (add) Token: 0x06000B17 RID: 2839 RVA: 0x000642A0 File Offset: 0x000624A0
            // (remove) Token: 0x06000B18 RID: 2840 RVA: 0x000642D8 File Offset: 0x000624D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestRowChangeEventHandler vJ_RequestRowDeleting;

            // Token: 0x14000058 RID: 88
            // (add) Token: 0x06000B19 RID: 2841 RVA: 0x00064310 File Offset: 0x00062510
            // (remove) Token: 0x06000B1A RID: 2842 RVA: 0x00064348 File Offset: 0x00062548
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestRowChangeEventHandler vJ_RequestRowDeleted;

            // Token: 0x06000B1B RID: 2843 RVA: 0x0006437D File Offset: 0x0006257D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_RequestRow(DataSetGES.vJ_RequestRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000B1C RID: 2844 RVA: 0x0006438C File Offset: 0x0006258C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestRow AddvJ_RequestRow(int id, int idUserTask, string nameUserTask, DateTime DateTask, int Modul, string TextTask, byte[] TextTaskBin, int idUserWhom, string NameUserWhom, int TypeTask, string NameTypeTask, int idUserPerfom, string nameUserPerfom, DateTime DatePerfom, string Comment, int StatusTask, string nameStatusTask, string nameModul)
            {
                DataSetGES.vJ_RequestRow vJ_RequestRow = (DataSetGES.vJ_RequestRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idUserTask,
                    nameUserTask,
                    DateTask,
                    Modul,
                    TextTask,
                    TextTaskBin,
                    idUserWhom,
                    NameUserWhom,
                    TypeTask,
                    NameTypeTask,
                    idUserPerfom,
                    nameUserPerfom,
                    DatePerfom,
                    Comment,
                    StatusTask,
                    nameStatusTask,
                    nameModul
                };
                vJ_RequestRow.ItemArray = itemArray;
                base.Rows.Add(vJ_RequestRow);
                return vJ_RequestRow;
            }

            // Token: 0x06000B1D RID: 2845 RVA: 0x00064450 File Offset: 0x00062650
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestRow FindByid(int id)
            {
                return (DataSetGES.vJ_RequestRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000B1E RID: 2846 RVA: 0x00064480 File Offset: 0x00062680
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RequestDataTable vJ_RequestDataTable = (DataSetGES.vJ_RequestDataTable)base.Clone();
                vJ_RequestDataTable.InitVars();
                return vJ_RequestDataTable;
            }

            // Token: 0x06000B1F RID: 2847 RVA: 0x000644A0 File Offset: 0x000626A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RequestDataTable();
            }

            // Token: 0x06000B20 RID: 2848 RVA: 0x000644A8 File Offset: 0x000626A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidUserTask = base.Columns["idUserTask"];
                this.columnnameUserTask = base.Columns["nameUserTask"];
                this.columnDateTask = base.Columns["DateTask"];
                this.columnModul = base.Columns["Modul"];
                this.columnTextTask = base.Columns["TextTask"];
                this.columnTextTaskBin = base.Columns["TextTaskBin"];
                this.columnidUserWhom = base.Columns["idUserWhom"];
                this.columnNameUserWhom = base.Columns["NameUserWhom"];
                this.columnTypeTask = base.Columns["TypeTask"];
                this.columnNameTypeTask = base.Columns["NameTypeTask"];
                this.columnidUserPerfom = base.Columns["idUserPerfom"];
                this.columnnameUserPerfom = base.Columns["nameUserPerfom"];
                this.columnDatePerfom = base.Columns["DatePerfom"];
                this.columnComment = base.Columns["Comment"];
                this.columnStatusTask = base.Columns["StatusTask"];
                this.columnnameStatusTask = base.Columns["nameStatusTask"];
                this.columnnameModul = base.Columns["nameModul"];
            }

            // Token: 0x06000B21 RID: 2849 RVA: 0x00064644 File Offset: 0x00062844
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidUserTask = new DataColumn("idUserTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserTask);
                this.columnnameUserTask = new DataColumn("nameUserTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameUserTask);
                this.columnDateTask = new DataColumn("DateTask", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTask);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnTextTask = new DataColumn("TextTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextTask);
                this.columnTextTaskBin = new DataColumn("TextTaskBin", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnTextTaskBin);
                this.columnidUserWhom = new DataColumn("idUserWhom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserWhom);
                this.columnNameUserWhom = new DataColumn("NameUserWhom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameUserWhom);
                this.columnTypeTask = new DataColumn("TypeTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeTask);
                this.columnNameTypeTask = new DataColumn("NameTypeTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTypeTask);
                this.columnidUserPerfom = new DataColumn("idUserPerfom", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserPerfom);
                this.columnnameUserPerfom = new DataColumn("nameUserPerfom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameUserPerfom);
                this.columnDatePerfom = new DataColumn("DatePerfom", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDatePerfom);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnStatusTask = new DataColumn("StatusTask", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnStatusTask);
                this.columnnameStatusTask = new DataColumn("nameStatusTask", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameStatusTask);
                this.columnnameModul = new DataColumn("nameModul", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameModul);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidUserTask.AllowDBNull = false;
                this.columnnameUserTask.MaxLength = 50;
                this.columnDateTask.AllowDBNull = false;
                this.columnNameUserWhom.MaxLength = 50;
                this.columnNameTypeTask.MaxLength = 100;
                this.columnnameUserPerfom.MaxLength = 50;
                this.columnComment.MaxLength = 2000;
                this.columnnameStatusTask.MaxLength = 100;
                this.columnnameModul.AllowDBNull = false;
                this.columnnameModul.MaxLength = 100;
            }

            // Token: 0x06000B22 RID: 2850 RVA: 0x00064A3C File Offset: 0x00062C3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RequestRow NewvJ_RequestRow()
            {
                return (DataSetGES.vJ_RequestRow)base.NewRow();
            }

            // Token: 0x06000B23 RID: 2851 RVA: 0x00064A49 File Offset: 0x00062C49
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_RequestRow(builder);
            }

            // Token: 0x06000B24 RID: 2852 RVA: 0x00064A51 File Offset: 0x00062C51
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_RequestRow);
            }

            // Token: 0x06000B25 RID: 2853 RVA: 0x00064A5D File Offset: 0x00062C5D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_RequestRowChanged != null)
                {
                    this.vJ_RequestRowChanged(this, new DataSetGES.vJ_RequestRowChangeEvent((DataSetGES.vJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B26 RID: 2854 RVA: 0x00064A90 File Offset: 0x00062C90
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_RequestRowChanging != null)
                {
                    this.vJ_RequestRowChanging(this, new DataSetGES.vJ_RequestRowChangeEvent((DataSetGES.vJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B27 RID: 2855 RVA: 0x00064AC3 File Offset: 0x00062CC3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_RequestRowDeleted != null)
                {
                    this.vJ_RequestRowDeleted(this, new DataSetGES.vJ_RequestRowChangeEvent((DataSetGES.vJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B28 RID: 2856 RVA: 0x00064AF6 File Offset: 0x00062CF6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_RequestRowDeleting != null)
                {
                    this.vJ_RequestRowDeleting(this, new DataSetGES.vJ_RequestRowChangeEvent((DataSetGES.vJ_RequestRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B29 RID: 2857 RVA: 0x00064B29 File Offset: 0x00062D29
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_RequestRow(DataSetGES.vJ_RequestRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000B2A RID: 2858 RVA: 0x00064B38 File Offset: 0x00062D38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_RequestDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000718 RID: 1816
            private DataColumn columnid;

            // Token: 0x04000719 RID: 1817
            private DataColumn columnidUserTask;

            // Token: 0x0400071A RID: 1818
            private DataColumn columnnameUserTask;

            // Token: 0x0400071B RID: 1819
            private DataColumn columnDateTask;

            // Token: 0x0400071C RID: 1820
            private DataColumn columnModul;

            // Token: 0x0400071D RID: 1821
            private DataColumn columnTextTask;

            // Token: 0x0400071E RID: 1822
            private DataColumn columnTextTaskBin;

            // Token: 0x0400071F RID: 1823
            private DataColumn columnidUserWhom;

            // Token: 0x04000720 RID: 1824
            private DataColumn columnNameUserWhom;

            // Token: 0x04000721 RID: 1825
            private DataColumn columnTypeTask;

            // Token: 0x04000722 RID: 1826
            private DataColumn columnNameTypeTask;

            // Token: 0x04000723 RID: 1827
            private DataColumn columnidUserPerfom;

            // Token: 0x04000724 RID: 1828
            private DataColumn columnnameUserPerfom;

            // Token: 0x04000725 RID: 1829
            private DataColumn columnDatePerfom;

            // Token: 0x04000726 RID: 1830
            private DataColumn columnComment;

            // Token: 0x04000727 RID: 1831
            private DataColumn columnStatusTask;

            // Token: 0x04000728 RID: 1832
            private DataColumn columnnameStatusTask;

            // Token: 0x04000729 RID: 1833
            private DataColumn columnnameModul;
        }

        // Token: 0x020000D0 RID: 208
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_RequestForRepairDataTable : TypedTableBase<DataSetGES.vJ_RequestForRepairRow>
        {
            // Token: 0x06000B2B RID: 2859 RVA: 0x00064D30 File Offset: 0x00062F30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RequestForRepairDataTable()
            {
                base.TableName = "vJ_RequestForRepair";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000B2C RID: 2860 RVA: 0x00064D58 File Offset: 0x00062F58
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RequestForRepairDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000B2D RID: 2861 RVA: 0x00064E00 File Offset: 0x00063000
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_RequestForRepairDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700023E RID: 574
            // (get) Token: 0x06000B2E RID: 2862 RVA: 0x00064E10 File Offset: 0x00063010
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700023F RID: 575
            // (get) Token: 0x06000B2F RID: 2863 RVA: 0x00064E18 File Offset: 0x00063018
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn numColumn
            {
                get
                {
                    return this.columnnum;
                }
            }

            // Token: 0x17000240 RID: 576
            // (get) Token: 0x06000B30 RID: 2864 RVA: 0x00064E20 File Offset: 0x00063020
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            // Token: 0x17000241 RID: 577
            // (get) Token: 0x06000B31 RID: 2865 RVA: 0x00064E28 File Offset: 0x00063028
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            // Token: 0x17000242 RID: 578
            // (get) Token: 0x06000B32 RID: 2866 RVA: 0x00064E30 File Offset: 0x00063030
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn workerCreateColumn
            {
                get
                {
                    return this.columnworkerCreate;
                }
            }

            // Token: 0x17000243 RID: 579
            // (get) Token: 0x06000B33 RID: 2867 RVA: 0x00064E38 File Offset: 0x00063038
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn reguestFiledColumn
            {
                get
                {
                    return this.columnreguestFiled;
                }
            }

            // Token: 0x17000244 RID: 580
            // (get) Token: 0x06000B34 RID: 2868 RVA: 0x00064E40 File Offset: 0x00063040
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSRColumn
            {
                get
                {
                    return this.columnidSR;
                }
            }

            // Token: 0x17000245 RID: 581
            // (get) Token: 0x06000B35 RID: 2869 RVA: 0x00064E48 File Offset: 0x00063048
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SRColumn
            {
                get
                {
                    return this.columnSR;
                }
            }

            // Token: 0x17000246 RID: 582
            // (get) Token: 0x06000B36 RID: 2870 RVA: 0x00064E50 File Offset: 0x00063050
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SRSocrColumn
            {
                get
                {
                    return this.columnSRSocr;
                }
            }

            // Token: 0x17000247 RID: 583
            // (get) Token: 0x06000B37 RID: 2871 RVA: 0x00064E58 File Offset: 0x00063058
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn schmObjColumn
            {
                get
                {
                    return this.columnschmObj;
                }
            }

            // Token: 0x17000248 RID: 584
            // (get) Token: 0x06000B38 RID: 2872 RVA: 0x00064E60 File Offset: 0x00063060
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PurposeColumn
            {
                get
                {
                    return this.columnPurpose;
                }
            }

            // Token: 0x17000249 RID: 585
            // (get) Token: 0x06000B39 RID: 2873 RVA: 0x00064E68 File Offset: 0x00063068
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsPlannedColumn
            {
                get
                {
                    return this.columnIsPlanned;
                }
            }

            // Token: 0x1700024A RID: 586
            // (get) Token: 0x06000B3A RID: 2874 RVA: 0x00064E70 File Offset: 0x00063070
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateTripBegColumn
            {
                get
                {
                    return this.columnDateTripBeg;
                }
            }

            // Token: 0x1700024B RID: 587
            // (get) Token: 0x06000B3B RID: 2875 RVA: 0x00064E78 File Offset: 0x00063078
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateTripEndColumn
            {
                get
                {
                    return this.columnDateTripEnd;
                }
            }

            // Token: 0x1700024C RID: 588
            // (get) Token: 0x06000B3C RID: 2876 RVA: 0x00064E80 File Offset: 0x00063080
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreeWithColumn
            {
                get
                {
                    return this.columnAgreeWith;
                }
            }

            // Token: 0x1700024D RID: 589
            // (get) Token: 0x06000B3D RID: 2877 RVA: 0x00064E88 File Offset: 0x00063088
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x1700024E RID: 590
            // (get) Token: 0x06000B3E RID: 2878 RVA: 0x00064E90 File Offset: 0x00063090
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x1700024F RID: 591
            // (get) Token: 0x06000B3F RID: 2879 RVA: 0x00064E98 File Offset: 0x00063098
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreedColumn
            {
                get
                {
                    return this.columnAgreed;
                }
            }

            // Token: 0x17000250 RID: 592
            // (get) Token: 0x06000B40 RID: 2880 RVA: 0x00064EA0 File Offset: 0x000630A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateAgreedColumn
            {
                get
                {
                    return this.columnDateAgreed;
                }
            }

            // Token: 0x17000251 RID: 593
            // (get) Token: 0x06000B41 RID: 2881 RVA: 0x00064EA8 File Offset: 0x000630A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WorkerAgreedColumn
            {
                get
                {
                    return this.columnWorkerAgreed;
                }
            }

            // Token: 0x17000252 RID: 594
            // (get) Token: 0x06000B42 RID: 2882 RVA: 0x00064EB0 File Offset: 0x000630B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            // Token: 0x17000253 RID: 595
            // (get) Token: 0x06000B43 RID: 2883 RVA: 0x00064EB8 File Offset: 0x000630B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn iddivisionColumn
            {
                get
                {
                    return this.columniddivision;
                }
            }

            // Token: 0x17000254 RID: 596
            // (get) Token: 0x06000B44 RID: 2884 RVA: 0x00064EC0 File Offset: 0x000630C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn divisionColumn
            {
                get
                {
                    return this.columndivision;
                }
            }

            // Token: 0x17000255 RID: 597
            // (get) Token: 0x06000B45 RID: 2885 RVA: 0x00064EC8 File Offset: 0x000630C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserCreateColumn
            {
                get
                {
                    return this.columnidUserCreate;
                }
            }

            // Token: 0x17000256 RID: 598
            // (get) Token: 0x06000B46 RID: 2886 RVA: 0x00064ED0 File Offset: 0x000630D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UserNameColumn
            {
                get
                {
                    return this.columnUserName;
                }
            }

            // Token: 0x17000257 RID: 599
            // (get) Token: 0x06000B47 RID: 2887 RVA: 0x00064ED8 File Offset: 0x000630D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            // Token: 0x17000258 RID: 600
            // (get) Token: 0x06000B48 RID: 2888 RVA: 0x00064EE0 File Offset: 0x000630E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn isSendColumn
            {
                get
                {
                    return this.columnisSend;
                }
            }

            // Token: 0x17000259 RID: 601
            // (get) Token: 0x06000B49 RID: 2889 RVA: 0x00064EE8 File Offset: 0x000630E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700025A RID: 602
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestForRepairRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_RequestForRepairRow)base.Rows[index];
                }
            }

            // Token: 0x14000059 RID: 89
            // (add) Token: 0x06000B4B RID: 2891 RVA: 0x00064F08 File Offset: 0x00063108
            // (remove) Token: 0x06000B4C RID: 2892 RVA: 0x00064F40 File Offset: 0x00063140
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairRowChangeEventHandler vJ_RequestForRepairRowChanging;

            // Token: 0x1400005A RID: 90
            // (add) Token: 0x06000B4D RID: 2893 RVA: 0x00064F78 File Offset: 0x00063178
            // (remove) Token: 0x06000B4E RID: 2894 RVA: 0x00064FB0 File Offset: 0x000631B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairRowChangeEventHandler vJ_RequestForRepairRowChanged;

            // Token: 0x1400005B RID: 91
            // (add) Token: 0x06000B4F RID: 2895 RVA: 0x00064FE8 File Offset: 0x000631E8
            // (remove) Token: 0x06000B50 RID: 2896 RVA: 0x00065020 File Offset: 0x00063220
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairRowChangeEventHandler vJ_RequestForRepairRowDeleting;

            // Token: 0x1400005C RID: 92
            // (add) Token: 0x06000B51 RID: 2897 RVA: 0x00065058 File Offset: 0x00063258
            // (remove) Token: 0x06000B52 RID: 2898 RVA: 0x00065090 File Offset: 0x00063290
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairRowChangeEventHandler vJ_RequestForRepairRowDeleted;

            // Token: 0x06000B53 RID: 2899 RVA: 0x000650C5 File Offset: 0x000632C5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_RequestForRepairRow(DataSetGES.vJ_RequestForRepairRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000B54 RID: 2900 RVA: 0x000650D4 File Offset: 0x000632D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestForRepairRow AddvJ_RequestForRepairRow(int id, int num, DateTime dateCreate, int idWorker, string workerCreate, string reguestFiled, int idSR, string SR, string SRSocr, string schmObj, string Purpose, bool IsPlanned, DateTime DateTripBeg, DateTime DateTripEnd, string AgreeWith, string Comment, string Address, bool Agreed, DateTime DateAgreed, int WorkerAgreed, string FIO, int iddivision, string division, int idUserCreate, string UserName, bool deleted, bool isSend)
            {
                DataSetGES.vJ_RequestForRepairRow vJ_RequestForRepairRow = (DataSetGES.vJ_RequestForRepairRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    num,
                    dateCreate,
                    idWorker,
                    workerCreate,
                    reguestFiled,
                    idSR,
                    SR,
                    SRSocr,
                    schmObj,
                    Purpose,
                    IsPlanned,
                    DateTripBeg,
                    DateTripEnd,
                    AgreeWith,
                    Comment,
                    Address,
                    Agreed,
                    DateAgreed,
                    WorkerAgreed,
                    FIO,
                    iddivision,
                    division,
                    idUserCreate,
                    UserName,
                    deleted,
                    isSend
                };
                vJ_RequestForRepairRow.ItemArray = itemArray;
                base.Rows.Add(vJ_RequestForRepairRow);
                return vJ_RequestForRepairRow;
            }

            // Token: 0x06000B55 RID: 2901 RVA: 0x000651EC File Offset: 0x000633EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RequestForRepairRow FindByid(int id)
            {
                return (DataSetGES.vJ_RequestForRepairRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000B56 RID: 2902 RVA: 0x0006521C File Offset: 0x0006341C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RequestForRepairDataTable vJ_RequestForRepairDataTable = (DataSetGES.vJ_RequestForRepairDataTable)base.Clone();
                vJ_RequestForRepairDataTable.InitVars();
                return vJ_RequestForRepairDataTable;
            }

            // Token: 0x06000B57 RID: 2903 RVA: 0x0006523C File Offset: 0x0006343C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RequestForRepairDataTable();
            }

            // Token: 0x06000B58 RID: 2904 RVA: 0x00065244 File Offset: 0x00063444
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnnum = base.Columns["num"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnworkerCreate = base.Columns["workerCreate"];
                this.columnreguestFiled = base.Columns["reguestFiled"];
                this.columnidSR = base.Columns["idSR"];
                this.columnSR = base.Columns["SR"];
                this.columnSRSocr = base.Columns["SRSocr"];
                this.columnschmObj = base.Columns["schmObj"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnIsPlanned = base.Columns["IsPlanned"];
                this.columnDateTripBeg = base.Columns["DateTripBeg"];
                this.columnDateTripEnd = base.Columns["DateTripEnd"];
                this.columnAgreeWith = base.Columns["AgreeWith"];
                this.columnComment = base.Columns["Comment"];
                this.columnAddress = base.Columns["Address"];
                this.columnAgreed = base.Columns["Agreed"];
                this.columnDateAgreed = base.Columns["DateAgreed"];
                this.columnWorkerAgreed = base.Columns["WorkerAgreed"];
                this.columnFIO = base.Columns["FIO"];
                this.columniddivision = base.Columns["iddivision"];
                this.columndivision = base.Columns["division"];
                this.columnidUserCreate = base.Columns["idUserCreate"];
                this.columnUserName = base.Columns["UserName"];
                this.columndeleted = base.Columns["deleted"];
                this.columnisSend = base.Columns["isSend"];
            }

            // Token: 0x06000B59 RID: 2905 RVA: 0x000654A4 File Offset: 0x000636A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnum = new DataColumn("num", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnworkerCreate = new DataColumn("workerCreate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnworkerCreate);
                this.columnreguestFiled = new DataColumn("reguestFiled", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnreguestFiled);
                this.columnidSR = new DataColumn("idSR", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSR);
                this.columnSR = new DataColumn("SR", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSR);
                this.columnSRSocr = new DataColumn("SRSocr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSRSocr);
                this.columnschmObj = new DataColumn("schmObj", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnschmObj);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnIsPlanned = new DataColumn("IsPlanned", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsPlanned);
                this.columnDateTripBeg = new DataColumn("DateTripBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTripBeg);
                this.columnDateTripEnd = new DataColumn("DateTripEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateTripEnd);
                this.columnAgreeWith = new DataColumn("AgreeWith", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAgreeWith);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAgreed = new DataColumn("Agreed", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnAgreed);
                this.columnDateAgreed = new DataColumn("DateAgreed", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateAgreed);
                this.columnWorkerAgreed = new DataColumn("WorkerAgreed", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWorkerAgreed);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columniddivision = new DataColumn("iddivision", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columniddivision);
                this.columndivision = new DataColumn("division", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndivision);
                this.columnidUserCreate = new DataColumn("idUserCreate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserCreate);
                this.columnUserName = new DataColumn("UserName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columnisSend = new DataColumn("isSend", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisSend);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnnum.AllowDBNull = false;
                this.columndateCreate.AllowDBNull = false;
                this.columnworkerCreate.ReadOnly = true;
                this.columnworkerCreate.MaxLength = 35;
                this.columnreguestFiled.AllowDBNull = false;
                this.columnreguestFiled.MaxLength = 256;
                this.columnidSR.AllowDBNull = false;
                this.columnSR.MaxLength = 100;
                this.columnschmObj.AllowDBNull = false;
                this.columnschmObj.MaxLength = 256;
                this.columnPurpose.AllowDBNull = false;
                this.columnPurpose.MaxLength = 256;
                this.columnIsPlanned.AllowDBNull = false;
                this.columnAgreeWith.MaxLength = 256;
                this.columnAgreed.AllowDBNull = false;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 35;
                this.columniddivision.AllowDBNull = false;
                this.columndivision.MaxLength = 100;
            }

            // Token: 0x06000B5A RID: 2906 RVA: 0x00065AA7 File Offset: 0x00063CA7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RequestForRepairRow NewvJ_RequestForRepairRow()
            {
                return (DataSetGES.vJ_RequestForRepairRow)base.NewRow();
            }

            // Token: 0x06000B5B RID: 2907 RVA: 0x00065AB4 File Offset: 0x00063CB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_RequestForRepairRow(builder);
            }

            // Token: 0x06000B5C RID: 2908 RVA: 0x00065ABC File Offset: 0x00063CBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_RequestForRepairRow);
            }

            // Token: 0x06000B5D RID: 2909 RVA: 0x00065AC8 File Offset: 0x00063CC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_RequestForRepairRowChanged != null)
                {
                    this.vJ_RequestForRepairRowChanged(this, new DataSetGES.vJ_RequestForRepairRowChangeEvent((DataSetGES.vJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B5E RID: 2910 RVA: 0x00065AFB File Offset: 0x00063CFB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_RequestForRepairRowChanging != null)
                {
                    this.vJ_RequestForRepairRowChanging(this, new DataSetGES.vJ_RequestForRepairRowChangeEvent((DataSetGES.vJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B5F RID: 2911 RVA: 0x00065B2E File Offset: 0x00063D2E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_RequestForRepairRowDeleted != null)
                {
                    this.vJ_RequestForRepairRowDeleted(this, new DataSetGES.vJ_RequestForRepairRowChangeEvent((DataSetGES.vJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B60 RID: 2912 RVA: 0x00065B61 File Offset: 0x00063D61
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_RequestForRepairRowDeleting != null)
                {
                    this.vJ_RequestForRepairRowDeleting(this, new DataSetGES.vJ_RequestForRepairRowChangeEvent((DataSetGES.vJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B61 RID: 2913 RVA: 0x00065B94 File Offset: 0x00063D94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_RequestForRepairRow(DataSetGES.vJ_RequestForRepairRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000B62 RID: 2914 RVA: 0x00065BA4 File Offset: 0x00063DA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_RequestForRepairDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400072E RID: 1838
            private DataColumn columnid;

            // Token: 0x0400072F RID: 1839
            private DataColumn columnnum;

            // Token: 0x04000730 RID: 1840
            private DataColumn columndateCreate;

            // Token: 0x04000731 RID: 1841
            private DataColumn columnidWorker;

            // Token: 0x04000732 RID: 1842
            private DataColumn columnworkerCreate;

            // Token: 0x04000733 RID: 1843
            private DataColumn columnreguestFiled;

            // Token: 0x04000734 RID: 1844
            private DataColumn columnidSR;

            // Token: 0x04000735 RID: 1845
            private DataColumn columnSR;

            // Token: 0x04000736 RID: 1846
            private DataColumn columnSRSocr;

            // Token: 0x04000737 RID: 1847
            private DataColumn columnschmObj;

            // Token: 0x04000738 RID: 1848
            private DataColumn columnPurpose;

            // Token: 0x04000739 RID: 1849
            private DataColumn columnIsPlanned;

            // Token: 0x0400073A RID: 1850
            private DataColumn columnDateTripBeg;

            // Token: 0x0400073B RID: 1851
            private DataColumn columnDateTripEnd;

            // Token: 0x0400073C RID: 1852
            private DataColumn columnAgreeWith;

            // Token: 0x0400073D RID: 1853
            private DataColumn columnComment;

            // Token: 0x0400073E RID: 1854
            private DataColumn columnAddress;

            // Token: 0x0400073F RID: 1855
            private DataColumn columnAgreed;

            // Token: 0x04000740 RID: 1856
            private DataColumn columnDateAgreed;

            // Token: 0x04000741 RID: 1857
            private DataColumn columnWorkerAgreed;

            // Token: 0x04000742 RID: 1858
            private DataColumn columnFIO;

            // Token: 0x04000743 RID: 1859
            private DataColumn columniddivision;

            // Token: 0x04000744 RID: 1860
            private DataColumn columndivision;

            // Token: 0x04000745 RID: 1861
            private DataColumn columnidUserCreate;

            // Token: 0x04000746 RID: 1862
            private DataColumn columnUserName;

            // Token: 0x04000747 RID: 1863
            private DataColumn columndeleted;

            // Token: 0x04000748 RID: 1864
            private DataColumn columnisSend;
        }

        // Token: 0x020000D1 RID: 209
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_RequestForRepairDataTable : TypedTableBase<DataSetGES.tJ_RequestForRepairRow>
        {
            // Token: 0x06000B63 RID: 2915 RVA: 0x00065D9C File Offset: 0x00063F9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RequestForRepairDataTable()
            {
                base.TableName = "tJ_RequestForRepair";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000B64 RID: 2916 RVA: 0x00065DC4 File Offset: 0x00063FC4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestForRepairDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000B65 RID: 2917 RVA: 0x00065E6C File Offset: 0x0006406C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RequestForRepairDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700025B RID: 603
            // (get) Token: 0x06000B66 RID: 2918 RVA: 0x00065E7C File Offset: 0x0006407C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700025C RID: 604
            // (get) Token: 0x06000B67 RID: 2919 RVA: 0x00065E84 File Offset: 0x00064084
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn numColumn
            {
                get
                {
                    return this.columnnum;
                }
            }

            // Token: 0x1700025D RID: 605
            // (get) Token: 0x06000B68 RID: 2920 RVA: 0x00065E8C File Offset: 0x0006408C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            // Token: 0x1700025E RID: 606
            // (get) Token: 0x06000B69 RID: 2921 RVA: 0x00065E94 File Offset: 0x00064094
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            // Token: 0x1700025F RID: 607
            // (get) Token: 0x06000B6A RID: 2922 RVA: 0x00065E9C File Offset: 0x0006409C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn reguestFiledColumn
            {
                get
                {
                    return this.columnreguestFiled;
                }
            }

            // Token: 0x17000260 RID: 608
            // (get) Token: 0x06000B6B RID: 2923 RVA: 0x00065EA4 File Offset: 0x000640A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSRColumn
            {
                get
                {
                    return this.columnidSR;
                }
            }

            // Token: 0x17000261 RID: 609
            // (get) Token: 0x06000B6C RID: 2924 RVA: 0x00065EAC File Offset: 0x000640AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn schmObjColumn
            {
                get
                {
                    return this.columnschmObj;
                }
            }

            // Token: 0x17000262 RID: 610
            // (get) Token: 0x06000B6D RID: 2925 RVA: 0x00065EB4 File Offset: 0x000640B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PurposeColumn
            {
                get
                {
                    return this.columnPurpose;
                }
            }

            // Token: 0x17000263 RID: 611
            // (get) Token: 0x06000B6E RID: 2926 RVA: 0x00065EBC File Offset: 0x000640BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsPlannedColumn
            {
                get
                {
                    return this.columnIsPlanned;
                }
            }

            // Token: 0x17000264 RID: 612
            // (get) Token: 0x06000B6F RID: 2927 RVA: 0x00065EC4 File Offset: 0x000640C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrashColumn
            {
                get
                {
                    return this.columnCrash;
                }
            }

            // Token: 0x17000265 RID: 613
            // (get) Token: 0x06000B70 RID: 2928 RVA: 0x00065ECC File Offset: 0x000640CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreeWithColumn
            {
                get
                {
                    return this.columnAgreeWith;
                }
            }

            // Token: 0x17000266 RID: 614
            // (get) Token: 0x06000B71 RID: 2929 RVA: 0x00065ED4 File Offset: 0x000640D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000267 RID: 615
            // (get) Token: 0x06000B72 RID: 2930 RVA: 0x00065EDC File Offset: 0x000640DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x17000268 RID: 616
            // (get) Token: 0x06000B73 RID: 2931 RVA: 0x00065EE4 File Offset: 0x000640E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreedColumn
            {
                get
                {
                    return this.columnAgreed;
                }
            }

            // Token: 0x17000269 RID: 617
            // (get) Token: 0x06000B74 RID: 2932 RVA: 0x00065EEC File Offset: 0x000640EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateAgreedColumn
            {
                get
                {
                    return this.columnDateAgreed;
                }
            }

            // Token: 0x1700026A RID: 618
            // (get) Token: 0x06000B75 RID: 2933 RVA: 0x00065EF4 File Offset: 0x000640F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WorkerAgreedColumn
            {
                get
                {
                    return this.columnWorkerAgreed;
                }
            }

            // Token: 0x1700026B RID: 619
            // (get) Token: 0x06000B76 RID: 2934 RVA: 0x00065EFC File Offset: 0x000640FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn iddivisionColumn
            {
                get
                {
                    return this.columniddivision;
                }
            }

            // Token: 0x1700026C RID: 620
            // (get) Token: 0x06000B77 RID: 2935 RVA: 0x00065F04 File Offset: 0x00064104
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserCreateColumn
            {
                get
                {
                    return this.columnidUserCreate;
                }
            }

            // Token: 0x1700026D RID: 621
            // (get) Token: 0x06000B78 RID: 2936 RVA: 0x00065F0C File Offset: 0x0006410C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            // Token: 0x1700026E RID: 622
            // (get) Token: 0x06000B79 RID: 2937 RVA: 0x00065F14 File Offset: 0x00064114
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn isSendColumn
            {
                get
                {
                    return this.columnisSend;
                }
            }

            // Token: 0x1700026F RID: 623
            // (get) Token: 0x06000B7A RID: 2938 RVA: 0x00065F1C File Offset: 0x0006411C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000270 RID: 624
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestForRepairRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_RequestForRepairRow)base.Rows[index];
                }
            }

            // Token: 0x1400005D RID: 93
            // (add) Token: 0x06000B7C RID: 2940 RVA: 0x00065F3C File Offset: 0x0006413C
            // (remove) Token: 0x06000B7D RID: 2941 RVA: 0x00065F74 File Offset: 0x00064174
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairRowChangeEventHandler tJ_RequestForRepairRowChanging;

            // Token: 0x1400005E RID: 94
            // (add) Token: 0x06000B7E RID: 2942 RVA: 0x00065FAC File Offset: 0x000641AC
            // (remove) Token: 0x06000B7F RID: 2943 RVA: 0x00065FE4 File Offset: 0x000641E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairRowChangeEventHandler tJ_RequestForRepairRowChanged;

            // Token: 0x1400005F RID: 95
            // (add) Token: 0x06000B80 RID: 2944 RVA: 0x0006601C File Offset: 0x0006421C
            // (remove) Token: 0x06000B81 RID: 2945 RVA: 0x00066054 File Offset: 0x00064254
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairRowChangeEventHandler tJ_RequestForRepairRowDeleting;

            // Token: 0x14000060 RID: 96
            // (add) Token: 0x06000B82 RID: 2946 RVA: 0x0006608C File Offset: 0x0006428C
            // (remove) Token: 0x06000B83 RID: 2947 RVA: 0x000660C4 File Offset: 0x000642C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairRowChangeEventHandler tJ_RequestForRepairRowDeleted;

            // Token: 0x06000B84 RID: 2948 RVA: 0x000660F9 File Offset: 0x000642F9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_RequestForRepairRow(DataSetGES.tJ_RequestForRepairRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000B85 RID: 2949 RVA: 0x00066108 File Offset: 0x00064308
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairRow AddtJ_RequestForRepairRow(int num, DateTime dateCreate, int idWorker, string reguestFiled, int idSR, string schmObj, string Purpose, bool IsPlanned, bool Crash, string AgreeWith, string Comment, string Address, bool Agreed, DateTime DateAgreed, int WorkerAgreed, int iddivision, int idUserCreate, bool deleted, bool isSend)
            {
                DataSetGES.tJ_RequestForRepairRow tJ_RequestForRepairRow = (DataSetGES.tJ_RequestForRepairRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    num,
                    dateCreate,
                    idWorker,
                    reguestFiled,
                    idSR,
                    schmObj,
                    Purpose,
                    IsPlanned,
                    Crash,
                    AgreeWith,
                    Comment,
                    Address,
                    Agreed,
                    DateAgreed,
                    WorkerAgreed,
                    iddivision,
                    idUserCreate,
                    deleted,
                    isSend
                };
                tJ_RequestForRepairRow.ItemArray = itemArray;
                base.Rows.Add(tJ_RequestForRepairRow);
                return tJ_RequestForRepairRow;
            }

            // Token: 0x06000B86 RID: 2950 RVA: 0x000661E8 File Offset: 0x000643E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairRow FindByid(int id)
            {
                return (DataSetGES.tJ_RequestForRepairRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000B87 RID: 2951 RVA: 0x00066218 File Offset: 0x00064418
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestForRepairDataTable tJ_RequestForRepairDataTable = (DataSetGES.tJ_RequestForRepairDataTable)base.Clone();
                tJ_RequestForRepairDataTable.InitVars();
                return tJ_RequestForRepairDataTable;
            }

            // Token: 0x06000B88 RID: 2952 RVA: 0x00066238 File Offset: 0x00064438
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestForRepairDataTable();
            }

            // Token: 0x06000B89 RID: 2953 RVA: 0x00066240 File Offset: 0x00064440
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnnum = base.Columns["num"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnreguestFiled = base.Columns["reguestFiled"];
                this.columnidSR = base.Columns["idSR"];
                this.columnschmObj = base.Columns["schmObj"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnIsPlanned = base.Columns["IsPlanned"];
                this.columnCrash = base.Columns["Crash"];
                this.columnAgreeWith = base.Columns["AgreeWith"];
                this.columnComment = base.Columns["Comment"];
                this.columnAddress = base.Columns["Address"];
                this.columnAgreed = base.Columns["Agreed"];
                this.columnDateAgreed = base.Columns["DateAgreed"];
                this.columnWorkerAgreed = base.Columns["WorkerAgreed"];
                this.columniddivision = base.Columns["iddivision"];
                this.columnidUserCreate = base.Columns["idUserCreate"];
                this.columndeleted = base.Columns["deleted"];
                this.columnisSend = base.Columns["isSend"];
            }

            // Token: 0x06000B8A RID: 2954 RVA: 0x00066408 File Offset: 0x00064608
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnum = new DataColumn("num", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnreguestFiled = new DataColumn("reguestFiled", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnreguestFiled);
                this.columnidSR = new DataColumn("idSR", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSR);
                this.columnschmObj = new DataColumn("schmObj", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnschmObj);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnIsPlanned = new DataColumn("IsPlanned", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsPlanned);
                this.columnCrash = new DataColumn("Crash", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnCrash);
                this.columnAgreeWith = new DataColumn("AgreeWith", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAgreeWith);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAgreed = new DataColumn("Agreed", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnAgreed);
                this.columnDateAgreed = new DataColumn("DateAgreed", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateAgreed);
                this.columnWorkerAgreed = new DataColumn("WorkerAgreed", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWorkerAgreed);
                this.columniddivision = new DataColumn("iddivision", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columniddivision);
                this.columnidUserCreate = new DataColumn("idUserCreate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserCreate);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columnisSend = new DataColumn("isSend", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisSend);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnnum.AllowDBNull = false;
                this.columndateCreate.AllowDBNull = false;
                this.columnreguestFiled.AllowDBNull = false;
                this.columnreguestFiled.MaxLength = 256;
                this.columnidSR.AllowDBNull = false;
                this.columnschmObj.AllowDBNull = false;
                this.columnschmObj.MaxLength = 256;
                this.columnPurpose.AllowDBNull = false;
                this.columnPurpose.MaxLength = 256;
                this.columnIsPlanned.AllowDBNull = false;
                this.columnAgreeWith.MaxLength = 256;
                this.columnAgreed.AllowDBNull = false;
                this.columniddivision.AllowDBNull = false;
                this.columndeleted.AllowDBNull = false;
                this.columndeleted.DefaultValue = false;
            }

            // Token: 0x06000B8B RID: 2955 RVA: 0x000668D3 File Offset: 0x00064AD3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestForRepairRow NewtJ_RequestForRepairRow()
            {
                return (DataSetGES.tJ_RequestForRepairRow)base.NewRow();
            }

            // Token: 0x06000B8C RID: 2956 RVA: 0x000668E0 File Offset: 0x00064AE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_RequestForRepairRow(builder);
            }

            // Token: 0x06000B8D RID: 2957 RVA: 0x000668E8 File Offset: 0x00064AE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_RequestForRepairRow);
            }

            // Token: 0x06000B8E RID: 2958 RVA: 0x000668F4 File Offset: 0x00064AF4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_RequestForRepairRowChanged != null)
                {
                    this.tJ_RequestForRepairRowChanged(this, new DataSetGES.tJ_RequestForRepairRowChangeEvent((DataSetGES.tJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B8F RID: 2959 RVA: 0x00066927 File Offset: 0x00064B27
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_RequestForRepairRowChanging != null)
                {
                    this.tJ_RequestForRepairRowChanging(this, new DataSetGES.tJ_RequestForRepairRowChangeEvent((DataSetGES.tJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B90 RID: 2960 RVA: 0x0006695A File Offset: 0x00064B5A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_RequestForRepairRowDeleted != null)
                {
                    this.tJ_RequestForRepairRowDeleted(this, new DataSetGES.tJ_RequestForRepairRowChangeEvent((DataSetGES.tJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B91 RID: 2961 RVA: 0x0006698D File Offset: 0x00064B8D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_RequestForRepairRowDeleting != null)
                {
                    this.tJ_RequestForRepairRowDeleting(this, new DataSetGES.tJ_RequestForRepairRowChangeEvent((DataSetGES.tJ_RequestForRepairRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000B92 RID: 2962 RVA: 0x000669C0 File Offset: 0x00064BC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_RequestForRepairRow(DataSetGES.tJ_RequestForRepairRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000B93 RID: 2963 RVA: 0x000669D0 File Offset: 0x00064BD0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_RequestForRepairDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400074D RID: 1869
            private DataColumn columnid;

            // Token: 0x0400074E RID: 1870
            private DataColumn columnnum;

            // Token: 0x0400074F RID: 1871
            private DataColumn columndateCreate;

            // Token: 0x04000750 RID: 1872
            private DataColumn columnidWorker;

            // Token: 0x04000751 RID: 1873
            private DataColumn columnreguestFiled;

            // Token: 0x04000752 RID: 1874
            private DataColumn columnidSR;

            // Token: 0x04000753 RID: 1875
            private DataColumn columnschmObj;

            // Token: 0x04000754 RID: 1876
            private DataColumn columnPurpose;

            // Token: 0x04000755 RID: 1877
            private DataColumn columnIsPlanned;

            // Token: 0x04000756 RID: 1878
            private DataColumn columnCrash;

            // Token: 0x04000757 RID: 1879
            private DataColumn columnAgreeWith;

            // Token: 0x04000758 RID: 1880
            private DataColumn columnComment;

            // Token: 0x04000759 RID: 1881
            private DataColumn columnAddress;

            // Token: 0x0400075A RID: 1882
            private DataColumn columnAgreed;

            // Token: 0x0400075B RID: 1883
            private DataColumn columnDateAgreed;

            // Token: 0x0400075C RID: 1884
            private DataColumn columnWorkerAgreed;

            // Token: 0x0400075D RID: 1885
            private DataColumn columniddivision;

            // Token: 0x0400075E RID: 1886
            private DataColumn columnidUserCreate;

            // Token: 0x0400075F RID: 1887
            private DataColumn columndeleted;

            // Token: 0x04000760 RID: 1888
            private DataColumn columnisSend;
        }

        // Token: 0x020000D2 RID: 210
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tR_ClassifierDataTable : TypedTableBase<DataSetGES.tR_ClassifierRow>
        {
            // Token: 0x06000B94 RID: 2964 RVA: 0x00066BC8 File Offset: 0x00064DC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_ClassifierDataTable()
            {
                base.TableName = "tR_Classifier";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000B95 RID: 2965 RVA: 0x00066BF0 File Offset: 0x00064DF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_ClassifierDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000B96 RID: 2966 RVA: 0x00066C98 File Offset: 0x00064E98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tR_ClassifierDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000271 RID: 625
            // (get) Token: 0x06000B97 RID: 2967 RVA: 0x00066CA8 File Offset: 0x00064EA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000272 RID: 626
            // (get) Token: 0x06000B98 RID: 2968 RVA: 0x00066CB0 File Offset: 0x00064EB0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000273 RID: 627
            // (get) Token: 0x06000B99 RID: 2969 RVA: 0x00066CB8 File Offset: 0x00064EB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SocrNameColumn
            {
                get
                {
                    return this.columnSocrName;
                }
            }

            // Token: 0x17000274 RID: 628
            // (get) Token: 0x06000B9A RID: 2970 RVA: 0x00066CC0 File Offset: 0x00064EC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ValueColumn
            {
                get
                {
                    return this.columnValue;
                }
            }

            // Token: 0x17000275 RID: 629
            // (get) Token: 0x06000B9B RID: 2971 RVA: 0x00066CC8 File Offset: 0x00064EC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000276 RID: 630
            // (get) Token: 0x06000B9C RID: 2972 RVA: 0x00066CD0 File Offset: 0x00064ED0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentIdColumn
            {
                get
                {
                    return this.columnParentId;
                }
            }

            // Token: 0x17000277 RID: 631
            // (get) Token: 0x06000B9D RID: 2973 RVA: 0x00066CD8 File Offset: 0x00064ED8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            // Token: 0x17000278 RID: 632
            // (get) Token: 0x06000B9E RID: 2974 RVA: 0x00066CE0 File Offset: 0x00064EE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn OtherIdColumn
            {
                get
                {
                    return this.columnOtherId;
                }
            }

            // Token: 0x17000279 RID: 633
            // (get) Token: 0x06000B9F RID: 2975 RVA: 0x00066CE8 File Offset: 0x00064EE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsGroupColumn
            {
                get
                {
                    return this.columnIsGroup;
                }
            }

            // Token: 0x1700027A RID: 634
            // (get) Token: 0x06000BA0 RID: 2976 RVA: 0x00066CF0 File Offset: 0x00064EF0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x1700027B RID: 635
            // (get) Token: 0x06000BA1 RID: 2977 RVA: 0x00066CF8 File Offset: 0x00064EF8
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700027C RID: 636
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_ClassifierRow this[int index]
            {
                get
                {
                    return (DataSetGES.tR_ClassifierRow)base.Rows[index];
                }
            }

            // Token: 0x14000061 RID: 97
            // (add) Token: 0x06000BA3 RID: 2979 RVA: 0x00066D18 File Offset: 0x00064F18
            // (remove) Token: 0x06000BA4 RID: 2980 RVA: 0x00066D50 File Offset: 0x00064F50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_ClassifierRowChangeEventHandler tR_ClassifierRowChanging;

            // Token: 0x14000062 RID: 98
            // (add) Token: 0x06000BA5 RID: 2981 RVA: 0x00066D88 File Offset: 0x00064F88
            // (remove) Token: 0x06000BA6 RID: 2982 RVA: 0x00066DC0 File Offset: 0x00064FC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_ClassifierRowChangeEventHandler tR_ClassifierRowChanged;

            // Token: 0x14000063 RID: 99
            // (add) Token: 0x06000BA7 RID: 2983 RVA: 0x00066DF8 File Offset: 0x00064FF8
            // (remove) Token: 0x06000BA8 RID: 2984 RVA: 0x00066E30 File Offset: 0x00065030
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_ClassifierRowChangeEventHandler tR_ClassifierRowDeleting;

            // Token: 0x14000064 RID: 100
            // (add) Token: 0x06000BA9 RID: 2985 RVA: 0x00066E68 File Offset: 0x00065068
            // (remove) Token: 0x06000BAA RID: 2986 RVA: 0x00066EA0 File Offset: 0x000650A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_ClassifierRowChangeEventHandler tR_ClassifierRowDeleted;

            // Token: 0x06000BAB RID: 2987 RVA: 0x00066ED5 File Offset: 0x000650D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtR_ClassifierRow(DataSetGES.tR_ClassifierRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000BAC RID: 2988 RVA: 0x00066EE4 File Offset: 0x000650E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_ClassifierRow AddtR_ClassifierRow(string Name, string SocrName, decimal Value, string Comment, int ParentId, string ParentKey, byte[] OtherId, bool IsGroup, bool Deleted)
            {
                DataSetGES.tR_ClassifierRow tR_ClassifierRow = (DataSetGES.tR_ClassifierRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    Name,
                    SocrName,
                    Value,
                    Comment,
                    ParentId,
                    ParentKey,
                    OtherId,
                    IsGroup,
                    Deleted
                };
                tR_ClassifierRow.ItemArray = itemArray;
                base.Rows.Add(tR_ClassifierRow);
                return tR_ClassifierRow;
            }

            // Token: 0x06000BAD RID: 2989 RVA: 0x00066F5C File Offset: 0x0006515C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_ClassifierRow FindById(int Id)
            {
                return (DataSetGES.tR_ClassifierRow)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x06000BAE RID: 2990 RVA: 0x00066F8C File Offset: 0x0006518C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_ClassifierDataTable tR_ClassifierDataTable = (DataSetGES.tR_ClassifierDataTable)base.Clone();
                tR_ClassifierDataTable.InitVars();
                return tR_ClassifierDataTable;
            }

            // Token: 0x06000BAF RID: 2991 RVA: 0x00066FAC File Offset: 0x000651AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_ClassifierDataTable();
            }

            // Token: 0x06000BB0 RID: 2992 RVA: 0x00066FB4 File Offset: 0x000651B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnSocrName = base.Columns["SocrName"];
                this.columnValue = base.Columns["Value"];
                this.columnComment = base.Columns["Comment"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnOtherId = base.Columns["OtherId"];
                this.columnIsGroup = base.Columns["IsGroup"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x06000BB1 RID: 2993 RVA: 0x000670A0 File Offset: 0x000652A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSocrName = new DataColumn("SocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSocrName);
                this.columnValue = new DataColumn("Value", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnParentId = new DataColumn("ParentId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnOtherId = new DataColumn("OtherId", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnOtherId);
                this.columnIsGroup = new DataColumn("IsGroup", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsGroup);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
                this.columnSocrName.MaxLength = 50;
                this.columnComment.MaxLength = 1024;
                this.columnParentKey.MaxLength = 50;
                this.columnIsGroup.AllowDBNull = false;
                this.columnDeleted.AllowDBNull = false;
            }

            // Token: 0x06000BB2 RID: 2994 RVA: 0x0006733B File Offset: 0x0006553B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_ClassifierRow NewtR_ClassifierRow()
            {
                return (DataSetGES.tR_ClassifierRow)base.NewRow();
            }

            // Token: 0x06000BB3 RID: 2995 RVA: 0x00067348 File Offset: 0x00065548
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tR_ClassifierRow(builder);
            }

            // Token: 0x06000BB4 RID: 2996 RVA: 0x00067350 File Offset: 0x00065550
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tR_ClassifierRow);
            }

            // Token: 0x06000BB5 RID: 2997 RVA: 0x0006735C File Offset: 0x0006555C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tR_ClassifierRowChanged != null)
                {
                    this.tR_ClassifierRowChanged(this, new DataSetGES.tR_ClassifierRowChangeEvent((DataSetGES.tR_ClassifierRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BB6 RID: 2998 RVA: 0x0006738F File Offset: 0x0006558F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tR_ClassifierRowChanging != null)
                {
                    this.tR_ClassifierRowChanging(this, new DataSetGES.tR_ClassifierRowChangeEvent((DataSetGES.tR_ClassifierRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BB7 RID: 2999 RVA: 0x000673C2 File Offset: 0x000655C2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tR_ClassifierRowDeleted != null)
                {
                    this.tR_ClassifierRowDeleted(this, new DataSetGES.tR_ClassifierRowChangeEvent((DataSetGES.tR_ClassifierRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BB8 RID: 3000 RVA: 0x000673F5 File Offset: 0x000655F5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tR_ClassifierRowDeleting != null)
                {
                    this.tR_ClassifierRowDeleting(this, new DataSetGES.tR_ClassifierRowChangeEvent((DataSetGES.tR_ClassifierRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BB9 RID: 3001 RVA: 0x00067428 File Offset: 0x00065628
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetR_ClassifierRow(DataSetGES.tR_ClassifierRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000BBA RID: 3002 RVA: 0x00067438 File Offset: 0x00065638
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tR_ClassifierDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000765 RID: 1893
            private DataColumn columnId;

            // Token: 0x04000766 RID: 1894
            private DataColumn columnName;

            // Token: 0x04000767 RID: 1895
            private DataColumn columnSocrName;

            // Token: 0x04000768 RID: 1896
            private DataColumn columnValue;

            // Token: 0x04000769 RID: 1897
            private DataColumn columnComment;

            // Token: 0x0400076A RID: 1898
            private DataColumn columnParentId;

            // Token: 0x0400076B RID: 1899
            private DataColumn columnParentKey;

            // Token: 0x0400076C RID: 1900
            private DataColumn columnOtherId;

            // Token: 0x0400076D RID: 1901
            private DataColumn columnIsGroup;

            // Token: 0x0400076E RID: 1902
            private DataColumn columnDeleted;
        }

        // Token: 0x020000D3 RID: 211
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_RequestForRepairDailyDataTable : TypedTableBase<DataSetGES.tJ_RequestForRepairDailyRow>
        {
            // Token: 0x06000BBB RID: 3003 RVA: 0x00067630 File Offset: 0x00065830
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestForRepairDailyDataTable()
            {
                base.TableName = "tJ_RequestForRepairDaily";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000BBC RID: 3004 RVA: 0x00067658 File Offset: 0x00065858
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RequestForRepairDailyDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000BBD RID: 3005 RVA: 0x00067700 File Offset: 0x00065900
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RequestForRepairDailyDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700027D RID: 637
            // (get) Token: 0x06000BBE RID: 3006 RVA: 0x00067710 File Offset: 0x00065910
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700027E RID: 638
            // (get) Token: 0x06000BBF RID: 3007 RVA: 0x00067718 File Offset: 0x00065918
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            // Token: 0x1700027F RID: 639
            // (get) Token: 0x06000BC0 RID: 3008 RVA: 0x00067720 File Offset: 0x00065920
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateBegColumn
            {
                get
                {
                    return this.columndateBeg;
                }
            }

            // Token: 0x17000280 RID: 640
            // (get) Token: 0x06000BC1 RID: 3009 RVA: 0x00067728 File Offset: 0x00065928
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateEndColumn
            {
                get
                {
                    return this.columndateEnd;
                }
            }

            // Token: 0x17000281 RID: 641
            // (get) Token: 0x06000BC2 RID: 3010 RVA: 0x00067730 File Offset: 0x00065930
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000282 RID: 642
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDailyRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_RequestForRepairDailyRow)base.Rows[index];
                }
            }

            // Token: 0x14000065 RID: 101
            // (add) Token: 0x06000BC4 RID: 3012 RVA: 0x00067750 File Offset: 0x00065950
            // (remove) Token: 0x06000BC5 RID: 3013 RVA: 0x00067788 File Offset: 0x00065988
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDailyRowChangeEventHandler tJ_RequestForRepairDailyRowChanging;

            // Token: 0x14000066 RID: 102
            // (add) Token: 0x06000BC6 RID: 3014 RVA: 0x000677C0 File Offset: 0x000659C0
            // (remove) Token: 0x06000BC7 RID: 3015 RVA: 0x000677F8 File Offset: 0x000659F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDailyRowChangeEventHandler tJ_RequestForRepairDailyRowChanged;

            // Token: 0x14000067 RID: 103
            // (add) Token: 0x06000BC8 RID: 3016 RVA: 0x00067830 File Offset: 0x00065A30
            // (remove) Token: 0x06000BC9 RID: 3017 RVA: 0x00067868 File Offset: 0x00065A68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDailyRowChangeEventHandler tJ_RequestForRepairDailyRowDeleting;

            // Token: 0x14000068 RID: 104
            // (add) Token: 0x06000BCA RID: 3018 RVA: 0x000678A0 File Offset: 0x00065AA0
            // (remove) Token: 0x06000BCB RID: 3019 RVA: 0x000678D8 File Offset: 0x00065AD8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDailyRowChangeEventHandler tJ_RequestForRepairDailyRowDeleted;

            // Token: 0x06000BCC RID: 3020 RVA: 0x0006790D File Offset: 0x00065B0D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtJ_RequestForRepairDailyRow(DataSetGES.tJ_RequestForRepairDailyRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000BCD RID: 3021 RVA: 0x0006791C File Offset: 0x00065B1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDailyRow AddtJ_RequestForRepairDailyRow(DataSetGES.tJ_RequestForRepairRow parenttJ_RequestForRepairRowBytJ_RequestForRepair_tJ_RequestForRepairDaily, DateTime dateBeg, DateTime dateEnd)
            {
                DataSetGES.tJ_RequestForRepairDailyRow tJ_RequestForRepairDailyRow = (DataSetGES.tJ_RequestForRepairDailyRow)base.NewRow();
                object[] array = new object[]
                {
                    null,
                    null,
                    dateBeg,
                    dateEnd
                };
                if (parenttJ_RequestForRepairRowBytJ_RequestForRepair_tJ_RequestForRepairDaily != null)
                {
                    array[1] = parenttJ_RequestForRepairRowBytJ_RequestForRepair_tJ_RequestForRepairDaily[0];
                }
                tJ_RequestForRepairDailyRow.ItemArray = array;
                base.Rows.Add(tJ_RequestForRepairDailyRow);
                return tJ_RequestForRepairDailyRow;
            }

            // Token: 0x06000BCE RID: 3022 RVA: 0x00067974 File Offset: 0x00065B74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDailyRow FindByid(int id)
            {
                return (DataSetGES.tJ_RequestForRepairDailyRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000BCF RID: 3023 RVA: 0x000679A4 File Offset: 0x00065BA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestForRepairDailyDataTable tJ_RequestForRepairDailyDataTable = (DataSetGES.tJ_RequestForRepairDailyDataTable)base.Clone();
                tJ_RequestForRepairDailyDataTable.InitVars();
                return tJ_RequestForRepairDailyDataTable;
            }

            // Token: 0x06000BD0 RID: 3024 RVA: 0x000679C4 File Offset: 0x00065BC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestForRepairDailyDataTable();
            }

            // Token: 0x06000BD1 RID: 3025 RVA: 0x000679CC File Offset: 0x00065BCC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columndateBeg = base.Columns["dateBeg"];
                this.columndateEnd = base.Columns["dateEnd"];
            }

            // Token: 0x06000BD2 RID: 3026 RVA: 0x00067A34 File Offset: 0x00065C34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columndateBeg = new DataColumn("dateBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateBeg);
                this.columndateEnd = new DataColumn("dateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateEnd);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                base.Constraints.Add(new UniqueConstraint("tJ_RequestForRepairKey", new DataColumn[]
                {
                    this.columnidRequest,
                    this.columndateBeg,
                    this.columndateEnd
                }, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columndateBeg.AllowDBNull = false;
                this.columndateEnd.AllowDBNull = false;
            }

            // Token: 0x06000BD3 RID: 3027 RVA: 0x00067BC3 File Offset: 0x00065DC3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDailyRow NewtJ_RequestForRepairDailyRow()
            {
                return (DataSetGES.tJ_RequestForRepairDailyRow)base.NewRow();
            }

            // Token: 0x06000BD4 RID: 3028 RVA: 0x00067BD0 File Offset: 0x00065DD0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_RequestForRepairDailyRow(builder);
            }

            // Token: 0x06000BD5 RID: 3029 RVA: 0x00067BD8 File Offset: 0x00065DD8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_RequestForRepairDailyRow);
            }

            // Token: 0x06000BD6 RID: 3030 RVA: 0x00067BE4 File Offset: 0x00065DE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_RequestForRepairDailyRowChanged != null)
                {
                    this.tJ_RequestForRepairDailyRowChanged(this, new DataSetGES.tJ_RequestForRepairDailyRowChangeEvent((DataSetGES.tJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BD7 RID: 3031 RVA: 0x00067C17 File Offset: 0x00065E17
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_RequestForRepairDailyRowChanging != null)
                {
                    this.tJ_RequestForRepairDailyRowChanging(this, new DataSetGES.tJ_RequestForRepairDailyRowChangeEvent((DataSetGES.tJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BD8 RID: 3032 RVA: 0x00067C4A File Offset: 0x00065E4A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_RequestForRepairDailyRowDeleted != null)
                {
                    this.tJ_RequestForRepairDailyRowDeleted(this, new DataSetGES.tJ_RequestForRepairDailyRowChangeEvent((DataSetGES.tJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BD9 RID: 3033 RVA: 0x00067C7D File Offset: 0x00065E7D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_RequestForRepairDailyRowDeleting != null)
                {
                    this.tJ_RequestForRepairDailyRowDeleting(this, new DataSetGES.tJ_RequestForRepairDailyRowChangeEvent((DataSetGES.tJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000BDA RID: 3034 RVA: 0x00067CB0 File Offset: 0x00065EB0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetJ_RequestForRepairDailyRow(DataSetGES.tJ_RequestForRepairDailyRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000BDB RID: 3035 RVA: 0x00067CC0 File Offset: 0x00065EC0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_RequestForRepairDailyDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000773 RID: 1907
            private DataColumn columnid;

            // Token: 0x04000774 RID: 1908
            private DataColumn columnidRequest;

            // Token: 0x04000775 RID: 1909
            private DataColumn columndateBeg;

            // Token: 0x04000776 RID: 1910
            private DataColumn columndateEnd;
        }

        // Token: 0x020000D4 RID: 212
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_RequestForRepairDailyDataTable : TypedTableBase<DataSetGES.vJ_RequestForRepairDailyRow>
        {
            // Token: 0x06000BDC RID: 3036 RVA: 0x00067EB8 File Offset: 0x000660B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RequestForRepairDailyDataTable()
            {
                base.TableName = "vJ_RequestForRepairDaily";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000BDD RID: 3037 RVA: 0x00067EE0 File Offset: 0x000660E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RequestForRepairDailyDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000BDE RID: 3038 RVA: 0x00067F88 File Offset: 0x00066188
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_RequestForRepairDailyDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000283 RID: 643
            // (get) Token: 0x06000BDF RID: 3039 RVA: 0x00067F98 File Offset: 0x00066198
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000284 RID: 644
            // (get) Token: 0x06000BE0 RID: 3040 RVA: 0x00067FA0 File Offset: 0x000661A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn numColumn
            {
                get
                {
                    return this.columnnum;
                }
            }

            // Token: 0x17000285 RID: 645
            // (get) Token: 0x06000BE1 RID: 3041 RVA: 0x00067FA8 File Offset: 0x000661A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            // Token: 0x17000286 RID: 646
            // (get) Token: 0x06000BE2 RID: 3042 RVA: 0x00067FB0 File Offset: 0x000661B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            // Token: 0x17000287 RID: 647
            // (get) Token: 0x06000BE3 RID: 3043 RVA: 0x00067FB8 File Offset: 0x000661B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn workerCreateColumn
            {
                get
                {
                    return this.columnworkerCreate;
                }
            }

            // Token: 0x17000288 RID: 648
            // (get) Token: 0x06000BE4 RID: 3044 RVA: 0x00067FC0 File Offset: 0x000661C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn reguestFiledColumn
            {
                get
                {
                    return this.columnreguestFiled;
                }
            }

            // Token: 0x17000289 RID: 649
            // (get) Token: 0x06000BE5 RID: 3045 RVA: 0x00067FC8 File Offset: 0x000661C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSRColumn
            {
                get
                {
                    return this.columnidSR;
                }
            }

            // Token: 0x1700028A RID: 650
            // (get) Token: 0x06000BE6 RID: 3046 RVA: 0x00067FD0 File Offset: 0x000661D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SRColumn
            {
                get
                {
                    return this.columnSR;
                }
            }

            // Token: 0x1700028B RID: 651
            // (get) Token: 0x06000BE7 RID: 3047 RVA: 0x00067FD8 File Offset: 0x000661D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn schmObjColumn
            {
                get
                {
                    return this.columnschmObj;
                }
            }

            // Token: 0x1700028C RID: 652
            // (get) Token: 0x06000BE8 RID: 3048 RVA: 0x00067FE0 File Offset: 0x000661E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PurposeColumn
            {
                get
                {
                    return this.columnPurpose;
                }
            }

            // Token: 0x1700028D RID: 653
            // (get) Token: 0x06000BE9 RID: 3049 RVA: 0x00067FE8 File Offset: 0x000661E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsPlannedColumn
            {
                get
                {
                    return this.columnIsPlanned;
                }
            }

            // Token: 0x1700028E RID: 654
            // (get) Token: 0x06000BEA RID: 3050 RVA: 0x00067FF0 File Offset: 0x000661F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateTripBegColumn
            {
                get
                {
                    return this.columndateTripBeg;
                }
            }

            // Token: 0x1700028F RID: 655
            // (get) Token: 0x06000BEB RID: 3051 RVA: 0x00067FF8 File Offset: 0x000661F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateTripEndColumn
            {
                get
                {
                    return this.columndateTripEnd;
                }
            }

            // Token: 0x17000290 RID: 656
            // (get) Token: 0x06000BEC RID: 3052 RVA: 0x00068000 File Offset: 0x00066200
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreeWithColumn
            {
                get
                {
                    return this.columnAgreeWith;
                }
            }

            // Token: 0x17000291 RID: 657
            // (get) Token: 0x06000BED RID: 3053 RVA: 0x00068008 File Offset: 0x00066208
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000292 RID: 658
            // (get) Token: 0x06000BEE RID: 3054 RVA: 0x00068010 File Offset: 0x00066210
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x17000293 RID: 659
            // (get) Token: 0x06000BEF RID: 3055 RVA: 0x00068018 File Offset: 0x00066218
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AgreedColumn
            {
                get
                {
                    return this.columnAgreed;
                }
            }

            // Token: 0x17000294 RID: 660
            // (get) Token: 0x06000BF0 RID: 3056 RVA: 0x00068020 File Offset: 0x00066220
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateAgreedColumn
            {
                get
                {
                    return this.columnDateAgreed;
                }
            }

            // Token: 0x17000295 RID: 661
            // (get) Token: 0x06000BF1 RID: 3057 RVA: 0x00068028 File Offset: 0x00066228
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WorkerAgreedColumn
            {
                get
                {
                    return this.columnWorkerAgreed;
                }
            }

            // Token: 0x17000296 RID: 662
            // (get) Token: 0x06000BF2 RID: 3058 RVA: 0x00068030 File Offset: 0x00066230
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            // Token: 0x17000297 RID: 663
            // (get) Token: 0x06000BF3 RID: 3059 RVA: 0x00068038 File Offset: 0x00066238
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn iddivisionColumn
            {
                get
                {
                    return this.columniddivision;
                }
            }

            // Token: 0x17000298 RID: 664
            // (get) Token: 0x06000BF4 RID: 3060 RVA: 0x00068040 File Offset: 0x00066240
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn divisionColumn
            {
                get
                {
                    return this.columndivision;
                }
            }

            // Token: 0x17000299 RID: 665
            // (get) Token: 0x06000BF5 RID: 3061 RVA: 0x00068048 File Offset: 0x00066248
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idUserCreateColumn
            {
                get
                {
                    return this.columnidUserCreate;
                }
            }

            // Token: 0x1700029A RID: 666
            // (get) Token: 0x06000BF6 RID: 3062 RVA: 0x00068050 File Offset: 0x00066250
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn usernameColumn
            {
                get
                {
                    return this.columnusername;
                }
            }

            // Token: 0x1700029B RID: 667
            // (get) Token: 0x06000BF7 RID: 3063 RVA: 0x00068058 File Offset: 0x00066258
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            // Token: 0x1700029C RID: 668
            // (get) Token: 0x06000BF8 RID: 3064 RVA: 0x00068060 File Offset: 0x00066260
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateBegColumn
            {
                get
                {
                    return this.columndateBeg;
                }
            }

            // Token: 0x1700029D RID: 669
            // (get) Token: 0x06000BF9 RID: 3065 RVA: 0x00068068 File Offset: 0x00066268
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn timeBegColumn
            {
                get
                {
                    return this.columntimeBeg;
                }
            }

            // Token: 0x1700029E RID: 670
            // (get) Token: 0x06000BFA RID: 3066 RVA: 0x00068070 File Offset: 0x00066270
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateEndColumn
            {
                get
                {
                    return this.columndateEnd;
                }
            }

            // Token: 0x1700029F RID: 671
            // (get) Token: 0x06000BFB RID: 3067 RVA: 0x00068078 File Offset: 0x00066278
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn timeEndColumn
            {
                get
                {
                    return this.columntimeEnd;
                }
            }

            // Token: 0x170002A0 RID: 672
            // (get) Token: 0x06000BFC RID: 3068 RVA: 0x00068080 File Offset: 0x00066280
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170002A1 RID: 673
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestForRepairDailyRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_RequestForRepairDailyRow)base.Rows[index];
                }
            }

            // Token: 0x14000069 RID: 105
            // (add) Token: 0x06000BFE RID: 3070 RVA: 0x000680A0 File Offset: 0x000662A0
            // (remove) Token: 0x06000BFF RID: 3071 RVA: 0x000680D8 File Offset: 0x000662D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairDailyRowChangeEventHandler vJ_RequestForRepairDailyRowChanging;

            // Token: 0x1400006A RID: 106
            // (add) Token: 0x06000C00 RID: 3072 RVA: 0x00068110 File Offset: 0x00066310
            // (remove) Token: 0x06000C01 RID: 3073 RVA: 0x00068148 File Offset: 0x00066348
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairDailyRowChangeEventHandler vJ_RequestForRepairDailyRowChanged;

            // Token: 0x1400006B RID: 107
            // (add) Token: 0x06000C02 RID: 3074 RVA: 0x00068180 File Offset: 0x00066380
            // (remove) Token: 0x06000C03 RID: 3075 RVA: 0x000681B8 File Offset: 0x000663B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairDailyRowChangeEventHandler vJ_RequestForRepairDailyRowDeleting;

            // Token: 0x1400006C RID: 108
            // (add) Token: 0x06000C04 RID: 3076 RVA: 0x000681F0 File Offset: 0x000663F0
            // (remove) Token: 0x06000C05 RID: 3077 RVA: 0x00068228 File Offset: 0x00066428
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RequestForRepairDailyRowChangeEventHandler vJ_RequestForRepairDailyRowDeleted;

            // Token: 0x06000C06 RID: 3078 RVA: 0x0006825D File Offset: 0x0006645D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_RequestForRepairDailyRow(DataSetGES.vJ_RequestForRepairDailyRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000C07 RID: 3079 RVA: 0x0006826C File Offset: 0x0006646C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RequestForRepairDailyRow AddvJ_RequestForRepairDailyRow(int id, int num, DateTime dateCreate, int idWorker, string workerCreate, string reguestFiled, int idSR, string SR, string schmObj, string Purpose, bool IsPlanned, DateTime dateTripBeg, DateTime dateTripEnd, string AgreeWith, string Comment, string Address, bool Agreed, DateTime DateAgreed, int WorkerAgreed, string FIO, int iddivision, string division, int idUserCreate, string username, bool deleted, string dateBeg, string timeBeg, string dateEnd, string timeEnd)
            {
                DataSetGES.vJ_RequestForRepairDailyRow vJ_RequestForRepairDailyRow = (DataSetGES.vJ_RequestForRepairDailyRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    num,
                    dateCreate,
                    idWorker,
                    workerCreate,
                    reguestFiled,
                    idSR,
                    SR,
                    schmObj,
                    Purpose,
                    IsPlanned,
                    dateTripBeg,
                    dateTripEnd,
                    AgreeWith,
                    Comment,
                    Address,
                    Agreed,
                    DateAgreed,
                    WorkerAgreed,
                    FIO,
                    iddivision,
                    division,
                    idUserCreate,
                    username,
                    deleted,
                    dateBeg,
                    timeBeg,
                    dateEnd,
                    timeEnd
                };
                vJ_RequestForRepairDailyRow.ItemArray = itemArray;
                base.Rows.Add(vJ_RequestForRepairDailyRow);
                return vJ_RequestForRepairDailyRow;
            }

            // Token: 0x06000C08 RID: 3080 RVA: 0x0006838C File Offset: 0x0006658C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RequestForRepairDailyDataTable vJ_RequestForRepairDailyDataTable = (DataSetGES.vJ_RequestForRepairDailyDataTable)base.Clone();
                vJ_RequestForRepairDailyDataTable.InitVars();
                return vJ_RequestForRepairDailyDataTable;
            }

            // Token: 0x06000C09 RID: 3081 RVA: 0x000683AC File Offset: 0x000665AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RequestForRepairDailyDataTable();
            }

            // Token: 0x06000C0A RID: 3082 RVA: 0x000683B4 File Offset: 0x000665B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnnum = base.Columns["num"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnworkerCreate = base.Columns["workerCreate"];
                this.columnreguestFiled = base.Columns["reguestFiled"];
                this.columnidSR = base.Columns["idSR"];
                this.columnSR = base.Columns["SR"];
                this.columnschmObj = base.Columns["schmObj"];
                this.columnPurpose = base.Columns["Purpose"];
                this.columnIsPlanned = base.Columns["IsPlanned"];
                this.columndateTripBeg = base.Columns["dateTripBeg"];
                this.columndateTripEnd = base.Columns["dateTripEnd"];
                this.columnAgreeWith = base.Columns["AgreeWith"];
                this.columnComment = base.Columns["Comment"];
                this.columnAddress = base.Columns["Address"];
                this.columnAgreed = base.Columns["Agreed"];
                this.columnDateAgreed = base.Columns["DateAgreed"];
                this.columnWorkerAgreed = base.Columns["WorkerAgreed"];
                this.columnFIO = base.Columns["FIO"];
                this.columniddivision = base.Columns["iddivision"];
                this.columndivision = base.Columns["division"];
                this.columnidUserCreate = base.Columns["idUserCreate"];
                this.columnusername = base.Columns["username"];
                this.columndeleted = base.Columns["deleted"];
                this.columndateBeg = base.Columns["dateBeg"];
                this.columntimeBeg = base.Columns["timeBeg"];
                this.columndateEnd = base.Columns["dateEnd"];
                this.columntimeEnd = base.Columns["timeEnd"];
            }

            // Token: 0x06000C0B RID: 3083 RVA: 0x00068640 File Offset: 0x00066840
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnum = new DataColumn("num", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnworkerCreate = new DataColumn("workerCreate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnworkerCreate);
                this.columnreguestFiled = new DataColumn("reguestFiled", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnreguestFiled);
                this.columnidSR = new DataColumn("idSR", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSR);
                this.columnSR = new DataColumn("SR", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSR);
                this.columnschmObj = new DataColumn("schmObj", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnschmObj);
                this.columnPurpose = new DataColumn("Purpose", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPurpose);
                this.columnIsPlanned = new DataColumn("IsPlanned", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnIsPlanned);
                this.columndateTripBeg = new DataColumn("dateTripBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateTripBeg);
                this.columndateTripEnd = new DataColumn("dateTripEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateTripEnd);
                this.columnAgreeWith = new DataColumn("AgreeWith", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAgreeWith);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnAgreed = new DataColumn("Agreed", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnAgreed);
                this.columnDateAgreed = new DataColumn("DateAgreed", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateAgreed);
                this.columnWorkerAgreed = new DataColumn("WorkerAgreed", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWorkerAgreed);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columniddivision = new DataColumn("iddivision", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columniddivision);
                this.columndivision = new DataColumn("division", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndivision);
                this.columnidUserCreate = new DataColumn("idUserCreate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUserCreate);
                this.columnusername = new DataColumn("username", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columndateBeg = new DataColumn("dateBeg", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndateBeg);
                this.columntimeBeg = new DataColumn("timeBeg", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntimeBeg);
                this.columndateEnd = new DataColumn("dateEnd", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columndateEnd);
                this.columntimeEnd = new DataColumn("timeEnd", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntimeEnd);
                this.columnid.AllowDBNull = false;
                this.columnnum.AllowDBNull = false;
                this.columndateCreate.AllowDBNull = false;
                this.columnworkerCreate.ReadOnly = true;
                this.columnworkerCreate.MaxLength = 35;
                this.columnreguestFiled.AllowDBNull = false;
                this.columnreguestFiled.MaxLength = 256;
                this.columnidSR.AllowDBNull = false;
                this.columnSR.MaxLength = 100;
                this.columnschmObj.AllowDBNull = false;
                this.columnschmObj.MaxLength = 256;
                this.columnPurpose.AllowDBNull = false;
                this.columnPurpose.MaxLength = 256;
                this.columnIsPlanned.AllowDBNull = false;
                this.columnAgreeWith.MaxLength = 256;
                this.columnComment.MaxLength = 256;
                this.columnAgreed.AllowDBNull = false;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 35;
                this.columniddivision.AllowDBNull = false;
                this.columndivision.MaxLength = 100;
                this.columnusername.MaxLength = 50;
            }

            // Token: 0x06000C0C RID: 3084 RVA: 0x00068C87 File Offset: 0x00066E87
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestForRepairDailyRow NewvJ_RequestForRepairDailyRow()
            {
                return (DataSetGES.vJ_RequestForRepairDailyRow)base.NewRow();
            }

            // Token: 0x06000C0D RID: 3085 RVA: 0x00068C94 File Offset: 0x00066E94
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_RequestForRepairDailyRow(builder);
            }

            // Token: 0x06000C0E RID: 3086 RVA: 0x00068C9C File Offset: 0x00066E9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_RequestForRepairDailyRow);
            }

            // Token: 0x06000C0F RID: 3087 RVA: 0x00068CA8 File Offset: 0x00066EA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_RequestForRepairDailyRowChanged != null)
                {
                    this.vJ_RequestForRepairDailyRowChanged(this, new DataSetGES.vJ_RequestForRepairDailyRowChangeEvent((DataSetGES.vJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C10 RID: 3088 RVA: 0x00068CDB File Offset: 0x00066EDB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_RequestForRepairDailyRowChanging != null)
                {
                    this.vJ_RequestForRepairDailyRowChanging(this, new DataSetGES.vJ_RequestForRepairDailyRowChangeEvent((DataSetGES.vJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C11 RID: 3089 RVA: 0x00068D0E File Offset: 0x00066F0E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_RequestForRepairDailyRowDeleted != null)
                {
                    this.vJ_RequestForRepairDailyRowDeleted(this, new DataSetGES.vJ_RequestForRepairDailyRowChangeEvent((DataSetGES.vJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C12 RID: 3090 RVA: 0x00068D41 File Offset: 0x00066F41
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_RequestForRepairDailyRowDeleting != null)
                {
                    this.vJ_RequestForRepairDailyRowDeleting(this, new DataSetGES.vJ_RequestForRepairDailyRowChangeEvent((DataSetGES.vJ_RequestForRepairDailyRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C13 RID: 3091 RVA: 0x00068D74 File Offset: 0x00066F74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_RequestForRepairDailyRow(DataSetGES.vJ_RequestForRepairDailyRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000C14 RID: 3092 RVA: 0x00068D84 File Offset: 0x00066F84
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_RequestForRepairDailyDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400077B RID: 1915
            private DataColumn columnid;

            // Token: 0x0400077C RID: 1916
            private DataColumn columnnum;

            // Token: 0x0400077D RID: 1917
            private DataColumn columndateCreate;

            // Token: 0x0400077E RID: 1918
            private DataColumn columnidWorker;

            // Token: 0x0400077F RID: 1919
            private DataColumn columnworkerCreate;

            // Token: 0x04000780 RID: 1920
            private DataColumn columnreguestFiled;

            // Token: 0x04000781 RID: 1921
            private DataColumn columnidSR;

            // Token: 0x04000782 RID: 1922
            private DataColumn columnSR;

            // Token: 0x04000783 RID: 1923
            private DataColumn columnschmObj;

            // Token: 0x04000784 RID: 1924
            private DataColumn columnPurpose;

            // Token: 0x04000785 RID: 1925
            private DataColumn columnIsPlanned;

            // Token: 0x04000786 RID: 1926
            private DataColumn columndateTripBeg;

            // Token: 0x04000787 RID: 1927
            private DataColumn columndateTripEnd;

            // Token: 0x04000788 RID: 1928
            private DataColumn columnAgreeWith;

            // Token: 0x04000789 RID: 1929
            private DataColumn columnComment;

            // Token: 0x0400078A RID: 1930
            private DataColumn columnAddress;

            // Token: 0x0400078B RID: 1931
            private DataColumn columnAgreed;

            // Token: 0x0400078C RID: 1932
            private DataColumn columnDateAgreed;

            // Token: 0x0400078D RID: 1933
            private DataColumn columnWorkerAgreed;

            // Token: 0x0400078E RID: 1934
            private DataColumn columnFIO;

            // Token: 0x0400078F RID: 1935
            private DataColumn columniddivision;

            // Token: 0x04000790 RID: 1936
            private DataColumn columndivision;

            // Token: 0x04000791 RID: 1937
            private DataColumn columnidUserCreate;

            // Token: 0x04000792 RID: 1938
            private DataColumn columnusername;

            // Token: 0x04000793 RID: 1939
            private DataColumn columndeleted;

            // Token: 0x04000794 RID: 1940
            private DataColumn columndateBeg;

            // Token: 0x04000795 RID: 1941
            private DataColumn columntimeBeg;

            // Token: 0x04000796 RID: 1942
            private DataColumn columndateEnd;

            // Token: 0x04000797 RID: 1943
            private DataColumn columntimeEnd;
        }

        // Token: 0x020000D5 RID: 213
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tL_RequestForRepairSchmObjListDataTable : TypedTableBase<DataSetGES.tL_RequestForRepairSchmObjListRow>
        {
            // Token: 0x06000C15 RID: 3093 RVA: 0x00068F7C File Offset: 0x0006717C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tL_RequestForRepairSchmObjListDataTable()
            {
                base.TableName = "tL_RequestForRepairSchmObjList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000C16 RID: 3094 RVA: 0x00068FA4 File Offset: 0x000671A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tL_RequestForRepairSchmObjListDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000C17 RID: 3095 RVA: 0x0006904C File Offset: 0x0006724C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tL_RequestForRepairSchmObjListDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170002A2 RID: 674
            // (get) Token: 0x06000C18 RID: 3096 RVA: 0x0006905C File Offset: 0x0006725C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170002A3 RID: 675
            // (get) Token: 0x06000C19 RID: 3097 RVA: 0x00069064 File Offset: 0x00067264
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            // Token: 0x170002A4 RID: 676
            // (get) Token: 0x06000C1A RID: 3098 RVA: 0x0006906C File Offset: 0x0006726C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            // Token: 0x170002A5 RID: 677
            // (get) Token: 0x06000C1B RID: 3099 RVA: 0x00069074 File Offset: 0x00067274
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateBegColumn
            {
                get
                {
                    return this.columnDateBeg;
                }
            }

            // Token: 0x170002A6 RID: 678
            // (get) Token: 0x06000C1C RID: 3100 RVA: 0x0006907C File Offset: 0x0006727C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateEndColumn
            {
                get
                {
                    return this.columnDateEnd;
                }
            }

            // Token: 0x170002A7 RID: 679
            // (get) Token: 0x06000C1D RID: 3101 RVA: 0x00069084 File Offset: 0x00067284
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DurationColumn
            {
                get
                {
                    return this.columnDuration;
                }
            }

            // Token: 0x170002A8 RID: 680
            // (get) Token: 0x06000C1E RID: 3102 RVA: 0x0006908C File Offset: 0x0006728C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NumColumn
            {
                get
                {
                    return this.columnNum;
                }
            }

            // Token: 0x170002A9 RID: 681
            // (get) Token: 0x06000C1F RID: 3103 RVA: 0x00069094 File Offset: 0x00067294
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170002AA RID: 682
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tL_RequestForRepairSchmObjListRow this[int index]
            {
                get
                {
                    return (DataSetGES.tL_RequestForRepairSchmObjListRow)base.Rows[index];
                }
            }

            // Token: 0x1400006D RID: 109
            // (add) Token: 0x06000C21 RID: 3105 RVA: 0x000690B4 File Offset: 0x000672B4
            // (remove) Token: 0x06000C22 RID: 3106 RVA: 0x000690EC File Offset: 0x000672EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_RequestForRepairSchmObjListRowChangeEventHandler tL_RequestForRepairSchmObjListRowChanging;

            // Token: 0x1400006E RID: 110
            // (add) Token: 0x06000C23 RID: 3107 RVA: 0x00069124 File Offset: 0x00067324
            // (remove) Token: 0x06000C24 RID: 3108 RVA: 0x0006915C File Offset: 0x0006735C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_RequestForRepairSchmObjListRowChangeEventHandler tL_RequestForRepairSchmObjListRowChanged;

            // Token: 0x1400006F RID: 111
            // (add) Token: 0x06000C25 RID: 3109 RVA: 0x00069194 File Offset: 0x00067394
            // (remove) Token: 0x06000C26 RID: 3110 RVA: 0x000691CC File Offset: 0x000673CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_RequestForRepairSchmObjListRowChangeEventHandler tL_RequestForRepairSchmObjListRowDeleting;

            // Token: 0x14000070 RID: 112
            // (add) Token: 0x06000C27 RID: 3111 RVA: 0x00069204 File Offset: 0x00067404
            // (remove) Token: 0x06000C28 RID: 3112 RVA: 0x0006923C File Offset: 0x0006743C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_RequestForRepairSchmObjListRowChangeEventHandler tL_RequestForRepairSchmObjListRowDeleted;

            // Token: 0x06000C29 RID: 3113 RVA: 0x00069271 File Offset: 0x00067471
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtL_RequestForRepairSchmObjListRow(DataSetGES.tL_RequestForRepairSchmObjListRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000C2A RID: 3114 RVA: 0x00069280 File Offset: 0x00067480
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tL_RequestForRepairSchmObjListRow AddtL_RequestForRepairSchmObjListRow(int idRequest, int idSchmObj, DateTime DateBeg, DateTime DateEnd, string Duration, short Num)
            {
                DataSetGES.tL_RequestForRepairSchmObjListRow tL_RequestForRepairSchmObjListRow = (DataSetGES.tL_RequestForRepairSchmObjListRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idRequest,
                    idSchmObj,
                    DateBeg,
                    DateEnd,
                    Duration,
                    Num
                };
                tL_RequestForRepairSchmObjListRow.ItemArray = itemArray;
                base.Rows.Add(tL_RequestForRepairSchmObjListRow);
                return tL_RequestForRepairSchmObjListRow;
            }

            // Token: 0x06000C2B RID: 3115 RVA: 0x000692EC File Offset: 0x000674EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tL_RequestForRepairSchmObjListRow FindByid(int id)
            {
                return (DataSetGES.tL_RequestForRepairSchmObjListRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000C2C RID: 3116 RVA: 0x0006931C File Offset: 0x0006751C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tL_RequestForRepairSchmObjListDataTable tL_RequestForRepairSchmObjListDataTable = (DataSetGES.tL_RequestForRepairSchmObjListDataTable)base.Clone();
                tL_RequestForRepairSchmObjListDataTable.InitVars();
                return tL_RequestForRepairSchmObjListDataTable;
            }

            // Token: 0x06000C2D RID: 3117 RVA: 0x0006933C File Offset: 0x0006753C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tL_RequestForRepairSchmObjListDataTable();
            }

            // Token: 0x06000C2E RID: 3118 RVA: 0x00069344 File Offset: 0x00067544
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnDateBeg = base.Columns["DateBeg"];
                this.columnDateEnd = base.Columns["DateEnd"];
                this.columnDuration = base.Columns["Duration"];
                this.columnNum = base.Columns["Num"];
            }

            // Token: 0x06000C2F RID: 3119 RVA: 0x000693EC File Offset: 0x000675EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnDateBeg = new DataColumn("DateBeg", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateBeg);
                this.columnDateEnd = new DataColumn("DateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateEnd);
                this.columnDuration = new DataColumn("Duration", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnNum = new DataColumn("Num", typeof(short), null, MappingType.Element);
                base.Columns.Add(this.columnNum);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columnidSchmObj.AllowDBNull = false;
                this.columnDateBeg.AllowDBNull = false;
                this.columnDateEnd.AllowDBNull = false;
                this.columnDuration.AllowDBNull = false;
                this.columnNum.AllowDBNull = false;
            }

            // Token: 0x06000C30 RID: 3120 RVA: 0x000695ED File Offset: 0x000677ED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tL_RequestForRepairSchmObjListRow NewtL_RequestForRepairSchmObjListRow()
            {
                return (DataSetGES.tL_RequestForRepairSchmObjListRow)base.NewRow();
            }

            // Token: 0x06000C31 RID: 3121 RVA: 0x000695FA File Offset: 0x000677FA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tL_RequestForRepairSchmObjListRow(builder);
            }

            // Token: 0x06000C32 RID: 3122 RVA: 0x00069602 File Offset: 0x00067802
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tL_RequestForRepairSchmObjListRow);
            }

            // Token: 0x06000C33 RID: 3123 RVA: 0x0006960E File Offset: 0x0006780E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tL_RequestForRepairSchmObjListRowChanged != null)
                {
                    this.tL_RequestForRepairSchmObjListRowChanged(this, new DataSetGES.tL_RequestForRepairSchmObjListRowChangeEvent((DataSetGES.tL_RequestForRepairSchmObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C34 RID: 3124 RVA: 0x00069641 File Offset: 0x00067841
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tL_RequestForRepairSchmObjListRowChanging != null)
                {
                    this.tL_RequestForRepairSchmObjListRowChanging(this, new DataSetGES.tL_RequestForRepairSchmObjListRowChangeEvent((DataSetGES.tL_RequestForRepairSchmObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C35 RID: 3125 RVA: 0x00069674 File Offset: 0x00067874
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tL_RequestForRepairSchmObjListRowDeleted != null)
                {
                    this.tL_RequestForRepairSchmObjListRowDeleted(this, new DataSetGES.tL_RequestForRepairSchmObjListRowChangeEvent((DataSetGES.tL_RequestForRepairSchmObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C36 RID: 3126 RVA: 0x000696A7 File Offset: 0x000678A7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tL_RequestForRepairSchmObjListRowDeleting != null)
                {
                    this.tL_RequestForRepairSchmObjListRowDeleting(this, new DataSetGES.tL_RequestForRepairSchmObjListRowChangeEvent((DataSetGES.tL_RequestForRepairSchmObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C37 RID: 3127 RVA: 0x000696DA File Offset: 0x000678DA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetL_RequestForRepairSchmObjListRow(DataSetGES.tL_RequestForRepairSchmObjListRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000C38 RID: 3128 RVA: 0x000696E8 File Offset: 0x000678E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tL_RequestForRepairSchmObjListDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400079C RID: 1948
            private DataColumn columnid;

            // Token: 0x0400079D RID: 1949
            private DataColumn columnidRequest;

            // Token: 0x0400079E RID: 1950
            private DataColumn columnidSchmObj;

            // Token: 0x0400079F RID: 1951
            private DataColumn columnDateBeg;

            // Token: 0x040007A0 RID: 1952
            private DataColumn columnDateEnd;

            // Token: 0x040007A1 RID: 1953
            private DataColumn columnDuration;

            // Token: 0x040007A2 RID: 1954
            private DataColumn columnNum;
        }

        // Token: 0x020000D6 RID: 214
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_RequestForRepairDocDataTable : TypedTableBase<DataSetGES.tJ_RequestForRepairDocRow>
        {
            // Token: 0x06000C39 RID: 3129 RVA: 0x000698E0 File Offset: 0x00067AE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RequestForRepairDocDataTable()
            {
                base.TableName = "tJ_RequestForRepairDoc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000C3A RID: 3130 RVA: 0x00069908 File Offset: 0x00067B08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RequestForRepairDocDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000C3B RID: 3131 RVA: 0x000699B0 File Offset: 0x00067BB0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_RequestForRepairDocDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170002AB RID: 683
            // (get) Token: 0x06000C3C RID: 3132 RVA: 0x000699C0 File Offset: 0x00067BC0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170002AC RID: 684
            // (get) Token: 0x06000C3D RID: 3133 RVA: 0x000699C8 File Offset: 0x00067BC8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idRequestColumn
            {
                get
                {
                    return this.columnidRequest;
                }
            }

            // Token: 0x170002AD RID: 685
            // (get) Token: 0x06000C3E RID: 3134 RVA: 0x000699D0 File Offset: 0x00067BD0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocumentColumn
            {
                get
                {
                    return this.columnDocument;
                }
            }

            // Token: 0x170002AE RID: 686
            // (get) Token: 0x06000C3F RID: 3135 RVA: 0x000699D8 File Offset: 0x00067BD8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            // Token: 0x170002AF RID: 687
            // (get) Token: 0x06000C40 RID: 3136 RVA: 0x000699E0 File Offset: 0x00067BE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x170002B0 RID: 688
            // (get) Token: 0x06000C41 RID: 3137 RVA: 0x000699E8 File Offset: 0x00067BE8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170002B1 RID: 689
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDocRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_RequestForRepairDocRow)base.Rows[index];
                }
            }

            // Token: 0x14000071 RID: 113
            // (add) Token: 0x06000C43 RID: 3139 RVA: 0x00069A08 File Offset: 0x00067C08
            // (remove) Token: 0x06000C44 RID: 3140 RVA: 0x00069A40 File Offset: 0x00067C40
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDocRowChangeEventHandler tJ_RequestForRepairDocRowChanging;

            // Token: 0x14000072 RID: 114
            // (add) Token: 0x06000C45 RID: 3141 RVA: 0x00069A78 File Offset: 0x00067C78
            // (remove) Token: 0x06000C46 RID: 3142 RVA: 0x00069AB0 File Offset: 0x00067CB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDocRowChangeEventHandler tJ_RequestForRepairDocRowChanged;

            // Token: 0x14000073 RID: 115
            // (add) Token: 0x06000C47 RID: 3143 RVA: 0x00069AE8 File Offset: 0x00067CE8
            // (remove) Token: 0x06000C48 RID: 3144 RVA: 0x00069B20 File Offset: 0x00067D20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDocRowChangeEventHandler tJ_RequestForRepairDocRowDeleting;

            // Token: 0x14000074 RID: 116
            // (add) Token: 0x06000C49 RID: 3145 RVA: 0x00069B58 File Offset: 0x00067D58
            // (remove) Token: 0x06000C4A RID: 3146 RVA: 0x00069B90 File Offset: 0x00067D90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RequestForRepairDocRowChangeEventHandler tJ_RequestForRepairDocRowDeleted;

            // Token: 0x06000C4B RID: 3147 RVA: 0x00069BC5 File Offset: 0x00067DC5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_RequestForRepairDocRow(DataSetGES.tJ_RequestForRepairDocRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000C4C RID: 3148 RVA: 0x00069BD4 File Offset: 0x00067DD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDocRow AddtJ_RequestForRepairDocRow(int idRequest, byte[] Document, string FileName, string Comment)
            {
                DataSetGES.tJ_RequestForRepairDocRow tJ_RequestForRepairDocRow = (DataSetGES.tJ_RequestForRepairDocRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idRequest,
                    Document,
                    FileName,
                    Comment
                };
                tJ_RequestForRepairDocRow.ItemArray = itemArray;
                base.Rows.Add(tJ_RequestForRepairDocRow);
                return tJ_RequestForRepairDocRow;
            }

            // Token: 0x06000C4D RID: 3149 RVA: 0x00069C20 File Offset: 0x00067E20
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestForRepairDocRow FindByid(int id)
            {
                return (DataSetGES.tJ_RequestForRepairDocRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000C4E RID: 3150 RVA: 0x00069C50 File Offset: 0x00067E50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RequestForRepairDocDataTable tJ_RequestForRepairDocDataTable = (DataSetGES.tJ_RequestForRepairDocDataTable)base.Clone();
                tJ_RequestForRepairDocDataTable.InitVars();
                return tJ_RequestForRepairDocDataTable;
            }

            // Token: 0x06000C4F RID: 3151 RVA: 0x00069C70 File Offset: 0x00067E70
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RequestForRepairDocDataTable();
            }

            // Token: 0x06000C50 RID: 3152 RVA: 0x00069C78 File Offset: 0x00067E78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidRequest = base.Columns["idRequest"];
                this.columnDocument = base.Columns["Document"];
                this.columnFileName = base.Columns["FileName"];
                this.columnComment = base.Columns["Comment"];
            }

            // Token: 0x06000C51 RID: 3153 RVA: 0x00069CF4 File Offset: 0x00067EF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRequest = new DataColumn("idRequest", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRequest);
                this.columnDocument = new DataColumn("Document", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnDocument);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRequest.AllowDBNull = false;
                this.columnDocument.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 1024;
                this.columnComment.MaxLength = 1024;
            }

            // Token: 0x06000C52 RID: 3154 RVA: 0x00069E97 File Offset: 0x00068097
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDocRow NewtJ_RequestForRepairDocRow()
            {
                return (DataSetGES.tJ_RequestForRepairDocRow)base.NewRow();
            }

            // Token: 0x06000C53 RID: 3155 RVA: 0x00069EA4 File Offset: 0x000680A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_RequestForRepairDocRow(builder);
            }

            // Token: 0x06000C54 RID: 3156 RVA: 0x00069EAC File Offset: 0x000680AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_RequestForRepairDocRow);
            }

            // Token: 0x06000C55 RID: 3157 RVA: 0x00069EB8 File Offset: 0x000680B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_RequestForRepairDocRowChanged != null)
                {
                    this.tJ_RequestForRepairDocRowChanged(this, new DataSetGES.tJ_RequestForRepairDocRowChangeEvent((DataSetGES.tJ_RequestForRepairDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C56 RID: 3158 RVA: 0x00069EEB File Offset: 0x000680EB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_RequestForRepairDocRowChanging != null)
                {
                    this.tJ_RequestForRepairDocRowChanging(this, new DataSetGES.tJ_RequestForRepairDocRowChangeEvent((DataSetGES.tJ_RequestForRepairDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C57 RID: 3159 RVA: 0x00069F1E File Offset: 0x0006811E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_RequestForRepairDocRowDeleted != null)
                {
                    this.tJ_RequestForRepairDocRowDeleted(this, new DataSetGES.tJ_RequestForRepairDocRowChangeEvent((DataSetGES.tJ_RequestForRepairDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C58 RID: 3160 RVA: 0x00069F51 File Offset: 0x00068151
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_RequestForRepairDocRowDeleting != null)
                {
                    this.tJ_RequestForRepairDocRowDeleting(this, new DataSetGES.tJ_RequestForRepairDocRowChangeEvent((DataSetGES.tJ_RequestForRepairDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C59 RID: 3161 RVA: 0x00069F84 File Offset: 0x00068184
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_RequestForRepairDocRow(DataSetGES.tJ_RequestForRepairDocRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000C5A RID: 3162 RVA: 0x00069F94 File Offset: 0x00068194
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_RequestForRepairDocDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040007A7 RID: 1959
            private DataColumn columnid;

            // Token: 0x040007A8 RID: 1960
            private DataColumn columnidRequest;

            // Token: 0x040007A9 RID: 1961
            private DataColumn columnDocument;

            // Token: 0x040007AA RID: 1962
            private DataColumn columnFileName;

            // Token: 0x040007AB RID: 1963
            private DataColumn columnComment;
        }

        // Token: 0x020000D7 RID: 215
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_RelayProtectionAutomationDataTable : TypedTableBase<DataSetGES.tJ_RelayProtectionAutomationRow>
        {
            // Token: 0x06000C5B RID: 3163 RVA: 0x0006A18C File Offset: 0x0006838C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RelayProtectionAutomationDataTable()
            {
                base.TableName = "tJ_RelayProtectionAutomation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000C5C RID: 3164 RVA: 0x0006A1B4 File Offset: 0x000683B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RelayProtectionAutomationDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000C5D RID: 3165 RVA: 0x0006A25C File Offset: 0x0006845C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RelayProtectionAutomationDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170002B2 RID: 690
            // (get) Token: 0x06000C5E RID: 3166 RVA: 0x0006A26C File Offset: 0x0006846C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170002B3 RID: 691
            // (get) Token: 0x06000C5F RID: 3167 RVA: 0x0006A274 File Offset: 0x00068474
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            // Token: 0x170002B4 RID: 692
            // (get) Token: 0x06000C60 RID: 3168 RVA: 0x0006A27C File Offset: 0x0006847C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn nameColumn
            {
                get
                {
                    return this.columnname;
                }
            }

            // Token: 0x170002B5 RID: 693
            // (get) Token: 0x06000C61 RID: 3169 RVA: 0x0006A284 File Offset: 0x00068484
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170002B6 RID: 694
            // (get) Token: 0x06000C62 RID: 3170 RVA: 0x0006A28C File Offset: 0x0006848C
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170002B7 RID: 695
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_RelayProtectionAutomationRow)base.Rows[index];
                }
            }

            // Token: 0x14000075 RID: 117
            // (add) Token: 0x06000C64 RID: 3172 RVA: 0x0006A2AC File Offset: 0x000684AC
            // (remove) Token: 0x06000C65 RID: 3173 RVA: 0x0006A2E4 File Offset: 0x000684E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationRowChangeEventHandler tJ_RelayProtectionAutomationRowChanging;

            // Token: 0x14000076 RID: 118
            // (add) Token: 0x06000C66 RID: 3174 RVA: 0x0006A31C File Offset: 0x0006851C
            // (remove) Token: 0x06000C67 RID: 3175 RVA: 0x0006A354 File Offset: 0x00068554
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationRowChangeEventHandler tJ_RelayProtectionAutomationRowChanged;

            // Token: 0x14000077 RID: 119
            // (add) Token: 0x06000C68 RID: 3176 RVA: 0x0006A38C File Offset: 0x0006858C
            // (remove) Token: 0x06000C69 RID: 3177 RVA: 0x0006A3C4 File Offset: 0x000685C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationRowChangeEventHandler tJ_RelayProtectionAutomationRowDeleting;

            // Token: 0x14000078 RID: 120
            // (add) Token: 0x06000C6A RID: 3178 RVA: 0x0006A3FC File Offset: 0x000685FC
            // (remove) Token: 0x06000C6B RID: 3179 RVA: 0x0006A434 File Offset: 0x00068634
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationRowChangeEventHandler tJ_RelayProtectionAutomationRowDeleted;

            // Token: 0x06000C6C RID: 3180 RVA: 0x0006A469 File Offset: 0x00068669
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_RelayProtectionAutomationRow(DataSetGES.tJ_RelayProtectionAutomationRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000C6D RID: 3181 RVA: 0x0006A478 File Offset: 0x00068678
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationRow AddtJ_RelayProtectionAutomationRow(int idSchmObj, string name, bool Deleted)
            {
                DataSetGES.tJ_RelayProtectionAutomationRow tJ_RelayProtectionAutomationRow = (DataSetGES.tJ_RelayProtectionAutomationRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idSchmObj,
                    name,
                    Deleted
                };
                tJ_RelayProtectionAutomationRow.ItemArray = itemArray;
                base.Rows.Add(tJ_RelayProtectionAutomationRow);
                return tJ_RelayProtectionAutomationRow;
            }

            // Token: 0x06000C6E RID: 3182 RVA: 0x0006A4C4 File Offset: 0x000686C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationRow FindByid(int id)
            {
                return (DataSetGES.tJ_RelayProtectionAutomationRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000C6F RID: 3183 RVA: 0x0006A4F4 File Offset: 0x000686F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RelayProtectionAutomationDataTable tJ_RelayProtectionAutomationDataTable = (DataSetGES.tJ_RelayProtectionAutomationDataTable)base.Clone();
                tJ_RelayProtectionAutomationDataTable.InitVars();
                return tJ_RelayProtectionAutomationDataTable;
            }

            // Token: 0x06000C70 RID: 3184 RVA: 0x0006A514 File Offset: 0x00068714
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RelayProtectionAutomationDataTable();
            }

            // Token: 0x06000C71 RID: 3185 RVA: 0x0006A51C File Offset: 0x0006871C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnname = base.Columns["name"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x06000C72 RID: 3186 RVA: 0x0006A584 File Offset: 0x00068784
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnname = new DataColumn("name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidSchmObj.AutoIncrementSeed = -1L;
                this.columnidSchmObj.AutoIncrementStep = -1L;
                this.columnidSchmObj.AllowDBNull = false;
                this.columnname.MaxLength = 100;
                this.columnDeleted.AllowDBNull = false;
            }

            // Token: 0x06000C73 RID: 3187 RVA: 0x0006A6E9 File Offset: 0x000688E9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationRow NewtJ_RelayProtectionAutomationRow()
            {
                return (DataSetGES.tJ_RelayProtectionAutomationRow)base.NewRow();
            }

            // Token: 0x06000C74 RID: 3188 RVA: 0x0006A6F6 File Offset: 0x000688F6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_RelayProtectionAutomationRow(builder);
            }

            // Token: 0x06000C75 RID: 3189 RVA: 0x0006A6FE File Offset: 0x000688FE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_RelayProtectionAutomationRow);
            }

            // Token: 0x06000C76 RID: 3190 RVA: 0x0006A70A File Offset: 0x0006890A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_RelayProtectionAutomationRowChanged != null)
                {
                    this.tJ_RelayProtectionAutomationRowChanged(this, new DataSetGES.tJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C77 RID: 3191 RVA: 0x0006A73D File Offset: 0x0006893D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_RelayProtectionAutomationRowChanging != null)
                {
                    this.tJ_RelayProtectionAutomationRowChanging(this, new DataSetGES.tJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C78 RID: 3192 RVA: 0x0006A770 File Offset: 0x00068970
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_RelayProtectionAutomationRowDeleted != null)
                {
                    this.tJ_RelayProtectionAutomationRowDeleted(this, new DataSetGES.tJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C79 RID: 3193 RVA: 0x0006A7A3 File Offset: 0x000689A3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_RelayProtectionAutomationRowDeleting != null)
                {
                    this.tJ_RelayProtectionAutomationRowDeleting(this, new DataSetGES.tJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000C7A RID: 3194 RVA: 0x0006A7D6 File Offset: 0x000689D6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_RelayProtectionAutomationRow(DataSetGES.tJ_RelayProtectionAutomationRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000C7B RID: 3195 RVA: 0x0006A7E4 File Offset: 0x000689E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_RelayProtectionAutomationDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040007B0 RID: 1968
            private DataColumn columnid;

            // Token: 0x040007B1 RID: 1969
            private DataColumn columnidSchmObj;

            // Token: 0x040007B2 RID: 1970
            private DataColumn columnname;

            // Token: 0x040007B3 RID: 1971
            private DataColumn columnDeleted;
        }

        // Token: 0x020000D8 RID: 216
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_RelayProtectionAutomationValueDataTable : TypedTableBase<DataSetGES.tJ_RelayProtectionAutomationValueRow>
        {
            // Token: 0x06000C7C RID: 3196 RVA: 0x0006A9DC File Offset: 0x00068BDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RelayProtectionAutomationValueDataTable()
            {
                base.TableName = "tJ_RelayProtectionAutomationValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000C7D RID: 3197 RVA: 0x0006AA04 File Offset: 0x00068C04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RelayProtectionAutomationValueDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000C7E RID: 3198 RVA: 0x0006AAAC File Offset: 0x00068CAC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_RelayProtectionAutomationValueDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170002B8 RID: 696
            // (get) Token: 0x06000C7F RID: 3199 RVA: 0x0006AABC File Offset: 0x00068CBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170002B9 RID: 697
            // (get) Token: 0x06000C80 RID: 3200 RVA: 0x0006AAC4 File Offset: 0x00068CC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idRelayColumn
            {
                get
                {
                    return this.columnidRelay;
                }
            }

            // Token: 0x170002BA RID: 698
            // (get) Token: 0x06000C81 RID: 3201 RVA: 0x0006AACC File Offset: 0x00068CCC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_primaryColumn
            {
                get
                {
                    return this.columnamp_primary;
                }
            }

            // Token: 0x170002BB RID: 699
            // (get) Token: 0x06000C82 RID: 3202 RVA: 0x0006AAD4 File Offset: 0x00068CD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_secondaryColumn
            {
                get
                {
                    return this.columnamp_secondary;
                }
            }

            // Token: 0x170002BC RID: 700
            // (get) Token: 0x06000C83 RID: 3203 RVA: 0x0006AADC File Offset: 0x00068CDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTypeTrColumn
            {
                get
                {
                    return this.columnidTypeTr;
                }
            }

            // Token: 0x170002BD RID: 701
            // (get) Token: 0x06000C84 RID: 3204 RVA: 0x0006AAE4 File Offset: 0x00068CE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_mtzColumn
            {
                get
                {
                    return this.columnamp_mtz;
                }
            }

            // Token: 0x170002BE RID: 702
            // (get) Token: 0x06000C85 RID: 3205 RVA: 0x0006AAEC File Offset: 0x00068CEC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_mtzColumn
            {
                get
                {
                    return this.columntime_mtz;
                }
            }

            // Token: 0x170002BF RID: 703
            // (get) Token: 0x06000C86 RID: 3206 RVA: 0x0006AAF4 File Offset: 0x00068CF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_toColumn
            {
                get
                {
                    return this.columnamp_to;
                }
            }

            // Token: 0x170002C0 RID: 704
            // (get) Token: 0x06000C87 RID: 3207 RVA: 0x0006AAFC File Offset: 0x00068CFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_toColumn
            {
                get
                {
                    return this.columntime_to;
                }
            }

            // Token: 0x170002C1 RID: 705
            // (get) Token: 0x06000C88 RID: 3208 RVA: 0x0006AB04 File Offset: 0x00068D04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_ozzColumn
            {
                get
                {
                    return this.columnamp_ozz;
                }
            }

            // Token: 0x170002C2 RID: 706
            // (get) Token: 0x06000C89 RID: 3209 RVA: 0x0006AB0C File Offset: 0x00068D0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn time_ozzColumn
            {
                get
                {
                    return this.columntime_ozz;
                }
            }

            // Token: 0x170002C3 RID: 707
            // (get) Token: 0x06000C8A RID: 3210 RVA: 0x0006AB14 File Offset: 0x00068D14
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn act_ozzColumn
            {
                get
                {
                    return this.columnact_ozz;
                }
            }

            // Token: 0x170002C4 RID: 708
            // (get) Token: 0x06000C8B RID: 3211 RVA: 0x0006AB1C File Offset: 0x00068D1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn speed_mtzColumn
            {
                get
                {
                    return this.columnspeed_mtz;
                }
            }

            // Token: 0x170002C5 RID: 709
            // (get) Token: 0x06000C8C RID: 3212 RVA: 0x0006AB24 File Offset: 0x00068D24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_urovColumn
            {
                get
                {
                    return this.columnamp_urov;
                }
            }

            // Token: 0x170002C6 RID: 710
            // (get) Token: 0x06000C8D RID: 3213 RVA: 0x0006AB2C File Offset: 0x00068D2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn time_urovColumn
            {
                get
                {
                    return this.columntime_urov;
                }
            }

            // Token: 0x170002C7 RID: 711
            // (get) Token: 0x06000C8E RID: 3214 RVA: 0x0006AB34 File Offset: 0x00068D34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn avrColumn
            {
                get
                {
                    return this.columnavr;
                }
            }

            // Token: 0x170002C8 RID: 712
            // (get) Token: 0x06000C8F RID: 3215 RVA: 0x0006AB3C File Offset: 0x00068D3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn lzshColumn
            {
                get
                {
                    return this.columnlzsh;
                }
            }

            // Token: 0x170002C9 RID: 713
            // (get) Token: 0x06000C90 RID: 3216 RVA: 0x0006AB44 File Offset: 0x00068D44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn type_relayColumn
            {
                get
                {
                    return this.columntype_relay;
                }
            }

            // Token: 0x170002CA RID: 714
            // (get) Token: 0x06000C91 RID: 3217 RVA: 0x0006AB4C File Offset: 0x00068D4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn type_procColumn
            {
                get
                {
                    return this.columntype_proc;
                }
            }

            // Token: 0x170002CB RID: 715
            // (get) Token: 0x06000C92 RID: 3218 RVA: 0x0006AB54 File Offset: 0x00068D54
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn cpColumn
            {
                get
                {
                    return this.columncp;
                }
            }

            // Token: 0x170002CC RID: 716
            // (get) Token: 0x06000C93 RID: 3219 RVA: 0x0006AB5C File Offset: 0x00068D5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn cp_cellColumn
            {
                get
                {
                    return this.columncp_cell;
                }
            }

            // Token: 0x170002CD RID: 717
            // (get) Token: 0x06000C94 RID: 3220 RVA: 0x0006AB64 File Offset: 0x00068D64
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn commentColumn
            {
                get
                {
                    return this.columncomment;
                }
            }

            // Token: 0x170002CE RID: 718
            // (get) Token: 0x06000C95 RID: 3221 RVA: 0x0006AB6C File Offset: 0x00068D6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            // Token: 0x170002CF RID: 719
            // (get) Token: 0x06000C96 RID: 3222 RVA: 0x0006AB74 File Offset: 0x00068D74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn dateInColumn
            {
                get
                {
                    return this.columndateIn;
                }
            }

            // Token: 0x170002D0 RID: 720
            // (get) Token: 0x06000C97 RID: 3223 RVA: 0x0006AB7C File Offset: 0x00068D7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            // Token: 0x170002D1 RID: 721
            // (get) Token: 0x06000C98 RID: 3224 RVA: 0x0006AB84 File Offset: 0x00068D84
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170002D2 RID: 722
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationValueRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_RelayProtectionAutomationValueRow)base.Rows[index];
                }
            }

            // Token: 0x14000079 RID: 121
            // (add) Token: 0x06000C9A RID: 3226 RVA: 0x0006ABA4 File Offset: 0x00068DA4
            // (remove) Token: 0x06000C9B RID: 3227 RVA: 0x0006ABDC File Offset: 0x00068DDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEventHandler tJ_RelayProtectionAutomationValueRowChanging;

            // Token: 0x1400007A RID: 122
            // (add) Token: 0x06000C9C RID: 3228 RVA: 0x0006AC14 File Offset: 0x00068E14
            // (remove) Token: 0x06000C9D RID: 3229 RVA: 0x0006AC4C File Offset: 0x00068E4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEventHandler tJ_RelayProtectionAutomationValueRowChanged;

            // Token: 0x1400007B RID: 123
            // (add) Token: 0x06000C9E RID: 3230 RVA: 0x0006AC84 File Offset: 0x00068E84
            // (remove) Token: 0x06000C9F RID: 3231 RVA: 0x0006ACBC File Offset: 0x00068EBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEventHandler tJ_RelayProtectionAutomationValueRowDeleting;

            // Token: 0x1400007C RID: 124
            // (add) Token: 0x06000CA0 RID: 3232 RVA: 0x0006ACF4 File Offset: 0x00068EF4
            // (remove) Token: 0x06000CA1 RID: 3233 RVA: 0x0006AD2C File Offset: 0x00068F2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEventHandler tJ_RelayProtectionAutomationValueRowDeleted;

            // Token: 0x06000CA2 RID: 3234 RVA: 0x0006AD61 File Offset: 0x00068F61
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtJ_RelayProtectionAutomationValueRow(DataSetGES.tJ_RelayProtectionAutomationValueRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000CA3 RID: 3235 RVA: 0x0006AD70 File Offset: 0x00068F70
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationValueRow AddtJ_RelayProtectionAutomationValueRow(int idRelay, int amp_primary, int amp_secondary, int idTypeTr, int amp_mtz, double time_mtz, int amp_to, double time_to, int amp_ozz, double time_ozz, string act_ozz, double speed_mtz, int amp_urov, double time_urov, bool avr, bool lzsh, string type_relay, string type_proc, string cp, string cp_cell, string comment, DateTime dateCreate, DateTime dateIn, bool deleted)
            {
                DataSetGES.tJ_RelayProtectionAutomationValueRow tJ_RelayProtectionAutomationValueRow = (DataSetGES.tJ_RelayProtectionAutomationValueRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idRelay,
                    amp_primary,
                    amp_secondary,
                    idTypeTr,
                    amp_mtz,
                    time_mtz,
                    amp_to,
                    time_to,
                    amp_ozz,
                    time_ozz,
                    act_ozz,
                    speed_mtz,
                    amp_urov,
                    time_urov,
                    avr,
                    lzsh,
                    type_relay,
                    type_proc,
                    cp,
                    cp_cell,
                    comment,
                    dateCreate,
                    dateIn,
                    deleted
                };
                tJ_RelayProtectionAutomationValueRow.ItemArray = itemArray;
                base.Rows.Add(tJ_RelayProtectionAutomationValueRow);
                return tJ_RelayProtectionAutomationValueRow;
            }

            // Token: 0x06000CA4 RID: 3236 RVA: 0x0006AE88 File Offset: 0x00069088
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationValueRow FindByid(int id)
            {
                return (DataSetGES.tJ_RelayProtectionAutomationValueRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000CA5 RID: 3237 RVA: 0x0006AEB8 File Offset: 0x000690B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_RelayProtectionAutomationValueDataTable tJ_RelayProtectionAutomationValueDataTable = (DataSetGES.tJ_RelayProtectionAutomationValueDataTable)base.Clone();
                tJ_RelayProtectionAutomationValueDataTable.InitVars();
                return tJ_RelayProtectionAutomationValueDataTable;
            }

            // Token: 0x06000CA6 RID: 3238 RVA: 0x0006AED8 File Offset: 0x000690D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_RelayProtectionAutomationValueDataTable();
            }

            // Token: 0x06000CA7 RID: 3239 RVA: 0x0006AEE0 File Offset: 0x000690E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidRelay = base.Columns["idRelay"];
                this.columnamp_primary = base.Columns["amp_primary"];
                this.columnamp_secondary = base.Columns["amp_secondary"];
                this.columnidTypeTr = base.Columns["idTypeTr"];
                this.columnamp_mtz = base.Columns["amp_mtz"];
                this.columntime_mtz = base.Columns["time_mtz"];
                this.columnamp_to = base.Columns["amp_to"];
                this.columntime_to = base.Columns["time_to"];
                this.columnamp_ozz = base.Columns["amp_ozz"];
                this.columntime_ozz = base.Columns["time_ozz"];
                this.columnact_ozz = base.Columns["act_ozz"];
                this.columnspeed_mtz = base.Columns["speed_mtz"];
                this.columnamp_urov = base.Columns["amp_urov"];
                this.columntime_urov = base.Columns["time_urov"];
                this.columnavr = base.Columns["avr"];
                this.columnlzsh = base.Columns["lzsh"];
                this.columntype_relay = base.Columns["type_relay"];
                this.columntype_proc = base.Columns["type_proc"];
                this.columncp = base.Columns["cp"];
                this.columncp_cell = base.Columns["cp_cell"];
                this.columncomment = base.Columns["comment"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columndateIn = base.Columns["dateIn"];
                this.columndeleted = base.Columns["deleted"];
            }

            // Token: 0x06000CA8 RID: 3240 RVA: 0x0006B114 File Offset: 0x00069314
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidRelay = new DataColumn("idRelay", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidRelay);
                this.columnamp_primary = new DataColumn("amp_primary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_primary);
                this.columnamp_secondary = new DataColumn("amp_secondary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_secondary);
                this.columnidTypeTr = new DataColumn("idTypeTr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTypeTr);
                this.columnamp_mtz = new DataColumn("amp_mtz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_mtz);
                this.columntime_mtz = new DataColumn("time_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_mtz);
                this.columnamp_to = new DataColumn("amp_to", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_to);
                this.columntime_to = new DataColumn("time_to", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_to);
                this.columnamp_ozz = new DataColumn("amp_ozz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_ozz);
                this.columntime_ozz = new DataColumn("time_ozz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_ozz);
                this.columnact_ozz = new DataColumn("act_ozz", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnact_ozz);
                this.columnspeed_mtz = new DataColumn("speed_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnspeed_mtz);
                this.columnamp_urov = new DataColumn("amp_urov", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_urov);
                this.columntime_urov = new DataColumn("time_urov", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_urov);
                this.columnavr = new DataColumn("avr", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnavr);
                this.columnlzsh = new DataColumn("lzsh", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnlzsh);
                this.columntype_relay = new DataColumn("type_relay", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_relay);
                this.columntype_proc = new DataColumn("type_proc", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_proc);
                this.columncp = new DataColumn("cp", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp);
                this.columncp_cell = new DataColumn("cp_cell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp_cell);
                this.columncomment = new DataColumn("comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncomment);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columndateIn = new DataColumn("dateIn", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateIn);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidRelay.AllowDBNull = false;
                this.columnact_ozz.MaxLength = 50;
                this.columntype_relay.MaxLength = 50;
                this.columntype_proc.MaxLength = 50;
                this.columncp.MaxLength = 100;
                this.columncp_cell.MaxLength = 25;
                this.columncomment.MaxLength = 256;
                this.columndateCreate.AllowDBNull = false;
                this.columndateIn.AllowDBNull = false;
                this.columndeleted.AllowDBNull = false;
            }

            // Token: 0x06000CA9 RID: 3241 RVA: 0x0006B678 File Offset: 0x00069878
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RelayProtectionAutomationValueRow NewtJ_RelayProtectionAutomationValueRow()
            {
                return (DataSetGES.tJ_RelayProtectionAutomationValueRow)base.NewRow();
            }

            // Token: 0x06000CAA RID: 3242 RVA: 0x0006B685 File Offset: 0x00069885
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_RelayProtectionAutomationValueRow(builder);
            }

            // Token: 0x06000CAB RID: 3243 RVA: 0x0006B68D File Offset: 0x0006988D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_RelayProtectionAutomationValueRow);
            }

            // Token: 0x06000CAC RID: 3244 RVA: 0x0006B699 File Offset: 0x00069899
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_RelayProtectionAutomationValueRowChanged != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowChanged(this, new DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationValueRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CAD RID: 3245 RVA: 0x0006B6CC File Offset: 0x000698CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_RelayProtectionAutomationValueRowChanging != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowChanging(this, new DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationValueRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CAE RID: 3246 RVA: 0x0006B6FF File Offset: 0x000698FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_RelayProtectionAutomationValueRowDeleted != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowDeleted(this, new DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationValueRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CAF RID: 3247 RVA: 0x0006B732 File Offset: 0x00069932
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_RelayProtectionAutomationValueRowDeleting != null)
                {
                    this.tJ_RelayProtectionAutomationValueRowDeleting(this, new DataSetGES.tJ_RelayProtectionAutomationValueRowChangeEvent((DataSetGES.tJ_RelayProtectionAutomationValueRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CB0 RID: 3248 RVA: 0x0006B765 File Offset: 0x00069965
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_RelayProtectionAutomationValueRow(DataSetGES.tJ_RelayProtectionAutomationValueRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000CB1 RID: 3249 RVA: 0x0006B774 File Offset: 0x00069974
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_RelayProtectionAutomationValueDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040007B8 RID: 1976
            private DataColumn columnid;

            // Token: 0x040007B9 RID: 1977
            private DataColumn columnidRelay;

            // Token: 0x040007BA RID: 1978
            private DataColumn columnamp_primary;

            // Token: 0x040007BB RID: 1979
            private DataColumn columnamp_secondary;

            // Token: 0x040007BC RID: 1980
            private DataColumn columnidTypeTr;

            // Token: 0x040007BD RID: 1981
            private DataColumn columnamp_mtz;

            // Token: 0x040007BE RID: 1982
            private DataColumn columntime_mtz;

            // Token: 0x040007BF RID: 1983
            private DataColumn columnamp_to;

            // Token: 0x040007C0 RID: 1984
            private DataColumn columntime_to;

            // Token: 0x040007C1 RID: 1985
            private DataColumn columnamp_ozz;

            // Token: 0x040007C2 RID: 1986
            private DataColumn columntime_ozz;

            // Token: 0x040007C3 RID: 1987
            private DataColumn columnact_ozz;

            // Token: 0x040007C4 RID: 1988
            private DataColumn columnspeed_mtz;

            // Token: 0x040007C5 RID: 1989
            private DataColumn columnamp_urov;

            // Token: 0x040007C6 RID: 1990
            private DataColumn columntime_urov;

            // Token: 0x040007C7 RID: 1991
            private DataColumn columnavr;

            // Token: 0x040007C8 RID: 1992
            private DataColumn columnlzsh;

            // Token: 0x040007C9 RID: 1993
            private DataColumn columntype_relay;

            // Token: 0x040007CA RID: 1994
            private DataColumn columntype_proc;

            // Token: 0x040007CB RID: 1995
            private DataColumn columncp;

            // Token: 0x040007CC RID: 1996
            private DataColumn columncp_cell;

            // Token: 0x040007CD RID: 1997
            private DataColumn columncomment;

            // Token: 0x040007CE RID: 1998
            private DataColumn columndateCreate;

            // Token: 0x040007CF RID: 1999
            private DataColumn columndateIn;

            // Token: 0x040007D0 RID: 2000
            private DataColumn columndeleted;
        }

        // Token: 0x020000D9 RID: 217
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_RelayProtectionAutomationDataTable : TypedTableBase<DataSetGES.vJ_RelayProtectionAutomationRow>
        {
            // Token: 0x06000CB2 RID: 3250 RVA: 0x0006B96C File Offset: 0x00069B6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RelayProtectionAutomationDataTable() : this(false)
            {
            }

            // Token: 0x06000CB3 RID: 3251 RVA: 0x0006B975 File Offset: 0x00069B75
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_RelayProtectionAutomationDataTable(bool initExpressions)
            {
                base.TableName = "vJ_RelayProtectionAutomation";
                this.BeginInit();
                this.InitClass();
                if (initExpressions)
                {
                    this.InitExpressions();
                }
                this.EndInit();
            }

            // Token: 0x06000CB4 RID: 3252 RVA: 0x0006B9A4 File Offset: 0x00069BA4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RelayProtectionAutomationDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000CB5 RID: 3253 RVA: 0x0006BA4C File Offset: 0x00069C4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_RelayProtectionAutomationDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170002D3 RID: 723
            // (get) Token: 0x06000CB6 RID: 3254 RVA: 0x0006BA5C File Offset: 0x00069C5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170002D4 RID: 724
            // (get) Token: 0x06000CB7 RID: 3255 RVA: 0x0006BA64 File Offset: 0x00069C64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn relayidValueColumn
            {
                get
                {
                    return this.columnrelayidValue;
                }
            }

            // Token: 0x170002D5 RID: 725
            // (get) Token: 0x06000CB8 RID: 3256 RVA: 0x0006BA6C File Offset: 0x00069C6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn subIdColumn
            {
                get
                {
                    return this.columnsubId;
                }
            }

            // Token: 0x170002D6 RID: 726
            // (get) Token: 0x06000CB9 RID: 3257 RVA: 0x0006BA74 File Offset: 0x00069C74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn sub_NameColumn
            {
                get
                {
                    return this.columnsub_Name;
                }
            }

            // Token: 0x170002D7 RID: 727
            // (get) Token: 0x06000CBA RID: 3258 RVA: 0x0006BA7C File Offset: 0x00069C7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn typeSubColumn
            {
                get
                {
                    return this.columntypeSub;
                }
            }

            // Token: 0x170002D8 RID: 728
            // (get) Token: 0x06000CBB RID: 3259 RVA: 0x0006BA84 File Offset: 0x00069C84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn busIDColumn
            {
                get
                {
                    return this.columnbusID;
                }
            }

            // Token: 0x170002D9 RID: 729
            // (get) Token: 0x06000CBC RID: 3260 RVA: 0x0006BA8C File Offset: 0x00069C8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn bus_nameColumn
            {
                get
                {
                    return this.columnbus_name;
                }
            }

            // Token: 0x170002DA RID: 730
            // (get) Token: 0x06000CBD RID: 3261 RVA: 0x0006BA94 File Offset: 0x00069C94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn cell_NameColumn
            {
                get
                {
                    return this.columncell_Name;
                }
            }

            // Token: 0x170002DB RID: 731
            // (get) Token: 0x06000CBE RID: 3262 RVA: 0x0006BA9C File Offset: 0x00069C9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn cellIDColumn
            {
                get
                {
                    return this.columncellID;
                }
            }

            // Token: 0x170002DC RID: 732
            // (get) Token: 0x06000CBF RID: 3263 RVA: 0x0006BAA4 File Offset: 0x00069CA4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn relNameColumn
            {
                get
                {
                    return this.columnrelName;
                }
            }

            // Token: 0x170002DD RID: 733
            // (get) Token: 0x06000CC0 RID: 3264 RVA: 0x0006BAAC File Offset: 0x00069CAC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_primaryColumn
            {
                get
                {
                    return this.columnamp_primary;
                }
            }

            // Token: 0x170002DE RID: 734
            // (get) Token: 0x06000CC1 RID: 3265 RVA: 0x0006BAB4 File Offset: 0x00069CB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_secondaryColumn
            {
                get
                {
                    return this.columnamp_secondary;
                }
            }

            // Token: 0x170002DF RID: 735
            // (get) Token: 0x06000CC2 RID: 3266 RVA: 0x0006BABC File Offset: 0x00069CBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTypeTrColumn
            {
                get
                {
                    return this.columnidTypeTr;
                }
            }

            // Token: 0x170002E0 RID: 736
            // (get) Token: 0x06000CC3 RID: 3267 RVA: 0x0006BAC4 File Offset: 0x00069CC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypetrColumn
            {
                get
                {
                    return this.columnTypetr;
                }
            }

            // Token: 0x170002E1 RID: 737
            // (get) Token: 0x06000CC4 RID: 3268 RVA: 0x0006BACC File Offset: 0x00069CCC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_mtzColumn
            {
                get
                {
                    return this.columnamp_mtz;
                }
            }

            // Token: 0x170002E2 RID: 738
            // (get) Token: 0x06000CC5 RID: 3269 RVA: 0x0006BAD4 File Offset: 0x00069CD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn time_mtzColumn
            {
                get
                {
                    return this.columntime_mtz;
                }
            }

            // Token: 0x170002E3 RID: 739
            // (get) Token: 0x06000CC6 RID: 3270 RVA: 0x0006BADC File Offset: 0x00069CDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_toColumn
            {
                get
                {
                    return this.columnamp_to;
                }
            }

            // Token: 0x170002E4 RID: 740
            // (get) Token: 0x06000CC7 RID: 3271 RVA: 0x0006BAE4 File Offset: 0x00069CE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_toColumn
            {
                get
                {
                    return this.columntime_to;
                }
            }

            // Token: 0x170002E5 RID: 741
            // (get) Token: 0x06000CC8 RID: 3272 RVA: 0x0006BAEC File Offset: 0x00069CEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn amp_ozzColumn
            {
                get
                {
                    return this.columnamp_ozz;
                }
            }

            // Token: 0x170002E6 RID: 742
            // (get) Token: 0x06000CC9 RID: 3273 RVA: 0x0006BAF4 File Offset: 0x00069CF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn time_ozzColumn
            {
                get
                {
                    return this.columntime_ozz;
                }
            }

            // Token: 0x170002E7 RID: 743
            // (get) Token: 0x06000CCA RID: 3274 RVA: 0x0006BAFC File Offset: 0x00069CFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn act_ozzColumn
            {
                get
                {
                    return this.columnact_ozz;
                }
            }

            // Token: 0x170002E8 RID: 744
            // (get) Token: 0x06000CCB RID: 3275 RVA: 0x0006BB04 File Offset: 0x00069D04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn speed_mtzColumn
            {
                get
                {
                    return this.columnspeed_mtz;
                }
            }

            // Token: 0x170002E9 RID: 745
            // (get) Token: 0x06000CCC RID: 3276 RVA: 0x0006BB0C File Offset: 0x00069D0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn amp_urovColumn
            {
                get
                {
                    return this.columnamp_urov;
                }
            }

            // Token: 0x170002EA RID: 746
            // (get) Token: 0x06000CCD RID: 3277 RVA: 0x0006BB14 File Offset: 0x00069D14
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn time_urovColumn
            {
                get
                {
                    return this.columntime_urov;
                }
            }

            // Token: 0x170002EB RID: 747
            // (get) Token: 0x06000CCE RID: 3278 RVA: 0x0006BB1C File Offset: 0x00069D1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn avrColumn
            {
                get
                {
                    return this.columnavr;
                }
            }

            // Token: 0x170002EC RID: 748
            // (get) Token: 0x06000CCF RID: 3279 RVA: 0x0006BB24 File Offset: 0x00069D24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn lzshColumn
            {
                get
                {
                    return this.columnlzsh;
                }
            }

            // Token: 0x170002ED RID: 749
            // (get) Token: 0x06000CD0 RID: 3280 RVA: 0x0006BB2C File Offset: 0x00069D2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn type_relayColumn
            {
                get
                {
                    return this.columntype_relay;
                }
            }

            // Token: 0x170002EE RID: 750
            // (get) Token: 0x06000CD1 RID: 3281 RVA: 0x0006BB34 File Offset: 0x00069D34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn type_procColumn
            {
                get
                {
                    return this.columntype_proc;
                }
            }

            // Token: 0x170002EF RID: 751
            // (get) Token: 0x06000CD2 RID: 3282 RVA: 0x0006BB3C File Offset: 0x00069D3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn cpColumn
            {
                get
                {
                    return this.columncp;
                }
            }

            // Token: 0x170002F0 RID: 752
            // (get) Token: 0x06000CD3 RID: 3283 RVA: 0x0006BB44 File Offset: 0x00069D44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn cp_cellColumn
            {
                get
                {
                    return this.columncp_cell;
                }
            }

            // Token: 0x170002F1 RID: 753
            // (get) Token: 0x06000CD4 RID: 3284 RVA: 0x0006BB4C File Offset: 0x00069D4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn commentColumn
            {
                get
                {
                    return this.columncomment;
                }
            }

            // Token: 0x170002F2 RID: 754
            // (get) Token: 0x06000CD5 RID: 3285 RVA: 0x0006BB54 File Offset: 0x00069D54
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateCreateColumn
            {
                get
                {
                    return this.columndateCreate;
                }
            }

            // Token: 0x170002F3 RID: 755
            // (get) Token: 0x06000CD6 RID: 3286 RVA: 0x0006BB5C File Offset: 0x00069D5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateInColumn
            {
                get
                {
                    return this.columndateIn;
                }
            }

            // Token: 0x170002F4 RID: 756
            // (get) Token: 0x06000CD7 RID: 3287 RVA: 0x0006BB64 File Offset: 0x00069D64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn deletedColumn
            {
                get
                {
                    return this.columndeleted;
                }
            }

            // Token: 0x170002F5 RID: 757
            // (get) Token: 0x06000CD8 RID: 3288 RVA: 0x0006BB6C File Offset: 0x00069D6C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn coefTRColumn
            {
                get
                {
                    return this.columncoefTR;
                }
            }

            // Token: 0x170002F6 RID: 758
            // (get) Token: 0x06000CD9 RID: 3289 RVA: 0x0006BB74 File Offset: 0x00069D74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn deletedObjColumn
            {
                get
                {
                    return this.columndeletedObj;
                }
            }

            // Token: 0x170002F7 RID: 759
            // (get) Token: 0x06000CDA RID: 3290 RVA: 0x0006BB7C File Offset: 0x00069D7C
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170002F8 RID: 760
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RelayProtectionAutomationRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_RelayProtectionAutomationRow)base.Rows[index];
                }
            }

            // Token: 0x1400007D RID: 125
            // (add) Token: 0x06000CDC RID: 3292 RVA: 0x0006BB9C File Offset: 0x00069D9C
            // (remove) Token: 0x06000CDD RID: 3293 RVA: 0x0006BBD4 File Offset: 0x00069DD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RelayProtectionAutomationRowChangeEventHandler vJ_RelayProtectionAutomationRowChanging;

            // Token: 0x1400007E RID: 126
            // (add) Token: 0x06000CDE RID: 3294 RVA: 0x0006BC0C File Offset: 0x00069E0C
            // (remove) Token: 0x06000CDF RID: 3295 RVA: 0x0006BC44 File Offset: 0x00069E44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RelayProtectionAutomationRowChangeEventHandler vJ_RelayProtectionAutomationRowChanged;

            // Token: 0x1400007F RID: 127
            // (add) Token: 0x06000CE0 RID: 3296 RVA: 0x0006BC7C File Offset: 0x00069E7C
            // (remove) Token: 0x06000CE1 RID: 3297 RVA: 0x0006BCB4 File Offset: 0x00069EB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RelayProtectionAutomationRowChangeEventHandler vJ_RelayProtectionAutomationRowDeleting;

            // Token: 0x14000080 RID: 128
            // (add) Token: 0x06000CE2 RID: 3298 RVA: 0x0006BCEC File Offset: 0x00069EEC
            // (remove) Token: 0x06000CE3 RID: 3299 RVA: 0x0006BD24 File Offset: 0x00069F24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_RelayProtectionAutomationRowChangeEventHandler vJ_RelayProtectionAutomationRowDeleted;

            // Token: 0x06000CE4 RID: 3300 RVA: 0x0006BD59 File Offset: 0x00069F59
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_RelayProtectionAutomationRow(DataSetGES.vJ_RelayProtectionAutomationRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000CE5 RID: 3301 RVA: 0x0006BD68 File Offset: 0x00069F68
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RelayProtectionAutomationRow AddvJ_RelayProtectionAutomationRow(int id, int relayidValue, int subId, string sub_Name, int typeSub, int busID, string bus_name, string cell_Name, int cellID, string relName, int amp_primary, int amp_secondary, int idTypeTr, string Typetr, int amp_mtz, double time_mtz, int amp_to, double time_to, int amp_ozz, double time_ozz, string act_ozz, double speed_mtz, int amp_urov, double time_urov, bool avr, bool lzsh, string type_relay, string type_proc, string cp, string cp_cell, string comment, DateTime dateCreate, DateTime dateIn, bool deleted, string coefTR, bool deletedObj)
            {
                DataSetGES.vJ_RelayProtectionAutomationRow vJ_RelayProtectionAutomationRow = (DataSetGES.vJ_RelayProtectionAutomationRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    relayidValue,
                    subId,
                    sub_Name,
                    typeSub,
                    busID,
                    bus_name,
                    cell_Name,
                    cellID,
                    relName,
                    amp_primary,
                    amp_secondary,
                    idTypeTr,
                    Typetr,
                    amp_mtz,
                    time_mtz,
                    amp_to,
                    time_to,
                    amp_ozz,
                    time_ozz,
                    act_ozz,
                    speed_mtz,
                    amp_urov,
                    time_urov,
                    avr,
                    lzsh,
                    type_relay,
                    type_proc,
                    cp,
                    cp_cell,
                    comment,
                    dateCreate,
                    dateIn,
                    deleted,
                    coefTR,
                    deletedObj
                };
                vJ_RelayProtectionAutomationRow.ItemArray = itemArray;
                base.Rows.Add(vJ_RelayProtectionAutomationRow);
                return vJ_RelayProtectionAutomationRow;
            }

            // Token: 0x06000CE6 RID: 3302 RVA: 0x0006BEE4 File Offset: 0x0006A0E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RelayProtectionAutomationRow AddvJ_RelayProtectionAutomationRow(int id, int relayidValue, int subId, string sub_Name, int typeSub, int busID, string bus_name, string cell_Name, int cellID, string relName, int amp_primary, int amp_secondary, int idTypeTr, string Typetr, int amp_mtz, double time_mtz, int amp_to, double time_to, int amp_ozz, double time_ozz, string act_ozz, double speed_mtz, int amp_urov, double time_urov, bool avr, bool lzsh, string type_relay, string type_proc, string cp, string cp_cell, string comment, DateTime dateCreate, DateTime dateIn, bool deleted, bool deletedObj)
            {
                DataSetGES.vJ_RelayProtectionAutomationRow vJ_RelayProtectionAutomationRow = (DataSetGES.vJ_RelayProtectionAutomationRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    relayidValue,
                    subId,
                    sub_Name,
                    typeSub,
                    busID,
                    bus_name,
                    cell_Name,
                    cellID,
                    relName,
                    amp_primary,
                    amp_secondary,
                    idTypeTr,
                    Typetr,
                    amp_mtz,
                    time_mtz,
                    amp_to,
                    time_to,
                    amp_ozz,
                    time_ozz,
                    act_ozz,
                    speed_mtz,
                    amp_urov,
                    time_urov,
                    avr,
                    lzsh,
                    type_relay,
                    type_proc,
                    cp,
                    cp_cell,
                    comment,
                    dateCreate,
                    dateIn,
                    deleted,
                    null,
                    deletedObj
                };
                vJ_RelayProtectionAutomationRow.ItemArray = itemArray;
                base.Rows.Add(vJ_RelayProtectionAutomationRow);
                return vJ_RelayProtectionAutomationRow;
            }

            // Token: 0x06000CE7 RID: 3303 RVA: 0x0006C05C File Offset: 0x0006A25C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_RelayProtectionAutomationDataTable vJ_RelayProtectionAutomationDataTable = (DataSetGES.vJ_RelayProtectionAutomationDataTable)base.Clone();
                vJ_RelayProtectionAutomationDataTable.InitVars();
                return vJ_RelayProtectionAutomationDataTable;
            }

            // Token: 0x06000CE8 RID: 3304 RVA: 0x0006C07C File Offset: 0x0006A27C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_RelayProtectionAutomationDataTable();
            }

            // Token: 0x06000CE9 RID: 3305 RVA: 0x0006C084 File Offset: 0x0006A284
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnrelayidValue = base.Columns["relayidValue"];
                this.columnsubId = base.Columns["subId"];
                this.columnsub_Name = base.Columns["sub_Name"];
                this.columntypeSub = base.Columns["typeSub"];
                this.columnbusID = base.Columns["busID"];
                this.columnbus_name = base.Columns["bus_name"];
                this.columncell_Name = base.Columns["cell_Name"];
                this.columncellID = base.Columns["cellID"];
                this.columnrelName = base.Columns["relName"];
                this.columnamp_primary = base.Columns["amp_primary"];
                this.columnamp_secondary = base.Columns["amp_secondary"];
                this.columnidTypeTr = base.Columns["idTypeTr"];
                this.columnTypetr = base.Columns["Typetr"];
                this.columnamp_mtz = base.Columns["amp_mtz"];
                this.columntime_mtz = base.Columns["time_mtz"];
                this.columnamp_to = base.Columns["amp_to"];
                this.columntime_to = base.Columns["time_to"];
                this.columnamp_ozz = base.Columns["amp_ozz"];
                this.columntime_ozz = base.Columns["time_ozz"];
                this.columnact_ozz = base.Columns["act_ozz"];
                this.columnspeed_mtz = base.Columns["speed_mtz"];
                this.columnamp_urov = base.Columns["amp_urov"];
                this.columntime_urov = base.Columns["time_urov"];
                this.columnavr = base.Columns["avr"];
                this.columnlzsh = base.Columns["lzsh"];
                this.columntype_relay = base.Columns["type_relay"];
                this.columntype_proc = base.Columns["type_proc"];
                this.columncp = base.Columns["cp"];
                this.columncp_cell = base.Columns["cp_cell"];
                this.columncomment = base.Columns["comment"];
                this.columndateCreate = base.Columns["dateCreate"];
                this.columndateIn = base.Columns["dateIn"];
                this.columndeleted = base.Columns["deleted"];
                this.columncoefTR = base.Columns["coefTR"];
                this.columndeletedObj = base.Columns["deletedObj"];
            }

            // Token: 0x06000CEA RID: 3306 RVA: 0x0006C3AC File Offset: 0x0006A5AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnrelayidValue = new DataColumn("relayidValue", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnrelayidValue);
                this.columnsubId = new DataColumn("subId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnsubId);
                this.columnsub_Name = new DataColumn("sub_Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnsub_Name);
                this.columntypeSub = new DataColumn("typeSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntypeSub);
                this.columnbusID = new DataColumn("busID", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnbusID);
                this.columnbus_name = new DataColumn("bus_name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnbus_name);
                this.columncell_Name = new DataColumn("cell_Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncell_Name);
                this.columncellID = new DataColumn("cellID", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columncellID);
                this.columnrelName = new DataColumn("relName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnrelName);
                this.columnamp_primary = new DataColumn("amp_primary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_primary);
                this.columnamp_secondary = new DataColumn("amp_secondary", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_secondary);
                this.columnidTypeTr = new DataColumn("idTypeTr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTypeTr);
                this.columnTypetr = new DataColumn("Typetr", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTypetr);
                this.columnamp_mtz = new DataColumn("amp_mtz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_mtz);
                this.columntime_mtz = new DataColumn("time_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_mtz);
                this.columnamp_to = new DataColumn("amp_to", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_to);
                this.columntime_to = new DataColumn("time_to", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_to);
                this.columnamp_ozz = new DataColumn("amp_ozz", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_ozz);
                this.columntime_ozz = new DataColumn("time_ozz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_ozz);
                this.columnact_ozz = new DataColumn("act_ozz", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnact_ozz);
                this.columnspeed_mtz = new DataColumn("speed_mtz", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnspeed_mtz);
                this.columnamp_urov = new DataColumn("amp_urov", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnamp_urov);
                this.columntime_urov = new DataColumn("time_urov", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columntime_urov);
                this.columnavr = new DataColumn("avr", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnavr);
                this.columnlzsh = new DataColumn("lzsh", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnlzsh);
                this.columntype_relay = new DataColumn("type_relay", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_relay);
                this.columntype_proc = new DataColumn("type_proc", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columntype_proc);
                this.columncp = new DataColumn("cp", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp);
                this.columncp_cell = new DataColumn("cp_cell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncp_cell);
                this.columncomment = new DataColumn("comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncomment);
                this.columndateCreate = new DataColumn("dateCreate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCreate);
                this.columndateIn = new DataColumn("dateIn", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateIn);
                this.columndeleted = new DataColumn("deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeleted);
                this.columncoefTR = new DataColumn("coefTR", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columncoefTR);
                this.columndeletedObj = new DataColumn("deletedObj", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columndeletedObj);
                this.columnsub_Name.ReadOnly = true;
                this.columnsub_Name.MaxLength = 1000;
                this.columnbus_name.MaxLength = 512;
                this.columncell_Name.MaxLength = 512;
                this.columnrelName.MaxLength = 100;
                this.columnTypetr.MaxLength = 100;
                this.columnact_ozz.MaxLength = 50;
                this.columntype_relay.MaxLength = 50;
                this.columntype_proc.MaxLength = 50;
                this.columncp.MaxLength = 100;
                this.columncp_cell.MaxLength = 25;
                this.columncomment.MaxLength = 256;
                this.columncoefTR.ReadOnly = true;
            }

            // Token: 0x06000CEB RID: 3307 RVA: 0x0006CAC0 File Offset: 0x0006ACC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RelayProtectionAutomationRow NewvJ_RelayProtectionAutomationRow()
            {
                return (DataSetGES.vJ_RelayProtectionAutomationRow)base.NewRow();
            }

            // Token: 0x06000CEC RID: 3308 RVA: 0x0006CACD File Offset: 0x0006ACCD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_RelayProtectionAutomationRow(builder);
            }

            // Token: 0x06000CED RID: 3309 RVA: 0x0006CAD5 File Offset: 0x0006ACD5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_RelayProtectionAutomationRow);
            }

            // Token: 0x06000CEE RID: 3310 RVA: 0x0006CAE1 File Offset: 0x0006ACE1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitExpressions()
            {
                this.coefTRColumn.Expression = "amp_primary + '/' + amp_secondary";
            }

            // Token: 0x06000CEF RID: 3311 RVA: 0x0006CAF3 File Offset: 0x0006ACF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_RelayProtectionAutomationRowChanged != null)
                {
                    this.vJ_RelayProtectionAutomationRowChanged(this, new DataSetGES.vJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.vJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CF0 RID: 3312 RVA: 0x0006CB26 File Offset: 0x0006AD26
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_RelayProtectionAutomationRowChanging != null)
                {
                    this.vJ_RelayProtectionAutomationRowChanging(this, new DataSetGES.vJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.vJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CF1 RID: 3313 RVA: 0x0006CB59 File Offset: 0x0006AD59
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_RelayProtectionAutomationRowDeleted != null)
                {
                    this.vJ_RelayProtectionAutomationRowDeleted(this, new DataSetGES.vJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.vJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CF2 RID: 3314 RVA: 0x0006CB8C File Offset: 0x0006AD8C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_RelayProtectionAutomationRowDeleting != null)
                {
                    this.vJ_RelayProtectionAutomationRowDeleting(this, new DataSetGES.vJ_RelayProtectionAutomationRowChangeEvent((DataSetGES.vJ_RelayProtectionAutomationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000CF3 RID: 3315 RVA: 0x0006CBBF File Offset: 0x0006ADBF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_RelayProtectionAutomationRow(DataSetGES.vJ_RelayProtectionAutomationRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000CF4 RID: 3316 RVA: 0x0006CBD0 File Offset: 0x0006ADD0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_RelayProtectionAutomationDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040007D5 RID: 2005
            private DataColumn columnid;

            // Token: 0x040007D6 RID: 2006
            private DataColumn columnrelayidValue;

            // Token: 0x040007D7 RID: 2007
            private DataColumn columnsubId;

            // Token: 0x040007D8 RID: 2008
            private DataColumn columnsub_Name;

            // Token: 0x040007D9 RID: 2009
            private DataColumn columntypeSub;

            // Token: 0x040007DA RID: 2010
            private DataColumn columnbusID;

            // Token: 0x040007DB RID: 2011
            private DataColumn columnbus_name;

            // Token: 0x040007DC RID: 2012
            private DataColumn columncell_Name;

            // Token: 0x040007DD RID: 2013
            private DataColumn columncellID;

            // Token: 0x040007DE RID: 2014
            private DataColumn columnrelName;

            // Token: 0x040007DF RID: 2015
            private DataColumn columnamp_primary;

            // Token: 0x040007E0 RID: 2016
            private DataColumn columnamp_secondary;

            // Token: 0x040007E1 RID: 2017
            private DataColumn columnidTypeTr;

            // Token: 0x040007E2 RID: 2018
            private DataColumn columnTypetr;

            // Token: 0x040007E3 RID: 2019
            private DataColumn columnamp_mtz;

            // Token: 0x040007E4 RID: 2020
            private DataColumn columntime_mtz;

            // Token: 0x040007E5 RID: 2021
            private DataColumn columnamp_to;

            // Token: 0x040007E6 RID: 2022
            private DataColumn columntime_to;

            // Token: 0x040007E7 RID: 2023
            private DataColumn columnamp_ozz;

            // Token: 0x040007E8 RID: 2024
            private DataColumn columntime_ozz;

            // Token: 0x040007E9 RID: 2025
            private DataColumn columnact_ozz;

            // Token: 0x040007EA RID: 2026
            private DataColumn columnspeed_mtz;

            // Token: 0x040007EB RID: 2027
            private DataColumn columnamp_urov;

            // Token: 0x040007EC RID: 2028
            private DataColumn columntime_urov;

            // Token: 0x040007ED RID: 2029
            private DataColumn columnavr;

            // Token: 0x040007EE RID: 2030
            private DataColumn columnlzsh;

            // Token: 0x040007EF RID: 2031
            private DataColumn columntype_relay;

            // Token: 0x040007F0 RID: 2032
            private DataColumn columntype_proc;

            // Token: 0x040007F1 RID: 2033
            private DataColumn columncp;

            // Token: 0x040007F2 RID: 2034
            private DataColumn columncp_cell;

            // Token: 0x040007F3 RID: 2035
            private DataColumn columncomment;

            // Token: 0x040007F4 RID: 2036
            private DataColumn columndateCreate;

            // Token: 0x040007F5 RID: 2037
            private DataColumn columndateIn;

            // Token: 0x040007F6 RID: 2038
            private DataColumn columndeleted;

            // Token: 0x040007F7 RID: 2039
            private DataColumn columncoefTR;

            // Token: 0x040007F8 RID: 2040
            private DataColumn columndeletedObj;
        }

        // Token: 0x020000DA RID: 218
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_UpdateProgramDataTable : TypedTableBase<DataSetGES.tJ_UpdateProgramRow>
        {
            // Token: 0x06000CF5 RID: 3317 RVA: 0x0006CDC8 File Offset: 0x0006AFC8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_UpdateProgramDataTable()
            {
                base.TableName = "tJ_UpdateProgram";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000CF6 RID: 3318 RVA: 0x0006CDF0 File Offset: 0x0006AFF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_UpdateProgramDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000CF7 RID: 3319 RVA: 0x0006CE98 File Offset: 0x0006B098
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_UpdateProgramDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170002F9 RID: 761
            // (get) Token: 0x06000CF8 RID: 3320 RVA: 0x0006CEA8 File Offset: 0x0006B0A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170002FA RID: 762
            // (get) Token: 0x06000CF9 RID: 3321 RVA: 0x0006CEB0 File Offset: 0x0006B0B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateUpdateColumn
            {
                get
                {
                    return this.columnDateUpdate;
                }
            }

            // Token: 0x170002FB RID: 763
            // (get) Token: 0x06000CFA RID: 3322 RVA: 0x0006CEB8 File Offset: 0x0006B0B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            // Token: 0x170002FC RID: 764
            // (get) Token: 0x06000CFB RID: 3323 RVA: 0x0006CEC0 File Offset: 0x0006B0C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TextUpdateColumn
            {
                get
                {
                    return this.columnTextUpdate;
                }
            }

            // Token: 0x170002FD RID: 765
            // (get) Token: 0x06000CFC RID: 3324 RVA: 0x0006CEC8 File Offset: 0x0006B0C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DescriptionColumn
            {
                get
                {
                    return this.columnDescription;
                }
            }

            // Token: 0x170002FE RID: 766
            // (get) Token: 0x06000CFD RID: 3325 RVA: 0x0006CED0 File Offset: 0x0006B0D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170002FF RID: 767
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_UpdateProgramRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_UpdateProgramRow)base.Rows[index];
                }
            }

            // Token: 0x14000081 RID: 129
            // (add) Token: 0x06000CFF RID: 3327 RVA: 0x0006CEF0 File Offset: 0x0006B0F0
            // (remove) Token: 0x06000D00 RID: 3328 RVA: 0x0006CF28 File Offset: 0x0006B128
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramRowChangeEventHandler tJ_UpdateProgramRowChanging;

            // Token: 0x14000082 RID: 130
            // (add) Token: 0x06000D01 RID: 3329 RVA: 0x0006CF60 File Offset: 0x0006B160
            // (remove) Token: 0x06000D02 RID: 3330 RVA: 0x0006CF98 File Offset: 0x0006B198
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramRowChangeEventHandler tJ_UpdateProgramRowChanged;

            // Token: 0x14000083 RID: 131
            // (add) Token: 0x06000D03 RID: 3331 RVA: 0x0006CFD0 File Offset: 0x0006B1D0
            // (remove) Token: 0x06000D04 RID: 3332 RVA: 0x0006D008 File Offset: 0x0006B208
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramRowChangeEventHandler tJ_UpdateProgramRowDeleting;

            // Token: 0x14000084 RID: 132
            // (add) Token: 0x06000D05 RID: 3333 RVA: 0x0006D040 File Offset: 0x0006B240
            // (remove) Token: 0x06000D06 RID: 3334 RVA: 0x0006D078 File Offset: 0x0006B278
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramRowChangeEventHandler tJ_UpdateProgramRowDeleted;

            // Token: 0x06000D07 RID: 3335 RVA: 0x0006D0AD File Offset: 0x0006B2AD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_UpdateProgramRow(DataSetGES.tJ_UpdateProgramRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000D08 RID: 3336 RVA: 0x0006D0BC File Offset: 0x0006B2BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramRow AddtJ_UpdateProgramRow(DateTime DateUpdate, int Modul, string TextUpdate, string Description)
            {
                DataSetGES.tJ_UpdateProgramRow tJ_UpdateProgramRow = (DataSetGES.tJ_UpdateProgramRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    DateUpdate,
                    Modul,
                    TextUpdate,
                    Description
                };
                tJ_UpdateProgramRow.ItemArray = itemArray;
                base.Rows.Add(tJ_UpdateProgramRow);
                return tJ_UpdateProgramRow;
            }

            // Token: 0x06000D09 RID: 3337 RVA: 0x0006D110 File Offset: 0x0006B310
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramRow FindByid(int id)
            {
                return (DataSetGES.tJ_UpdateProgramRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000D0A RID: 3338 RVA: 0x0006D140 File Offset: 0x0006B340
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_UpdateProgramDataTable tJ_UpdateProgramDataTable = (DataSetGES.tJ_UpdateProgramDataTable)base.Clone();
                tJ_UpdateProgramDataTable.InitVars();
                return tJ_UpdateProgramDataTable;
            }

            // Token: 0x06000D0B RID: 3339 RVA: 0x0006D160 File Offset: 0x0006B360
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_UpdateProgramDataTable();
            }

            // Token: 0x06000D0C RID: 3340 RVA: 0x0006D168 File Offset: 0x0006B368
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnDateUpdate = base.Columns["DateUpdate"];
                this.columnModul = base.Columns["Modul"];
                this.columnTextUpdate = base.Columns["TextUpdate"];
                this.columnDescription = base.Columns["Description"];
            }

            // Token: 0x06000D0D RID: 3341 RVA: 0x0006D1E4 File Offset: 0x0006B3E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnDateUpdate = new DataColumn("DateUpdate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateUpdate);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnTextUpdate = new DataColumn("TextUpdate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextUpdate);
                this.columnDescription = new DataColumn("Description", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescription);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnDateUpdate.AllowDBNull = false;
                this.columnTextUpdate.MaxLength = 5000;
                this.columnDescription.MaxLength = 512;
            }

            // Token: 0x06000D0E RID: 3342 RVA: 0x0006D36F File Offset: 0x0006B56F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramRow NewtJ_UpdateProgramRow()
            {
                return (DataSetGES.tJ_UpdateProgramRow)base.NewRow();
            }

            // Token: 0x06000D0F RID: 3343 RVA: 0x0006D37C File Offset: 0x0006B57C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_UpdateProgramRow(builder);
            }

            // Token: 0x06000D10 RID: 3344 RVA: 0x0006D384 File Offset: 0x0006B584
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_UpdateProgramRow);
            }

            // Token: 0x06000D11 RID: 3345 RVA: 0x0006D390 File Offset: 0x0006B590
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_UpdateProgramRowChanged != null)
                {
                    this.tJ_UpdateProgramRowChanged(this, new DataSetGES.tJ_UpdateProgramRowChangeEvent((DataSetGES.tJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D12 RID: 3346 RVA: 0x0006D3C3 File Offset: 0x0006B5C3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_UpdateProgramRowChanging != null)
                {
                    this.tJ_UpdateProgramRowChanging(this, new DataSetGES.tJ_UpdateProgramRowChangeEvent((DataSetGES.tJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D13 RID: 3347 RVA: 0x0006D3F6 File Offset: 0x0006B5F6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_UpdateProgramRowDeleted != null)
                {
                    this.tJ_UpdateProgramRowDeleted(this, new DataSetGES.tJ_UpdateProgramRowChangeEvent((DataSetGES.tJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D14 RID: 3348 RVA: 0x0006D429 File Offset: 0x0006B629
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_UpdateProgramRowDeleting != null)
                {
                    this.tJ_UpdateProgramRowDeleting(this, new DataSetGES.tJ_UpdateProgramRowChangeEvent((DataSetGES.tJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D15 RID: 3349 RVA: 0x0006D45C File Offset: 0x0006B65C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_UpdateProgramRow(DataSetGES.tJ_UpdateProgramRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000D16 RID: 3350 RVA: 0x0006D46C File Offset: 0x0006B66C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_UpdateProgramDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040007FD RID: 2045
            private DataColumn columnid;

            // Token: 0x040007FE RID: 2046
            private DataColumn columnDateUpdate;

            // Token: 0x040007FF RID: 2047
            private DataColumn columnModul;

            // Token: 0x04000800 RID: 2048
            private DataColumn columnTextUpdate;

            // Token: 0x04000801 RID: 2049
            private DataColumn columnDescription;
        }

        // Token: 0x020000DB RID: 219
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_UpdateProgramDocDataTable : TypedTableBase<DataSetGES.tJ_UpdateProgramDocRow>
        {
            // Token: 0x06000D17 RID: 3351 RVA: 0x0006D664 File Offset: 0x0006B864
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_UpdateProgramDocDataTable()
            {
                base.TableName = "tJ_UpdateProgramDoc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000D18 RID: 3352 RVA: 0x0006D68C File Offset: 0x0006B88C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_UpdateProgramDocDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000D19 RID: 3353 RVA: 0x0006D734 File Offset: 0x0006B934
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_UpdateProgramDocDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000300 RID: 768
            // (get) Token: 0x06000D1A RID: 3354 RVA: 0x0006D744 File Offset: 0x0006B944
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000301 RID: 769
            // (get) Token: 0x06000D1B RID: 3355 RVA: 0x0006D74C File Offset: 0x0006B94C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idUpdateColumn
            {
                get
                {
                    return this.columnidUpdate;
                }
            }

            // Token: 0x17000302 RID: 770
            // (get) Token: 0x06000D1C RID: 3356 RVA: 0x0006D754 File Offset: 0x0006B954
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DocumentColumn
            {
                get
                {
                    return this.columnDocument;
                }
            }

            // Token: 0x17000303 RID: 771
            // (get) Token: 0x06000D1D RID: 3357 RVA: 0x0006D75C File Offset: 0x0006B95C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            // Token: 0x17000304 RID: 772
            // (get) Token: 0x06000D1E RID: 3358 RVA: 0x0006D764 File Offset: 0x0006B964
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000305 RID: 773
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramDocRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_UpdateProgramDocRow)base.Rows[index];
                }
            }

            // Token: 0x14000085 RID: 133
            // (add) Token: 0x06000D20 RID: 3360 RVA: 0x0006D784 File Offset: 0x0006B984
            // (remove) Token: 0x06000D21 RID: 3361 RVA: 0x0006D7BC File Offset: 0x0006B9BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramDocRowChangeEventHandler tJ_UpdateProgramDocRowChanging;

            // Token: 0x14000086 RID: 134
            // (add) Token: 0x06000D22 RID: 3362 RVA: 0x0006D7F4 File Offset: 0x0006B9F4
            // (remove) Token: 0x06000D23 RID: 3363 RVA: 0x0006D82C File Offset: 0x0006BA2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramDocRowChangeEventHandler tJ_UpdateProgramDocRowChanged;

            // Token: 0x14000087 RID: 135
            // (add) Token: 0x06000D24 RID: 3364 RVA: 0x0006D864 File Offset: 0x0006BA64
            // (remove) Token: 0x06000D25 RID: 3365 RVA: 0x0006D89C File Offset: 0x0006BA9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramDocRowChangeEventHandler tJ_UpdateProgramDocRowDeleting;

            // Token: 0x14000088 RID: 136
            // (add) Token: 0x06000D26 RID: 3366 RVA: 0x0006D8D4 File Offset: 0x0006BAD4
            // (remove) Token: 0x06000D27 RID: 3367 RVA: 0x0006D90C File Offset: 0x0006BB0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramDocRowChangeEventHandler tJ_UpdateProgramDocRowDeleted;

            // Token: 0x06000D28 RID: 3368 RVA: 0x0006D941 File Offset: 0x0006BB41
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_UpdateProgramDocRow(DataSetGES.tJ_UpdateProgramDocRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000D29 RID: 3369 RVA: 0x0006D950 File Offset: 0x0006BB50
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_UpdateProgramDocRow AddtJ_UpdateProgramDocRow(int idUpdate, byte[] Document, string FileName)
            {
                DataSetGES.tJ_UpdateProgramDocRow tJ_UpdateProgramDocRow = (DataSetGES.tJ_UpdateProgramDocRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idUpdate,
                    Document,
                    FileName
                };
                tJ_UpdateProgramDocRow.ItemArray = itemArray;
                base.Rows.Add(tJ_UpdateProgramDocRow);
                return tJ_UpdateProgramDocRow;
            }

            // Token: 0x06000D2A RID: 3370 RVA: 0x0006D998 File Offset: 0x0006BB98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_UpdateProgramDocRow FindByid(int id)
            {
                return (DataSetGES.tJ_UpdateProgramDocRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000D2B RID: 3371 RVA: 0x0006D9C8 File Offset: 0x0006BBC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_UpdateProgramDocDataTable tJ_UpdateProgramDocDataTable = (DataSetGES.tJ_UpdateProgramDocDataTable)base.Clone();
                tJ_UpdateProgramDocDataTable.InitVars();
                return tJ_UpdateProgramDocDataTable;
            }

            // Token: 0x06000D2C RID: 3372 RVA: 0x0006D9E8 File Offset: 0x0006BBE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_UpdateProgramDocDataTable();
            }

            // Token: 0x06000D2D RID: 3373 RVA: 0x0006D9F0 File Offset: 0x0006BBF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidUpdate = base.Columns["idUpdate"];
                this.columnDocument = base.Columns["Document"];
                this.columnFileName = base.Columns["FileName"];
            }

            // Token: 0x06000D2E RID: 3374 RVA: 0x0006DA58 File Offset: 0x0006BC58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidUpdate = new DataColumn("idUpdate", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidUpdate);
                this.columnDocument = new DataColumn("Document", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnDocument);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidUpdate.AllowDBNull = false;
                this.columnDocument.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 1024;
            }

            // Token: 0x06000D2F RID: 3375 RVA: 0x0006DBBE File Offset: 0x0006BDBE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramDocRow NewtJ_UpdateProgramDocRow()
            {
                return (DataSetGES.tJ_UpdateProgramDocRow)base.NewRow();
            }

            // Token: 0x06000D30 RID: 3376 RVA: 0x0006DBCB File Offset: 0x0006BDCB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_UpdateProgramDocRow(builder);
            }

            // Token: 0x06000D31 RID: 3377 RVA: 0x0006DBD3 File Offset: 0x0006BDD3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_UpdateProgramDocRow);
            }

            // Token: 0x06000D32 RID: 3378 RVA: 0x0006DBDF File Offset: 0x0006BDDF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_UpdateProgramDocRowChanged != null)
                {
                    this.tJ_UpdateProgramDocRowChanged(this, new DataSetGES.tJ_UpdateProgramDocRowChangeEvent((DataSetGES.tJ_UpdateProgramDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D33 RID: 3379 RVA: 0x0006DC12 File Offset: 0x0006BE12
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_UpdateProgramDocRowChanging != null)
                {
                    this.tJ_UpdateProgramDocRowChanging(this, new DataSetGES.tJ_UpdateProgramDocRowChangeEvent((DataSetGES.tJ_UpdateProgramDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D34 RID: 3380 RVA: 0x0006DC45 File Offset: 0x0006BE45
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_UpdateProgramDocRowDeleted != null)
                {
                    this.tJ_UpdateProgramDocRowDeleted(this, new DataSetGES.tJ_UpdateProgramDocRowChangeEvent((DataSetGES.tJ_UpdateProgramDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D35 RID: 3381 RVA: 0x0006DC78 File Offset: 0x0006BE78
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_UpdateProgramDocRowDeleting != null)
                {
                    this.tJ_UpdateProgramDocRowDeleting(this, new DataSetGES.tJ_UpdateProgramDocRowChangeEvent((DataSetGES.tJ_UpdateProgramDocRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D36 RID: 3382 RVA: 0x0006DCAB File Offset: 0x0006BEAB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_UpdateProgramDocRow(DataSetGES.tJ_UpdateProgramDocRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000D37 RID: 3383 RVA: 0x0006DCBC File Offset: 0x0006BEBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_UpdateProgramDocDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000806 RID: 2054
            private DataColumn columnid;

            // Token: 0x04000807 RID: 2055
            private DataColumn columnidUpdate;

            // Token: 0x04000808 RID: 2056
            private DataColumn columnDocument;

            // Token: 0x04000809 RID: 2057
            private DataColumn columnFileName;
        }

        // Token: 0x020000DC RID: 220
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_UpdateProgramDataTable : TypedTableBase<DataSetGES.vJ_UpdateProgramRow>
        {
            // Token: 0x06000D38 RID: 3384 RVA: 0x0006DEB4 File Offset: 0x0006C0B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_UpdateProgramDataTable()
            {
                base.TableName = "vJ_UpdateProgram";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000D39 RID: 3385 RVA: 0x0006DEDC File Offset: 0x0006C0DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_UpdateProgramDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000D3A RID: 3386 RVA: 0x0006DF84 File Offset: 0x0006C184
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_UpdateProgramDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000306 RID: 774
            // (get) Token: 0x06000D3B RID: 3387 RVA: 0x0006DF94 File Offset: 0x0006C194
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000307 RID: 775
            // (get) Token: 0x06000D3C RID: 3388 RVA: 0x0006DF9C File Offset: 0x0006C19C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateUpdateColumn
            {
                get
                {
                    return this.columnDateUpdate;
                }
            }

            // Token: 0x17000308 RID: 776
            // (get) Token: 0x06000D3D RID: 3389 RVA: 0x0006DFA4 File Offset: 0x0006C1A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ModulColumn
            {
                get
                {
                    return this.columnModul;
                }
            }

            // Token: 0x17000309 RID: 777
            // (get) Token: 0x06000D3E RID: 3390 RVA: 0x0006DFAC File Offset: 0x0006C1AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn modulnameColumn
            {
                get
                {
                    return this.columnmodulname;
                }
            }

            // Token: 0x1700030A RID: 778
            // (get) Token: 0x06000D3F RID: 3391 RVA: 0x0006DFB4 File Offset: 0x0006C1B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DescriptionColumn
            {
                get
                {
                    return this.columnDescription;
                }
            }

            // Token: 0x1700030B RID: 779
            // (get) Token: 0x06000D40 RID: 3392 RVA: 0x0006DFBC File Offset: 0x0006C1BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TextUpdateColumn
            {
                get
                {
                    return this.columnTextUpdate;
                }
            }

            // Token: 0x1700030C RID: 780
            // (get) Token: 0x06000D41 RID: 3393 RVA: 0x0006DFC4 File Offset: 0x0006C1C4
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700030D RID: 781
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_UpdateProgramRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_UpdateProgramRow)base.Rows[index];
                }
            }

            // Token: 0x14000089 RID: 137
            // (add) Token: 0x06000D43 RID: 3395 RVA: 0x0006DFE4 File Offset: 0x0006C1E4
            // (remove) Token: 0x06000D44 RID: 3396 RVA: 0x0006E01C File Offset: 0x0006C21C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_UpdateProgramRowChangeEventHandler vJ_UpdateProgramRowChanging;

            // Token: 0x1400008A RID: 138
            // (add) Token: 0x06000D45 RID: 3397 RVA: 0x0006E054 File Offset: 0x0006C254
            // (remove) Token: 0x06000D46 RID: 3398 RVA: 0x0006E08C File Offset: 0x0006C28C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_UpdateProgramRowChangeEventHandler vJ_UpdateProgramRowChanged;

            // Token: 0x1400008B RID: 139
            // (add) Token: 0x06000D47 RID: 3399 RVA: 0x0006E0C4 File Offset: 0x0006C2C4
            // (remove) Token: 0x06000D48 RID: 3400 RVA: 0x0006E0FC File Offset: 0x0006C2FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_UpdateProgramRowChangeEventHandler vJ_UpdateProgramRowDeleting;

            // Token: 0x1400008C RID: 140
            // (add) Token: 0x06000D49 RID: 3401 RVA: 0x0006E134 File Offset: 0x0006C334
            // (remove) Token: 0x06000D4A RID: 3402 RVA: 0x0006E16C File Offset: 0x0006C36C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_UpdateProgramRowChangeEventHandler vJ_UpdateProgramRowDeleted;

            // Token: 0x06000D4B RID: 3403 RVA: 0x0006E1A1 File Offset: 0x0006C3A1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_UpdateProgramRow(DataSetGES.vJ_UpdateProgramRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000D4C RID: 3404 RVA: 0x0006E1B0 File Offset: 0x0006C3B0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_UpdateProgramRow AddvJ_UpdateProgramRow(int id, DateTime DateUpdate, int Modul, string modulname, string Description, string TextUpdate)
            {
                DataSetGES.vJ_UpdateProgramRow vJ_UpdateProgramRow = (DataSetGES.vJ_UpdateProgramRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    DateUpdate,
                    Modul,
                    modulname,
                    Description,
                    TextUpdate
                };
                vJ_UpdateProgramRow.ItemArray = itemArray;
                base.Rows.Add(vJ_UpdateProgramRow);
                return vJ_UpdateProgramRow;
            }

            // Token: 0x06000D4D RID: 3405 RVA: 0x0006E210 File Offset: 0x0006C410
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_UpdateProgramRow FindByid(int id)
            {
                return (DataSetGES.vJ_UpdateProgramRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000D4E RID: 3406 RVA: 0x0006E240 File Offset: 0x0006C440
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_UpdateProgramDataTable vJ_UpdateProgramDataTable = (DataSetGES.vJ_UpdateProgramDataTable)base.Clone();
                vJ_UpdateProgramDataTable.InitVars();
                return vJ_UpdateProgramDataTable;
            }

            // Token: 0x06000D4F RID: 3407 RVA: 0x0006E260 File Offset: 0x0006C460
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_UpdateProgramDataTable();
            }

            // Token: 0x06000D50 RID: 3408 RVA: 0x0006E268 File Offset: 0x0006C468
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnDateUpdate = base.Columns["DateUpdate"];
                this.columnModul = base.Columns["Modul"];
                this.columnmodulname = base.Columns["modulname"];
                this.columnDescription = base.Columns["Description"];
                this.columnTextUpdate = base.Columns["TextUpdate"];
            }

            // Token: 0x06000D51 RID: 3409 RVA: 0x0006E2FC File Offset: 0x0006C4FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnDateUpdate = new DataColumn("DateUpdate", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateUpdate);
                this.columnModul = new DataColumn("Modul", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnModul);
                this.columnmodulname = new DataColumn("modulname", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnmodulname);
                this.columnDescription = new DataColumn("Description", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnTextUpdate = new DataColumn("TextUpdate", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTextUpdate);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnDateUpdate.AllowDBNull = false;
                this.columnmodulname.AllowDBNull = false;
                this.columnmodulname.MaxLength = 100;
                this.columnDescription.MaxLength = 512;
                this.columnTextUpdate.MaxLength = 5000;
            }

            // Token: 0x06000D52 RID: 3410 RVA: 0x0006E49B File Offset: 0x0006C69B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_UpdateProgramRow NewvJ_UpdateProgramRow()
            {
                return (DataSetGES.vJ_UpdateProgramRow)base.NewRow();
            }

            // Token: 0x06000D53 RID: 3411 RVA: 0x0006E4A8 File Offset: 0x0006C6A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_UpdateProgramRow(builder);
            }

            // Token: 0x06000D54 RID: 3412 RVA: 0x0006E4B0 File Offset: 0x0006C6B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_UpdateProgramRow);
            }

            // Token: 0x06000D55 RID: 3413 RVA: 0x0006E4BC File Offset: 0x0006C6BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_UpdateProgramRowChanged != null)
                {
                    this.vJ_UpdateProgramRowChanged(this, new DataSetGES.vJ_UpdateProgramRowChangeEvent((DataSetGES.vJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D56 RID: 3414 RVA: 0x0006E4EF File Offset: 0x0006C6EF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_UpdateProgramRowChanging != null)
                {
                    this.vJ_UpdateProgramRowChanging(this, new DataSetGES.vJ_UpdateProgramRowChangeEvent((DataSetGES.vJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D57 RID: 3415 RVA: 0x0006E522 File Offset: 0x0006C722
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_UpdateProgramRowDeleted != null)
                {
                    this.vJ_UpdateProgramRowDeleted(this, new DataSetGES.vJ_UpdateProgramRowChangeEvent((DataSetGES.vJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D58 RID: 3416 RVA: 0x0006E555 File Offset: 0x0006C755
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_UpdateProgramRowDeleting != null)
                {
                    this.vJ_UpdateProgramRowDeleting(this, new DataSetGES.vJ_UpdateProgramRowChangeEvent((DataSetGES.vJ_UpdateProgramRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D59 RID: 3417 RVA: 0x0006E588 File Offset: 0x0006C788
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_UpdateProgramRow(DataSetGES.vJ_UpdateProgramRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000D5A RID: 3418 RVA: 0x0006E598 File Offset: 0x0006C798
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_UpdateProgramDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400080E RID: 2062
            private DataColumn columnid;

            // Token: 0x0400080F RID: 2063
            private DataColumn columnDateUpdate;

            // Token: 0x04000810 RID: 2064
            private DataColumn columnModul;

            // Token: 0x04000811 RID: 2065
            private DataColumn columnmodulname;

            // Token: 0x04000812 RID: 2066
            private DataColumn columnDescription;

            // Token: 0x04000813 RID: 2067
            private DataColumn columnTextUpdate;
        }

        // Token: 0x020000DD RID: 221
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_UpdateProgramUserCheckDataTable : TypedTableBase<DataSetGES.tJ_UpdateProgramUserCheckRow>
        {
            // Token: 0x06000D5B RID: 3419 RVA: 0x0006E790 File Offset: 0x0006C990
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_UpdateProgramUserCheckDataTable()
            {
                base.TableName = "tJ_UpdateProgramUserCheck";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000D5C RID: 3420 RVA: 0x0006E7B8 File Offset: 0x0006C9B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_UpdateProgramUserCheckDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000D5D RID: 3421 RVA: 0x0006E860 File Offset: 0x0006CA60
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_UpdateProgramUserCheckDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700030E RID: 782
            // (get) Token: 0x06000D5E RID: 3422 RVA: 0x0006E870 File Offset: 0x0006CA70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn loginColumn
            {
                get
                {
                    return this.columnlogin;
                }
            }

            // Token: 0x1700030F RID: 783
            // (get) Token: 0x06000D5F RID: 3423 RVA: 0x0006E878 File Offset: 0x0006CA78
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn dateCheckColumn
            {
                get
                {
                    return this.columndateCheck;
                }
            }

            // Token: 0x17000310 RID: 784
            // (get) Token: 0x06000D60 RID: 3424 RVA: 0x0006E880 File Offset: 0x0006CA80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000311 RID: 785
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_UpdateProgramUserCheckRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_UpdateProgramUserCheckRow)base.Rows[index];
                }
            }

            // Token: 0x1400008D RID: 141
            // (add) Token: 0x06000D62 RID: 3426 RVA: 0x0006E8A0 File Offset: 0x0006CAA0
            // (remove) Token: 0x06000D63 RID: 3427 RVA: 0x0006E8D8 File Offset: 0x0006CAD8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramUserCheckRowChangeEventHandler tJ_UpdateProgramUserCheckRowChanging;

            // Token: 0x1400008E RID: 142
            // (add) Token: 0x06000D64 RID: 3428 RVA: 0x0006E910 File Offset: 0x0006CB10
            // (remove) Token: 0x06000D65 RID: 3429 RVA: 0x0006E948 File Offset: 0x0006CB48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramUserCheckRowChangeEventHandler tJ_UpdateProgramUserCheckRowChanged;

            // Token: 0x1400008F RID: 143
            // (add) Token: 0x06000D66 RID: 3430 RVA: 0x0006E980 File Offset: 0x0006CB80
            // (remove) Token: 0x06000D67 RID: 3431 RVA: 0x0006E9B8 File Offset: 0x0006CBB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramUserCheckRowChangeEventHandler tJ_UpdateProgramUserCheckRowDeleting;

            // Token: 0x14000090 RID: 144
            // (add) Token: 0x06000D68 RID: 3432 RVA: 0x0006E9F0 File Offset: 0x0006CBF0
            // (remove) Token: 0x06000D69 RID: 3433 RVA: 0x0006EA28 File Offset: 0x0006CC28
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_UpdateProgramUserCheckRowChangeEventHandler tJ_UpdateProgramUserCheckRowDeleted;

            // Token: 0x06000D6A RID: 3434 RVA: 0x0006EA5D File Offset: 0x0006CC5D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_UpdateProgramUserCheckRow(DataSetGES.tJ_UpdateProgramUserCheckRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000D6B RID: 3435 RVA: 0x0006EA6C File Offset: 0x0006CC6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramUserCheckRow AddtJ_UpdateProgramUserCheckRow(string login, DateTime dateCheck)
            {
                DataSetGES.tJ_UpdateProgramUserCheckRow tJ_UpdateProgramUserCheckRow = (DataSetGES.tJ_UpdateProgramUserCheckRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    login,
                    dateCheck
                };
                tJ_UpdateProgramUserCheckRow.ItemArray = itemArray;
                base.Rows.Add(tJ_UpdateProgramUserCheckRow);
                return tJ_UpdateProgramUserCheckRow;
            }

            // Token: 0x06000D6C RID: 3436 RVA: 0x0006EAB0 File Offset: 0x0006CCB0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_UpdateProgramUserCheckRow FindBylogin(string login)
            {
                return (DataSetGES.tJ_UpdateProgramUserCheckRow)base.Rows.Find(new object[]
                {
                    login
                });
            }

            // Token: 0x06000D6D RID: 3437 RVA: 0x0006EADC File Offset: 0x0006CCDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_UpdateProgramUserCheckDataTable tJ_UpdateProgramUserCheckDataTable = (DataSetGES.tJ_UpdateProgramUserCheckDataTable)base.Clone();
                tJ_UpdateProgramUserCheckDataTable.InitVars();
                return tJ_UpdateProgramUserCheckDataTable;
            }

            // Token: 0x06000D6E RID: 3438 RVA: 0x0006EAFC File Offset: 0x0006CCFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_UpdateProgramUserCheckDataTable();
            }

            // Token: 0x06000D6F RID: 3439 RVA: 0x0006EB03 File Offset: 0x0006CD03
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnlogin = base.Columns["login"];
                this.columndateCheck = base.Columns["dateCheck"];
            }

            // Token: 0x06000D70 RID: 3440 RVA: 0x0006EB34 File Offset: 0x0006CD34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnlogin = new DataColumn("login", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.columndateCheck = new DataColumn("dateCheck", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columndateCheck);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnlogin
                }, true));
                this.columnlogin.AllowDBNull = false;
                this.columnlogin.Unique = true;
                this.columnlogin.MaxLength = 100;
                this.columndateCheck.AllowDBNull = false;
            }

            // Token: 0x06000D71 RID: 3441 RVA: 0x0006EBF3 File Offset: 0x0006CDF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramUserCheckRow NewtJ_UpdateProgramUserCheckRow()
            {
                return (DataSetGES.tJ_UpdateProgramUserCheckRow)base.NewRow();
            }

            // Token: 0x06000D72 RID: 3442 RVA: 0x0006EC00 File Offset: 0x0006CE00
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_UpdateProgramUserCheckRow(builder);
            }

            // Token: 0x06000D73 RID: 3443 RVA: 0x0006EC08 File Offset: 0x0006CE08
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_UpdateProgramUserCheckRow);
            }

            // Token: 0x06000D74 RID: 3444 RVA: 0x0006EC14 File Offset: 0x0006CE14
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_UpdateProgramUserCheckRowChanged != null)
                {
                    this.tJ_UpdateProgramUserCheckRowChanged(this, new DataSetGES.tJ_UpdateProgramUserCheckRowChangeEvent((DataSetGES.tJ_UpdateProgramUserCheckRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D75 RID: 3445 RVA: 0x0006EC47 File Offset: 0x0006CE47
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_UpdateProgramUserCheckRowChanging != null)
                {
                    this.tJ_UpdateProgramUserCheckRowChanging(this, new DataSetGES.tJ_UpdateProgramUserCheckRowChangeEvent((DataSetGES.tJ_UpdateProgramUserCheckRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D76 RID: 3446 RVA: 0x0006EC7A File Offset: 0x0006CE7A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_UpdateProgramUserCheckRowDeleted != null)
                {
                    this.tJ_UpdateProgramUserCheckRowDeleted(this, new DataSetGES.tJ_UpdateProgramUserCheckRowChangeEvent((DataSetGES.tJ_UpdateProgramUserCheckRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D77 RID: 3447 RVA: 0x0006ECAD File Offset: 0x0006CEAD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_UpdateProgramUserCheckRowDeleting != null)
                {
                    this.tJ_UpdateProgramUserCheckRowDeleting(this, new DataSetGES.tJ_UpdateProgramUserCheckRowChangeEvent((DataSetGES.tJ_UpdateProgramUserCheckRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D78 RID: 3448 RVA: 0x0006ECE0 File Offset: 0x0006CEE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_UpdateProgramUserCheckRow(DataSetGES.tJ_UpdateProgramUserCheckRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000D79 RID: 3449 RVA: 0x0006ECF0 File Offset: 0x0006CEF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_UpdateProgramUserCheckDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000818 RID: 2072
            private DataColumn columnlogin;

            // Token: 0x04000819 RID: 2073
            private DataColumn columndateCheck;
        }

        // Token: 0x020000DE RID: 222
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tMeas_MeasurementDataTable : TypedTableBase<DataSetGES.tMeas_MeasurementRow>
        {
            // Token: 0x06000D7A RID: 3450 RVA: 0x0006EEE8 File Offset: 0x0006D0E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tMeas_MeasurementDataTable()
            {
                base.TableName = "tMeas_Measurement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000D7B RID: 3451 RVA: 0x0006EF10 File Offset: 0x0006D110
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tMeas_MeasurementDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000D7C RID: 3452 RVA: 0x0006EFB8 File Offset: 0x0006D1B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tMeas_MeasurementDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000312 RID: 786
            // (get) Token: 0x06000D7D RID: 3453 RVA: 0x0006EFC8 File Offset: 0x0006D1C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000313 RID: 787
            // (get) Token: 0x06000D7E RID: 3454 RVA: 0x0006EFD0 File Offset: 0x0006D1D0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn tpObjColumn
            {
                get
                {
                    return this.columntpObj;
                }
            }

            // Token: 0x17000314 RID: 788
            // (get) Token: 0x06000D7F RID: 3455 RVA: 0x0006EFD8 File Offset: 0x0006D1D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DTDayMeteringColumn
            {
                get
                {
                    return this.columnDTDayMetering;
                }
            }

            // Token: 0x17000315 RID: 789
            // (get) Token: 0x06000D80 RID: 3456 RVA: 0x0006EFE0 File Offset: 0x0006D1E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DTEveningMeteringColumn
            {
                get
                {
                    return this.columnDTEveningMetering;
                }
            }

            // Token: 0x17000316 RID: 790
            // (get) Token: 0x06000D81 RID: 3457 RVA: 0x0006EFE8 File Offset: 0x0006D1E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn tDayColumn
            {
                get
                {
                    return this.columntDay;
                }
            }

            // Token: 0x17000317 RID: 791
            // (get) Token: 0x06000D82 RID: 3458 RVA: 0x0006EFF0 File Offset: 0x0006D1F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn tEveningColumn
            {
                get
                {
                    return this.columntEvening;
                }
            }

            // Token: 0x17000318 RID: 792
            // (get) Token: 0x06000D83 RID: 3459 RVA: 0x0006EFF8 File Offset: 0x0006D1F8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WorkerColumn
            {
                get
                {
                    return this.columnWorker;
                }
            }

            // Token: 0x17000319 RID: 793
            // (get) Token: 0x06000D84 RID: 3460 RVA: 0x0006F000 File Offset: 0x0006D200
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MeasurementYearColumn
            {
                get
                {
                    return this.columnMeasurementYear;
                }
            }

            // Token: 0x1700031A RID: 794
            // (get) Token: 0x06000D85 RID: 3461 RVA: 0x0006F008 File Offset: 0x0006D208
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700031B RID: 795
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_MeasurementRow this[int index]
            {
                get
                {
                    return (DataSetGES.tMeas_MeasurementRow)base.Rows[index];
                }
            }

            // Token: 0x14000091 RID: 145
            // (add) Token: 0x06000D87 RID: 3463 RVA: 0x0006F028 File Offset: 0x0006D228
            // (remove) Token: 0x06000D88 RID: 3464 RVA: 0x0006F060 File Offset: 0x0006D260
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_MeasurementRowChangeEventHandler tMeas_MeasurementRowChanging;

            // Token: 0x14000092 RID: 146
            // (add) Token: 0x06000D89 RID: 3465 RVA: 0x0006F098 File Offset: 0x0006D298
            // (remove) Token: 0x06000D8A RID: 3466 RVA: 0x0006F0D0 File Offset: 0x0006D2D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_MeasurementRowChangeEventHandler tMeas_MeasurementRowChanged;

            // Token: 0x14000093 RID: 147
            // (add) Token: 0x06000D8B RID: 3467 RVA: 0x0006F108 File Offset: 0x0006D308
            // (remove) Token: 0x06000D8C RID: 3468 RVA: 0x0006F140 File Offset: 0x0006D340
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_MeasurementRowChangeEventHandler tMeas_MeasurementRowDeleting;

            // Token: 0x14000094 RID: 148
            // (add) Token: 0x06000D8D RID: 3469 RVA: 0x0006F178 File Offset: 0x0006D378
            // (remove) Token: 0x06000D8E RID: 3470 RVA: 0x0006F1B0 File Offset: 0x0006D3B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_MeasurementRowChangeEventHandler tMeas_MeasurementRowDeleted;

            // Token: 0x06000D8F RID: 3471 RVA: 0x0006F1E5 File Offset: 0x0006D3E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtMeas_MeasurementRow(DataSetGES.tMeas_MeasurementRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000D90 RID: 3472 RVA: 0x0006F1F4 File Offset: 0x0006D3F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_MeasurementRow AddtMeas_MeasurementRow(int tpObj, DateTime DTDayMetering, DateTime DTEveningMetering, int tDay, int tEvening, int Worker, int MeasurementYear)
            {
                DataSetGES.tMeas_MeasurementRow tMeas_MeasurementRow = (DataSetGES.tMeas_MeasurementRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    tpObj,
                    DTDayMetering,
                    DTEveningMetering,
                    tDay,
                    tEvening,
                    Worker,
                    MeasurementYear
                };
                tMeas_MeasurementRow.ItemArray = itemArray;
                base.Rows.Add(tMeas_MeasurementRow);
                return tMeas_MeasurementRow;
            }

            // Token: 0x06000D91 RID: 3473 RVA: 0x0006F270 File Offset: 0x0006D470
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_MeasurementRow FindByid(int id)
            {
                return (DataSetGES.tMeas_MeasurementRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000D92 RID: 3474 RVA: 0x0006F2A0 File Offset: 0x0006D4A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tMeas_MeasurementDataTable tMeas_MeasurementDataTable = (DataSetGES.tMeas_MeasurementDataTable)base.Clone();
                tMeas_MeasurementDataTable.InitVars();
                return tMeas_MeasurementDataTable;
            }

            // Token: 0x06000D93 RID: 3475 RVA: 0x0006F2C0 File Offset: 0x0006D4C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tMeas_MeasurementDataTable();
            }

            // Token: 0x06000D94 RID: 3476 RVA: 0x0006F2C8 File Offset: 0x0006D4C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columntpObj = base.Columns["tpObj"];
                this.columnDTDayMetering = base.Columns["DTDayMetering"];
                this.columnDTEveningMetering = base.Columns["DTEveningMetering"];
                this.columntDay = base.Columns["tDay"];
                this.columntEvening = base.Columns["tEvening"];
                this.columnWorker = base.Columns["Worker"];
                this.columnMeasurementYear = base.Columns["MeasurementYear"];
            }

            // Token: 0x06000D95 RID: 3477 RVA: 0x0006F388 File Offset: 0x0006D588
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columntpObj = new DataColumn("tpObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntpObj);
                this.columnDTDayMetering = new DataColumn("DTDayMetering", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDTDayMetering);
                this.columnDTEveningMetering = new DataColumn("DTEveningMetering", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDTEveningMetering);
                this.columntDay = new DataColumn("tDay", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntDay);
                this.columntEvening = new DataColumn("tEvening", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntEvening);
                this.columnWorker = new DataColumn("Worker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWorker);
                this.columnMeasurementYear = new DataColumn("MeasurementYear", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnMeasurementYear);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
            }

            // Token: 0x06000D96 RID: 3478 RVA: 0x0006F56E File Offset: 0x0006D76E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tMeas_MeasurementRow NewtMeas_MeasurementRow()
            {
                return (DataSetGES.tMeas_MeasurementRow)base.NewRow();
            }

            // Token: 0x06000D97 RID: 3479 RVA: 0x0006F57B File Offset: 0x0006D77B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tMeas_MeasurementRow(builder);
            }

            // Token: 0x06000D98 RID: 3480 RVA: 0x0006F583 File Offset: 0x0006D783
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tMeas_MeasurementRow);
            }

            // Token: 0x06000D99 RID: 3481 RVA: 0x0006F58F File Offset: 0x0006D78F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tMeas_MeasurementRowChanged != null)
                {
                    this.tMeas_MeasurementRowChanged(this, new DataSetGES.tMeas_MeasurementRowChangeEvent((DataSetGES.tMeas_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D9A RID: 3482 RVA: 0x0006F5C2 File Offset: 0x0006D7C2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tMeas_MeasurementRowChanging != null)
                {
                    this.tMeas_MeasurementRowChanging(this, new DataSetGES.tMeas_MeasurementRowChangeEvent((DataSetGES.tMeas_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D9B RID: 3483 RVA: 0x0006F5F5 File Offset: 0x0006D7F5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tMeas_MeasurementRowDeleted != null)
                {
                    this.tMeas_MeasurementRowDeleted(this, new DataSetGES.tMeas_MeasurementRowChangeEvent((DataSetGES.tMeas_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D9C RID: 3484 RVA: 0x0006F628 File Offset: 0x0006D828
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tMeas_MeasurementRowDeleting != null)
                {
                    this.tMeas_MeasurementRowDeleting(this, new DataSetGES.tMeas_MeasurementRowChangeEvent((DataSetGES.tMeas_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000D9D RID: 3485 RVA: 0x0006F65B File Offset: 0x0006D85B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetMeas_MeasurementRow(DataSetGES.tMeas_MeasurementRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000D9E RID: 3486 RVA: 0x0006F66C File Offset: 0x0006D86C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tMeas_MeasurementDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400081E RID: 2078
            private DataColumn columnid;

            // Token: 0x0400081F RID: 2079
            private DataColumn columntpObj;

            // Token: 0x04000820 RID: 2080
            private DataColumn columnDTDayMetering;

            // Token: 0x04000821 RID: 2081
            private DataColumn columnDTEveningMetering;

            // Token: 0x04000822 RID: 2082
            private DataColumn columntDay;

            // Token: 0x04000823 RID: 2083
            private DataColumn columntEvening;

            // Token: 0x04000824 RID: 2084
            private DataColumn columnWorker;

            // Token: 0x04000825 RID: 2085
            private DataColumn columnMeasurementYear;
        }

        // Token: 0x020000DF RID: 223
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tMeas_TransDataTable : TypedTableBase<DataSetGES.tMeas_TransRow>
        {
            // Token: 0x06000D9F RID: 3487 RVA: 0x0006F864 File Offset: 0x0006DA64
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tMeas_TransDataTable()
            {
                base.TableName = "tMeas_Trans";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000DA0 RID: 3488 RVA: 0x0006F88C File Offset: 0x0006DA8C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tMeas_TransDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000DA1 RID: 3489 RVA: 0x0006F934 File Offset: 0x0006DB34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tMeas_TransDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700031C RID: 796
            // (get) Token: 0x06000DA2 RID: 3490 RVA: 0x0006F944 File Offset: 0x0006DB44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700031D RID: 797
            // (get) Token: 0x06000DA3 RID: 3491 RVA: 0x0006F94C File Offset: 0x0006DB4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasColumn
            {
                get
                {
                    return this.columnidMeas;
                }
            }

            // Token: 0x1700031E RID: 798
            // (get) Token: 0x06000DA4 RID: 3492 RVA: 0x0006F954 File Offset: 0x0006DB54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn transObjColumn
            {
                get
                {
                    return this.columntransObj;
                }
            }

            // Token: 0x1700031F RID: 799
            // (get) Token: 0x06000DA5 RID: 3493 RVA: 0x0006F95C File Offset: 0x0006DB5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UabDColumn
            {
                get
                {
                    return this.columnUabD;
                }
            }

            // Token: 0x17000320 RID: 800
            // (get) Token: 0x06000DA6 RID: 3494 RVA: 0x0006F964 File Offset: 0x0006DB64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbcDColumn
            {
                get
                {
                    return this.columnUbcD;
                }
            }

            // Token: 0x17000321 RID: 801
            // (get) Token: 0x06000DA7 RID: 3495 RVA: 0x0006F96C File Offset: 0x0006DB6C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcaDColumn
            {
                get
                {
                    return this.columnUcaD;
                }
            }

            // Token: 0x17000322 RID: 802
            // (get) Token: 0x06000DA8 RID: 3496 RVA: 0x0006F974 File Offset: 0x0006DB74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UabEColumn
            {
                get
                {
                    return this.columnUabE;
                }
            }

            // Token: 0x17000323 RID: 803
            // (get) Token: 0x06000DA9 RID: 3497 RVA: 0x0006F97C File Offset: 0x0006DB7C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbcEColumn
            {
                get
                {
                    return this.columnUbcE;
                }
            }

            // Token: 0x17000324 RID: 804
            // (get) Token: 0x06000DAA RID: 3498 RVA: 0x0006F984 File Offset: 0x0006DB84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcaEColumn
            {
                get
                {
                    return this.columnUcaE;
                }
            }

            // Token: 0x17000325 RID: 805
            // (get) Token: 0x06000DAB RID: 3499 RVA: 0x0006F98C File Offset: 0x0006DB8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UaDColumn
            {
                get
                {
                    return this.columnUaD;
                }
            }

            // Token: 0x17000326 RID: 806
            // (get) Token: 0x06000DAC RID: 3500 RVA: 0x0006F994 File Offset: 0x0006DB94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbDColumn
            {
                get
                {
                    return this.columnUbD;
                }
            }

            // Token: 0x17000327 RID: 807
            // (get) Token: 0x06000DAD RID: 3501 RVA: 0x0006F99C File Offset: 0x0006DB9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcDColumn
            {
                get
                {
                    return this.columnUcD;
                }
            }

            // Token: 0x17000328 RID: 808
            // (get) Token: 0x06000DAE RID: 3502 RVA: 0x0006F9A4 File Offset: 0x0006DBA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UaEColumn
            {
                get
                {
                    return this.columnUaE;
                }
            }

            // Token: 0x17000329 RID: 809
            // (get) Token: 0x06000DAF RID: 3503 RVA: 0x0006F9AC File Offset: 0x0006DBAC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbEColumn
            {
                get
                {
                    return this.columnUbE;
                }
            }

            // Token: 0x1700032A RID: 810
            // (get) Token: 0x06000DB0 RID: 3504 RVA: 0x0006F9B4 File Offset: 0x0006DBB4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcEColumn
            {
                get
                {
                    return this.columnUcE;
                }
            }

            // Token: 0x1700032B RID: 811
            // (get) Token: 0x06000DB1 RID: 3505 RVA: 0x0006F9BC File Offset: 0x0006DBBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn StateSwitchColumn
            {
                get
                {
                    return this.columnStateSwitch;
                }
            }

            // Token: 0x1700032C RID: 812
            // (get) Token: 0x06000DB2 RID: 3506 RVA: 0x0006F9C4 File Offset: 0x0006DBC4
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700032D RID: 813
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_TransRow this[int index]
            {
                get
                {
                    return (DataSetGES.tMeas_TransRow)base.Rows[index];
                }
            }

            // Token: 0x14000095 RID: 149
            // (add) Token: 0x06000DB4 RID: 3508 RVA: 0x0006F9E4 File Offset: 0x0006DBE4
            // (remove) Token: 0x06000DB5 RID: 3509 RVA: 0x0006FA1C File Offset: 0x0006DC1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_TransRowChangeEventHandler tMeas_TransRowChanging;

            // Token: 0x14000096 RID: 150
            // (add) Token: 0x06000DB6 RID: 3510 RVA: 0x0006FA54 File Offset: 0x0006DC54
            // (remove) Token: 0x06000DB7 RID: 3511 RVA: 0x0006FA8C File Offset: 0x0006DC8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_TransRowChangeEventHandler tMeas_TransRowChanged;

            // Token: 0x14000097 RID: 151
            // (add) Token: 0x06000DB8 RID: 3512 RVA: 0x0006FAC4 File Offset: 0x0006DCC4
            // (remove) Token: 0x06000DB9 RID: 3513 RVA: 0x0006FAFC File Offset: 0x0006DCFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_TransRowChangeEventHandler tMeas_TransRowDeleting;

            // Token: 0x14000098 RID: 152
            // (add) Token: 0x06000DBA RID: 3514 RVA: 0x0006FB34 File Offset: 0x0006DD34
            // (remove) Token: 0x06000DBB RID: 3515 RVA: 0x0006FB6C File Offset: 0x0006DD6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_TransRowChangeEventHandler tMeas_TransRowDeleted;

            // Token: 0x06000DBC RID: 3516 RVA: 0x0006FBA1 File Offset: 0x0006DDA1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtMeas_TransRow(DataSetGES.tMeas_TransRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000DBD RID: 3517 RVA: 0x0006FBB0 File Offset: 0x0006DDB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_TransRow AddtMeas_TransRow(int idMeas, int transObj, int UabD, int UbcD, int UcaD, int UabE, int UbcE, int UcaE, int UaD, int UbD, int UcD, int UaE, int UbE, int UcE, int StateSwitch)
            {
                DataSetGES.tMeas_TransRow tMeas_TransRow = (DataSetGES.tMeas_TransRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idMeas,
                    transObj,
                    UabD,
                    UbcD,
                    UcaD,
                    UabE,
                    UbcE,
                    UcaE,
                    UaD,
                    UbD,
                    UcD,
                    UaE,
                    UbE,
                    UcE,
                    StateSwitch
                };
                tMeas_TransRow.ItemArray = itemArray;
                base.Rows.Add(tMeas_TransRow);
                return tMeas_TransRow;
            }

            // Token: 0x06000DBE RID: 3518 RVA: 0x0006FC84 File Offset: 0x0006DE84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_TransRow FindByid(int id)
            {
                return (DataSetGES.tMeas_TransRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000DBF RID: 3519 RVA: 0x0006FCB4 File Offset: 0x0006DEB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tMeas_TransDataTable tMeas_TransDataTable = (DataSetGES.tMeas_TransDataTable)base.Clone();
                tMeas_TransDataTable.InitVars();
                return tMeas_TransDataTable;
            }

            // Token: 0x06000DC0 RID: 3520 RVA: 0x0006FCD4 File Offset: 0x0006DED4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tMeas_TransDataTable();
            }

            // Token: 0x06000DC1 RID: 3521 RVA: 0x0006FCDC File Offset: 0x0006DEDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeas = base.Columns["idMeas"];
                this.columntransObj = base.Columns["transObj"];
                this.columnUabD = base.Columns["UabD"];
                this.columnUbcD = base.Columns["UbcD"];
                this.columnUcaD = base.Columns["UcaD"];
                this.columnUabE = base.Columns["UabE"];
                this.columnUbcE = base.Columns["UbcE"];
                this.columnUcaE = base.Columns["UcaE"];
                this.columnUaD = base.Columns["UaD"];
                this.columnUbD = base.Columns["UbD"];
                this.columnUcD = base.Columns["UcD"];
                this.columnUaE = base.Columns["UaE"];
                this.columnUbE = base.Columns["UbE"];
                this.columnUcE = base.Columns["UcE"];
                this.columnStateSwitch = base.Columns["StateSwitch"];
            }

            // Token: 0x06000DC2 RID: 3522 RVA: 0x0006FE4C File Offset: 0x0006E04C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeas = new DataColumn("idMeas", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeas);
                this.columntransObj = new DataColumn("transObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntransObj);
                this.columnUabD = new DataColumn("UabD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabD);
                this.columnUbcD = new DataColumn("UbcD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcD);
                this.columnUcaD = new DataColumn("UcaD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcaD);
                this.columnUabE = new DataColumn("UabE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabE);
                this.columnUbcE = new DataColumn("UbcE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcE);
                this.columnUcaE = new DataColumn("UcaE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcaE);
                this.columnUaD = new DataColumn("UaD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaD);
                this.columnUbD = new DataColumn("UbD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbD);
                this.columnUcD = new DataColumn("UcD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcD);
                this.columnUaE = new DataColumn("UaE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaE);
                this.columnUbE = new DataColumn("UbE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbE);
                this.columnUcE = new DataColumn("UcE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcE);
                this.columnStateSwitch = new DataColumn("StateSwitch", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnStateSwitch);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
            }

            // Token: 0x06000DC3 RID: 3523 RVA: 0x0007019A File Offset: 0x0006E39A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_TransRow NewtMeas_TransRow()
            {
                return (DataSetGES.tMeas_TransRow)base.NewRow();
            }

            // Token: 0x06000DC4 RID: 3524 RVA: 0x000701A7 File Offset: 0x0006E3A7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tMeas_TransRow(builder);
            }

            // Token: 0x06000DC5 RID: 3525 RVA: 0x000701AF File Offset: 0x0006E3AF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tMeas_TransRow);
            }

            // Token: 0x06000DC6 RID: 3526 RVA: 0x000701BB File Offset: 0x0006E3BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tMeas_TransRowChanged != null)
                {
                    this.tMeas_TransRowChanged(this, new DataSetGES.tMeas_TransRowChangeEvent((DataSetGES.tMeas_TransRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DC7 RID: 3527 RVA: 0x000701EE File Offset: 0x0006E3EE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tMeas_TransRowChanging != null)
                {
                    this.tMeas_TransRowChanging(this, new DataSetGES.tMeas_TransRowChangeEvent((DataSetGES.tMeas_TransRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DC8 RID: 3528 RVA: 0x00070221 File Offset: 0x0006E421
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tMeas_TransRowDeleted != null)
                {
                    this.tMeas_TransRowDeleted(this, new DataSetGES.tMeas_TransRowChangeEvent((DataSetGES.tMeas_TransRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DC9 RID: 3529 RVA: 0x00070254 File Offset: 0x0006E454
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tMeas_TransRowDeleting != null)
                {
                    this.tMeas_TransRowDeleting(this, new DataSetGES.tMeas_TransRowChangeEvent((DataSetGES.tMeas_TransRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DCA RID: 3530 RVA: 0x00070287 File Offset: 0x0006E487
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetMeas_TransRow(DataSetGES.tMeas_TransRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000DCB RID: 3531 RVA: 0x00070298 File Offset: 0x0006E498
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tMeas_TransDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400082A RID: 2090
            private DataColumn columnid;

            // Token: 0x0400082B RID: 2091
            private DataColumn columnidMeas;

            // Token: 0x0400082C RID: 2092
            private DataColumn columntransObj;

            // Token: 0x0400082D RID: 2093
            private DataColumn columnUabD;

            // Token: 0x0400082E RID: 2094
            private DataColumn columnUbcD;

            // Token: 0x0400082F RID: 2095
            private DataColumn columnUcaD;

            // Token: 0x04000830 RID: 2096
            private DataColumn columnUabE;

            // Token: 0x04000831 RID: 2097
            private DataColumn columnUbcE;

            // Token: 0x04000832 RID: 2098
            private DataColumn columnUcaE;

            // Token: 0x04000833 RID: 2099
            private DataColumn columnUaD;

            // Token: 0x04000834 RID: 2100
            private DataColumn columnUbD;

            // Token: 0x04000835 RID: 2101
            private DataColumn columnUcD;

            // Token: 0x04000836 RID: 2102
            private DataColumn columnUaE;

            // Token: 0x04000837 RID: 2103
            private DataColumn columnUbE;

            // Token: 0x04000838 RID: 2104
            private DataColumn columnUcE;

            // Token: 0x04000839 RID: 2105
            private DataColumn columnStateSwitch;
        }

        // Token: 0x020000E0 RID: 224
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tMeas_CabDataTable : TypedTableBase<DataSetGES.tMeas_CabRow>
        {
            // Token: 0x06000DCC RID: 3532 RVA: 0x00070490 File Offset: 0x0006E690
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tMeas_CabDataTable()
            {
                base.TableName = "tMeas_Cab";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000DCD RID: 3533 RVA: 0x000704B8 File Offset: 0x0006E6B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tMeas_CabDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000DCE RID: 3534 RVA: 0x00070560 File Offset: 0x0006E760
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tMeas_CabDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700032E RID: 814
            // (get) Token: 0x06000DCF RID: 3535 RVA: 0x00070570 File Offset: 0x0006E770
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700032F RID: 815
            // (get) Token: 0x06000DD0 RID: 3536 RVA: 0x00070578 File Offset: 0x0006E778
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransColumn
            {
                get
                {
                    return this.columnidTrans;
                }
            }

            // Token: 0x17000330 RID: 816
            // (get) Token: 0x06000DD1 RID: 3537 RVA: 0x00070580 File Offset: 0x0006E780
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn objColumn
            {
                get
                {
                    return this.columnobj;
                }
            }

            // Token: 0x17000331 RID: 817
            // (get) Token: 0x06000DD2 RID: 3538 RVA: 0x00070588 File Offset: 0x0006E788
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IaDColumn
            {
                get
                {
                    return this.columnIaD;
                }
            }

            // Token: 0x17000332 RID: 818
            // (get) Token: 0x06000DD3 RID: 3539 RVA: 0x00070590 File Offset: 0x0006E790
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbDColumn
            {
                get
                {
                    return this.columnIbD;
                }
            }

            // Token: 0x17000333 RID: 819
            // (get) Token: 0x06000DD4 RID: 3540 RVA: 0x00070598 File Offset: 0x0006E798
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcDColumn
            {
                get
                {
                    return this.columnIcD;
                }
            }

            // Token: 0x17000334 RID: 820
            // (get) Token: 0x06000DD5 RID: 3541 RVA: 0x000705A0 File Offset: 0x0006E7A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IoDColumn
            {
                get
                {
                    return this.columnIoD;
                }
            }

            // Token: 0x17000335 RID: 821
            // (get) Token: 0x06000DD6 RID: 3542 RVA: 0x000705A8 File Offset: 0x0006E7A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IaEColumn
            {
                get
                {
                    return this.columnIaE;
                }
            }

            // Token: 0x17000336 RID: 822
            // (get) Token: 0x06000DD7 RID: 3543 RVA: 0x000705B0 File Offset: 0x0006E7B0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbEColumn
            {
                get
                {
                    return this.columnIbE;
                }
            }

            // Token: 0x17000337 RID: 823
            // (get) Token: 0x06000DD8 RID: 3544 RVA: 0x000705B8 File Offset: 0x0006E7B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcEColumn
            {
                get
                {
                    return this.columnIcE;
                }
            }

            // Token: 0x17000338 RID: 824
            // (get) Token: 0x06000DD9 RID: 3545 RVA: 0x000705C0 File Offset: 0x0006E7C0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IoEColumn
            {
                get
                {
                    return this.columnIoE;
                }
            }

            // Token: 0x17000339 RID: 825
            // (get) Token: 0x06000DDA RID: 3546 RVA: 0x000705C8 File Offset: 0x0006E7C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700033A RID: 826
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_CabRow this[int index]
            {
                get
                {
                    return (DataSetGES.tMeas_CabRow)base.Rows[index];
                }
            }

            // Token: 0x14000099 RID: 153
            // (add) Token: 0x06000DDC RID: 3548 RVA: 0x000705E8 File Offset: 0x0006E7E8
            // (remove) Token: 0x06000DDD RID: 3549 RVA: 0x00070620 File Offset: 0x0006E820
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_CabRowChangeEventHandler tMeas_CabRowChanging;

            // Token: 0x1400009A RID: 154
            // (add) Token: 0x06000DDE RID: 3550 RVA: 0x00070658 File Offset: 0x0006E858
            // (remove) Token: 0x06000DDF RID: 3551 RVA: 0x00070690 File Offset: 0x0006E890
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_CabRowChangeEventHandler tMeas_CabRowChanged;

            // Token: 0x1400009B RID: 155
            // (add) Token: 0x06000DE0 RID: 3552 RVA: 0x000706C8 File Offset: 0x0006E8C8
            // (remove) Token: 0x06000DE1 RID: 3553 RVA: 0x00070700 File Offset: 0x0006E900
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_CabRowChangeEventHandler tMeas_CabRowDeleting;

            // Token: 0x1400009C RID: 156
            // (add) Token: 0x06000DE2 RID: 3554 RVA: 0x00070738 File Offset: 0x0006E938
            // (remove) Token: 0x06000DE3 RID: 3555 RVA: 0x00070770 File Offset: 0x0006E970
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tMeas_CabRowChangeEventHandler tMeas_CabRowDeleted;

            // Token: 0x06000DE4 RID: 3556 RVA: 0x000707A5 File Offset: 0x0006E9A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtMeas_CabRow(DataSetGES.tMeas_CabRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000DE5 RID: 3557 RVA: 0x000707B4 File Offset: 0x0006E9B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tMeas_CabRow AddtMeas_CabRow(int idTrans, int obj, int IaD, int IbD, int IcD, int IoD, int IaE, int IbE, int IcE, int IoE)
            {
                DataSetGES.tMeas_CabRow tMeas_CabRow = (DataSetGES.tMeas_CabRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idTrans,
                    obj,
                    IaD,
                    IbD,
                    IcD,
                    IoD,
                    IaE,
                    IbE,
                    IcE,
                    IoE
                };
                tMeas_CabRow.ItemArray = itemArray;
                base.Rows.Add(tMeas_CabRow);
                return tMeas_CabRow;
            }

            // Token: 0x06000DE6 RID: 3558 RVA: 0x00070850 File Offset: 0x0006EA50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_CabRow FindByid(int id)
            {
                return (DataSetGES.tMeas_CabRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000DE7 RID: 3559 RVA: 0x00070880 File Offset: 0x0006EA80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tMeas_CabDataTable tMeas_CabDataTable = (DataSetGES.tMeas_CabDataTable)base.Clone();
                tMeas_CabDataTable.InitVars();
                return tMeas_CabDataTable;
            }

            // Token: 0x06000DE8 RID: 3560 RVA: 0x000708A0 File Offset: 0x0006EAA0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tMeas_CabDataTable();
            }

            // Token: 0x06000DE9 RID: 3561 RVA: 0x000708A8 File Offset: 0x0006EAA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidTrans = base.Columns["idTrans"];
                this.columnobj = base.Columns["obj"];
                this.columnIaD = base.Columns["IaD"];
                this.columnIbD = base.Columns["IbD"];
                this.columnIcD = base.Columns["IcD"];
                this.columnIoD = base.Columns["IoD"];
                this.columnIaE = base.Columns["IaE"];
                this.columnIbE = base.Columns["IbE"];
                this.columnIcE = base.Columns["IcE"];
                this.columnIoE = base.Columns["IoE"];
            }

            // Token: 0x06000DEA RID: 3562 RVA: 0x000709A8 File Offset: 0x0006EBA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidTrans = new DataColumn("idTrans", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTrans);
                this.columnobj = new DataColumn("obj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnobj);
                this.columnIaD = new DataColumn("IaD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIaD);
                this.columnIbD = new DataColumn("IbD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbD);
                this.columnIcD = new DataColumn("IcD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcD);
                this.columnIoD = new DataColumn("IoD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIoD);
                this.columnIaE = new DataColumn("IaE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIaE);
                this.columnIbE = new DataColumn("IbE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbE);
                this.columnIcE = new DataColumn("IcE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcE);
                this.columnIoE = new DataColumn("IoE", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIoE);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
            }

            // Token: 0x06000DEB RID: 3563 RVA: 0x00070C15 File Offset: 0x0006EE15
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_CabRow NewtMeas_CabRow()
            {
                return (DataSetGES.tMeas_CabRow)base.NewRow();
            }

            // Token: 0x06000DEC RID: 3564 RVA: 0x00070C22 File Offset: 0x0006EE22
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tMeas_CabRow(builder);
            }

            // Token: 0x06000DED RID: 3565 RVA: 0x00070C2A File Offset: 0x0006EE2A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tMeas_CabRow);
            }

            // Token: 0x06000DEE RID: 3566 RVA: 0x00070C36 File Offset: 0x0006EE36
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tMeas_CabRowChanged != null)
                {
                    this.tMeas_CabRowChanged(this, new DataSetGES.tMeas_CabRowChangeEvent((DataSetGES.tMeas_CabRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DEF RID: 3567 RVA: 0x00070C69 File Offset: 0x0006EE69
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tMeas_CabRowChanging != null)
                {
                    this.tMeas_CabRowChanging(this, new DataSetGES.tMeas_CabRowChangeEvent((DataSetGES.tMeas_CabRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DF0 RID: 3568 RVA: 0x00070C9C File Offset: 0x0006EE9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tMeas_CabRowDeleted != null)
                {
                    this.tMeas_CabRowDeleted(this, new DataSetGES.tMeas_CabRowChangeEvent((DataSetGES.tMeas_CabRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DF1 RID: 3569 RVA: 0x00070CCF File Offset: 0x0006EECF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tMeas_CabRowDeleting != null)
                {
                    this.tMeas_CabRowDeleting(this, new DataSetGES.tMeas_CabRowChangeEvent((DataSetGES.tMeas_CabRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000DF2 RID: 3570 RVA: 0x00070D02 File Offset: 0x0006EF02
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetMeas_CabRow(DataSetGES.tMeas_CabRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000DF3 RID: 3571 RVA: 0x00070D10 File Offset: 0x0006EF10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tMeas_CabDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400083E RID: 2110
            private DataColumn columnid;

            // Token: 0x0400083F RID: 2111
            private DataColumn columnidTrans;

            // Token: 0x04000840 RID: 2112
            private DataColumn columnobj;

            // Token: 0x04000841 RID: 2113
            private DataColumn columnIaD;

            // Token: 0x04000842 RID: 2114
            private DataColumn columnIbD;

            // Token: 0x04000843 RID: 2115
            private DataColumn columnIcD;

            // Token: 0x04000844 RID: 2116
            private DataColumn columnIoD;

            // Token: 0x04000845 RID: 2117
            private DataColumn columnIaE;

            // Token: 0x04000846 RID: 2118
            private DataColumn columnIbE;

            // Token: 0x04000847 RID: 2119
            private DataColumn columnIcE;

            // Token: 0x04000848 RID: 2120
            private DataColumn columnIoE;
        }

        // Token: 0x020000E1 RID: 225
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tSchm_ObjListDataTable : TypedTableBase<DataSetGES.tSchm_ObjListRow>
        {
            // Token: 0x06000DF4 RID: 3572 RVA: 0x00070F08 File Offset: 0x0006F108
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tSchm_ObjListDataTable()
            {
                base.TableName = "tSchm_ObjList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000DF5 RID: 3573 RVA: 0x00070F30 File Offset: 0x0006F130
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tSchm_ObjListDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000DF6 RID: 3574 RVA: 0x00070FD8 File Offset: 0x0006F1D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tSchm_ObjListDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700033B RID: 827
            // (get) Token: 0x06000DF7 RID: 3575 RVA: 0x00070FE8 File Offset: 0x0006F1E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x1700033C RID: 828
            // (get) Token: 0x06000DF8 RID: 3576 RVA: 0x00070FF0 File Offset: 0x0006F1F0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x1700033D RID: 829
            // (get) Token: 0x06000DF9 RID: 3577 RVA: 0x00070FF8 File Offset: 0x0006F1F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700033E RID: 830
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjListRow this[int index]
            {
                get
                {
                    return (DataSetGES.tSchm_ObjListRow)base.Rows[index];
                }
            }

            // Token: 0x1400009D RID: 157
            // (add) Token: 0x06000DFB RID: 3579 RVA: 0x00071018 File Offset: 0x0006F218
            // (remove) Token: 0x06000DFC RID: 3580 RVA: 0x00071050 File Offset: 0x0006F250
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjListRowChangeEventHandler tSchm_ObjListRowChanging;

            // Token: 0x1400009E RID: 158
            // (add) Token: 0x06000DFD RID: 3581 RVA: 0x00071088 File Offset: 0x0006F288
            // (remove) Token: 0x06000DFE RID: 3582 RVA: 0x000710C0 File Offset: 0x0006F2C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjListRowChangeEventHandler tSchm_ObjListRowChanged;

            // Token: 0x1400009F RID: 159
            // (add) Token: 0x06000DFF RID: 3583 RVA: 0x000710F8 File Offset: 0x0006F2F8
            // (remove) Token: 0x06000E00 RID: 3584 RVA: 0x00071130 File Offset: 0x0006F330
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjListRowChangeEventHandler tSchm_ObjListRowDeleting;

            // Token: 0x140000A0 RID: 160
            // (add) Token: 0x06000E01 RID: 3585 RVA: 0x00071168 File Offset: 0x0006F368
            // (remove) Token: 0x06000E02 RID: 3586 RVA: 0x000711A0 File Offset: 0x0006F3A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjListRowChangeEventHandler tSchm_ObjListRowDeleted;

            // Token: 0x06000E03 RID: 3587 RVA: 0x000711D5 File Offset: 0x0006F3D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtSchm_ObjListRow(DataSetGES.tSchm_ObjListRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000E04 RID: 3588 RVA: 0x000711E4 File Offset: 0x0006F3E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjListRow AddtSchm_ObjListRow(string Name)
            {
                DataSetGES.tSchm_ObjListRow tSchm_ObjListRow = (DataSetGES.tSchm_ObjListRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    Name
                };
                tSchm_ObjListRow.ItemArray = itemArray;
                base.Rows.Add(tSchm_ObjListRow);
                return tSchm_ObjListRow;
            }

            // Token: 0x06000E05 RID: 3589 RVA: 0x00071220 File Offset: 0x0006F420
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjListRow FindById(int Id)
            {
                return (DataSetGES.tSchm_ObjListRow)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x06000E06 RID: 3590 RVA: 0x00071250 File Offset: 0x0006F450
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjListDataTable tSchm_ObjListDataTable = (DataSetGES.tSchm_ObjListDataTable)base.Clone();
                tSchm_ObjListDataTable.InitVars();
                return tSchm_ObjListDataTable;
            }

            // Token: 0x06000E07 RID: 3591 RVA: 0x00071270 File Offset: 0x0006F470
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjListDataTable();
            }

            // Token: 0x06000E08 RID: 3592 RVA: 0x00071277 File Offset: 0x0006F477
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x06000E09 RID: 3593 RVA: 0x000712A8 File Offset: 0x0006F4A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 512;
            }

            // Token: 0x06000E0A RID: 3594 RVA: 0x00071390 File Offset: 0x0006F590
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjListRow NewtSchm_ObjListRow()
            {
                return (DataSetGES.tSchm_ObjListRow)base.NewRow();
            }

            // Token: 0x06000E0B RID: 3595 RVA: 0x0007139D File Offset: 0x0006F59D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tSchm_ObjListRow(builder);
            }

            // Token: 0x06000E0C RID: 3596 RVA: 0x000713A5 File Offset: 0x0006F5A5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tSchm_ObjListRow);
            }

            // Token: 0x06000E0D RID: 3597 RVA: 0x000713B1 File Offset: 0x0006F5B1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tSchm_ObjListRowChanged != null)
                {
                    this.tSchm_ObjListRowChanged(this, new DataSetGES.tSchm_ObjListRowChangeEvent((DataSetGES.tSchm_ObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E0E RID: 3598 RVA: 0x000713E4 File Offset: 0x0006F5E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tSchm_ObjListRowChanging != null)
                {
                    this.tSchm_ObjListRowChanging(this, new DataSetGES.tSchm_ObjListRowChangeEvent((DataSetGES.tSchm_ObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E0F RID: 3599 RVA: 0x00071417 File Offset: 0x0006F617
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tSchm_ObjListRowDeleted != null)
                {
                    this.tSchm_ObjListRowDeleted(this, new DataSetGES.tSchm_ObjListRowChangeEvent((DataSetGES.tSchm_ObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E10 RID: 3600 RVA: 0x0007144A File Offset: 0x0006F64A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tSchm_ObjListRowDeleting != null)
                {
                    this.tSchm_ObjListRowDeleting(this, new DataSetGES.tSchm_ObjListRowChangeEvent((DataSetGES.tSchm_ObjListRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E11 RID: 3601 RVA: 0x0007147D File Offset: 0x0006F67D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetSchm_ObjListRow(DataSetGES.tSchm_ObjListRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000E12 RID: 3602 RVA: 0x0007148C File Offset: 0x0006F68C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tSchm_ObjListDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400084D RID: 2125
            private DataColumn columnId;

            // Token: 0x0400084E RID: 2126
            private DataColumn columnName;
        }

        // Token: 0x020000E2 RID: 226
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vP_WorkerDataTable : TypedTableBase<DataSetGES.vP_WorkerRow>
        {
            // Token: 0x06000E13 RID: 3603 RVA: 0x00071684 File Offset: 0x0006F884
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_WorkerDataTable()
            {
                base.TableName = "vP_Worker";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000E14 RID: 3604 RVA: 0x000716AC File Offset: 0x0006F8AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vP_WorkerDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000E15 RID: 3605 RVA: 0x00071754 File Offset: 0x0006F954
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vP_WorkerDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700033F RID: 831
            // (get) Token: 0x06000E16 RID: 3606 RVA: 0x00071764 File Offset: 0x0006F964
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000340 RID: 832
            // (get) Token: 0x06000E17 RID: 3607 RVA: 0x0007176C File Offset: 0x0006F96C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FColumn
            {
                get
                {
                    return this.columnF;
                }
            }

            // Token: 0x17000341 RID: 833
            // (get) Token: 0x06000E18 RID: 3608 RVA: 0x00071774 File Offset: 0x0006F974
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IColumn
            {
                get
                {
                    return this.columnI;
                }
            }

            // Token: 0x17000342 RID: 834
            // (get) Token: 0x06000E19 RID: 3609 RVA: 0x0007177C File Offset: 0x0006F97C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn OColumn
            {
                get
                {
                    return this.columnO;
                }
            }

            // Token: 0x17000343 RID: 835
            // (get) Token: 0x06000E1A RID: 3610 RVA: 0x00071784 File Offset: 0x0006F984
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            // Token: 0x17000344 RID: 836
            // (get) Token: 0x06000E1B RID: 3611 RVA: 0x0007178C File Offset: 0x0006F98C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateBeginColumn
            {
                get
                {
                    return this.columnDateBegin;
                }
            }

            // Token: 0x17000345 RID: 837
            // (get) Token: 0x06000E1C RID: 3612 RVA: 0x00071794 File Offset: 0x0006F994
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateEndColumn
            {
                get
                {
                    return this.columnDateEnd;
                }
            }

            // Token: 0x17000346 RID: 838
            // (get) Token: 0x06000E1D RID: 3613 RVA: 0x0007179C File Offset: 0x0006F99C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            // Token: 0x17000347 RID: 839
            // (get) Token: 0x06000E1E RID: 3614 RVA: 0x000717A4 File Offset: 0x0006F9A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            // Token: 0x17000348 RID: 840
            // (get) Token: 0x06000E1F RID: 3615 RVA: 0x000717AC File Offset: 0x0006F9AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn isGroupColumn
            {
                get
                {
                    return this.columnisGroup;
                }
            }

            // Token: 0x17000349 RID: 841
            // (get) Token: 0x06000E20 RID: 3616 RVA: 0x000717B4 File Offset: 0x0006F9B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700034A RID: 842
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_WorkerRow this[int index]
            {
                get
                {
                    return (DataSetGES.vP_WorkerRow)base.Rows[index];
                }
            }

            // Token: 0x140000A1 RID: 161
            // (add) Token: 0x06000E22 RID: 3618 RVA: 0x000717D4 File Offset: 0x0006F9D4
            // (remove) Token: 0x06000E23 RID: 3619 RVA: 0x0007180C File Offset: 0x0006FA0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_WorkerRowChangeEventHandler vP_WorkerRowChanging;

            // Token: 0x140000A2 RID: 162
            // (add) Token: 0x06000E24 RID: 3620 RVA: 0x00071844 File Offset: 0x0006FA44
            // (remove) Token: 0x06000E25 RID: 3621 RVA: 0x0007187C File Offset: 0x0006FA7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_WorkerRowChangeEventHandler vP_WorkerRowChanged;

            // Token: 0x140000A3 RID: 163
            // (add) Token: 0x06000E26 RID: 3622 RVA: 0x000718B4 File Offset: 0x0006FAB4
            // (remove) Token: 0x06000E27 RID: 3623 RVA: 0x000718EC File Offset: 0x0006FAEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_WorkerRowChangeEventHandler vP_WorkerRowDeleting;

            // Token: 0x140000A4 RID: 164
            // (add) Token: 0x06000E28 RID: 3624 RVA: 0x00071924 File Offset: 0x0006FB24
            // (remove) Token: 0x06000E29 RID: 3625 RVA: 0x0007195C File Offset: 0x0006FB5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_WorkerRowChangeEventHandler vP_WorkerRowDeleted;

            // Token: 0x06000E2A RID: 3626 RVA: 0x00071991 File Offset: 0x0006FB91
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvP_WorkerRow(DataSetGES.vP_WorkerRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000E2B RID: 3627 RVA: 0x000719A0 File Offset: 0x0006FBA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_WorkerRow AddvP_WorkerRow(int Id, string F, string I, string O, string FIO, DateTime DateBegin, DateTime DateEnd, int idGroup, string ParentKey, bool isGroup)
            {
                DataSetGES.vP_WorkerRow vP_WorkerRow = (DataSetGES.vP_WorkerRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    F,
                    I,
                    O,
                    FIO,
                    DateBegin,
                    DateEnd,
                    idGroup,
                    ParentKey,
                    isGroup
                };
                vP_WorkerRow.ItemArray = itemArray;
                base.Rows.Add(vP_WorkerRow);
                return vP_WorkerRow;
            }

            // Token: 0x06000E2C RID: 3628 RVA: 0x00071A20 File Offset: 0x0006FC20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vP_WorkerDataTable vP_WorkerDataTable = (DataSetGES.vP_WorkerDataTable)base.Clone();
                vP_WorkerDataTable.InitVars();
                return vP_WorkerDataTable;
            }

            // Token: 0x06000E2D RID: 3629 RVA: 0x00071A40 File Offset: 0x0006FC40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_WorkerDataTable();
            }

            // Token: 0x06000E2E RID: 3630 RVA: 0x00071A48 File Offset: 0x0006FC48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnF = base.Columns["F"];
                this.columnI = base.Columns["I"];
                this.columnO = base.Columns["O"];
                this.columnFIO = base.Columns["FIO"];
                this.columnDateBegin = base.Columns["DateBegin"];
                this.columnDateEnd = base.Columns["DateEnd"];
                this.columnidGroup = base.Columns["idGroup"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnisGroup = base.Columns["isGroup"];
            }

            // Token: 0x06000E2F RID: 3631 RVA: 0x00071B34 File Offset: 0x0006FD34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnF = new DataColumn("F", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnF);
                this.columnI = new DataColumn("I", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnI);
                this.columnO = new DataColumn("O", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnO);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnDateBegin = new DataColumn("DateBegin", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateBegin);
                this.columnDateEnd = new DataColumn("DateEnd", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateEnd);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnisGroup = new DataColumn("isGroup", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisGroup);
                this.columnId.AllowDBNull = false;
                this.columnF.AllowDBNull = false;
                this.columnF.MaxLength = 30;
                this.columnI.MaxLength = 20;
                this.columnO.MaxLength = 20;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 36;
                this.columnidGroup.AllowDBNull = false;
                this.columnParentKey.MaxLength = 50;
                this.columnisGroup.AllowDBNull = false;
            }

            // Token: 0x06000E30 RID: 3632 RVA: 0x00071D80 File Offset: 0x0006FF80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_WorkerRow NewvP_WorkerRow()
            {
                return (DataSetGES.vP_WorkerRow)base.NewRow();
            }

            // Token: 0x06000E31 RID: 3633 RVA: 0x00071D8D File Offset: 0x0006FF8D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vP_WorkerRow(builder);
            }

            // Token: 0x06000E32 RID: 3634 RVA: 0x00071D95 File Offset: 0x0006FF95
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vP_WorkerRow);
            }

            // Token: 0x06000E33 RID: 3635 RVA: 0x00071DA1 File Offset: 0x0006FFA1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vP_WorkerRowChanged != null)
                {
                    this.vP_WorkerRowChanged(this, new DataSetGES.vP_WorkerRowChangeEvent((DataSetGES.vP_WorkerRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E34 RID: 3636 RVA: 0x00071DD4 File Offset: 0x0006FFD4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vP_WorkerRowChanging != null)
                {
                    this.vP_WorkerRowChanging(this, new DataSetGES.vP_WorkerRowChangeEvent((DataSetGES.vP_WorkerRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E35 RID: 3637 RVA: 0x00071E07 File Offset: 0x00070007
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vP_WorkerRowDeleted != null)
                {
                    this.vP_WorkerRowDeleted(this, new DataSetGES.vP_WorkerRowChangeEvent((DataSetGES.vP_WorkerRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E36 RID: 3638 RVA: 0x00071E3A File Offset: 0x0007003A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vP_WorkerRowDeleting != null)
                {
                    this.vP_WorkerRowDeleting(this, new DataSetGES.vP_WorkerRowChangeEvent((DataSetGES.vP_WorkerRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E37 RID: 3639 RVA: 0x00071E6D File Offset: 0x0007006D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevP_WorkerRow(DataSetGES.vP_WorkerRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000E38 RID: 3640 RVA: 0x00071E7C File Offset: 0x0007007C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vP_WorkerDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000853 RID: 2131
            private DataColumn columnId;

            // Token: 0x04000854 RID: 2132
            private DataColumn columnF;

            // Token: 0x04000855 RID: 2133
            private DataColumn columnI;

            // Token: 0x04000856 RID: 2134
            private DataColumn columnO;

            // Token: 0x04000857 RID: 2135
            private DataColumn columnFIO;

            // Token: 0x04000858 RID: 2136
            private DataColumn columnDateBegin;

            // Token: 0x04000859 RID: 2137
            private DataColumn columnDateEnd;

            // Token: 0x0400085A RID: 2138
            private DataColumn columnidGroup;

            // Token: 0x0400085B RID: 2139
            private DataColumn columnParentKey;

            // Token: 0x0400085C RID: 2140
            private DataColumn columnisGroup;
        }

        // Token: 0x020000E3 RID: 227
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tP_ValueListsDataTable : TypedTableBase<DataSetGES.tP_ValueListsRow>
        {
            // Token: 0x06000E39 RID: 3641 RVA: 0x00072074 File Offset: 0x00070274
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tP_ValueListsDataTable()
            {
                base.TableName = "tP_ValueLists";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000E3A RID: 3642 RVA: 0x0007209C File Offset: 0x0007029C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tP_ValueListsDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000E3B RID: 3643 RVA: 0x00072144 File Offset: 0x00070344
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tP_ValueListsDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700034B RID: 843
            // (get) Token: 0x06000E3C RID: 3644 RVA: 0x00072154 File Offset: 0x00070354
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700034C RID: 844
            // (get) Token: 0x06000E3D RID: 3645 RVA: 0x0007215C File Offset: 0x0007035C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ParentIdColumn
            {
                get
                {
                    return this.columnParentId;
                }
            }

            // Token: 0x1700034D RID: 845
            // (get) Token: 0x06000E3E RID: 3646 RVA: 0x00072164 File Offset: 0x00070364
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            // Token: 0x1700034E RID: 846
            // (get) Token: 0x06000E3F RID: 3647 RVA: 0x0007216C File Offset: 0x0007036C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x1700034F RID: 847
            // (get) Token: 0x06000E40 RID: 3648 RVA: 0x00072174 File Offset: 0x00070374
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn isGroupColumn
            {
                get
                {
                    return this.columnisGroup;
                }
            }

            // Token: 0x17000350 RID: 848
            // (get) Token: 0x06000E41 RID: 3649 RVA: 0x0007217C File Offset: 0x0007037C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x17000351 RID: 849
            // (get) Token: 0x06000E42 RID: 3650 RVA: 0x00072184 File Offset: 0x00070384
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000352 RID: 850
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tP_ValueListsRow this[int index]
            {
                get
                {
                    return (DataSetGES.tP_ValueListsRow)base.Rows[index];
                }
            }

            // Token: 0x140000A5 RID: 165
            // (add) Token: 0x06000E44 RID: 3652 RVA: 0x000721A4 File Offset: 0x000703A4
            // (remove) Token: 0x06000E45 RID: 3653 RVA: 0x000721DC File Offset: 0x000703DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tP_ValueListsRowChangeEventHandler tP_ValueListsRowChanging;

            // Token: 0x140000A6 RID: 166
            // (add) Token: 0x06000E46 RID: 3654 RVA: 0x00072214 File Offset: 0x00070414
            // (remove) Token: 0x06000E47 RID: 3655 RVA: 0x0007224C File Offset: 0x0007044C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tP_ValueListsRowChangeEventHandler tP_ValueListsRowChanged;

            // Token: 0x140000A7 RID: 167
            // (add) Token: 0x06000E48 RID: 3656 RVA: 0x00072284 File Offset: 0x00070484
            // (remove) Token: 0x06000E49 RID: 3657 RVA: 0x000722BC File Offset: 0x000704BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tP_ValueListsRowChangeEventHandler tP_ValueListsRowDeleting;

            // Token: 0x140000A8 RID: 168
            // (add) Token: 0x06000E4A RID: 3658 RVA: 0x000722F4 File Offset: 0x000704F4
            // (remove) Token: 0x06000E4B RID: 3659 RVA: 0x0007232C File Offset: 0x0007052C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tP_ValueListsRowChangeEventHandler tP_ValueListsRowDeleted;

            // Token: 0x06000E4C RID: 3660 RVA: 0x00072361 File Offset: 0x00070561
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtP_ValueListsRow(DataSetGES.tP_ValueListsRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000E4D RID: 3661 RVA: 0x00072370 File Offset: 0x00070570
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tP_ValueListsRow AddtP_ValueListsRow(int ParentId, string ParentKey, string Name, bool isGroup, bool Deleted)
            {
                DataSetGES.tP_ValueListsRow tP_ValueListsRow = (DataSetGES.tP_ValueListsRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    ParentId,
                    ParentKey,
                    Name,
                    isGroup,
                    Deleted
                };
                tP_ValueListsRow.ItemArray = itemArray;
                base.Rows.Add(tP_ValueListsRow);
                return tP_ValueListsRow;
            }

            // Token: 0x06000E4E RID: 3662 RVA: 0x000723CC File Offset: 0x000705CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tP_ValueListsRow FindByid(int id)
            {
                return (DataSetGES.tP_ValueListsRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000E4F RID: 3663 RVA: 0x000723FC File Offset: 0x000705FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tP_ValueListsDataTable tP_ValueListsDataTable = (DataSetGES.tP_ValueListsDataTable)base.Clone();
                tP_ValueListsDataTable.InitVars();
                return tP_ValueListsDataTable;
            }

            // Token: 0x06000E50 RID: 3664 RVA: 0x0007241C File Offset: 0x0007061C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tP_ValueListsDataTable();
            }

            // Token: 0x06000E51 RID: 3665 RVA: 0x00072424 File Offset: 0x00070624
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnParentId = base.Columns["ParentId"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnName = base.Columns["Name"];
                this.columnisGroup = base.Columns["isGroup"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x06000E52 RID: 3666 RVA: 0x000724B8 File Offset: 0x000706B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnParentId = new DataColumn("ParentId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnParentId);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnisGroup = new DataColumn("isGroup", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnisGroup);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnParentKey.MaxLength = 256;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 50;
            }

            // Token: 0x06000E53 RID: 3667 RVA: 0x0007266D File Offset: 0x0007086D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tP_ValueListsRow NewtP_ValueListsRow()
            {
                return (DataSetGES.tP_ValueListsRow)base.NewRow();
            }

            // Token: 0x06000E54 RID: 3668 RVA: 0x0007267A File Offset: 0x0007087A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tP_ValueListsRow(builder);
            }

            // Token: 0x06000E55 RID: 3669 RVA: 0x00072682 File Offset: 0x00070882
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tP_ValueListsRow);
            }

            // Token: 0x06000E56 RID: 3670 RVA: 0x0007268E File Offset: 0x0007088E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tP_ValueListsRowChanged != null)
                {
                    this.tP_ValueListsRowChanged(this, new DataSetGES.tP_ValueListsRowChangeEvent((DataSetGES.tP_ValueListsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E57 RID: 3671 RVA: 0x000726C1 File Offset: 0x000708C1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tP_ValueListsRowChanging != null)
                {
                    this.tP_ValueListsRowChanging(this, new DataSetGES.tP_ValueListsRowChangeEvent((DataSetGES.tP_ValueListsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E58 RID: 3672 RVA: 0x000726F4 File Offset: 0x000708F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tP_ValueListsRowDeleted != null)
                {
                    this.tP_ValueListsRowDeleted(this, new DataSetGES.tP_ValueListsRowChangeEvent((DataSetGES.tP_ValueListsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E59 RID: 3673 RVA: 0x00072727 File Offset: 0x00070927
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tP_ValueListsRowDeleting != null)
                {
                    this.tP_ValueListsRowDeleting(this, new DataSetGES.tP_ValueListsRowChangeEvent((DataSetGES.tP_ValueListsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E5A RID: 3674 RVA: 0x0007275A File Offset: 0x0007095A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetP_ValueListsRow(DataSetGES.tP_ValueListsRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000E5B RID: 3675 RVA: 0x00072768 File Offset: 0x00070968
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tP_ValueListsDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000861 RID: 2145
            private DataColumn columnid;

            // Token: 0x04000862 RID: 2146
            private DataColumn columnParentId;

            // Token: 0x04000863 RID: 2147
            private DataColumn columnParentKey;

            // Token: 0x04000864 RID: 2148
            private DataColumn columnName;

            // Token: 0x04000865 RID: 2149
            private DataColumn columnisGroup;

            // Token: 0x04000866 RID: 2150
            private DataColumn columnDeleted;
        }

        // Token: 0x020000E4 RID: 228
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_CableMakeupDataTable : TypedTableBase<DataSetGES.vJ_CableMakeupRow>
        {
            // Token: 0x06000E5C RID: 3676 RVA: 0x00072960 File Offset: 0x00070B60
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CableMakeupDataTable()
            {
                base.TableName = "vJ_CableMakeup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000E5D RID: 3677 RVA: 0x00072988 File Offset: 0x00070B88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableMakeupDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000E5E RID: 3678 RVA: 0x00072A30 File Offset: 0x00070C30
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_CableMakeupDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000353 RID: 851
            // (get) Token: 0x06000E5F RID: 3679 RVA: 0x00072A40 File Offset: 0x00070C40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000354 RID: 852
            // (get) Token: 0x06000E60 RID: 3680 RVA: 0x00072A48 File Offset: 0x00070C48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            // Token: 0x17000355 RID: 853
            // (get) Token: 0x06000E61 RID: 3681 RVA: 0x00072A50 File Offset: 0x00070C50
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000356 RID: 854
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CableMakeupRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_CableMakeupRow)base.Rows[index];
                }
            }

            // Token: 0x140000A9 RID: 169
            // (add) Token: 0x06000E63 RID: 3683 RVA: 0x00072A70 File Offset: 0x00070C70
            // (remove) Token: 0x06000E64 RID: 3684 RVA: 0x00072AA8 File Offset: 0x00070CA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableMakeupRowChangeEventHandler vJ_CableMakeupRowChanging;

            // Token: 0x140000AA RID: 170
            // (add) Token: 0x06000E65 RID: 3685 RVA: 0x00072AE0 File Offset: 0x00070CE0
            // (remove) Token: 0x06000E66 RID: 3686 RVA: 0x00072B18 File Offset: 0x00070D18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableMakeupRowChangeEventHandler vJ_CableMakeupRowChanged;

            // Token: 0x140000AB RID: 171
            // (add) Token: 0x06000E67 RID: 3687 RVA: 0x00072B50 File Offset: 0x00070D50
            // (remove) Token: 0x06000E68 RID: 3688 RVA: 0x00072B88 File Offset: 0x00070D88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableMakeupRowChangeEventHandler vJ_CableMakeupRowDeleting;

            // Token: 0x140000AC RID: 172
            // (add) Token: 0x06000E69 RID: 3689 RVA: 0x00072BC0 File Offset: 0x00070DC0
            // (remove) Token: 0x06000E6A RID: 3690 RVA: 0x00072BF8 File Offset: 0x00070DF8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableMakeupRowChangeEventHandler vJ_CableMakeupRowDeleted;

            // Token: 0x06000E6B RID: 3691 RVA: 0x00072C2D File Offset: 0x00070E2D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_CableMakeupRow(DataSetGES.vJ_CableMakeupRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000E6C RID: 3692 RVA: 0x00072C3C File Offset: 0x00070E3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CableMakeupRow AddvJ_CableMakeupRow(int Id, string Makeup)
            {
                DataSetGES.vJ_CableMakeupRow vJ_CableMakeupRow = (DataSetGES.vJ_CableMakeupRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    Makeup
                };
                vJ_CableMakeupRow.ItemArray = itemArray;
                base.Rows.Add(vJ_CableMakeupRow);
                return vJ_CableMakeupRow;
            }

            // Token: 0x06000E6D RID: 3693 RVA: 0x00072C80 File Offset: 0x00070E80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableMakeupRow FindById(int Id)
            {
                return (DataSetGES.vJ_CableMakeupRow)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x06000E6E RID: 3694 RVA: 0x00072CB0 File Offset: 0x00070EB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableMakeupDataTable vJ_CableMakeupDataTable = (DataSetGES.vJ_CableMakeupDataTable)base.Clone();
                vJ_CableMakeupDataTable.InitVars();
                return vJ_CableMakeupDataTable;
            }

            // Token: 0x06000E6F RID: 3695 RVA: 0x00072CD0 File Offset: 0x00070ED0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableMakeupDataTable();
            }

            // Token: 0x06000E70 RID: 3696 RVA: 0x00072CD7 File Offset: 0x00070ED7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnMakeup = base.Columns["Makeup"];
            }

            // Token: 0x06000E71 RID: 3697 RVA: 0x00072D08 File Offset: 0x00070F08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnMakeup.ReadOnly = true;
                this.columnMakeup.MaxLength = 2051;
            }

            // Token: 0x06000E72 RID: 3698 RVA: 0x00072DCA File Offset: 0x00070FCA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableMakeupRow NewvJ_CableMakeupRow()
            {
                return (DataSetGES.vJ_CableMakeupRow)base.NewRow();
            }

            // Token: 0x06000E73 RID: 3699 RVA: 0x00072DD7 File Offset: 0x00070FD7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_CableMakeupRow(builder);
            }

            // Token: 0x06000E74 RID: 3700 RVA: 0x00072DDF File Offset: 0x00070FDF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_CableMakeupRow);
            }

            // Token: 0x06000E75 RID: 3701 RVA: 0x00072DEB File Offset: 0x00070FEB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_CableMakeupRowChanged != null)
                {
                    this.vJ_CableMakeupRowChanged(this, new DataSetGES.vJ_CableMakeupRowChangeEvent((DataSetGES.vJ_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E76 RID: 3702 RVA: 0x00072E1E File Offset: 0x0007101E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_CableMakeupRowChanging != null)
                {
                    this.vJ_CableMakeupRowChanging(this, new DataSetGES.vJ_CableMakeupRowChangeEvent((DataSetGES.vJ_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E77 RID: 3703 RVA: 0x00072E51 File Offset: 0x00071051
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_CableMakeupRowDeleted != null)
                {
                    this.vJ_CableMakeupRowDeleted(this, new DataSetGES.vJ_CableMakeupRowChangeEvent((DataSetGES.vJ_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E78 RID: 3704 RVA: 0x00072E84 File Offset: 0x00071084
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_CableMakeupRowDeleting != null)
                {
                    this.vJ_CableMakeupRowDeleting(this, new DataSetGES.vJ_CableMakeupRowChangeEvent((DataSetGES.vJ_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E79 RID: 3705 RVA: 0x00072EB7 File Offset: 0x000710B7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_CableMakeupRow(DataSetGES.vJ_CableMakeupRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000E7A RID: 3706 RVA: 0x00072EC8 File Offset: 0x000710C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_CableMakeupDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400086B RID: 2155
            private DataColumn columnId;

            // Token: 0x0400086C RID: 2156
            private DataColumn columnMakeup;
        }

        // Token: 0x020000E5 RID: 229
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasPeriodBySubstationDataTable : TypedTableBase<DataSetGES.vJ_MeasPeriodBySubstationRow>
        {
            // Token: 0x06000E7B RID: 3707 RVA: 0x000730C0 File Offset: 0x000712C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasPeriodBySubstationDataTable()
            {
                base.TableName = "vJ_MeasPeriodBySubstation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000E7C RID: 3708 RVA: 0x000730E8 File Offset: 0x000712E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasPeriodBySubstationDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000E7D RID: 3709 RVA: 0x00073190 File Offset: 0x00071390
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasPeriodBySubstationDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000357 RID: 855
            // (get) Token: 0x06000E7E RID: 3710 RVA: 0x000731A0 File Offset: 0x000713A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000358 RID: 856
            // (get) Token: 0x06000E7F RID: 3711 RVA: 0x000731A8 File Offset: 0x000713A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            // Token: 0x17000359 RID: 857
            // (get) Token: 0x06000E80 RID: 3712 RVA: 0x000731B0 File Offset: 0x000713B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MeasYearColumn
            {
                get
                {
                    return this.columnMeasYear;
                }
            }

            // Token: 0x1700035A RID: 858
            // (get) Token: 0x06000E81 RID: 3713 RVA: 0x000731B8 File Offset: 0x000713B8
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700035B RID: 859
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasPeriodBySubstationRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasPeriodBySubstationRow)base.Rows[index];
                }
            }

            // Token: 0x140000AD RID: 173
            // (add) Token: 0x06000E83 RID: 3715 RVA: 0x000731D8 File Offset: 0x000713D8
            // (remove) Token: 0x06000E84 RID: 3716 RVA: 0x00073210 File Offset: 0x00071410
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasPeriodBySubstationRowChangeEventHandler vJ_MeasPeriodBySubstationRowChanging;

            // Token: 0x140000AE RID: 174
            // (add) Token: 0x06000E85 RID: 3717 RVA: 0x00073248 File Offset: 0x00071448
            // (remove) Token: 0x06000E86 RID: 3718 RVA: 0x00073280 File Offset: 0x00071480
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasPeriodBySubstationRowChangeEventHandler vJ_MeasPeriodBySubstationRowChanged;

            // Token: 0x140000AF RID: 175
            // (add) Token: 0x06000E87 RID: 3719 RVA: 0x000732B8 File Offset: 0x000714B8
            // (remove) Token: 0x06000E88 RID: 3720 RVA: 0x000732F0 File Offset: 0x000714F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasPeriodBySubstationRowChangeEventHandler vJ_MeasPeriodBySubstationRowDeleting;

            // Token: 0x140000B0 RID: 176
            // (add) Token: 0x06000E89 RID: 3721 RVA: 0x00073328 File Offset: 0x00071528
            // (remove) Token: 0x06000E8A RID: 3722 RVA: 0x00073360 File Offset: 0x00071560
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasPeriodBySubstationRowChangeEventHandler vJ_MeasPeriodBySubstationRowDeleted;

            // Token: 0x06000E8B RID: 3723 RVA: 0x00073395 File Offset: 0x00071595
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_MeasPeriodBySubstationRow(DataSetGES.vJ_MeasPeriodBySubstationRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000E8C RID: 3724 RVA: 0x000733A4 File Offset: 0x000715A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasPeriodBySubstationRow AddvJ_MeasPeriodBySubstationRow(int idObjList, int MeasYear)
            {
                DataSetGES.vJ_MeasPeriodBySubstationRow vJ_MeasPeriodBySubstationRow = (DataSetGES.vJ_MeasPeriodBySubstationRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idObjList,
                    MeasYear
                };
                vJ_MeasPeriodBySubstationRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasPeriodBySubstationRow);
                return vJ_MeasPeriodBySubstationRow;
            }

            // Token: 0x06000E8D RID: 3725 RVA: 0x000733EC File Offset: 0x000715EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasPeriodBySubstationRow FindByid(int id)
            {
                return (DataSetGES.vJ_MeasPeriodBySubstationRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000E8E RID: 3726 RVA: 0x0007341C File Offset: 0x0007161C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasPeriodBySubstationDataTable vJ_MeasPeriodBySubstationDataTable = (DataSetGES.vJ_MeasPeriodBySubstationDataTable)base.Clone();
                vJ_MeasPeriodBySubstationDataTable.InitVars();
                return vJ_MeasPeriodBySubstationDataTable;
            }

            // Token: 0x06000E8F RID: 3727 RVA: 0x0007343C File Offset: 0x0007163C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasPeriodBySubstationDataTable();
            }

            // Token: 0x06000E90 RID: 3728 RVA: 0x00073444 File Offset: 0x00071644
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnMeasYear = base.Columns["MeasYear"];
            }

            // Token: 0x06000E91 RID: 3729 RVA: 0x00073494 File Offset: 0x00071694
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnMeasYear = new DataColumn("MeasYear", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnMeasYear);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidObjList.AllowDBNull = false;
                this.columnMeasYear.ReadOnly = true;
            }

            // Token: 0x06000E92 RID: 3730 RVA: 0x000735B1 File Offset: 0x000717B1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasPeriodBySubstationRow NewvJ_MeasPeriodBySubstationRow()
            {
                return (DataSetGES.vJ_MeasPeriodBySubstationRow)base.NewRow();
            }

            // Token: 0x06000E93 RID: 3731 RVA: 0x000735BE File Offset: 0x000717BE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasPeriodBySubstationRow(builder);
            }

            // Token: 0x06000E94 RID: 3732 RVA: 0x000735C6 File Offset: 0x000717C6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasPeriodBySubstationRow);
            }

            // Token: 0x06000E95 RID: 3733 RVA: 0x000735D2 File Offset: 0x000717D2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasPeriodBySubstationRowChanged != null)
                {
                    this.vJ_MeasPeriodBySubstationRowChanged(this, new DataSetGES.vJ_MeasPeriodBySubstationRowChangeEvent((DataSetGES.vJ_MeasPeriodBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E96 RID: 3734 RVA: 0x00073605 File Offset: 0x00071805
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasPeriodBySubstationRowChanging != null)
                {
                    this.vJ_MeasPeriodBySubstationRowChanging(this, new DataSetGES.vJ_MeasPeriodBySubstationRowChangeEvent((DataSetGES.vJ_MeasPeriodBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E97 RID: 3735 RVA: 0x00073638 File Offset: 0x00071838
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasPeriodBySubstationRowDeleted != null)
                {
                    this.vJ_MeasPeriodBySubstationRowDeleted(this, new DataSetGES.vJ_MeasPeriodBySubstationRowChangeEvent((DataSetGES.vJ_MeasPeriodBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E98 RID: 3736 RVA: 0x0007366B File Offset: 0x0007186B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasPeriodBySubstationRowDeleting != null)
                {
                    this.vJ_MeasPeriodBySubstationRowDeleting(this, new DataSetGES.vJ_MeasPeriodBySubstationRowChangeEvent((DataSetGES.vJ_MeasPeriodBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000E99 RID: 3737 RVA: 0x0007369E File Offset: 0x0007189E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_MeasPeriodBySubstationRow(DataSetGES.vJ_MeasPeriodBySubstationRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000E9A RID: 3738 RVA: 0x000736AC File Offset: 0x000718AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasPeriodBySubstationDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000871 RID: 2161
            private DataColumn columnid;

            // Token: 0x04000872 RID: 2162
            private DataColumn columnidObjList;

            // Token: 0x04000873 RID: 2163
            private DataColumn columnMeasYear;
        }

        // Token: 0x020000E6 RID: 230
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_GetCellCableLVByTransfDataTable : TypedTableBase<DataSetGES.fn_J_GetCellCableLVByTransfRow>
        {
            // Token: 0x06000E9B RID: 3739 RVA: 0x000738A4 File Offset: 0x00071AA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetCellCableLVByTransfDataTable()
            {
                base.TableName = "fn_J_GetCellCableLVByTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000E9C RID: 3740 RVA: 0x000738CC File Offset: 0x00071ACC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetCellCableLVByTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000E9D RID: 3741 RVA: 0x00073974 File Offset: 0x00071B74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetCellCableLVByTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700035C RID: 860
            // (get) Token: 0x06000E9E RID: 3742 RVA: 0x00073984 File Offset: 0x00071B84
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdCellColumn
            {
                get
                {
                    return this.columnIdCell;
                }
            }

            // Token: 0x1700035D RID: 861
            // (get) Token: 0x06000E9F RID: 3743 RVA: 0x0007398C File Offset: 0x00071B8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x1700035E RID: 862
            // (get) Token: 0x06000EA0 RID: 3744 RVA: 0x00073994 File Offset: 0x00071B94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdCableColumn
            {
                get
                {
                    return this.columnIdCable;
                }
            }

            // Token: 0x1700035F RID: 863
            // (get) Token: 0x06000EA1 RID: 3745 RVA: 0x0007399C File Offset: 0x00071B9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            // Token: 0x17000360 RID: 864
            // (get) Token: 0x06000EA2 RID: 3746 RVA: 0x000739A4 File Offset: 0x00071BA4
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000361 RID: 865
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetCellCableLVByTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_GetCellCableLVByTransfRow)base.Rows[index];
                }
            }

            // Token: 0x140000B1 RID: 177
            // (add) Token: 0x06000EA4 RID: 3748 RVA: 0x000739C4 File Offset: 0x00071BC4
            // (remove) Token: 0x06000EA5 RID: 3749 RVA: 0x000739FC File Offset: 0x00071BFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEventHandler fn_J_GetCellCableLVByTransfRowChanging;

            // Token: 0x140000B2 RID: 178
            // (add) Token: 0x06000EA6 RID: 3750 RVA: 0x00073A34 File Offset: 0x00071C34
            // (remove) Token: 0x06000EA7 RID: 3751 RVA: 0x00073A6C File Offset: 0x00071C6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEventHandler fn_J_GetCellCableLVByTransfRowChanged;

            // Token: 0x140000B3 RID: 179
            // (add) Token: 0x06000EA8 RID: 3752 RVA: 0x00073AA4 File Offset: 0x00071CA4
            // (remove) Token: 0x06000EA9 RID: 3753 RVA: 0x00073ADC File Offset: 0x00071CDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEventHandler fn_J_GetCellCableLVByTransfRowDeleting;

            // Token: 0x140000B4 RID: 180
            // (add) Token: 0x06000EAA RID: 3754 RVA: 0x00073B14 File Offset: 0x00071D14
            // (remove) Token: 0x06000EAB RID: 3755 RVA: 0x00073B4C File Offset: 0x00071D4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEventHandler fn_J_GetCellCableLVByTransfRowDeleted;

            // Token: 0x06000EAC RID: 3756 RVA: 0x00073B81 File Offset: 0x00071D81
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfn_J_GetCellCableLVByTransfRow(DataSetGES.fn_J_GetCellCableLVByTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000EAD RID: 3757 RVA: 0x00073B90 File Offset: 0x00071D90
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetCellCableLVByTransfRow Addfn_J_GetCellCableLVByTransfRow(int IdCell, string NameCell, int IdCable, string NameCable)
            {
                DataSetGES.fn_J_GetCellCableLVByTransfRow fn_J_GetCellCableLVByTransfRow = (DataSetGES.fn_J_GetCellCableLVByTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    IdCell,
                    NameCell,
                    IdCable,
                    NameCable
                };
                fn_J_GetCellCableLVByTransfRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_GetCellCableLVByTransfRow);
                return fn_J_GetCellCableLVByTransfRow;
            }

            // Token: 0x06000EAE RID: 3758 RVA: 0x00073BE4 File Offset: 0x00071DE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellCableLVByTransfDataTable fn_J_GetCellCableLVByTransfDataTable = (DataSetGES.fn_J_GetCellCableLVByTransfDataTable)base.Clone();
                fn_J_GetCellCableLVByTransfDataTable.InitVars();
                return fn_J_GetCellCableLVByTransfDataTable;
            }

            // Token: 0x06000EAF RID: 3759 RVA: 0x00073C04 File Offset: 0x00071E04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellCableLVByTransfDataTable();
            }

            // Token: 0x06000EB0 RID: 3760 RVA: 0x00073C0C File Offset: 0x00071E0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnIdCell = base.Columns["IdCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnIdCable = base.Columns["IdCable"];
                this.columnNameCable = base.Columns["NameCable"];
            }

            // Token: 0x06000EB1 RID: 3761 RVA: 0x00073C74 File Offset: 0x00071E74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnIdCell = new DataColumn("IdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnIdCable = new DataColumn("IdCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCable);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnNameCell.MaxLength = 512;
                this.columnNameCable.MaxLength = 512;
            }

            // Token: 0x06000EB2 RID: 3762 RVA: 0x00073D55 File Offset: 0x00071F55
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetCellCableLVByTransfRow Newfn_J_GetCellCableLVByTransfRow()
            {
                return (DataSetGES.fn_J_GetCellCableLVByTransfRow)base.NewRow();
            }

            // Token: 0x06000EB3 RID: 3763 RVA: 0x00073D62 File Offset: 0x00071F62
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_GetCellCableLVByTransfRow(builder);
            }

            // Token: 0x06000EB4 RID: 3764 RVA: 0x00073D6A File Offset: 0x00071F6A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_GetCellCableLVByTransfRow);
            }

            // Token: 0x06000EB5 RID: 3765 RVA: 0x00073D76 File Offset: 0x00071F76
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_GetCellCableLVByTransfRowChanged != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowChanged(this, new DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellCableLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EB6 RID: 3766 RVA: 0x00073DA9 File Offset: 0x00071FA9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_GetCellCableLVByTransfRowChanging != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowChanging(this, new DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellCableLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EB7 RID: 3767 RVA: 0x00073DDC File Offset: 0x00071FDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_GetCellCableLVByTransfRowDeleted != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowDeleted(this, new DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellCableLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EB8 RID: 3768 RVA: 0x00073E0F File Offset: 0x0007200F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_GetCellCableLVByTransfRowDeleting != null)
                {
                    this.fn_J_GetCellCableLVByTransfRowDeleting(this, new DataSetGES.fn_J_GetCellCableLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellCableLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EB9 RID: 3769 RVA: 0x00073E42 File Offset: 0x00072042
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Removefn_J_GetCellCableLVByTransfRow(DataSetGES.fn_J_GetCellCableLVByTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000EBA RID: 3770 RVA: 0x00073E50 File Offset: 0x00072050
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_GetCellCableLVByTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000878 RID: 2168
            private DataColumn columnIdCell;

            // Token: 0x04000879 RID: 2169
            private DataColumn columnNameCell;

            // Token: 0x0400087A RID: 2170
            private DataColumn columnIdCable;

            // Token: 0x0400087B RID: 2171
            private DataColumn columnNameCable;
        }

        // Token: 0x020000E7 RID: 231
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tL_SchmAbnDataTable : TypedTableBase<DataSetGES.tL_SchmAbnRow>
        {
            // Token: 0x06000EBB RID: 3771 RVA: 0x00074048 File Offset: 0x00072248
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tL_SchmAbnDataTable()
            {
                base.TableName = "tL_SchmAbn";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000EBC RID: 3772 RVA: 0x00074070 File Offset: 0x00072270
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tL_SchmAbnDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000EBD RID: 3773 RVA: 0x00074118 File Offset: 0x00072318
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tL_SchmAbnDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000362 RID: 866
            // (get) Token: 0x06000EBE RID: 3774 RVA: 0x00074128 File Offset: 0x00072328
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000363 RID: 867
            // (get) Token: 0x06000EBF RID: 3775 RVA: 0x00074130 File Offset: 0x00072330
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            // Token: 0x17000364 RID: 868
            // (get) Token: 0x06000EC0 RID: 3776 RVA: 0x00074138 File Offset: 0x00072338
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idAbnColumn
            {
                get
                {
                    return this.columnidAbn;
                }
            }

            // Token: 0x17000365 RID: 869
            // (get) Token: 0x06000EC1 RID: 3777 RVA: 0x00074140 File Offset: 0x00072340
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idAbnObjColumn
            {
                get
                {
                    return this.columnidAbnObj;
                }
            }

            // Token: 0x17000366 RID: 870
            // (get) Token: 0x06000EC2 RID: 3778 RVA: 0x00074148 File Offset: 0x00072348
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idPointColumn
            {
                get
                {
                    return this.columnidPoint;
                }
            }

            // Token: 0x17000367 RID: 871
            // (get) Token: 0x06000EC3 RID: 3779 RVA: 0x00074150 File Offset: 0x00072350
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idDocColumn
            {
                get
                {
                    return this.columnidDoc;
                }
            }

            // Token: 0x17000368 RID: 872
            // (get) Token: 0x06000EC4 RID: 3780 RVA: 0x00074158 File Offset: 0x00072358
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            // Token: 0x17000369 RID: 873
            // (get) Token: 0x06000EC5 RID: 3781 RVA: 0x00074160 File Offset: 0x00072360
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700036A RID: 874
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tL_SchmAbnRow this[int index]
            {
                get
                {
                    return (DataSetGES.tL_SchmAbnRow)base.Rows[index];
                }
            }

            // Token: 0x140000B5 RID: 181
            // (add) Token: 0x06000EC7 RID: 3783 RVA: 0x00074180 File Offset: 0x00072380
            // (remove) Token: 0x06000EC8 RID: 3784 RVA: 0x000741B8 File Offset: 0x000723B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_SchmAbnRowChangeEventHandler tL_SchmAbnRowChanging;

            // Token: 0x140000B6 RID: 182
            // (add) Token: 0x06000EC9 RID: 3785 RVA: 0x000741F0 File Offset: 0x000723F0
            // (remove) Token: 0x06000ECA RID: 3786 RVA: 0x00074228 File Offset: 0x00072428
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_SchmAbnRowChangeEventHandler tL_SchmAbnRowChanged;

            // Token: 0x140000B7 RID: 183
            // (add) Token: 0x06000ECB RID: 3787 RVA: 0x00074260 File Offset: 0x00072460
            // (remove) Token: 0x06000ECC RID: 3788 RVA: 0x00074298 File Offset: 0x00072498
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_SchmAbnRowChangeEventHandler tL_SchmAbnRowDeleting;

            // Token: 0x140000B8 RID: 184
            // (add) Token: 0x06000ECD RID: 3789 RVA: 0x000742D0 File Offset: 0x000724D0
            // (remove) Token: 0x06000ECE RID: 3790 RVA: 0x00074308 File Offset: 0x00072508
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tL_SchmAbnRowChangeEventHandler tL_SchmAbnRowDeleted;

            // Token: 0x06000ECF RID: 3791 RVA: 0x0007433D File Offset: 0x0007253D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtL_SchmAbnRow(DataSetGES.tL_SchmAbnRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000ED0 RID: 3792 RVA: 0x0007434C File Offset: 0x0007254C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tL_SchmAbnRow AddtL_SchmAbnRow(int idSchmObj, int idAbn, int idAbnObj, int idPoint, int idDoc, int TypeDoc)
            {
                DataSetGES.tL_SchmAbnRow tL_SchmAbnRow = (DataSetGES.tL_SchmAbnRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idSchmObj,
                    idAbn,
                    idAbnObj,
                    idPoint,
                    idDoc,
                    TypeDoc
                };
                tL_SchmAbnRow.ItemArray = itemArray;
                base.Rows.Add(tL_SchmAbnRow);
                return tL_SchmAbnRow;
            }

            // Token: 0x06000ED1 RID: 3793 RVA: 0x000743BC File Offset: 0x000725BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tL_SchmAbnRow FindByid(int id)
            {
                return (DataSetGES.tL_SchmAbnRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06000ED2 RID: 3794 RVA: 0x000743EC File Offset: 0x000725EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tL_SchmAbnDataTable tL_SchmAbnDataTable = (DataSetGES.tL_SchmAbnDataTable)base.Clone();
                tL_SchmAbnDataTable.InitVars();
                return tL_SchmAbnDataTable;
            }

            // Token: 0x06000ED3 RID: 3795 RVA: 0x0007440C File Offset: 0x0007260C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tL_SchmAbnDataTable();
            }

            // Token: 0x06000ED4 RID: 3796 RVA: 0x00074414 File Offset: 0x00072614
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnidAbn = base.Columns["idAbn"];
                this.columnidAbnObj = base.Columns["idAbnObj"];
                this.columnidPoint = base.Columns["idPoint"];
                this.columnidDoc = base.Columns["idDoc"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
            }

            // Token: 0x06000ED5 RID: 3797 RVA: 0x000744BC File Offset: 0x000726BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnidAbn = new DataColumn("idAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbn);
                this.columnidAbnObj = new DataColumn("idAbnObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidAbnObj);
                this.columnidPoint = new DataColumn("idPoint", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidPoint);
                this.columnidDoc = new DataColumn("idDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidDoc);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidSchmObj.AllowDBNull = false;
            }

            // Token: 0x06000ED6 RID: 3798 RVA: 0x00074681 File Offset: 0x00072881
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tL_SchmAbnRow NewtL_SchmAbnRow()
            {
                return (DataSetGES.tL_SchmAbnRow)base.NewRow();
            }

            // Token: 0x06000ED7 RID: 3799 RVA: 0x0007468E File Offset: 0x0007288E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tL_SchmAbnRow(builder);
            }

            // Token: 0x06000ED8 RID: 3800 RVA: 0x00074696 File Offset: 0x00072896
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tL_SchmAbnRow);
            }

            // Token: 0x06000ED9 RID: 3801 RVA: 0x000746A2 File Offset: 0x000728A2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tL_SchmAbnRowChanged != null)
                {
                    this.tL_SchmAbnRowChanged(this, new DataSetGES.tL_SchmAbnRowChangeEvent((DataSetGES.tL_SchmAbnRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EDA RID: 3802 RVA: 0x000746D5 File Offset: 0x000728D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tL_SchmAbnRowChanging != null)
                {
                    this.tL_SchmAbnRowChanging(this, new DataSetGES.tL_SchmAbnRowChangeEvent((DataSetGES.tL_SchmAbnRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EDB RID: 3803 RVA: 0x00074708 File Offset: 0x00072908
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tL_SchmAbnRowDeleted != null)
                {
                    this.tL_SchmAbnRowDeleted(this, new DataSetGES.tL_SchmAbnRowChangeEvent((DataSetGES.tL_SchmAbnRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EDC RID: 3804 RVA: 0x0007473B File Offset: 0x0007293B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tL_SchmAbnRowDeleting != null)
                {
                    this.tL_SchmAbnRowDeleting(this, new DataSetGES.tL_SchmAbnRowChangeEvent((DataSetGES.tL_SchmAbnRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EDD RID: 3805 RVA: 0x0007476E File Offset: 0x0007296E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetL_SchmAbnRow(DataSetGES.tL_SchmAbnRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000EDE RID: 3806 RVA: 0x0007477C File Offset: 0x0007297C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tL_SchmAbnDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000880 RID: 2176
            private DataColumn columnid;

            // Token: 0x04000881 RID: 2177
            private DataColumn columnidSchmObj;

            // Token: 0x04000882 RID: 2178
            private DataColumn columnidAbn;

            // Token: 0x04000883 RID: 2179
            private DataColumn columnidAbnObj;

            // Token: 0x04000884 RID: 2180
            private DataColumn columnidPoint;

            // Token: 0x04000885 RID: 2181
            private DataColumn columnidDoc;

            // Token: 0x04000886 RID: 2182
            private DataColumn columnTypeDoc;
        }

        // Token: 0x020000E8 RID: 232
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasAbnObjDataTable : TypedTableBase<DataSetGES.vJ_MeasAbnObjRow>
        {
            // Token: 0x06000EDF RID: 3807 RVA: 0x00074974 File Offset: 0x00072B74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasAbnObjDataTable()
            {
                base.TableName = "vJ_MeasAbnObj";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000EE0 RID: 3808 RVA: 0x0007499C File Offset: 0x00072B9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasAbnObjDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000EE1 RID: 3809 RVA: 0x00074A44 File Offset: 0x00072C44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasAbnObjDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700036B RID: 875
            // (get) Token: 0x06000EE2 RID: 3810 RVA: 0x00074A54 File Offset: 0x00072C54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmObjColumn
            {
                get
                {
                    return this.columnidSchmObj;
                }
            }

            // Token: 0x1700036C RID: 876
            // (get) Token: 0x06000EE3 RID: 3811 RVA: 0x00074A5C File Offset: 0x00072C5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            // Token: 0x1700036D RID: 877
            // (get) Token: 0x06000EE4 RID: 3812 RVA: 0x00074A64 File Offset: 0x00072C64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn StreetColumn
            {
                get
                {
                    return this.columnStreet;
                }
            }

            // Token: 0x1700036E RID: 878
            // (get) Token: 0x06000EE5 RID: 3813 RVA: 0x00074A6C File Offset: 0x00072C6C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn HouseColumn
            {
                get
                {
                    return this.columnHouse;
                }
            }

            // Token: 0x1700036F RID: 879
            // (get) Token: 0x06000EE6 RID: 3814 RVA: 0x00074A74 File Offset: 0x00072C74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000370 RID: 880
            // (get) Token: 0x06000EE7 RID: 3815 RVA: 0x00074A7C File Offset: 0x00072C7C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn codeAbonentColumn
            {
                get
                {
                    return this.columncodeAbonent;
                }
            }

            // Token: 0x17000371 RID: 881
            // (get) Token: 0x06000EE8 RID: 3816 RVA: 0x00074A84 File Offset: 0x00072C84
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idsColumn
            {
                get
                {
                    return this.columnids;
                }
            }

            // Token: 0x17000372 RID: 882
            // (get) Token: 0x06000EE9 RID: 3817 RVA: 0x00074A8C File Offset: 0x00072C8C
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000373 RID: 883
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasAbnObjRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasAbnObjRow)base.Rows[index];
                }
            }

            // Token: 0x140000B9 RID: 185
            // (add) Token: 0x06000EEB RID: 3819 RVA: 0x00074AAC File Offset: 0x00072CAC
            // (remove) Token: 0x06000EEC RID: 3820 RVA: 0x00074AE4 File Offset: 0x00072CE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAbnObjRowChangeEventHandler vJ_MeasAbnObjRowChanging;

            // Token: 0x140000BA RID: 186
            // (add) Token: 0x06000EED RID: 3821 RVA: 0x00074B1C File Offset: 0x00072D1C
            // (remove) Token: 0x06000EEE RID: 3822 RVA: 0x00074B54 File Offset: 0x00072D54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAbnObjRowChangeEventHandler vJ_MeasAbnObjRowChanged;

            // Token: 0x140000BB RID: 187
            // (add) Token: 0x06000EEF RID: 3823 RVA: 0x00074B8C File Offset: 0x00072D8C
            // (remove) Token: 0x06000EF0 RID: 3824 RVA: 0x00074BC4 File Offset: 0x00072DC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAbnObjRowChangeEventHandler vJ_MeasAbnObjRowDeleting;

            // Token: 0x140000BC RID: 188
            // (add) Token: 0x06000EF1 RID: 3825 RVA: 0x00074BFC File Offset: 0x00072DFC
            // (remove) Token: 0x06000EF2 RID: 3826 RVA: 0x00074C34 File Offset: 0x00072E34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAbnObjRowChangeEventHandler vJ_MeasAbnObjRowDeleted;

            // Token: 0x06000EF3 RID: 3827 RVA: 0x00074C69 File Offset: 0x00072E69
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_MeasAbnObjRow(DataSetGES.vJ_MeasAbnObjRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000EF4 RID: 3828 RVA: 0x00074C78 File Offset: 0x00072E78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasAbnObjRow AddvJ_MeasAbnObjRow(int idSchmObj, int TypeDoc, string Street, string House, string Name, int codeAbonent, string ids)
            {
                DataSetGES.vJ_MeasAbnObjRow vJ_MeasAbnObjRow = (DataSetGES.vJ_MeasAbnObjRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idSchmObj,
                    TypeDoc,
                    Street,
                    House,
                    Name,
                    codeAbonent,
                    ids
                };
                vJ_MeasAbnObjRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasAbnObjRow);
                return vJ_MeasAbnObjRow;
            }

            // Token: 0x06000EF5 RID: 3829 RVA: 0x00074CE0 File Offset: 0x00072EE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasAbnObjDataTable vJ_MeasAbnObjDataTable = (DataSetGES.vJ_MeasAbnObjDataTable)base.Clone();
                vJ_MeasAbnObjDataTable.InitVars();
                return vJ_MeasAbnObjDataTable;
            }

            // Token: 0x06000EF6 RID: 3830 RVA: 0x00074D00 File Offset: 0x00072F00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasAbnObjDataTable();
            }

            // Token: 0x06000EF7 RID: 3831 RVA: 0x00074D08 File Offset: 0x00072F08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidSchmObj = base.Columns["idSchmObj"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnStreet = base.Columns["Street"];
                this.columnHouse = base.Columns["House"];
                this.columnName = base.Columns["Name"];
                this.columncodeAbonent = base.Columns["codeAbonent"];
                this.columnids = base.Columns["ids"];
            }

            // Token: 0x06000EF8 RID: 3832 RVA: 0x00074DB0 File Offset: 0x00072FB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidSchmObj = new DataColumn("idSchmObj", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmObj);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnStreet = new DataColumn("Street", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnHouse = new DataColumn("House", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnHouse);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columncodeAbonent = new DataColumn("codeAbonent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columncodeAbonent);
                this.columnids = new DataColumn("ids", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnids);
                this.columnidSchmObj.AllowDBNull = false;
                this.columnStreet.ReadOnly = true;
                this.columnStreet.MaxLength = 92;
                this.columnName.MaxLength = 255;
                this.columnids.ReadOnly = true;
                this.columnids.MaxLength = 2147483647;
            }

            // Token: 0x06000EF9 RID: 3833 RVA: 0x00074F49 File Offset: 0x00073149
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasAbnObjRow NewvJ_MeasAbnObjRow()
            {
                return (DataSetGES.vJ_MeasAbnObjRow)base.NewRow();
            }

            // Token: 0x06000EFA RID: 3834 RVA: 0x00074F56 File Offset: 0x00073156
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasAbnObjRow(builder);
            }

            // Token: 0x06000EFB RID: 3835 RVA: 0x00074F5E File Offset: 0x0007315E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasAbnObjRow);
            }

            // Token: 0x06000EFC RID: 3836 RVA: 0x00074F6A File Offset: 0x0007316A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasAbnObjRowChanged != null)
                {
                    this.vJ_MeasAbnObjRowChanged(this, new DataSetGES.vJ_MeasAbnObjRowChangeEvent((DataSetGES.vJ_MeasAbnObjRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EFD RID: 3837 RVA: 0x00074F9D File Offset: 0x0007319D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasAbnObjRowChanging != null)
                {
                    this.vJ_MeasAbnObjRowChanging(this, new DataSetGES.vJ_MeasAbnObjRowChangeEvent((DataSetGES.vJ_MeasAbnObjRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EFE RID: 3838 RVA: 0x00074FD0 File Offset: 0x000731D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasAbnObjRowDeleted != null)
                {
                    this.vJ_MeasAbnObjRowDeleted(this, new DataSetGES.vJ_MeasAbnObjRowChangeEvent((DataSetGES.vJ_MeasAbnObjRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000EFF RID: 3839 RVA: 0x00075003 File Offset: 0x00073203
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasAbnObjRowDeleting != null)
                {
                    this.vJ_MeasAbnObjRowDeleting(this, new DataSetGES.vJ_MeasAbnObjRowChangeEvent((DataSetGES.vJ_MeasAbnObjRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F00 RID: 3840 RVA: 0x00075036 File Offset: 0x00073236
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_MeasAbnObjRow(DataSetGES.vJ_MeasAbnObjRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000F01 RID: 3841 RVA: 0x00075044 File Offset: 0x00073244
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasAbnObjDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400088B RID: 2187
            private DataColumn columnidSchmObj;

            // Token: 0x0400088C RID: 2188
            private DataColumn columnTypeDoc;

            // Token: 0x0400088D RID: 2189
            private DataColumn columnStreet;

            // Token: 0x0400088E RID: 2190
            private DataColumn columnHouse;

            // Token: 0x0400088F RID: 2191
            private DataColumn columnName;

            // Token: 0x04000890 RID: 2192
            private DataColumn columncodeAbonent;

            // Token: 0x04000891 RID: 2193
            private DataColumn columnids;
        }

        // Token: 0x020000E9 RID: 233
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_GetMeasYearsDataTable : TypedTableBase<DataSetGES.vJ_GetMeasYearsRow>
        {
            // Token: 0x06000F02 RID: 3842 RVA: 0x0007523C File Offset: 0x0007343C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_GetMeasYearsDataTable()
            {
                base.TableName = "vJ_GetMeasYears";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000F03 RID: 3843 RVA: 0x00075264 File Offset: 0x00073464
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_GetMeasYearsDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000F04 RID: 3844 RVA: 0x0007530C File Offset: 0x0007350C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_GetMeasYearsDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000374 RID: 884
            // (get) Token: 0x06000F05 RID: 3845 RVA: 0x0007531C File Offset: 0x0007351C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }

            // Token: 0x17000375 RID: 885
            // (get) Token: 0x06000F06 RID: 3846 RVA: 0x00075324 File Offset: 0x00073524
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            // Token: 0x17000376 RID: 886
            // (get) Token: 0x06000F07 RID: 3847 RVA: 0x0007532C File Offset: 0x0007352C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            // Token: 0x17000377 RID: 887
            // (get) Token: 0x06000F08 RID: 3848 RVA: 0x00075334 File Offset: 0x00073534
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000378 RID: 888
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_GetMeasYearsRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_GetMeasYearsRow)base.Rows[index];
                }
            }

            // Token: 0x140000BD RID: 189
            // (add) Token: 0x06000F0A RID: 3850 RVA: 0x00075354 File Offset: 0x00073554
            // (remove) Token: 0x06000F0B RID: 3851 RVA: 0x0007538C File Offset: 0x0007358C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_GetMeasYearsRowChangeEventHandler vJ_GetMeasYearsRowChanging;

            // Token: 0x140000BE RID: 190
            // (add) Token: 0x06000F0C RID: 3852 RVA: 0x000753C4 File Offset: 0x000735C4
            // (remove) Token: 0x06000F0D RID: 3853 RVA: 0x000753FC File Offset: 0x000735FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_GetMeasYearsRowChangeEventHandler vJ_GetMeasYearsRowChanged;

            // Token: 0x140000BF RID: 191
            // (add) Token: 0x06000F0E RID: 3854 RVA: 0x00075434 File Offset: 0x00073634
            // (remove) Token: 0x06000F0F RID: 3855 RVA: 0x0007546C File Offset: 0x0007366C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_GetMeasYearsRowChangeEventHandler vJ_GetMeasYearsRowDeleting;

            // Token: 0x140000C0 RID: 192
            // (add) Token: 0x06000F10 RID: 3856 RVA: 0x000754A4 File Offset: 0x000736A4
            // (remove) Token: 0x06000F11 RID: 3857 RVA: 0x000754DC File Offset: 0x000736DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_GetMeasYearsRowChangeEventHandler vJ_GetMeasYearsRowDeleted;

            // Token: 0x06000F12 RID: 3858 RVA: 0x00075511 File Offset: 0x00073711
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_GetMeasYearsRow(DataSetGES.vJ_GetMeasYearsRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000F13 RID: 3859 RVA: 0x00075520 File Offset: 0x00073720
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_GetMeasYearsRow AddvJ_GetMeasYearsRow(int Year, int idObjList, int TypeDoc)
            {
                DataSetGES.vJ_GetMeasYearsRow vJ_GetMeasYearsRow = (DataSetGES.vJ_GetMeasYearsRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Year,
                    idObjList,
                    TypeDoc
                };
                vJ_GetMeasYearsRow.ItemArray = itemArray;
                base.Rows.Add(vJ_GetMeasYearsRow);
                return vJ_GetMeasYearsRow;
            }

            // Token: 0x06000F14 RID: 3860 RVA: 0x00075574 File Offset: 0x00073774
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_GetMeasYearsDataTable vJ_GetMeasYearsDataTable = (DataSetGES.vJ_GetMeasYearsDataTable)base.Clone();
                vJ_GetMeasYearsDataTable.InitVars();
                return vJ_GetMeasYearsDataTable;
            }

            // Token: 0x06000F15 RID: 3861 RVA: 0x00075594 File Offset: 0x00073794
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_GetMeasYearsDataTable();
            }

            // Token: 0x06000F16 RID: 3862 RVA: 0x0007559C File Offset: 0x0007379C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnYear = base.Columns["Year"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
            }

            // Token: 0x06000F17 RID: 3863 RVA: 0x000755EC File Offset: 0x000737EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnYear.ReadOnly = true;
                this.columnidObjList.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
            }

            // Token: 0x06000F18 RID: 3864 RVA: 0x000756A4 File Offset: 0x000738A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_GetMeasYearsRow NewvJ_GetMeasYearsRow()
            {
                return (DataSetGES.vJ_GetMeasYearsRow)base.NewRow();
            }

            // Token: 0x06000F19 RID: 3865 RVA: 0x000756B1 File Offset: 0x000738B1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_GetMeasYearsRow(builder);
            }

            // Token: 0x06000F1A RID: 3866 RVA: 0x000756B9 File Offset: 0x000738B9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_GetMeasYearsRow);
            }

            // Token: 0x06000F1B RID: 3867 RVA: 0x000756C5 File Offset: 0x000738C5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_GetMeasYearsRowChanged != null)
                {
                    this.vJ_GetMeasYearsRowChanged(this, new DataSetGES.vJ_GetMeasYearsRowChangeEvent((DataSetGES.vJ_GetMeasYearsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F1C RID: 3868 RVA: 0x000756F8 File Offset: 0x000738F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_GetMeasYearsRowChanging != null)
                {
                    this.vJ_GetMeasYearsRowChanging(this, new DataSetGES.vJ_GetMeasYearsRowChangeEvent((DataSetGES.vJ_GetMeasYearsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F1D RID: 3869 RVA: 0x0007572B File Offset: 0x0007392B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_GetMeasYearsRowDeleted != null)
                {
                    this.vJ_GetMeasYearsRowDeleted(this, new DataSetGES.vJ_GetMeasYearsRowChangeEvent((DataSetGES.vJ_GetMeasYearsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F1E RID: 3870 RVA: 0x0007575E File Offset: 0x0007395E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_GetMeasYearsRowDeleting != null)
                {
                    this.vJ_GetMeasYearsRowDeleting(this, new DataSetGES.vJ_GetMeasYearsRowChangeEvent((DataSetGES.vJ_GetMeasYearsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F1F RID: 3871 RVA: 0x00075791 File Offset: 0x00073991
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_GetMeasYearsRow(DataSetGES.vJ_GetMeasYearsRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000F20 RID: 3872 RVA: 0x000757A0 File Offset: 0x000739A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_GetMeasYearsDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000896 RID: 2198
            private DataColumn columnYear;

            // Token: 0x04000897 RID: 2199
            private DataColumn columnidObjList;

            // Token: 0x04000898 RID: 2200
            private DataColumn columnTypeDoc;
        }

        // Token: 0x020000EA RID: 234
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_GetCellLVByTransfDataTable : TypedTableBase<DataSetGES.fn_J_GetCellLVByTransfRow>
        {
            // Token: 0x06000F21 RID: 3873 RVA: 0x00075998 File Offset: 0x00073B98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetCellLVByTransfDataTable()
            {
                base.TableName = "fn_J_GetCellLVByTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000F22 RID: 3874 RVA: 0x000759C0 File Offset: 0x00073BC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetCellLVByTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000F23 RID: 3875 RVA: 0x00075A68 File Offset: 0x00073C68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetCellLVByTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000379 RID: 889
            // (get) Token: 0x06000F24 RID: 3876 RVA: 0x00075A78 File Offset: 0x00073C78
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x1700037A RID: 890
            // (get) Token: 0x06000F25 RID: 3877 RVA: 0x00075A80 File Offset: 0x00073C80
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x1700037B RID: 891
            // (get) Token: 0x06000F26 RID: 3878 RVA: 0x00075A88 File Offset: 0x00073C88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700037C RID: 892
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellLVByTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_GetCellLVByTransfRow)base.Rows[index];
                }
            }

            // Token: 0x140000C1 RID: 193
            // (add) Token: 0x06000F28 RID: 3880 RVA: 0x00075AA8 File Offset: 0x00073CA8
            // (remove) Token: 0x06000F29 RID: 3881 RVA: 0x00075AE0 File Offset: 0x00073CE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellLVByTransfRowChangeEventHandler fn_J_GetCellLVByTransfRowChanging;

            // Token: 0x140000C2 RID: 194
            // (add) Token: 0x06000F2A RID: 3882 RVA: 0x00075B18 File Offset: 0x00073D18
            // (remove) Token: 0x06000F2B RID: 3883 RVA: 0x00075B50 File Offset: 0x00073D50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellLVByTransfRowChangeEventHandler fn_J_GetCellLVByTransfRowChanged;

            // Token: 0x140000C3 RID: 195
            // (add) Token: 0x06000F2C RID: 3884 RVA: 0x00075B88 File Offset: 0x00073D88
            // (remove) Token: 0x06000F2D RID: 3885 RVA: 0x00075BC0 File Offset: 0x00073DC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellLVByTransfRowChangeEventHandler fn_J_GetCellLVByTransfRowDeleting;

            // Token: 0x140000C4 RID: 196
            // (add) Token: 0x06000F2E RID: 3886 RVA: 0x00075BF8 File Offset: 0x00073DF8
            // (remove) Token: 0x06000F2F RID: 3887 RVA: 0x00075C30 File Offset: 0x00073E30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellLVByTransfRowChangeEventHandler fn_J_GetCellLVByTransfRowDeleted;

            // Token: 0x06000F30 RID: 3888 RVA: 0x00075C65 File Offset: 0x00073E65
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfn_J_GetCellLVByTransfRow(DataSetGES.fn_J_GetCellLVByTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000F31 RID: 3889 RVA: 0x00075C74 File Offset: 0x00073E74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetCellLVByTransfRow Addfn_J_GetCellLVByTransfRow(int Id, string Name)
            {
                DataSetGES.fn_J_GetCellLVByTransfRow fn_J_GetCellLVByTransfRow = (DataSetGES.fn_J_GetCellLVByTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    Name
                };
                fn_J_GetCellLVByTransfRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_GetCellLVByTransfRow);
                return fn_J_GetCellLVByTransfRow;
            }

            // Token: 0x06000F32 RID: 3890 RVA: 0x00075CB8 File Offset: 0x00073EB8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellLVByTransfDataTable fn_J_GetCellLVByTransfDataTable = (DataSetGES.fn_J_GetCellLVByTransfDataTable)base.Clone();
                fn_J_GetCellLVByTransfDataTable.InitVars();
                return fn_J_GetCellLVByTransfDataTable;
            }

            // Token: 0x06000F33 RID: 3891 RVA: 0x00075CD8 File Offset: 0x00073ED8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellLVByTransfDataTable();
            }

            // Token: 0x06000F34 RID: 3892 RVA: 0x00075CDF File Offset: 0x00073EDF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x06000F35 RID: 3893 RVA: 0x00075D10 File Offset: 0x00073F10
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnName.MaxLength = 512;
            }

            // Token: 0x06000F36 RID: 3894 RVA: 0x00075D87 File Offset: 0x00073F87
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellLVByTransfRow Newfn_J_GetCellLVByTransfRow()
            {
                return (DataSetGES.fn_J_GetCellLVByTransfRow)base.NewRow();
            }

            // Token: 0x06000F37 RID: 3895 RVA: 0x00075D94 File Offset: 0x00073F94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_GetCellLVByTransfRow(builder);
            }

            // Token: 0x06000F38 RID: 3896 RVA: 0x00075D9C File Offset: 0x00073F9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_GetCellLVByTransfRow);
            }

            // Token: 0x06000F39 RID: 3897 RVA: 0x00075DA8 File Offset: 0x00073FA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_GetCellLVByTransfRowChanged != null)
                {
                    this.fn_J_GetCellLVByTransfRowChanged(this, new DataSetGES.fn_J_GetCellLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F3A RID: 3898 RVA: 0x00075DDB File Offset: 0x00073FDB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_GetCellLVByTransfRowChanging != null)
                {
                    this.fn_J_GetCellLVByTransfRowChanging(this, new DataSetGES.fn_J_GetCellLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F3B RID: 3899 RVA: 0x00075E0E File Offset: 0x0007400E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_GetCellLVByTransfRowDeleted != null)
                {
                    this.fn_J_GetCellLVByTransfRowDeleted(this, new DataSetGES.fn_J_GetCellLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F3C RID: 3900 RVA: 0x00075E41 File Offset: 0x00074041
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_GetCellLVByTransfRowDeleting != null)
                {
                    this.fn_J_GetCellLVByTransfRowDeleting(this, new DataSetGES.fn_J_GetCellLVByTransfRowChangeEvent((DataSetGES.fn_J_GetCellLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F3D RID: 3901 RVA: 0x00075E74 File Offset: 0x00074074
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefn_J_GetCellLVByTransfRow(DataSetGES.fn_J_GetCellLVByTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000F3E RID: 3902 RVA: 0x00075E84 File Offset: 0x00074084
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_GetCellLVByTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400089D RID: 2205
            private DataColumn columnId;

            // Token: 0x0400089E RID: 2206
            private DataColumn columnName;
        }

        // Token: 0x020000EB RID: 235
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_MeasCableCalcResultsDataTable : TypedTableBase<DataSetGES.fn_J_MeasCableCalcResultsRow>
        {
            // Token: 0x06000F3F RID: 3903 RVA: 0x0007607C File Offset: 0x0007427C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_MeasCableCalcResultsDataTable()
            {
                base.TableName = "fn_J_MeasCableCalcResults";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000F40 RID: 3904 RVA: 0x000760A4 File Offset: 0x000742A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_MeasCableCalcResultsDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000F41 RID: 3905 RVA: 0x0007614C File Offset: 0x0007434C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fn_J_MeasCableCalcResultsDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700037D RID: 893
            // (get) Token: 0x06000F42 RID: 3906 RVA: 0x0007615C File Offset: 0x0007435C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIadColumn
            {
                get
                {
                    return this.columnSumIad;
                }
            }

            // Token: 0x1700037E RID: 894
            // (get) Token: 0x06000F43 RID: 3907 RVA: 0x00076164 File Offset: 0x00074364
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIanColumn
            {
                get
                {
                    return this.columnSumIan;
                }
            }

            // Token: 0x1700037F RID: 895
            // (get) Token: 0x06000F44 RID: 3908 RVA: 0x0007616C File Offset: 0x0007436C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIbdColumn
            {
                get
                {
                    return this.columnSumIbd;
                }
            }

            // Token: 0x17000380 RID: 896
            // (get) Token: 0x06000F45 RID: 3909 RVA: 0x00076174 File Offset: 0x00074374
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIbnColumn
            {
                get
                {
                    return this.columnSumIbn;
                }
            }

            // Token: 0x17000381 RID: 897
            // (get) Token: 0x06000F46 RID: 3910 RVA: 0x0007617C File Offset: 0x0007437C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIcdColumn
            {
                get
                {
                    return this.columnSumIcd;
                }
            }

            // Token: 0x17000382 RID: 898
            // (get) Token: 0x06000F47 RID: 3911 RVA: 0x00076184 File Offset: 0x00074384
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIcnColumn
            {
                get
                {
                    return this.columnSumIcn;
                }
            }

            // Token: 0x17000383 RID: 899
            // (get) Token: 0x06000F48 RID: 3912 RVA: 0x0007618C File Offset: 0x0007438C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIodColumn
            {
                get
                {
                    return this.columnSumIod;
                }
            }

            // Token: 0x17000384 RID: 900
            // (get) Token: 0x06000F49 RID: 3913 RVA: 0x00076194 File Offset: 0x00074394
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIonColumn
            {
                get
                {
                    return this.columnSumIon;
                }
            }

            // Token: 0x17000385 RID: 901
            // (get) Token: 0x06000F4A RID: 3914 RVA: 0x0007619C File Offset: 0x0007439C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AvgIdColumn
            {
                get
                {
                    return this.columnAvgId;
                }
            }

            // Token: 0x17000386 RID: 902
            // (get) Token: 0x06000F4B RID: 3915 RVA: 0x000761A4 File Offset: 0x000743A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AvgInColumn
            {
                get
                {
                    return this.columnAvgIn;
                }
            }

            // Token: 0x17000387 RID: 903
            // (get) Token: 0x06000F4C RID: 3916 RVA: 0x000761AC File Offset: 0x000743AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KNTdColumn
            {
                get
                {
                    return this.columnKNTd;
                }
            }

            // Token: 0x17000388 RID: 904
            // (get) Token: 0x06000F4D RID: 3917 RVA: 0x000761B4 File Offset: 0x000743B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KNTnColumn
            {
                get
                {
                    return this.columnKNTn;
                }
            }

            // Token: 0x17000389 RID: 905
            // (get) Token: 0x06000F4E RID: 3918 RVA: 0x000761BC File Offset: 0x000743BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KNFdColumn
            {
                get
                {
                    return this.columnKNFd;
                }
            }

            // Token: 0x1700038A RID: 906
            // (get) Token: 0x06000F4F RID: 3919 RVA: 0x000761C4 File Offset: 0x000743C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KNFnColumn
            {
                get
                {
                    return this.columnKNFn;
                }
            }

            // Token: 0x1700038B RID: 907
            // (get) Token: 0x06000F50 RID: 3920 RVA: 0x000761CC File Offset: 0x000743CC
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700038C RID: 908
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_MeasCableCalcResultsRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_MeasCableCalcResultsRow)base.Rows[index];
                }
            }

            // Token: 0x140000C5 RID: 197
            // (add) Token: 0x06000F52 RID: 3922 RVA: 0x000761EC File Offset: 0x000743EC
            // (remove) Token: 0x06000F53 RID: 3923 RVA: 0x00076224 File Offset: 0x00074424
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasCableCalcResultsRowChangeEventHandler fn_J_MeasCableCalcResultsRowChanging;

            // Token: 0x140000C6 RID: 198
            // (add) Token: 0x06000F54 RID: 3924 RVA: 0x0007625C File Offset: 0x0007445C
            // (remove) Token: 0x06000F55 RID: 3925 RVA: 0x00076294 File Offset: 0x00074494
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasCableCalcResultsRowChangeEventHandler fn_J_MeasCableCalcResultsRowChanged;

            // Token: 0x140000C7 RID: 199
            // (add) Token: 0x06000F56 RID: 3926 RVA: 0x000762CC File Offset: 0x000744CC
            // (remove) Token: 0x06000F57 RID: 3927 RVA: 0x00076304 File Offset: 0x00074504
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasCableCalcResultsRowChangeEventHandler fn_J_MeasCableCalcResultsRowDeleting;

            // Token: 0x140000C8 RID: 200
            // (add) Token: 0x06000F58 RID: 3928 RVA: 0x0007633C File Offset: 0x0007453C
            // (remove) Token: 0x06000F59 RID: 3929 RVA: 0x00076374 File Offset: 0x00074574
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasCableCalcResultsRowChangeEventHandler fn_J_MeasCableCalcResultsRowDeleted;

            // Token: 0x06000F5A RID: 3930 RVA: 0x000763A9 File Offset: 0x000745A9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfn_J_MeasCableCalcResultsRow(DataSetGES.fn_J_MeasCableCalcResultsRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000F5B RID: 3931 RVA: 0x000763B8 File Offset: 0x000745B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_MeasCableCalcResultsRow Addfn_J_MeasCableCalcResultsRow(int SumIad, int SumIan, int SumIbd, int SumIbn, int SumIcd, int SumIcn, int SumIod, int SumIon, int AvgId, int AvgIn, int KNTd, int KNTn, int KNFd, int KNFn)
            {
                DataSetGES.fn_J_MeasCableCalcResultsRow fn_J_MeasCableCalcResultsRow = (DataSetGES.fn_J_MeasCableCalcResultsRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    SumIad,
                    SumIan,
                    SumIbd,
                    SumIbn,
                    SumIcd,
                    SumIcn,
                    SumIod,
                    SumIon,
                    AvgId,
                    AvgIn,
                    KNTd,
                    KNTn,
                    KNFd,
                    KNFn
                };
                fn_J_MeasCableCalcResultsRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_MeasCableCalcResultsRow);
                return fn_J_MeasCableCalcResultsRow;
            }

            // Token: 0x06000F5C RID: 3932 RVA: 0x00076480 File Offset: 0x00074680
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_MeasCableCalcResultsDataTable fn_J_MeasCableCalcResultsDataTable = (DataSetGES.fn_J_MeasCableCalcResultsDataTable)base.Clone();
                fn_J_MeasCableCalcResultsDataTable.InitVars();
                return fn_J_MeasCableCalcResultsDataTable;
            }

            // Token: 0x06000F5D RID: 3933 RVA: 0x000764A0 File Offset: 0x000746A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_MeasCableCalcResultsDataTable();
            }

            // Token: 0x06000F5E RID: 3934 RVA: 0x000764A8 File Offset: 0x000746A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnSumIad = base.Columns["SumIad"];
                this.columnSumIan = base.Columns["SumIan"];
                this.columnSumIbd = base.Columns["SumIbd"];
                this.columnSumIbn = base.Columns["SumIbn"];
                this.columnSumIcd = base.Columns["SumIcd"];
                this.columnSumIcn = base.Columns["SumIcn"];
                this.columnSumIod = base.Columns["SumIod"];
                this.columnSumIon = base.Columns["SumIon"];
                this.columnAvgId = base.Columns["AvgId"];
                this.columnAvgIn = base.Columns["AvgIn"];
                this.columnKNTd = base.Columns["KNTd"];
                this.columnKNTn = base.Columns["KNTn"];
                this.columnKNFd = base.Columns["KNFd"];
                this.columnKNFn = base.Columns["KNFn"];
            }

            // Token: 0x06000F5F RID: 3935 RVA: 0x000765EC File Offset: 0x000747EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnSumIad = new DataColumn("SumIad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIad);
                this.columnSumIan = new DataColumn("SumIan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIan);
                this.columnSumIbd = new DataColumn("SumIbd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbd);
                this.columnSumIbn = new DataColumn("SumIbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbn);
                this.columnSumIcd = new DataColumn("SumIcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcd);
                this.columnSumIcn = new DataColumn("SumIcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcn);
                this.columnSumIod = new DataColumn("SumIod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIod);
                this.columnSumIon = new DataColumn("SumIon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIon);
                this.columnAvgId = new DataColumn("AvgId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnAvgId);
                this.columnAvgIn = new DataColumn("AvgIn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnAvgIn);
                this.columnKNTd = new DataColumn("KNTd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNTd);
                this.columnKNTn = new DataColumn("KNTn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNTn);
                this.columnKNFd = new DataColumn("KNFd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNFd);
                this.columnKNFn = new DataColumn("KNFn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKNFn);
            }

            // Token: 0x06000F60 RID: 3936 RVA: 0x0007686F File Offset: 0x00074A6F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_MeasCableCalcResultsRow Newfn_J_MeasCableCalcResultsRow()
            {
                return (DataSetGES.fn_J_MeasCableCalcResultsRow)base.NewRow();
            }

            // Token: 0x06000F61 RID: 3937 RVA: 0x0007687C File Offset: 0x00074A7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_MeasCableCalcResultsRow(builder);
            }

            // Token: 0x06000F62 RID: 3938 RVA: 0x00076884 File Offset: 0x00074A84
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_MeasCableCalcResultsRow);
            }

            // Token: 0x06000F63 RID: 3939 RVA: 0x00076890 File Offset: 0x00074A90
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_MeasCableCalcResultsRowChanged != null)
                {
                    this.fn_J_MeasCableCalcResultsRowChanged(this, new DataSetGES.fn_J_MeasCableCalcResultsRowChangeEvent((DataSetGES.fn_J_MeasCableCalcResultsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F64 RID: 3940 RVA: 0x000768C3 File Offset: 0x00074AC3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_MeasCableCalcResultsRowChanging != null)
                {
                    this.fn_J_MeasCableCalcResultsRowChanging(this, new DataSetGES.fn_J_MeasCableCalcResultsRowChangeEvent((DataSetGES.fn_J_MeasCableCalcResultsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F65 RID: 3941 RVA: 0x000768F6 File Offset: 0x00074AF6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_MeasCableCalcResultsRowDeleted != null)
                {
                    this.fn_J_MeasCableCalcResultsRowDeleted(this, new DataSetGES.fn_J_MeasCableCalcResultsRowChangeEvent((DataSetGES.fn_J_MeasCableCalcResultsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F66 RID: 3942 RVA: 0x00076929 File Offset: 0x00074B29
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_MeasCableCalcResultsRowDeleting != null)
                {
                    this.fn_J_MeasCableCalcResultsRowDeleting(this, new DataSetGES.fn_J_MeasCableCalcResultsRowChangeEvent((DataSetGES.fn_J_MeasCableCalcResultsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F67 RID: 3943 RVA: 0x0007695C File Offset: 0x00074B5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefn_J_MeasCableCalcResultsRow(DataSetGES.fn_J_MeasCableCalcResultsRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000F68 RID: 3944 RVA: 0x0007696C File Offset: 0x00074B6C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_MeasCableCalcResultsDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008A3 RID: 2211
            private DataColumn columnSumIad;

            // Token: 0x040008A4 RID: 2212
            private DataColumn columnSumIan;

            // Token: 0x040008A5 RID: 2213
            private DataColumn columnSumIbd;

            // Token: 0x040008A6 RID: 2214
            private DataColumn columnSumIbn;

            // Token: 0x040008A7 RID: 2215
            private DataColumn columnSumIcd;

            // Token: 0x040008A8 RID: 2216
            private DataColumn columnSumIcn;

            // Token: 0x040008A9 RID: 2217
            private DataColumn columnSumIod;

            // Token: 0x040008AA RID: 2218
            private DataColumn columnSumIon;

            // Token: 0x040008AB RID: 2219
            private DataColumn columnAvgId;

            // Token: 0x040008AC RID: 2220
            private DataColumn columnAvgIn;

            // Token: 0x040008AD RID: 2221
            private DataColumn columnKNTd;

            // Token: 0x040008AE RID: 2222
            private DataColumn columnKNTn;

            // Token: 0x040008AF RID: 2223
            private DataColumn columnKNFd;

            // Token: 0x040008B0 RID: 2224
            private DataColumn columnKNFn;
        }

        // Token: 0x020000EC RID: 236
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tR_CableMakeupDataTable : TypedTableBase<DataSetGES.tR_CableMakeupRow>
        {
            // Token: 0x06000F69 RID: 3945 RVA: 0x00076B64 File Offset: 0x00074D64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableMakeupDataTable()
            {
                base.TableName = "tR_CableMakeup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000F6A RID: 3946 RVA: 0x00076B8C File Offset: 0x00074D8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CableMakeupDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000F6B RID: 3947 RVA: 0x00076C34 File Offset: 0x00074E34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tR_CableMakeupDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700038D RID: 909
            // (get) Token: 0x06000F6C RID: 3948 RVA: 0x00076C44 File Offset: 0x00074E44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CableMakeupColumn
            {
                get
                {
                    return this.columnCableMakeup;
                }
            }

            // Token: 0x1700038E RID: 910
            // (get) Token: 0x06000F6D RID: 3949 RVA: 0x00076C4C File Offset: 0x00074E4C
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700038F RID: 911
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CableMakeupRow this[int index]
            {
                get
                {
                    return (DataSetGES.tR_CableMakeupRow)base.Rows[index];
                }
            }

            // Token: 0x140000C9 RID: 201
            // (add) Token: 0x06000F6F RID: 3951 RVA: 0x00076C6C File Offset: 0x00074E6C
            // (remove) Token: 0x06000F70 RID: 3952 RVA: 0x00076CA4 File Offset: 0x00074EA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableMakeupRowChangeEventHandler tR_CableMakeupRowChanging;

            // Token: 0x140000CA RID: 202
            // (add) Token: 0x06000F71 RID: 3953 RVA: 0x00076CDC File Offset: 0x00074EDC
            // (remove) Token: 0x06000F72 RID: 3954 RVA: 0x00076D14 File Offset: 0x00074F14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableMakeupRowChangeEventHandler tR_CableMakeupRowChanged;

            // Token: 0x140000CB RID: 203
            // (add) Token: 0x06000F73 RID: 3955 RVA: 0x00076D4C File Offset: 0x00074F4C
            // (remove) Token: 0x06000F74 RID: 3956 RVA: 0x00076D84 File Offset: 0x00074F84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableMakeupRowChangeEventHandler tR_CableMakeupRowDeleting;

            // Token: 0x140000CC RID: 204
            // (add) Token: 0x06000F75 RID: 3957 RVA: 0x00076DBC File Offset: 0x00074FBC
            // (remove) Token: 0x06000F76 RID: 3958 RVA: 0x00076DF4 File Offset: 0x00074FF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableMakeupRowChangeEventHandler tR_CableMakeupRowDeleted;

            // Token: 0x06000F77 RID: 3959 RVA: 0x00076E29 File Offset: 0x00075029
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtR_CableMakeupRow(DataSetGES.tR_CableMakeupRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000F78 RID: 3960 RVA: 0x00076E38 File Offset: 0x00075038
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableMakeupRow AddtR_CableMakeupRow(string CableMakeup)
            {
                DataSetGES.tR_CableMakeupRow tR_CableMakeupRow = (DataSetGES.tR_CableMakeupRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    CableMakeup
                };
                tR_CableMakeupRow.ItemArray = itemArray;
                base.Rows.Add(tR_CableMakeupRow);
                return tR_CableMakeupRow;
            }

            // Token: 0x06000F79 RID: 3961 RVA: 0x00076E74 File Offset: 0x00075074
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableMakeupDataTable tR_CableMakeupDataTable = (DataSetGES.tR_CableMakeupDataTable)base.Clone();
                tR_CableMakeupDataTable.InitVars();
                return tR_CableMakeupDataTable;
            }

            // Token: 0x06000F7A RID: 3962 RVA: 0x00076E94 File Offset: 0x00075094
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableMakeupDataTable();
            }

            // Token: 0x06000F7B RID: 3963 RVA: 0x00076E9B File Offset: 0x0007509B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnCableMakeup = base.Columns["CableMakeup"];
            }

            // Token: 0x06000F7C RID: 3964 RVA: 0x00076EB4 File Offset: 0x000750B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnCableMakeup = new DataColumn("CableMakeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCableMakeup);
                this.columnCableMakeup.AllowDBNull = false;
                this.columnCableMakeup.MaxLength = 50;
            }

            // Token: 0x06000F7D RID: 3965 RVA: 0x00076F07 File Offset: 0x00075107
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CableMakeupRow NewtR_CableMakeupRow()
            {
                return (DataSetGES.tR_CableMakeupRow)base.NewRow();
            }

            // Token: 0x06000F7E RID: 3966 RVA: 0x00076F14 File Offset: 0x00075114
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tR_CableMakeupRow(builder);
            }

            // Token: 0x06000F7F RID: 3967 RVA: 0x00076F1C File Offset: 0x0007511C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tR_CableMakeupRow);
            }

            // Token: 0x06000F80 RID: 3968 RVA: 0x00076F28 File Offset: 0x00075128
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tR_CableMakeupRowChanged != null)
                {
                    this.tR_CableMakeupRowChanged(this, new DataSetGES.tR_CableMakeupRowChangeEvent((DataSetGES.tR_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F81 RID: 3969 RVA: 0x00076F5B File Offset: 0x0007515B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tR_CableMakeupRowChanging != null)
                {
                    this.tR_CableMakeupRowChanging(this, new DataSetGES.tR_CableMakeupRowChangeEvent((DataSetGES.tR_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F82 RID: 3970 RVA: 0x00076F8E File Offset: 0x0007518E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tR_CableMakeupRowDeleted != null)
                {
                    this.tR_CableMakeupRowDeleted(this, new DataSetGES.tR_CableMakeupRowChangeEvent((DataSetGES.tR_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F83 RID: 3971 RVA: 0x00076FC1 File Offset: 0x000751C1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tR_CableMakeupRowDeleting != null)
                {
                    this.tR_CableMakeupRowDeleting(this, new DataSetGES.tR_CableMakeupRowChangeEvent((DataSetGES.tR_CableMakeupRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F84 RID: 3972 RVA: 0x00076FF4 File Offset: 0x000751F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetR_CableMakeupRow(DataSetGES.tR_CableMakeupRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000F85 RID: 3973 RVA: 0x00077004 File Offset: 0x00075204
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tR_CableMakeupDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008B5 RID: 2229
            private DataColumn columnCableMakeup;
        }

        // Token: 0x020000ED RID: 237
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tR_CrossSectionDataTable : TypedTableBase<DataSetGES.tR_CrossSectionRow>
        {
            // Token: 0x06000F86 RID: 3974 RVA: 0x000771FC File Offset: 0x000753FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_CrossSectionDataTable()
            {
                base.TableName = "tR_CrossSection";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000F87 RID: 3975 RVA: 0x00077224 File Offset: 0x00075424
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CrossSectionDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000F88 RID: 3976 RVA: 0x000772CC File Offset: 0x000754CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tR_CrossSectionDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000390 RID: 912
            // (get) Token: 0x06000F89 RID: 3977 RVA: 0x000772DC File Offset: 0x000754DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            // Token: 0x17000391 RID: 913
            // (get) Token: 0x06000F8A RID: 3978 RVA: 0x000772E4 File Offset: 0x000754E4
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000392 RID: 914
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CrossSectionRow this[int index]
            {
                get
                {
                    return (DataSetGES.tR_CrossSectionRow)base.Rows[index];
                }
            }

            // Token: 0x140000CD RID: 205
            // (add) Token: 0x06000F8C RID: 3980 RVA: 0x00077304 File Offset: 0x00075504
            // (remove) Token: 0x06000F8D RID: 3981 RVA: 0x0007733C File Offset: 0x0007553C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CrossSectionRowChangeEventHandler tR_CrossSectionRowChanging;

            // Token: 0x140000CE RID: 206
            // (add) Token: 0x06000F8E RID: 3982 RVA: 0x00077374 File Offset: 0x00075574
            // (remove) Token: 0x06000F8F RID: 3983 RVA: 0x000773AC File Offset: 0x000755AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CrossSectionRowChangeEventHandler tR_CrossSectionRowChanged;

            // Token: 0x140000CF RID: 207
            // (add) Token: 0x06000F90 RID: 3984 RVA: 0x000773E4 File Offset: 0x000755E4
            // (remove) Token: 0x06000F91 RID: 3985 RVA: 0x0007741C File Offset: 0x0007561C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CrossSectionRowChangeEventHandler tR_CrossSectionRowDeleting;

            // Token: 0x140000D0 RID: 208
            // (add) Token: 0x06000F92 RID: 3986 RVA: 0x00077454 File Offset: 0x00075654
            // (remove) Token: 0x06000F93 RID: 3987 RVA: 0x0007748C File Offset: 0x0007568C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CrossSectionRowChangeEventHandler tR_CrossSectionRowDeleted;

            // Token: 0x06000F94 RID: 3988 RVA: 0x000774C1 File Offset: 0x000756C1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtR_CrossSectionRow(DataSetGES.tR_CrossSectionRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000F95 RID: 3989 RVA: 0x000774D0 File Offset: 0x000756D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CrossSectionRow AddtR_CrossSectionRow(double CrossSection)
            {
                DataSetGES.tR_CrossSectionRow tR_CrossSectionRow = (DataSetGES.tR_CrossSectionRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    CrossSection
                };
                tR_CrossSectionRow.ItemArray = itemArray;
                base.Rows.Add(tR_CrossSectionRow);
                return tR_CrossSectionRow;
            }

            // Token: 0x06000F96 RID: 3990 RVA: 0x00077510 File Offset: 0x00075710
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_CrossSectionDataTable tR_CrossSectionDataTable = (DataSetGES.tR_CrossSectionDataTable)base.Clone();
                tR_CrossSectionDataTable.InitVars();
                return tR_CrossSectionDataTable;
            }

            // Token: 0x06000F97 RID: 3991 RVA: 0x00077530 File Offset: 0x00075730
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CrossSectionDataTable();
            }

            // Token: 0x06000F98 RID: 3992 RVA: 0x00077537 File Offset: 0x00075737
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnCrossSection = base.Columns["CrossSection"];
            }

            // Token: 0x06000F99 RID: 3993 RVA: 0x0007754F File Offset: 0x0007574F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnCrossSection.AllowDBNull = false;
            }

            // Token: 0x06000F9A RID: 3994 RVA: 0x0007758A File Offset: 0x0007578A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CrossSectionRow NewtR_CrossSectionRow()
            {
                return (DataSetGES.tR_CrossSectionRow)base.NewRow();
            }

            // Token: 0x06000F9B RID: 3995 RVA: 0x00077597 File Offset: 0x00075797
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tR_CrossSectionRow(builder);
            }

            // Token: 0x06000F9C RID: 3996 RVA: 0x0007759F File Offset: 0x0007579F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tR_CrossSectionRow);
            }

            // Token: 0x06000F9D RID: 3997 RVA: 0x000775AB File Offset: 0x000757AB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tR_CrossSectionRowChanged != null)
                {
                    this.tR_CrossSectionRowChanged(this, new DataSetGES.tR_CrossSectionRowChangeEvent((DataSetGES.tR_CrossSectionRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F9E RID: 3998 RVA: 0x000775DE File Offset: 0x000757DE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tR_CrossSectionRowChanging != null)
                {
                    this.tR_CrossSectionRowChanging(this, new DataSetGES.tR_CrossSectionRowChangeEvent((DataSetGES.tR_CrossSectionRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000F9F RID: 3999 RVA: 0x00077611 File Offset: 0x00075811
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tR_CrossSectionRowDeleted != null)
                {
                    this.tR_CrossSectionRowDeleted(this, new DataSetGES.tR_CrossSectionRowChangeEvent((DataSetGES.tR_CrossSectionRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FA0 RID: 4000 RVA: 0x00077644 File Offset: 0x00075844
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tR_CrossSectionRowDeleting != null)
                {
                    this.tR_CrossSectionRowDeleting(this, new DataSetGES.tR_CrossSectionRowChangeEvent((DataSetGES.tR_CrossSectionRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FA1 RID: 4001 RVA: 0x00077677 File Offset: 0x00075877
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetR_CrossSectionRow(DataSetGES.tR_CrossSectionRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000FA2 RID: 4002 RVA: 0x00077688 File Offset: 0x00075888
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tR_CrossSectionDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008BA RID: 2234
            private DataColumn columnCrossSection;
        }

        // Token: 0x020000EE RID: 238
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tR_CableVoltageDataTable : TypedTableBase<DataSetGES.tR_CableVoltageRow>
        {
            // Token: 0x06000FA3 RID: 4003 RVA: 0x00077880 File Offset: 0x00075A80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableVoltageDataTable()
            {
                base.TableName = "tR_CableVoltage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000FA4 RID: 4004 RVA: 0x000778A8 File Offset: 0x00075AA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CableVoltageDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000FA5 RID: 4005 RVA: 0x00077950 File Offset: 0x00075B50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tR_CableVoltageDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000393 RID: 915
            // (get) Token: 0x06000FA6 RID: 4006 RVA: 0x00077960 File Offset: 0x00075B60
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000394 RID: 916
            // (get) Token: 0x06000FA7 RID: 4007 RVA: 0x00077968 File Offset: 0x00075B68
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000395 RID: 917
            // (get) Token: 0x06000FA8 RID: 4008 RVA: 0x00077970 File Offset: 0x00075B70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000396 RID: 918
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableVoltageRow this[int index]
            {
                get
                {
                    return (DataSetGES.tR_CableVoltageRow)base.Rows[index];
                }
            }

            // Token: 0x140000D1 RID: 209
            // (add) Token: 0x06000FAA RID: 4010 RVA: 0x00077990 File Offset: 0x00075B90
            // (remove) Token: 0x06000FAB RID: 4011 RVA: 0x000779C8 File Offset: 0x00075BC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableVoltageRowChangeEventHandler tR_CableVoltageRowChanging;

            // Token: 0x140000D2 RID: 210
            // (add) Token: 0x06000FAC RID: 4012 RVA: 0x00077A00 File Offset: 0x00075C00
            // (remove) Token: 0x06000FAD RID: 4013 RVA: 0x00077A38 File Offset: 0x00075C38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableVoltageRowChangeEventHandler tR_CableVoltageRowChanged;

            // Token: 0x140000D3 RID: 211
            // (add) Token: 0x06000FAE RID: 4014 RVA: 0x00077A70 File Offset: 0x00075C70
            // (remove) Token: 0x06000FAF RID: 4015 RVA: 0x00077AA8 File Offset: 0x00075CA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableVoltageRowChangeEventHandler tR_CableVoltageRowDeleting;

            // Token: 0x140000D4 RID: 212
            // (add) Token: 0x06000FB0 RID: 4016 RVA: 0x00077AE0 File Offset: 0x00075CE0
            // (remove) Token: 0x06000FB1 RID: 4017 RVA: 0x00077B18 File Offset: 0x00075D18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableVoltageRowChangeEventHandler tR_CableVoltageRowDeleted;

            // Token: 0x06000FB2 RID: 4018 RVA: 0x00077B4D File Offset: 0x00075D4D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtR_CableVoltageRow(DataSetGES.tR_CableVoltageRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000FB3 RID: 4019 RVA: 0x00077B5C File Offset: 0x00075D5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableVoltageRow AddtR_CableVoltageRow(string Name)
            {
                DataSetGES.tR_CableVoltageRow tR_CableVoltageRow = (DataSetGES.tR_CableVoltageRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    Name
                };
                tR_CableVoltageRow.ItemArray = itemArray;
                base.Rows.Add(tR_CableVoltageRow);
                return tR_CableVoltageRow;
            }

            // Token: 0x06000FB4 RID: 4020 RVA: 0x00077B98 File Offset: 0x00075D98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableVoltageRow FindById(int Id)
            {
                return (DataSetGES.tR_CableVoltageRow)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x06000FB5 RID: 4021 RVA: 0x00077BC8 File Offset: 0x00075DC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableVoltageDataTable tR_CableVoltageDataTable = (DataSetGES.tR_CableVoltageDataTable)base.Clone();
                tR_CableVoltageDataTable.InitVars();
                return tR_CableVoltageDataTable;
            }

            // Token: 0x06000FB6 RID: 4022 RVA: 0x00077BE8 File Offset: 0x00075DE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableVoltageDataTable();
            }

            // Token: 0x06000FB7 RID: 4023 RVA: 0x00077BEF File Offset: 0x00075DEF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x06000FB8 RID: 4024 RVA: 0x00077C20 File Offset: 0x00075E20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
            }

            // Token: 0x06000FB9 RID: 4025 RVA: 0x00077D11 File Offset: 0x00075F11
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableVoltageRow NewtR_CableVoltageRow()
            {
                return (DataSetGES.tR_CableVoltageRow)base.NewRow();
            }

            // Token: 0x06000FBA RID: 4026 RVA: 0x00077D1E File Offset: 0x00075F1E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tR_CableVoltageRow(builder);
            }

            // Token: 0x06000FBB RID: 4027 RVA: 0x00077D26 File Offset: 0x00075F26
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tR_CableVoltageRow);
            }

            // Token: 0x06000FBC RID: 4028 RVA: 0x00077D32 File Offset: 0x00075F32
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tR_CableVoltageRowChanged != null)
                {
                    this.tR_CableVoltageRowChanged(this, new DataSetGES.tR_CableVoltageRowChangeEvent((DataSetGES.tR_CableVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FBD RID: 4029 RVA: 0x00077D65 File Offset: 0x00075F65
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tR_CableVoltageRowChanging != null)
                {
                    this.tR_CableVoltageRowChanging(this, new DataSetGES.tR_CableVoltageRowChangeEvent((DataSetGES.tR_CableVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FBE RID: 4030 RVA: 0x00077D98 File Offset: 0x00075F98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tR_CableVoltageRowDeleted != null)
                {
                    this.tR_CableVoltageRowDeleted(this, new DataSetGES.tR_CableVoltageRowChangeEvent((DataSetGES.tR_CableVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FBF RID: 4031 RVA: 0x00077DCB File Offset: 0x00075FCB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tR_CableVoltageRowDeleting != null)
                {
                    this.tR_CableVoltageRowDeleting(this, new DataSetGES.tR_CableVoltageRowChangeEvent((DataSetGES.tR_CableVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FC0 RID: 4032 RVA: 0x00077DFE File Offset: 0x00075FFE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetR_CableVoltageRow(DataSetGES.tR_CableVoltageRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000FC1 RID: 4033 RVA: 0x00077E0C File Offset: 0x0007600C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tR_CableVoltageDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008BF RID: 2239
            private DataColumn columnId;

            // Token: 0x040008C0 RID: 2240
            private DataColumn columnName;
        }

        // Token: 0x020000EF RID: 239
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tR_CableAmperageDataTable : TypedTableBase<DataSetGES.tR_CableAmperageRow>
        {
            // Token: 0x06000FC2 RID: 4034 RVA: 0x00078004 File Offset: 0x00076204
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableAmperageDataTable()
            {
                base.TableName = "tR_CableAmperage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000FC3 RID: 4035 RVA: 0x0007802C File Offset: 0x0007622C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CableAmperageDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000FC4 RID: 4036 RVA: 0x000780D4 File Offset: 0x000762D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tR_CableAmperageDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000397 RID: 919
            // (get) Token: 0x06000FC5 RID: 4037 RVA: 0x000780E4 File Offset: 0x000762E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AmperageColumn
            {
                get
                {
                    return this.columnAmperage;
                }
            }

            // Token: 0x17000398 RID: 920
            // (get) Token: 0x06000FC6 RID: 4038 RVA: 0x000780EC File Offset: 0x000762EC
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000399 RID: 921
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CableAmperageRow this[int index]
            {
                get
                {
                    return (DataSetGES.tR_CableAmperageRow)base.Rows[index];
                }
            }

            // Token: 0x140000D5 RID: 213
            // (add) Token: 0x06000FC8 RID: 4040 RVA: 0x0007810C File Offset: 0x0007630C
            // (remove) Token: 0x06000FC9 RID: 4041 RVA: 0x00078144 File Offset: 0x00076344
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableAmperageRowChangeEventHandler tR_CableAmperageRowChanging;

            // Token: 0x140000D6 RID: 214
            // (add) Token: 0x06000FCA RID: 4042 RVA: 0x0007817C File Offset: 0x0007637C
            // (remove) Token: 0x06000FCB RID: 4043 RVA: 0x000781B4 File Offset: 0x000763B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableAmperageRowChangeEventHandler tR_CableAmperageRowChanged;

            // Token: 0x140000D7 RID: 215
            // (add) Token: 0x06000FCC RID: 4044 RVA: 0x000781EC File Offset: 0x000763EC
            // (remove) Token: 0x06000FCD RID: 4045 RVA: 0x00078224 File Offset: 0x00076424
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableAmperageRowChangeEventHandler tR_CableAmperageRowDeleting;

            // Token: 0x140000D8 RID: 216
            // (add) Token: 0x06000FCE RID: 4046 RVA: 0x0007825C File Offset: 0x0007645C
            // (remove) Token: 0x06000FCF RID: 4047 RVA: 0x00078294 File Offset: 0x00076494
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableAmperageRowChangeEventHandler tR_CableAmperageRowDeleted;

            // Token: 0x06000FD0 RID: 4048 RVA: 0x000782C9 File Offset: 0x000764C9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtR_CableAmperageRow(DataSetGES.tR_CableAmperageRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000FD1 RID: 4049 RVA: 0x000782D8 File Offset: 0x000764D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableAmperageRow AddtR_CableAmperageRow(double Amperage)
            {
                DataSetGES.tR_CableAmperageRow tR_CableAmperageRow = (DataSetGES.tR_CableAmperageRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Amperage
                };
                tR_CableAmperageRow.ItemArray = itemArray;
                base.Rows.Add(tR_CableAmperageRow);
                return tR_CableAmperageRow;
            }

            // Token: 0x06000FD2 RID: 4050 RVA: 0x00078318 File Offset: 0x00076518
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableAmperageDataTable tR_CableAmperageDataTable = (DataSetGES.tR_CableAmperageDataTable)base.Clone();
                tR_CableAmperageDataTable.InitVars();
                return tR_CableAmperageDataTable;
            }

            // Token: 0x06000FD3 RID: 4051 RVA: 0x00078338 File Offset: 0x00076538
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableAmperageDataTable();
            }

            // Token: 0x06000FD4 RID: 4052 RVA: 0x0007833F File Offset: 0x0007653F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnAmperage = base.Columns["Amperage"];
            }

            // Token: 0x06000FD5 RID: 4053 RVA: 0x00078358 File Offset: 0x00076558
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnAmperage = new DataColumn("Amperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnAmperage);
                this.columnAmperage.DefaultValue = 0.0;
            }

            // Token: 0x06000FD6 RID: 4054 RVA: 0x000783AB File Offset: 0x000765AB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableAmperageRow NewtR_CableAmperageRow()
            {
                return (DataSetGES.tR_CableAmperageRow)base.NewRow();
            }

            // Token: 0x06000FD7 RID: 4055 RVA: 0x000783B8 File Offset: 0x000765B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tR_CableAmperageRow(builder);
            }

            // Token: 0x06000FD8 RID: 4056 RVA: 0x000783C0 File Offset: 0x000765C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tR_CableAmperageRow);
            }

            // Token: 0x06000FD9 RID: 4057 RVA: 0x000783CC File Offset: 0x000765CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tR_CableAmperageRowChanged != null)
                {
                    this.tR_CableAmperageRowChanged(this, new DataSetGES.tR_CableAmperageRowChangeEvent((DataSetGES.tR_CableAmperageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FDA RID: 4058 RVA: 0x000783FF File Offset: 0x000765FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tR_CableAmperageRowChanging != null)
                {
                    this.tR_CableAmperageRowChanging(this, new DataSetGES.tR_CableAmperageRowChangeEvent((DataSetGES.tR_CableAmperageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FDB RID: 4059 RVA: 0x00078432 File Offset: 0x00076632
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tR_CableAmperageRowDeleted != null)
                {
                    this.tR_CableAmperageRowDeleted(this, new DataSetGES.tR_CableAmperageRowChangeEvent((DataSetGES.tR_CableAmperageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FDC RID: 4060 RVA: 0x00078465 File Offset: 0x00076665
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tR_CableAmperageRowDeleting != null)
                {
                    this.tR_CableAmperageRowDeleting(this, new DataSetGES.tR_CableAmperageRowChangeEvent((DataSetGES.tR_CableAmperageRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FDD RID: 4061 RVA: 0x00078498 File Offset: 0x00076698
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetR_CableAmperageRow(DataSetGES.tR_CableAmperageRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000FDE RID: 4062 RVA: 0x000784A8 File Offset: 0x000766A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tR_CableAmperageDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008C5 RID: 2245
            private DataColumn columnAmperage;
        }

        // Token: 0x020000F0 RID: 240
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tR_CableWiresDataTable : TypedTableBase<DataSetGES.tR_CableWiresRow>
        {
            // Token: 0x06000FDF RID: 4063 RVA: 0x000786A0 File Offset: 0x000768A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_CableWiresDataTable()
            {
                base.TableName = "tR_CableWires";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000FE0 RID: 4064 RVA: 0x000786C8 File Offset: 0x000768C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_CableWiresDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000FE1 RID: 4065 RVA: 0x00078770 File Offset: 0x00076970
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tR_CableWiresDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700039A RID: 922
            // (get) Token: 0x06000FE2 RID: 4066 RVA: 0x00078780 File Offset: 0x00076980
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            // Token: 0x1700039B RID: 923
            // (get) Token: 0x06000FE3 RID: 4067 RVA: 0x00078788 File Offset: 0x00076988
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700039C RID: 924
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CableWiresRow this[int index]
            {
                get
                {
                    return (DataSetGES.tR_CableWiresRow)base.Rows[index];
                }
            }

            // Token: 0x140000D9 RID: 217
            // (add) Token: 0x06000FE5 RID: 4069 RVA: 0x000787A8 File Offset: 0x000769A8
            // (remove) Token: 0x06000FE6 RID: 4070 RVA: 0x000787E0 File Offset: 0x000769E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableWiresRowChangeEventHandler tR_CableWiresRowChanging;

            // Token: 0x140000DA RID: 218
            // (add) Token: 0x06000FE7 RID: 4071 RVA: 0x00078818 File Offset: 0x00076A18
            // (remove) Token: 0x06000FE8 RID: 4072 RVA: 0x00078850 File Offset: 0x00076A50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableWiresRowChangeEventHandler tR_CableWiresRowChanged;

            // Token: 0x140000DB RID: 219
            // (add) Token: 0x06000FE9 RID: 4073 RVA: 0x00078888 File Offset: 0x00076A88
            // (remove) Token: 0x06000FEA RID: 4074 RVA: 0x000788C0 File Offset: 0x00076AC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableWiresRowChangeEventHandler tR_CableWiresRowDeleting;

            // Token: 0x140000DC RID: 220
            // (add) Token: 0x06000FEB RID: 4075 RVA: 0x000788F8 File Offset: 0x00076AF8
            // (remove) Token: 0x06000FEC RID: 4076 RVA: 0x00078930 File Offset: 0x00076B30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_CableWiresRowChangeEventHandler tR_CableWiresRowDeleted;

            // Token: 0x06000FED RID: 4077 RVA: 0x00078965 File Offset: 0x00076B65
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtR_CableWiresRow(DataSetGES.tR_CableWiresRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06000FEE RID: 4078 RVA: 0x00078974 File Offset: 0x00076B74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableWiresRow AddtR_CableWiresRow(int Wires)
            {
                DataSetGES.tR_CableWiresRow tR_CableWiresRow = (DataSetGES.tR_CableWiresRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Wires
                };
                tR_CableWiresRow.ItemArray = itemArray;
                base.Rows.Add(tR_CableWiresRow);
                return tR_CableWiresRow;
            }

            // Token: 0x06000FEF RID: 4079 RVA: 0x000789B4 File Offset: 0x00076BB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_CableWiresDataTable tR_CableWiresDataTable = (DataSetGES.tR_CableWiresDataTable)base.Clone();
                tR_CableWiresDataTable.InitVars();
                return tR_CableWiresDataTable;
            }

            // Token: 0x06000FF0 RID: 4080 RVA: 0x000789D4 File Offset: 0x00076BD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_CableWiresDataTable();
            }

            // Token: 0x06000FF1 RID: 4081 RVA: 0x000789DB File Offset: 0x00076BDB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnWires = base.Columns["Wires"];
            }

            // Token: 0x06000FF2 RID: 4082 RVA: 0x000789F3 File Offset: 0x00076BF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnWires.AllowDBNull = false;
            }

            // Token: 0x06000FF3 RID: 4083 RVA: 0x00078A2E File Offset: 0x00076C2E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableWiresRow NewtR_CableWiresRow()
            {
                return (DataSetGES.tR_CableWiresRow)base.NewRow();
            }

            // Token: 0x06000FF4 RID: 4084 RVA: 0x00078A3B File Offset: 0x00076C3B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tR_CableWiresRow(builder);
            }

            // Token: 0x06000FF5 RID: 4085 RVA: 0x00078A43 File Offset: 0x00076C43
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tR_CableWiresRow);
            }

            // Token: 0x06000FF6 RID: 4086 RVA: 0x00078A4F File Offset: 0x00076C4F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tR_CableWiresRowChanged != null)
                {
                    this.tR_CableWiresRowChanged(this, new DataSetGES.tR_CableWiresRowChangeEvent((DataSetGES.tR_CableWiresRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FF7 RID: 4087 RVA: 0x00078A82 File Offset: 0x00076C82
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tR_CableWiresRowChanging != null)
                {
                    this.tR_CableWiresRowChanging(this, new DataSetGES.tR_CableWiresRowChangeEvent((DataSetGES.tR_CableWiresRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FF8 RID: 4088 RVA: 0x00078AB5 File Offset: 0x00076CB5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tR_CableWiresRowDeleted != null)
                {
                    this.tR_CableWiresRowDeleted(this, new DataSetGES.tR_CableWiresRowChangeEvent((DataSetGES.tR_CableWiresRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FF9 RID: 4089 RVA: 0x00078AE8 File Offset: 0x00076CE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tR_CableWiresRowDeleting != null)
                {
                    this.tR_CableWiresRowDeleting(this, new DataSetGES.tR_CableWiresRowChangeEvent((DataSetGES.tR_CableWiresRow)e.Row, e.Action));
                }
            }

            // Token: 0x06000FFA RID: 4090 RVA: 0x00078B1B File Offset: 0x00076D1B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetR_CableWiresRow(DataSetGES.tR_CableWiresRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06000FFB RID: 4091 RVA: 0x00078B2C File Offset: 0x00076D2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tR_CableWiresDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008CA RID: 2250
            private DataColumn columnWires;
        }

        // Token: 0x020000F1 RID: 241
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_CableReferenceDataTable : TypedTableBase<DataSetGES.vJ_CableReferenceRow>
        {
            // Token: 0x06000FFC RID: 4092 RVA: 0x00078D24 File Offset: 0x00076F24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CableReferenceDataTable()
            {
                base.TableName = "vJ_CableReference";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06000FFD RID: 4093 RVA: 0x00078D4C File Offset: 0x00076F4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableReferenceDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06000FFE RID: 4094 RVA: 0x00078DF4 File Offset: 0x00076FF4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_CableReferenceDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700039D RID: 925
            // (get) Token: 0x06000FFF RID: 4095 RVA: 0x00078E04 File Offset: 0x00077004
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700039E RID: 926
            // (get) Token: 0x06001000 RID: 4096 RVA: 0x00078E0C File Offset: 0x0007700C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CableMakeupColumn
            {
                get
                {
                    return this.columnCableMakeup;
                }
            }

            // Token: 0x1700039F RID: 927
            // (get) Token: 0x06001001 RID: 4097 RVA: 0x00078E14 File Offset: 0x00077014
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            // Token: 0x170003A0 RID: 928
            // (get) Token: 0x06001002 RID: 4098 RVA: 0x00078E1C File Offset: 0x0007701C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            // Token: 0x170003A1 RID: 929
            // (get) Token: 0x06001003 RID: 4099 RVA: 0x00078E24 File Offset: 0x00077024
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WiresAddlColumn
            {
                get
                {
                    return this.columnWiresAddl;
                }
            }

            // Token: 0x170003A2 RID: 930
            // (get) Token: 0x06001004 RID: 4100 RVA: 0x00078E2C File Offset: 0x0007702C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CrossSectionAddlColumn
            {
                get
                {
                    return this.columnCrossSectionAddl;
                }
            }

            // Token: 0x170003A3 RID: 931
            // (get) Token: 0x06001005 RID: 4101 RVA: 0x00078E34 File Offset: 0x00077034
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ResistanceColumn
            {
                get
                {
                    return this.columnResistance;
                }
            }

            // Token: 0x170003A4 RID: 932
            // (get) Token: 0x06001006 RID: 4102 RVA: 0x00078E3C File Offset: 0x0007703C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn ResistanceAddlColumn
            {
                get
                {
                    return this.columnResistanceAddl;
                }
            }

            // Token: 0x170003A5 RID: 933
            // (get) Token: 0x06001007 RID: 4103 RVA: 0x00078E44 File Offset: 0x00077044
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idVoltageColumn
            {
                get
                {
                    return this.columnidVoltage;
                }
            }

            // Token: 0x170003A6 RID: 934
            // (get) Token: 0x06001008 RID: 4104 RVA: 0x00078E4C File Offset: 0x0007704C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            // Token: 0x170003A7 RID: 935
            // (get) Token: 0x06001009 RID: 4105 RVA: 0x00078E54 File Offset: 0x00077054
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AmperageTypeColumn
            {
                get
                {
                    return this.columnAmperageType;
                }
            }

            // Token: 0x170003A8 RID: 936
            // (get) Token: 0x0600100A RID: 4106 RVA: 0x00078E5C File Offset: 0x0007705C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AmperageValueColumn
            {
                get
                {
                    return this.columnAmperageValue;
                }
            }

            // Token: 0x170003A9 RID: 937
            // (get) Token: 0x0600100B RID: 4107 RVA: 0x00078E64 File Offset: 0x00077064
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003AA RID: 938
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableReferenceRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_CableReferenceRow)base.Rows[index];
                }
            }

            // Token: 0x140000DD RID: 221
            // (add) Token: 0x0600100D RID: 4109 RVA: 0x00078E84 File Offset: 0x00077084
            // (remove) Token: 0x0600100E RID: 4110 RVA: 0x00078EBC File Offset: 0x000770BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableReferenceRowChangeEventHandler vJ_CableReferenceRowChanging;

            // Token: 0x140000DE RID: 222
            // (add) Token: 0x0600100F RID: 4111 RVA: 0x00078EF4 File Offset: 0x000770F4
            // (remove) Token: 0x06001010 RID: 4112 RVA: 0x00078F2C File Offset: 0x0007712C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableReferenceRowChangeEventHandler vJ_CableReferenceRowChanged;

            // Token: 0x140000DF RID: 223
            // (add) Token: 0x06001011 RID: 4113 RVA: 0x00078F64 File Offset: 0x00077164
            // (remove) Token: 0x06001012 RID: 4114 RVA: 0x00078F9C File Offset: 0x0007719C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableReferenceRowChangeEventHandler vJ_CableReferenceRowDeleting;

            // Token: 0x140000E0 RID: 224
            // (add) Token: 0x06001013 RID: 4115 RVA: 0x00078FD4 File Offset: 0x000771D4
            // (remove) Token: 0x06001014 RID: 4116 RVA: 0x0007900C File Offset: 0x0007720C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableReferenceRowChangeEventHandler vJ_CableReferenceRowDeleted;

            // Token: 0x06001015 RID: 4117 RVA: 0x00079041 File Offset: 0x00077241
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_CableReferenceRow(DataSetGES.vJ_CableReferenceRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001016 RID: 4118 RVA: 0x00079050 File Offset: 0x00077250
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableReferenceRow AddvJ_CableReferenceRow(int id, string CableMakeup, int Wires, double CrossSection, int WiresAddl, double CrossSectionAddl, double Resistance, double ResistanceAddl, int idVoltage, decimal Voltage, string AmperageType, double AmperageValue)
            {
                DataSetGES.vJ_CableReferenceRow vJ_CableReferenceRow = (DataSetGES.vJ_CableReferenceRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    CableMakeup,
                    Wires,
                    CrossSection,
                    WiresAddl,
                    CrossSectionAddl,
                    Resistance,
                    ResistanceAddl,
                    idVoltage,
                    Voltage,
                    AmperageType,
                    AmperageValue
                };
                vJ_CableReferenceRow.ItemArray = itemArray;
                base.Rows.Add(vJ_CableReferenceRow);
                return vJ_CableReferenceRow;
            }

            // Token: 0x06001017 RID: 4119 RVA: 0x000790F8 File Offset: 0x000772F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableReferenceDataTable vJ_CableReferenceDataTable = (DataSetGES.vJ_CableReferenceDataTable)base.Clone();
                vJ_CableReferenceDataTable.InitVars();
                return vJ_CableReferenceDataTable;
            }

            // Token: 0x06001018 RID: 4120 RVA: 0x00079118 File Offset: 0x00077318
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableReferenceDataTable();
            }

            // Token: 0x06001019 RID: 4121 RVA: 0x00079120 File Offset: 0x00077320
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnCableMakeup = base.Columns["CableMakeup"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnWiresAddl = base.Columns["WiresAddl"];
                this.columnCrossSectionAddl = base.Columns["CrossSectionAddl"];
                this.columnResistance = base.Columns["Resistance"];
                this.columnResistanceAddl = base.Columns["ResistanceAddl"];
                this.columnidVoltage = base.Columns["idVoltage"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnAmperageType = base.Columns["AmperageType"];
                this.columnAmperageValue = base.Columns["AmperageValue"];
            }

            // Token: 0x0600101A RID: 4122 RVA: 0x00079238 File Offset: 0x00077438
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnCableMakeup = new DataColumn("CableMakeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCableMakeup);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnWiresAddl = new DataColumn("WiresAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWiresAddl);
                this.columnCrossSectionAddl = new DataColumn("CrossSectionAddl", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSectionAddl);
                this.columnResistance = new DataColumn("Resistance", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnResistance);
                this.columnResistanceAddl = new DataColumn("ResistanceAddl", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnResistanceAddl);
                this.columnidVoltage = new DataColumn("idVoltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidVoltage);
                this.columnVoltage = new DataColumn("Voltage", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnAmperageType = new DataColumn("AmperageType", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAmperageType);
                this.columnAmperageValue = new DataColumn("AmperageValue", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnAmperageValue);
                this.columnid.AllowDBNull = false;
                this.columnCableMakeup.AllowDBNull = false;
                this.columnCableMakeup.MaxLength = 50;
                this.columnWires.AllowDBNull = false;
                this.columnCrossSection.AllowDBNull = false;
                this.columnAmperageType.MaxLength = 128;
            }

            // Token: 0x0600101B RID: 4123 RVA: 0x000794AE File Offset: 0x000776AE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableReferenceRow NewvJ_CableReferenceRow()
            {
                return (DataSetGES.vJ_CableReferenceRow)base.NewRow();
            }

            // Token: 0x0600101C RID: 4124 RVA: 0x000794BB File Offset: 0x000776BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_CableReferenceRow(builder);
            }

            // Token: 0x0600101D RID: 4125 RVA: 0x000794C3 File Offset: 0x000776C3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_CableReferenceRow);
            }

            // Token: 0x0600101E RID: 4126 RVA: 0x000794CF File Offset: 0x000776CF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_CableReferenceRowChanged != null)
                {
                    this.vJ_CableReferenceRowChanged(this, new DataSetGES.vJ_CableReferenceRowChangeEvent((DataSetGES.vJ_CableReferenceRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600101F RID: 4127 RVA: 0x00079502 File Offset: 0x00077702
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_CableReferenceRowChanging != null)
                {
                    this.vJ_CableReferenceRowChanging(this, new DataSetGES.vJ_CableReferenceRowChangeEvent((DataSetGES.vJ_CableReferenceRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001020 RID: 4128 RVA: 0x00079535 File Offset: 0x00077735
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_CableReferenceRowDeleted != null)
                {
                    this.vJ_CableReferenceRowDeleted(this, new DataSetGES.vJ_CableReferenceRowChangeEvent((DataSetGES.vJ_CableReferenceRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001021 RID: 4129 RVA: 0x00079568 File Offset: 0x00077768
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_CableReferenceRowDeleting != null)
                {
                    this.vJ_CableReferenceRowDeleting(this, new DataSetGES.vJ_CableReferenceRowChangeEvent((DataSetGES.vJ_CableReferenceRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001022 RID: 4130 RVA: 0x0007959B File Offset: 0x0007779B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_CableReferenceRow(DataSetGES.vJ_CableReferenceRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001023 RID: 4131 RVA: 0x000795AC File Offset: 0x000777AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_CableReferenceDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008CF RID: 2255
            private DataColumn columnid;

            // Token: 0x040008D0 RID: 2256
            private DataColumn columnCableMakeup;

            // Token: 0x040008D1 RID: 2257
            private DataColumn columnWires;

            // Token: 0x040008D2 RID: 2258
            private DataColumn columnCrossSection;

            // Token: 0x040008D3 RID: 2259
            private DataColumn columnWiresAddl;

            // Token: 0x040008D4 RID: 2260
            private DataColumn columnCrossSectionAddl;

            // Token: 0x040008D5 RID: 2261
            private DataColumn columnResistance;

            // Token: 0x040008D6 RID: 2262
            private DataColumn columnResistanceAddl;

            // Token: 0x040008D7 RID: 2263
            private DataColumn columnidVoltage;

            // Token: 0x040008D8 RID: 2264
            private DataColumn columnVoltage;

            // Token: 0x040008D9 RID: 2265
            private DataColumn columnAmperageType;

            // Token: 0x040008DA RID: 2266
            private DataColumn columnAmperageValue;
        }

        // Token: 0x020000F2 RID: 242
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_TransfsDataTable : TypedTableBase<DataSetGES.vJ_TransfsRow>
        {
            // Token: 0x06001024 RID: 4132 RVA: 0x000797A4 File Offset: 0x000779A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_TransfsDataTable()
            {
                base.TableName = "vJ_Transfs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001025 RID: 4133 RVA: 0x000797CC File Offset: 0x000779CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_TransfsDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001026 RID: 4134 RVA: 0x00079874 File Offset: 0x00077A74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_TransfsDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003AB RID: 939
            // (get) Token: 0x06001027 RID: 4135 RVA: 0x00079884 File Offset: 0x00077A84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            // Token: 0x170003AC RID: 940
            // (get) Token: 0x06001028 RID: 4136 RVA: 0x0007988C File Offset: 0x00077A8C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            // Token: 0x170003AD RID: 941
            // (get) Token: 0x06001029 RID: 4137 RVA: 0x00079894 File Offset: 0x00077A94
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x170003AE RID: 942
            // (get) Token: 0x0600102A RID: 4138 RVA: 0x0007989C File Offset: 0x00077A9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170003AF RID: 943
            // (get) Token: 0x0600102B RID: 4139 RVA: 0x000798A4 File Offset: 0x00077AA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003B0 RID: 944
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_TransfsRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_TransfsRow)base.Rows[index];
                }
            }

            // Token: 0x140000E1 RID: 225
            // (add) Token: 0x0600102D RID: 4141 RVA: 0x000798C4 File Offset: 0x00077AC4
            // (remove) Token: 0x0600102E RID: 4142 RVA: 0x000798FC File Offset: 0x00077AFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfsRowChangeEventHandler vJ_TransfsRowChanging;

            // Token: 0x140000E2 RID: 226
            // (add) Token: 0x0600102F RID: 4143 RVA: 0x00079934 File Offset: 0x00077B34
            // (remove) Token: 0x06001030 RID: 4144 RVA: 0x0007996C File Offset: 0x00077B6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfsRowChangeEventHandler vJ_TransfsRowChanged;

            // Token: 0x140000E3 RID: 227
            // (add) Token: 0x06001031 RID: 4145 RVA: 0x000799A4 File Offset: 0x00077BA4
            // (remove) Token: 0x06001032 RID: 4146 RVA: 0x000799DC File Offset: 0x00077BDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfsRowChangeEventHandler vJ_TransfsRowDeleting;

            // Token: 0x140000E4 RID: 228
            // (add) Token: 0x06001033 RID: 4147 RVA: 0x00079A14 File Offset: 0x00077C14
            // (remove) Token: 0x06001034 RID: 4148 RVA: 0x00079A4C File Offset: 0x00077C4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfsRowChangeEventHandler vJ_TransfsRowDeleted;

            // Token: 0x06001035 RID: 4149 RVA: 0x00079A81 File Offset: 0x00077C81
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_TransfsRow(DataSetGES.vJ_TransfsRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001036 RID: 4150 RVA: 0x00079A90 File Offset: 0x00077C90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_TransfsRow AddvJ_TransfsRow(int idSubstation, int TypeDoc, int idTransf, string Name)
            {
                DataSetGES.vJ_TransfsRow vJ_TransfsRow = (DataSetGES.vJ_TransfsRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idSubstation,
                    TypeDoc,
                    idTransf,
                    Name
                };
                vJ_TransfsRow.ItemArray = itemArray;
                base.Rows.Add(vJ_TransfsRow);
                return vJ_TransfsRow;
            }

            // Token: 0x06001037 RID: 4151 RVA: 0x00079AE8 File Offset: 0x00077CE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_TransfsDataTable vJ_TransfsDataTable = (DataSetGES.vJ_TransfsDataTable)base.Clone();
                vJ_TransfsDataTable.InitVars();
                return vJ_TransfsDataTable;
            }

            // Token: 0x06001038 RID: 4152 RVA: 0x00079B08 File Offset: 0x00077D08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_TransfsDataTable();
            }

            // Token: 0x06001039 RID: 4153 RVA: 0x00079B10 File Offset: 0x00077D10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x0600103A RID: 4154 RVA: 0x00079B78 File Offset: 0x00077D78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidSubstation.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 100;
            }

            // Token: 0x0600103B RID: 4155 RVA: 0x00079C76 File Offset: 0x00077E76
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_TransfsRow NewvJ_TransfsRow()
            {
                return (DataSetGES.vJ_TransfsRow)base.NewRow();
            }

            // Token: 0x0600103C RID: 4156 RVA: 0x00079C83 File Offset: 0x00077E83
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_TransfsRow(builder);
            }

            // Token: 0x0600103D RID: 4157 RVA: 0x00079C8B File Offset: 0x00077E8B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_TransfsRow);
            }

            // Token: 0x0600103E RID: 4158 RVA: 0x00079C97 File Offset: 0x00077E97
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_TransfsRowChanged != null)
                {
                    this.vJ_TransfsRowChanged(this, new DataSetGES.vJ_TransfsRowChangeEvent((DataSetGES.vJ_TransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600103F RID: 4159 RVA: 0x00079CCA File Offset: 0x00077ECA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_TransfsRowChanging != null)
                {
                    this.vJ_TransfsRowChanging(this, new DataSetGES.vJ_TransfsRowChangeEvent((DataSetGES.vJ_TransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001040 RID: 4160 RVA: 0x00079CFD File Offset: 0x00077EFD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_TransfsRowDeleted != null)
                {
                    this.vJ_TransfsRowDeleted(this, new DataSetGES.vJ_TransfsRowChangeEvent((DataSetGES.vJ_TransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001041 RID: 4161 RVA: 0x00079D30 File Offset: 0x00077F30
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_TransfsRowDeleting != null)
                {
                    this.vJ_TransfsRowDeleting(this, new DataSetGES.vJ_TransfsRowChangeEvent((DataSetGES.vJ_TransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001042 RID: 4162 RVA: 0x00079D63 File Offset: 0x00077F63
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_TransfsRow(DataSetGES.vJ_TransfsRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001043 RID: 4163 RVA: 0x00079D74 File Offset: 0x00077F74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_TransfsDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008DF RID: 2271
            private DataColumn columnidSubstation;

            // Token: 0x040008E0 RID: 2272
            private DataColumn columnTypeDoc;

            // Token: 0x040008E1 RID: 2273
            private DataColumn columnidTransf;

            // Token: 0x040008E2 RID: 2274
            private DataColumn columnName;
        }

        // Token: 0x020000F3 RID: 243
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtMeasCableRatioDataTable : TypedTableBase<DataSetGES.dtMeasCableRatioRow>
        {
            // Token: 0x06001044 RID: 4164 RVA: 0x00079F6C File Offset: 0x0007816C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtMeasCableRatioDataTable()
            {
                base.TableName = "dtMeasCableRatio";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001045 RID: 4165 RVA: 0x00079F94 File Offset: 0x00078194
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtMeasCableRatioDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001046 RID: 4166 RVA: 0x0007A03C File Offset: 0x0007823C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtMeasCableRatioDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003B1 RID: 945
            // (get) Token: 0x06001047 RID: 4167 RVA: 0x0007A04C File Offset: 0x0007824C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubstationColumn
            {
                get
                {
                    return this.columnNameSubstation;
                }
            }

            // Token: 0x170003B2 RID: 946
            // (get) Token: 0x06001048 RID: 4168 RVA: 0x0007A054 File Offset: 0x00078254
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x170003B3 RID: 947
            // (get) Token: 0x06001049 RID: 4169 RVA: 0x0007A05C File Offset: 0x0007825C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x170003B4 RID: 948
            // (get) Token: 0x0600104A RID: 4170 RVA: 0x0007A064 File Offset: 0x00078264
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WorkerColumn
            {
                get
                {
                    return this.columnWorker;
                }
            }

            // Token: 0x170003B5 RID: 949
            // (get) Token: 0x0600104B RID: 4171 RVA: 0x0007A06C File Offset: 0x0007826C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadSumColumn
            {
                get
                {
                    return this.columnIadSum;
                }
            }

            // Token: 0x170003B6 RID: 950
            // (get) Token: 0x0600104C RID: 4172 RVA: 0x0007A074 File Offset: 0x00078274
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanSumColumn
            {
                get
                {
                    return this.columnIanSum;
                }
            }

            // Token: 0x170003B7 RID: 951
            // (get) Token: 0x0600104D RID: 4173 RVA: 0x0007A07C File Offset: 0x0007827C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdSumColumn
            {
                get
                {
                    return this.columnIbdSum;
                }
            }

            // Token: 0x170003B8 RID: 952
            // (get) Token: 0x0600104E RID: 4174 RVA: 0x0007A084 File Offset: 0x00078284
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnSumColumn
            {
                get
                {
                    return this.columnIbnSum;
                }
            }

            // Token: 0x170003B9 RID: 953
            // (get) Token: 0x0600104F RID: 4175 RVA: 0x0007A08C File Offset: 0x0007828C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcdSumColumn
            {
                get
                {
                    return this.columnIcdSum;
                }
            }

            // Token: 0x170003BA RID: 954
            // (get) Token: 0x06001050 RID: 4176 RVA: 0x0007A094 File Offset: 0x00078294
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnSumColumn
            {
                get
                {
                    return this.columnIcnSum;
                }
            }

            // Token: 0x170003BB RID: 955
            // (get) Token: 0x06001051 RID: 4177 RVA: 0x0007A09C File Offset: 0x0007829C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IodSumColumn
            {
                get
                {
                    return this.columnIodSum;
                }
            }

            // Token: 0x170003BC RID: 956
            // (get) Token: 0x06001052 RID: 4178 RVA: 0x0007A0A4 File Offset: 0x000782A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IonSumColumn
            {
                get
                {
                    return this.columnIonSum;
                }
            }

            // Token: 0x170003BD RID: 957
            // (get) Token: 0x06001053 RID: 4179 RVA: 0x0007A0AC File Offset: 0x000782AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrdColumn
            {
                get
                {
                    return this.columnIsrd;
                }
            }

            // Token: 0x170003BE RID: 958
            // (get) Token: 0x06001054 RID: 4180 RVA: 0x0007A0B4 File Offset: 0x000782B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsrnColumn
            {
                get
                {
                    return this.columnIsrn;
                }
            }

            // Token: 0x170003BF RID: 959
            // (get) Token: 0x06001055 RID: 4181 RVA: 0x0007A0BC File Offset: 0x000782BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            // Token: 0x170003C0 RID: 960
            // (get) Token: 0x06001056 RID: 4182 RVA: 0x0007A0C4 File Offset: 0x000782C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            // Token: 0x170003C1 RID: 961
            // (get) Token: 0x06001057 RID: 4183 RVA: 0x0007A0CC File Offset: 0x000782CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KpfdColumn
            {
                get
                {
                    return this.columnKpfd;
                }
            }

            // Token: 0x170003C2 RID: 962
            // (get) Token: 0x06001058 RID: 4184 RVA: 0x0007A0D4 File Offset: 0x000782D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KpfnColumn
            {
                get
                {
                    return this.columnKpfn;
                }
            }

            // Token: 0x170003C3 RID: 963
            // (get) Token: 0x06001059 RID: 4185 RVA: 0x0007A0DC File Offset: 0x000782DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003C4 RID: 964
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtMeasCableRatioRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtMeasCableRatioRow)base.Rows[index];
                }
            }

            // Token: 0x140000E5 RID: 229
            // (add) Token: 0x0600105B RID: 4187 RVA: 0x0007A0FC File Offset: 0x000782FC
            // (remove) Token: 0x0600105C RID: 4188 RVA: 0x0007A134 File Offset: 0x00078334
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCableRatioRowChangeEventHandler dtMeasCableRatioRowChanging;

            // Token: 0x140000E6 RID: 230
            // (add) Token: 0x0600105D RID: 4189 RVA: 0x0007A16C File Offset: 0x0007836C
            // (remove) Token: 0x0600105E RID: 4190 RVA: 0x0007A1A4 File Offset: 0x000783A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCableRatioRowChangeEventHandler dtMeasCableRatioRowChanged;

            // Token: 0x140000E7 RID: 231
            // (add) Token: 0x0600105F RID: 4191 RVA: 0x0007A1DC File Offset: 0x000783DC
            // (remove) Token: 0x06001060 RID: 4192 RVA: 0x0007A214 File Offset: 0x00078414
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCableRatioRowChangeEventHandler dtMeasCableRatioRowDeleting;

            // Token: 0x140000E8 RID: 232
            // (add) Token: 0x06001061 RID: 4193 RVA: 0x0007A24C File Offset: 0x0007844C
            // (remove) Token: 0x06001062 RID: 4194 RVA: 0x0007A284 File Offset: 0x00078484
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCableRatioRowChangeEventHandler dtMeasCableRatioRowDeleted;

            // Token: 0x06001063 RID: 4195 RVA: 0x0007A2B9 File Offset: 0x000784B9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AdddtMeasCableRatioRow(DataSetGES.dtMeasCableRatioRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001064 RID: 4196 RVA: 0x0007A2C8 File Offset: 0x000784C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtMeasCableRatioRow AdddtMeasCableRatioRow(string NameSubstation, string NameTransf, string NameBus, string Worker, int IadSum, int IanSum, int IbdSum, int IbnSum, int IcdSum, int IcnSum, int IodSum, int IonSum, int Isrd, int Isrn, int Kntd, int Kntn, int Kpfd, int Kpfn)
            {
                DataSetGES.dtMeasCableRatioRow dtMeasCableRatioRow = (DataSetGES.dtMeasCableRatioRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    NameSubstation,
                    NameTransf,
                    NameBus,
                    Worker,
                    IadSum,
                    IanSum,
                    IbdSum,
                    IbnSum,
                    IcdSum,
                    IcnSum,
                    IodSum,
                    IonSum,
                    Isrd,
                    Isrn,
                    Kntd,
                    Kntn,
                    Kpfd,
                    Kpfn
                };
                dtMeasCableRatioRow.ItemArray = itemArray;
                base.Rows.Add(dtMeasCableRatioRow);
                return dtMeasCableRatioRow;
            }

            // Token: 0x06001065 RID: 4197 RVA: 0x0007A3A8 File Offset: 0x000785A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtMeasCableRatioDataTable dtMeasCableRatioDataTable = (DataSetGES.dtMeasCableRatioDataTable)base.Clone();
                dtMeasCableRatioDataTable.InitVars();
                return dtMeasCableRatioDataTable;
            }

            // Token: 0x06001066 RID: 4198 RVA: 0x0007A3C8 File Offset: 0x000785C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtMeasCableRatioDataTable();
            }

            // Token: 0x06001067 RID: 4199 RVA: 0x0007A3D0 File Offset: 0x000785D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnNameSubstation = base.Columns["NameSubstation"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnWorker = base.Columns["Worker"];
                this.columnIadSum = base.Columns["IadSum"];
                this.columnIanSum = base.Columns["IanSum"];
                this.columnIbdSum = base.Columns["IbdSum"];
                this.columnIbnSum = base.Columns["IbnSum"];
                this.columnIcdSum = base.Columns["IcdSum"];
                this.columnIcnSum = base.Columns["IcnSum"];
                this.columnIodSum = base.Columns["IodSum"];
                this.columnIonSum = base.Columns["IonSum"];
                this.columnIsrd = base.Columns["Isrd"];
                this.columnIsrn = base.Columns["Isrn"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
                this.columnKpfd = base.Columns["Kpfd"];
                this.columnKpfn = base.Columns["Kpfn"];
            }

            // Token: 0x06001068 RID: 4200 RVA: 0x0007A56C File Offset: 0x0007876C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnNameSubstation = new DataColumn("NameSubstation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSubstation);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnWorker = new DataColumn("Worker", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnWorker);
                this.columnIadSum = new DataColumn("IadSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIadSum);
                this.columnIanSum = new DataColumn("IanSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIanSum);
                this.columnIbdSum = new DataColumn("IbdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbdSum);
                this.columnIbnSum = new DataColumn("IbnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbnSum);
                this.columnIcdSum = new DataColumn("IcdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcdSum);
                this.columnIcnSum = new DataColumn("IcnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcnSum);
                this.columnIodSum = new DataColumn("IodSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIodSum);
                this.columnIonSum = new DataColumn("IonSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIonSum);
                this.columnIsrd = new DataColumn("Isrd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrd);
                this.columnIsrn = new DataColumn("Isrn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrn);
                this.columnKntd = new DataColumn("Kntd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
                this.columnKpfd = new DataColumn("Kpfd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfd);
                this.columnKpfn = new DataColumn("Kpfn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfn);
                this.columnIanSum.Caption = "IadSum";
                this.columnIbdSum.Caption = "IadSum";
                this.columnIbnSum.Caption = "IadSum";
                this.columnIcdSum.Caption = "IadSum";
                this.columnIcnSum.Caption = "IadSum";
                this.columnIodSum.Caption = "IadSum";
            }

            // Token: 0x06001069 RID: 4201 RVA: 0x0007A903 File Offset: 0x00078B03
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtMeasCableRatioRow NewdtMeasCableRatioRow()
            {
                return (DataSetGES.dtMeasCableRatioRow)base.NewRow();
            }

            // Token: 0x0600106A RID: 4202 RVA: 0x0007A910 File Offset: 0x00078B10
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtMeasCableRatioRow(builder);
            }

            // Token: 0x0600106B RID: 4203 RVA: 0x0007A918 File Offset: 0x00078B18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtMeasCableRatioRow);
            }

            // Token: 0x0600106C RID: 4204 RVA: 0x0007A924 File Offset: 0x00078B24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtMeasCableRatioRowChanged != null)
                {
                    this.dtMeasCableRatioRowChanged(this, new DataSetGES.dtMeasCableRatioRowChangeEvent((DataSetGES.dtMeasCableRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600106D RID: 4205 RVA: 0x0007A957 File Offset: 0x00078B57
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtMeasCableRatioRowChanging != null)
                {
                    this.dtMeasCableRatioRowChanging(this, new DataSetGES.dtMeasCableRatioRowChangeEvent((DataSetGES.dtMeasCableRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600106E RID: 4206 RVA: 0x0007A98A File Offset: 0x00078B8A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtMeasCableRatioRowDeleted != null)
                {
                    this.dtMeasCableRatioRowDeleted(this, new DataSetGES.dtMeasCableRatioRowChangeEvent((DataSetGES.dtMeasCableRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600106F RID: 4207 RVA: 0x0007A9BD File Offset: 0x00078BBD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtMeasCableRatioRowDeleting != null)
                {
                    this.dtMeasCableRatioRowDeleting(this, new DataSetGES.dtMeasCableRatioRowChangeEvent((DataSetGES.dtMeasCableRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001070 RID: 4208 RVA: 0x0007A9F0 File Offset: 0x00078BF0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtMeasCableRatioRow(DataSetGES.dtMeasCableRatioRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001071 RID: 4209 RVA: 0x0007AA00 File Offset: 0x00078C00
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtMeasCableRatioDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008E7 RID: 2279
            private DataColumn columnNameSubstation;

            // Token: 0x040008E8 RID: 2280
            private DataColumn columnNameTransf;

            // Token: 0x040008E9 RID: 2281
            private DataColumn columnNameBus;

            // Token: 0x040008EA RID: 2282
            private DataColumn columnWorker;

            // Token: 0x040008EB RID: 2283
            private DataColumn columnIadSum;

            // Token: 0x040008EC RID: 2284
            private DataColumn columnIanSum;

            // Token: 0x040008ED RID: 2285
            private DataColumn columnIbdSum;

            // Token: 0x040008EE RID: 2286
            private DataColumn columnIbnSum;

            // Token: 0x040008EF RID: 2287
            private DataColumn columnIcdSum;

            // Token: 0x040008F0 RID: 2288
            private DataColumn columnIcnSum;

            // Token: 0x040008F1 RID: 2289
            private DataColumn columnIodSum;

            // Token: 0x040008F2 RID: 2290
            private DataColumn columnIonSum;

            // Token: 0x040008F3 RID: 2291
            private DataColumn columnIsrd;

            // Token: 0x040008F4 RID: 2292
            private DataColumn columnIsrn;

            // Token: 0x040008F5 RID: 2293
            private DataColumn columnKntd;

            // Token: 0x040008F6 RID: 2294
            private DataColumn columnKntn;

            // Token: 0x040008F7 RID: 2295
            private DataColumn columnKpfd;

            // Token: 0x040008F8 RID: 2296
            private DataColumn columnKpfn;
        }

        // Token: 0x020000F4 RID: 244
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_GetBusLVByTransfDataTable : TypedTableBase<DataSetGES.fn_J_GetBusLVByTransfRow>
        {
            // Token: 0x06001072 RID: 4210 RVA: 0x0007ABF8 File Offset: 0x00078DF8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetBusLVByTransfDataTable()
            {
                base.TableName = "fn_J_GetBusLVByTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001073 RID: 4211 RVA: 0x0007AC20 File Offset: 0x00078E20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetBusLVByTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001074 RID: 4212 RVA: 0x0007ACC8 File Offset: 0x00078EC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetBusLVByTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003C5 RID: 965
            // (get) Token: 0x06001075 RID: 4213 RVA: 0x0007ACD8 File Offset: 0x00078ED8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x170003C6 RID: 966
            // (get) Token: 0x06001076 RID: 4214 RVA: 0x0007ACE0 File Offset: 0x00078EE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170003C7 RID: 967
            // (get) Token: 0x06001077 RID: 4215 RVA: 0x0007ACE8 File Offset: 0x00078EE8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x170003C8 RID: 968
            // (get) Token: 0x06001078 RID: 4216 RVA: 0x0007ACF0 File Offset: 0x00078EF0
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003C9 RID: 969
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetBusLVByTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_GetBusLVByTransfRow)base.Rows[index];
                }
            }

            // Token: 0x140000E9 RID: 233
            // (add) Token: 0x0600107A RID: 4218 RVA: 0x0007AD10 File Offset: 0x00078F10
            // (remove) Token: 0x0600107B RID: 4219 RVA: 0x0007AD48 File Offset: 0x00078F48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusLVByTransfRowChangeEventHandler fn_J_GetBusLVByTransfRowChanging;

            // Token: 0x140000EA RID: 234
            // (add) Token: 0x0600107C RID: 4220 RVA: 0x0007AD80 File Offset: 0x00078F80
            // (remove) Token: 0x0600107D RID: 4221 RVA: 0x0007ADB8 File Offset: 0x00078FB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusLVByTransfRowChangeEventHandler fn_J_GetBusLVByTransfRowChanged;

            // Token: 0x140000EB RID: 235
            // (add) Token: 0x0600107E RID: 4222 RVA: 0x0007ADF0 File Offset: 0x00078FF0
            // (remove) Token: 0x0600107F RID: 4223 RVA: 0x0007AE28 File Offset: 0x00079028
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusLVByTransfRowChangeEventHandler fn_J_GetBusLVByTransfRowDeleting;

            // Token: 0x140000EC RID: 236
            // (add) Token: 0x06001080 RID: 4224 RVA: 0x0007AE60 File Offset: 0x00079060
            // (remove) Token: 0x06001081 RID: 4225 RVA: 0x0007AE98 File Offset: 0x00079098
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusLVByTransfRowChangeEventHandler fn_J_GetBusLVByTransfRowDeleted;

            // Token: 0x06001082 RID: 4226 RVA: 0x0007AECD File Offset: 0x000790CD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Addfn_J_GetBusLVByTransfRow(DataSetGES.fn_J_GetBusLVByTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001083 RID: 4227 RVA: 0x0007AEDC File Offset: 0x000790DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetBusLVByTransfRow Addfn_J_GetBusLVByTransfRow(int Id, string Name, int TypeCodeId)
            {
                DataSetGES.fn_J_GetBusLVByTransfRow fn_J_GetBusLVByTransfRow = (DataSetGES.fn_J_GetBusLVByTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    Name,
                    TypeCodeId
                };
                fn_J_GetBusLVByTransfRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_GetBusLVByTransfRow);
                return fn_J_GetBusLVByTransfRow;
            }

            // Token: 0x06001084 RID: 4228 RVA: 0x0007AF28 File Offset: 0x00079128
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetBusLVByTransfDataTable fn_J_GetBusLVByTransfDataTable = (DataSetGES.fn_J_GetBusLVByTransfDataTable)base.Clone();
                fn_J_GetBusLVByTransfDataTable.InitVars();
                return fn_J_GetBusLVByTransfDataTable;
            }

            // Token: 0x06001085 RID: 4229 RVA: 0x0007AF48 File Offset: 0x00079148
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetBusLVByTransfDataTable();
            }

            // Token: 0x06001086 RID: 4230 RVA: 0x0007AF50 File Offset: 0x00079150
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
            }

            // Token: 0x06001087 RID: 4231 RVA: 0x0007AFA0 File Offset: 0x000791A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnName.MaxLength = 512;
            }

            // Token: 0x06001088 RID: 4232 RVA: 0x0007B044 File Offset: 0x00079244
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetBusLVByTransfRow Newfn_J_GetBusLVByTransfRow()
            {
                return (DataSetGES.fn_J_GetBusLVByTransfRow)base.NewRow();
            }

            // Token: 0x06001089 RID: 4233 RVA: 0x0007B051 File Offset: 0x00079251
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_GetBusLVByTransfRow(builder);
            }

            // Token: 0x0600108A RID: 4234 RVA: 0x0007B059 File Offset: 0x00079259
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_GetBusLVByTransfRow);
            }

            // Token: 0x0600108B RID: 4235 RVA: 0x0007B065 File Offset: 0x00079265
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_GetBusLVByTransfRowChanged != null)
                {
                    this.fn_J_GetBusLVByTransfRowChanged(this, new DataSetGES.fn_J_GetBusLVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600108C RID: 4236 RVA: 0x0007B098 File Offset: 0x00079298
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_GetBusLVByTransfRowChanging != null)
                {
                    this.fn_J_GetBusLVByTransfRowChanging(this, new DataSetGES.fn_J_GetBusLVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600108D RID: 4237 RVA: 0x0007B0CB File Offset: 0x000792CB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_GetBusLVByTransfRowDeleted != null)
                {
                    this.fn_J_GetBusLVByTransfRowDeleted(this, new DataSetGES.fn_J_GetBusLVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600108E RID: 4238 RVA: 0x0007B0FE File Offset: 0x000792FE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_GetBusLVByTransfRowDeleting != null)
                {
                    this.fn_J_GetBusLVByTransfRowDeleting(this, new DataSetGES.fn_J_GetBusLVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusLVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600108F RID: 4239 RVA: 0x0007B131 File Offset: 0x00079331
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefn_J_GetBusLVByTransfRow(DataSetGES.fn_J_GetBusLVByTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001090 RID: 4240 RVA: 0x0007B140 File Offset: 0x00079340
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_GetBusLVByTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040008FD RID: 2301
            private DataColumn columnId;

            // Token: 0x040008FE RID: 2302
            private DataColumn columnName;

            // Token: 0x040008FF RID: 2303
            private DataColumn columnTypeCodeId;
        }

        // Token: 0x020000F5 RID: 245
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasurementReportDataTable : TypedTableBase<DataSetGES.vJ_MeasurementReportRow>
        {
            // Token: 0x06001091 RID: 4241 RVA: 0x0007B338 File Offset: 0x00079538
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasurementReportDataTable()
            {
                base.TableName = "vJ_MeasurementReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001092 RID: 4242 RVA: 0x0007B360 File Offset: 0x00079560
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasurementReportDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001093 RID: 4243 RVA: 0x0007B408 File Offset: 0x00079608
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasurementReportDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003CA RID: 970
            // (get) Token: 0x06001094 RID: 4244 RVA: 0x0007B418 File Offset: 0x00079618
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170003CB RID: 971
            // (get) Token: 0x06001095 RID: 4245 RVA: 0x0007B420 File Offset: 0x00079620
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            // Token: 0x170003CC RID: 972
            // (get) Token: 0x06001096 RID: 4246 RVA: 0x0007B428 File Offset: 0x00079628
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170003CD RID: 973
            // (get) Token: 0x06001097 RID: 4247 RVA: 0x0007B430 File Offset: 0x00079630
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            // Token: 0x170003CE RID: 974
            // (get) Token: 0x06001098 RID: 4248 RVA: 0x0007B438 File Offset: 0x00079638
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateDColumn
            {
                get
                {
                    return this.columnDateD;
                }
            }

            // Token: 0x170003CF RID: 975
            // (get) Token: 0x06001099 RID: 4249 RVA: 0x0007B440 File Offset: 0x00079640
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TemperatureDColumn
            {
                get
                {
                    return this.columnTemperatureD;
                }
            }

            // Token: 0x170003D0 RID: 976
            // (get) Token: 0x0600109A RID: 4250 RVA: 0x0007B448 File Offset: 0x00079648
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateNColumn
            {
                get
                {
                    return this.columnDateN;
                }
            }

            // Token: 0x170003D1 RID: 977
            // (get) Token: 0x0600109B RID: 4251 RVA: 0x0007B450 File Offset: 0x00079650
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TemperatureNColumn
            {
                get
                {
                    return this.columnTemperatureN;
                }
            }

            // Token: 0x170003D2 RID: 978
            // (get) Token: 0x0600109C RID: 4252 RVA: 0x0007B458 File Offset: 0x00079658
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            // Token: 0x170003D3 RID: 979
            // (get) Token: 0x0600109D RID: 4253 RVA: 0x0007B460 File Offset: 0x00079660
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FIOColumn
            {
                get
                {
                    return this.columnFIO;
                }
            }

            // Token: 0x170003D4 RID: 980
            // (get) Token: 0x0600109E RID: 4254 RVA: 0x0007B468 File Offset: 0x00079668
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170003D5 RID: 981
            // (get) Token: 0x0600109F RID: 4255 RVA: 0x0007B470 File Offset: 0x00079670
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003D6 RID: 982
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasurementReportRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasurementReportRow)base.Rows[index];
                }
            }

            // Token: 0x140000ED RID: 237
            // (add) Token: 0x060010A1 RID: 4257 RVA: 0x0007B490 File Offset: 0x00079690
            // (remove) Token: 0x060010A2 RID: 4258 RVA: 0x0007B4C8 File Offset: 0x000796C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasurementReportRowChangeEventHandler vJ_MeasurementReportRowChanging;

            // Token: 0x140000EE RID: 238
            // (add) Token: 0x060010A3 RID: 4259 RVA: 0x0007B500 File Offset: 0x00079700
            // (remove) Token: 0x060010A4 RID: 4260 RVA: 0x0007B538 File Offset: 0x00079738
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasurementReportRowChangeEventHandler vJ_MeasurementReportRowChanged;

            // Token: 0x140000EF RID: 239
            // (add) Token: 0x060010A5 RID: 4261 RVA: 0x0007B570 File Offset: 0x00079770
            // (remove) Token: 0x060010A6 RID: 4262 RVA: 0x0007B5A8 File Offset: 0x000797A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasurementReportRowChangeEventHandler vJ_MeasurementReportRowDeleting;

            // Token: 0x140000F0 RID: 240
            // (add) Token: 0x060010A7 RID: 4263 RVA: 0x0007B5E0 File Offset: 0x000797E0
            // (remove) Token: 0x060010A8 RID: 4264 RVA: 0x0007B618 File Offset: 0x00079818
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasurementReportRowChangeEventHandler vJ_MeasurementReportRowDeleted;

            // Token: 0x060010A9 RID: 4265 RVA: 0x0007B64D File Offset: 0x0007984D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_MeasurementReportRow(DataSetGES.vJ_MeasurementReportRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060010AA RID: 4266 RVA: 0x0007B65C File Offset: 0x0007985C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasurementReportRow AddvJ_MeasurementReportRow(int id, int idObjList, string Name, int TypeDoc, DateTime DateD, int TemperatureD, DateTime DateN, int TemperatureN, int idWorker, string FIO, bool Deleted)
            {
                DataSetGES.vJ_MeasurementReportRow vJ_MeasurementReportRow = (DataSetGES.vJ_MeasurementReportRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idObjList,
                    Name,
                    TypeDoc,
                    DateD,
                    TemperatureD,
                    DateN,
                    TemperatureN,
                    idWorker,
                    FIO,
                    Deleted
                };
                vJ_MeasurementReportRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasurementReportRow);
                return vJ_MeasurementReportRow;
            }

            // Token: 0x060010AB RID: 4267 RVA: 0x0007B6F8 File Offset: 0x000798F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasurementReportDataTable vJ_MeasurementReportDataTable = (DataSetGES.vJ_MeasurementReportDataTable)base.Clone();
                vJ_MeasurementReportDataTable.InitVars();
                return vJ_MeasurementReportDataTable;
            }

            // Token: 0x060010AC RID: 4268 RVA: 0x0007B718 File Offset: 0x00079918
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasurementReportDataTable();
            }

            // Token: 0x060010AD RID: 4269 RVA: 0x0007B720 File Offset: 0x00079920
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnName = base.Columns["Name"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnDateD = base.Columns["DateD"];
                this.columnTemperatureD = base.Columns["TemperatureD"];
                this.columnDateN = base.Columns["DateN"];
                this.columnTemperatureN = base.Columns["TemperatureN"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnFIO = base.Columns["FIO"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x060010AE RID: 4270 RVA: 0x0007B820 File Offset: 0x00079A20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnDateD = new DataColumn("DateD", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateD);
                this.columnTemperatureD = new DataColumn("TemperatureD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureD);
                this.columnDateN = new DataColumn("DateN", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateN);
                this.columnTemperatureN = new DataColumn("TemperatureN", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureN);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnFIO = new DataColumn("FIO", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnid.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 563;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnFIO.ReadOnly = true;
                this.columnFIO.MaxLength = 36;
            }

            // Token: 0x060010AF RID: 4271 RVA: 0x0007BA75 File Offset: 0x00079C75
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasurementReportRow NewvJ_MeasurementReportRow()
            {
                return (DataSetGES.vJ_MeasurementReportRow)base.NewRow();
            }

            // Token: 0x060010B0 RID: 4272 RVA: 0x0007BA82 File Offset: 0x00079C82
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasurementReportRow(builder);
            }

            // Token: 0x060010B1 RID: 4273 RVA: 0x0007BA8A File Offset: 0x00079C8A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasurementReportRow);
            }

            // Token: 0x060010B2 RID: 4274 RVA: 0x0007BA96 File Offset: 0x00079C96
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasurementReportRowChanged != null)
                {
                    this.vJ_MeasurementReportRowChanged(this, new DataSetGES.vJ_MeasurementReportRowChangeEvent((DataSetGES.vJ_MeasurementReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010B3 RID: 4275 RVA: 0x0007BAC9 File Offset: 0x00079CC9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasurementReportRowChanging != null)
                {
                    this.vJ_MeasurementReportRowChanging(this, new DataSetGES.vJ_MeasurementReportRowChangeEvent((DataSetGES.vJ_MeasurementReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010B4 RID: 4276 RVA: 0x0007BAFC File Offset: 0x00079CFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasurementReportRowDeleted != null)
                {
                    this.vJ_MeasurementReportRowDeleted(this, new DataSetGES.vJ_MeasurementReportRowChangeEvent((DataSetGES.vJ_MeasurementReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010B5 RID: 4277 RVA: 0x0007BB2F File Offset: 0x00079D2F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasurementReportRowDeleting != null)
                {
                    this.vJ_MeasurementReportRowDeleting(this, new DataSetGES.vJ_MeasurementReportRowChangeEvent((DataSetGES.vJ_MeasurementReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010B6 RID: 4278 RVA: 0x0007BB62 File Offset: 0x00079D62
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_MeasurementReportRow(DataSetGES.vJ_MeasurementReportRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060010B7 RID: 4279 RVA: 0x0007BB70 File Offset: 0x00079D70
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasurementReportDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000904 RID: 2308
            private DataColumn columnid;

            // Token: 0x04000905 RID: 2309
            private DataColumn columnidObjList;

            // Token: 0x04000906 RID: 2310
            private DataColumn columnName;

            // Token: 0x04000907 RID: 2311
            private DataColumn columnTypeDoc;

            // Token: 0x04000908 RID: 2312
            private DataColumn columnDateD;

            // Token: 0x04000909 RID: 2313
            private DataColumn columnTemperatureD;

            // Token: 0x0400090A RID: 2314
            private DataColumn columnDateN;

            // Token: 0x0400090B RID: 2315
            private DataColumn columnTemperatureN;

            // Token: 0x0400090C RID: 2316
            private DataColumn columnidWorker;

            // Token: 0x0400090D RID: 2317
            private DataColumn columnFIO;

            // Token: 0x0400090E RID: 2318
            private DataColumn columnDeleted;
        }

        // Token: 0x020000F6 RID: 246
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtMeasTransfAmperageDopDataReportDataTable : TypedTableBase<DataSetGES.dtMeasTransfAmperageDopDataReportRow>
        {
            // Token: 0x060010B8 RID: 4280 RVA: 0x0007BD68 File Offset: 0x00079F68
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtMeasTransfAmperageDopDataReportDataTable()
            {
                base.TableName = "dtMeasTransfAmperageDopDataReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060010B9 RID: 4281 RVA: 0x0007BD90 File Offset: 0x00079F90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtMeasTransfAmperageDopDataReportDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060010BA RID: 4282 RVA: 0x0007BE38 File Offset: 0x0007A038
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtMeasTransfAmperageDopDataReportDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003D7 RID: 983
            // (get) Token: 0x060010BB RID: 4283 RVA: 0x0007BE48 File Offset: 0x0007A048
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x170003D8 RID: 984
            // (get) Token: 0x060010BC RID: 4284 RVA: 0x0007BE50 File Offset: 0x0007A050
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003D9 RID: 985
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtMeasTransfAmperageDopDataReportRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtMeasTransfAmperageDopDataReportRow)base.Rows[index];
                }
            }

            // Token: 0x140000F1 RID: 241
            // (add) Token: 0x060010BE RID: 4286 RVA: 0x0007BE70 File Offset: 0x0007A070
            // (remove) Token: 0x060010BF RID: 4287 RVA: 0x0007BEA8 File Offset: 0x0007A0A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEventHandler dtMeasTransfAmperageDopDataReportRowChanging;

            // Token: 0x140000F2 RID: 242
            // (add) Token: 0x060010C0 RID: 4288 RVA: 0x0007BEE0 File Offset: 0x0007A0E0
            // (remove) Token: 0x060010C1 RID: 4289 RVA: 0x0007BF18 File Offset: 0x0007A118
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEventHandler dtMeasTransfAmperageDopDataReportRowChanged;

            // Token: 0x140000F3 RID: 243
            // (add) Token: 0x060010C2 RID: 4290 RVA: 0x0007BF50 File Offset: 0x0007A150
            // (remove) Token: 0x060010C3 RID: 4291 RVA: 0x0007BF88 File Offset: 0x0007A188
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEventHandler dtMeasTransfAmperageDopDataReportRowDeleting;

            // Token: 0x140000F4 RID: 244
            // (add) Token: 0x060010C4 RID: 4292 RVA: 0x0007BFC0 File Offset: 0x0007A1C0
            // (remove) Token: 0x060010C5 RID: 4293 RVA: 0x0007BFF8 File Offset: 0x0007A1F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEventHandler dtMeasTransfAmperageDopDataReportRowDeleted;

            // Token: 0x060010C6 RID: 4294 RVA: 0x0007C02D File Offset: 0x0007A22D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtMeasTransfAmperageDopDataReportRow(DataSetGES.dtMeasTransfAmperageDopDataReportRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060010C7 RID: 4295 RVA: 0x0007C03C File Offset: 0x0007A23C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtMeasTransfAmperageDopDataReportRow AdddtMeasTransfAmperageDopDataReportRow(string NameBus)
            {
                DataSetGES.dtMeasTransfAmperageDopDataReportRow dtMeasTransfAmperageDopDataReportRow = (DataSetGES.dtMeasTransfAmperageDopDataReportRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    NameBus
                };
                dtMeasTransfAmperageDopDataReportRow.ItemArray = itemArray;
                base.Rows.Add(dtMeasTransfAmperageDopDataReportRow);
                return dtMeasTransfAmperageDopDataReportRow;
            }

            // Token: 0x060010C8 RID: 4296 RVA: 0x0007C078 File Offset: 0x0007A278
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.dtMeasTransfAmperageDopDataReportDataTable dtMeasTransfAmperageDopDataReportDataTable = (DataSetGES.dtMeasTransfAmperageDopDataReportDataTable)base.Clone();
                dtMeasTransfAmperageDopDataReportDataTable.InitVars();
                return dtMeasTransfAmperageDopDataReportDataTable;
            }

            // Token: 0x060010C9 RID: 4297 RVA: 0x0007C098 File Offset: 0x0007A298
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtMeasTransfAmperageDopDataReportDataTable();
            }

            // Token: 0x060010CA RID: 4298 RVA: 0x0007C09F File Offset: 0x0007A29F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnNameBus = base.Columns["NameBus"];
            }

            // Token: 0x060010CB RID: 4299 RVA: 0x0007C0B7 File Offset: 0x0007A2B7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
            }

            // Token: 0x060010CC RID: 4300 RVA: 0x0007C0E6 File Offset: 0x0007A2E6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtMeasTransfAmperageDopDataReportRow NewdtMeasTransfAmperageDopDataReportRow()
            {
                return (DataSetGES.dtMeasTransfAmperageDopDataReportRow)base.NewRow();
            }

            // Token: 0x060010CD RID: 4301 RVA: 0x0007C0F3 File Offset: 0x0007A2F3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtMeasTransfAmperageDopDataReportRow(builder);
            }

            // Token: 0x060010CE RID: 4302 RVA: 0x0007C0FB File Offset: 0x0007A2FB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtMeasTransfAmperageDopDataReportRow);
            }

            // Token: 0x060010CF RID: 4303 RVA: 0x0007C107 File Offset: 0x0007A307
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtMeasTransfAmperageDopDataReportRowChanged != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowChanged(this, new DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEvent((DataSetGES.dtMeasTransfAmperageDopDataReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010D0 RID: 4304 RVA: 0x0007C13A File Offset: 0x0007A33A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtMeasTransfAmperageDopDataReportRowChanging != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowChanging(this, new DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEvent((DataSetGES.dtMeasTransfAmperageDopDataReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010D1 RID: 4305 RVA: 0x0007C16D File Offset: 0x0007A36D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtMeasTransfAmperageDopDataReportRowDeleted != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowDeleted(this, new DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEvent((DataSetGES.dtMeasTransfAmperageDopDataReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010D2 RID: 4306 RVA: 0x0007C1A0 File Offset: 0x0007A3A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtMeasTransfAmperageDopDataReportRowDeleting != null)
                {
                    this.dtMeasTransfAmperageDopDataReportRowDeleting(this, new DataSetGES.dtMeasTransfAmperageDopDataReportRowChangeEvent((DataSetGES.dtMeasTransfAmperageDopDataReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010D3 RID: 4307 RVA: 0x0007C1D3 File Offset: 0x0007A3D3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovedtMeasTransfAmperageDopDataReportRow(DataSetGES.dtMeasTransfAmperageDopDataReportRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060010D4 RID: 4308 RVA: 0x0007C1E4 File Offset: 0x0007A3E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtMeasTransfAmperageDopDataReportDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000913 RID: 2323
            private DataColumn columnNameBus;
        }

        // Token: 0x020000F7 RID: 247
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_ExcelessLoadReportDataTable : TypedTableBase<DataSetGES.fn_J_ExcelessLoadReportRow>
        {
            // Token: 0x060010D5 RID: 4309 RVA: 0x0007C3DC File Offset: 0x0007A5DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_ExcelessLoadReportDataTable()
            {
                base.TableName = "fn_J_ExcelessLoadReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060010D6 RID: 4310 RVA: 0x0007C404 File Offset: 0x0007A604
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_ExcelessLoadReportDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060010D7 RID: 4311 RVA: 0x0007C4AC File Offset: 0x0007A6AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fn_J_ExcelessLoadReportDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003DA RID: 986
            // (get) Token: 0x060010D8 RID: 4312 RVA: 0x0007C4BC File Offset: 0x0007A6BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NetRegionColumn
            {
                get
                {
                    return this.columnNetRegion;
                }
            }

            // Token: 0x170003DB RID: 987
            // (get) Token: 0x060010D9 RID: 4313 RVA: 0x0007C4C4 File Offset: 0x0007A6C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SSSocrNameColumn
            {
                get
                {
                    return this.columnSSSocrName;
                }
            }

            // Token: 0x170003DC RID: 988
            // (get) Token: 0x060010DA RID: 4314 RVA: 0x0007C4CC File Offset: 0x0007A6CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubstationColumn
            {
                get
                {
                    return this.columnSubstation;
                }
            }

            // Token: 0x170003DD RID: 989
            // (get) Token: 0x060010DB RID: 4315 RVA: 0x0007C4D4 File Offset: 0x0007A6D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SwitchColumn
            {
                get
                {
                    return this.columnSwitch;
                }
            }

            // Token: 0x170003DE RID: 990
            // (get) Token: 0x060010DC RID: 4316 RVA: 0x0007C4DC File Offset: 0x0007A6DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            // Token: 0x170003DF RID: 991
            // (get) Token: 0x060010DD RID: 4317 RVA: 0x0007C4E4 File Offset: 0x0007A6E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            // Token: 0x170003E0 RID: 992
            // (get) Token: 0x060010DE RID: 4318 RVA: 0x0007C4EC File Offset: 0x0007A6EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            // Token: 0x170003E1 RID: 993
            // (get) Token: 0x060010DF RID: 4319 RVA: 0x0007C4F4 File Offset: 0x0007A6F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            // Token: 0x170003E2 RID: 994
            // (get) Token: 0x060010E0 RID: 4320 RVA: 0x0007C4FC File Offset: 0x0007A6FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            // Token: 0x170003E3 RID: 995
            // (get) Token: 0x060010E1 RID: 4321 RVA: 0x0007C504 File Offset: 0x0007A704
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            // Token: 0x170003E4 RID: 996
            // (get) Token: 0x060010E2 RID: 4322 RVA: 0x0007C50C File Offset: 0x0007A70C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            // Token: 0x170003E5 RID: 997
            // (get) Token: 0x060010E3 RID: 4323 RVA: 0x0007C514 File Offset: 0x0007A714
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x170003E6 RID: 998
            // (get) Token: 0x060010E4 RID: 4324 RVA: 0x0007C51C File Offset: 0x0007A71C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003E7 RID: 999
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_ExcelessLoadReportRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_ExcelessLoadReportRow)base.Rows[index];
                }
            }

            // Token: 0x140000F5 RID: 245
            // (add) Token: 0x060010E6 RID: 4326 RVA: 0x0007C53C File Offset: 0x0007A73C
            // (remove) Token: 0x060010E7 RID: 4327 RVA: 0x0007C574 File Offset: 0x0007A774
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_ExcelessLoadReportRowChangeEventHandler fn_J_ExcelessLoadReportRowChanging;

            // Token: 0x140000F6 RID: 246
            // (add) Token: 0x060010E8 RID: 4328 RVA: 0x0007C5AC File Offset: 0x0007A7AC
            // (remove) Token: 0x060010E9 RID: 4329 RVA: 0x0007C5E4 File Offset: 0x0007A7E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_ExcelessLoadReportRowChangeEventHandler fn_J_ExcelessLoadReportRowChanged;

            // Token: 0x140000F7 RID: 247
            // (add) Token: 0x060010EA RID: 4330 RVA: 0x0007C61C File Offset: 0x0007A81C
            // (remove) Token: 0x060010EB RID: 4331 RVA: 0x0007C654 File Offset: 0x0007A854
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_ExcelessLoadReportRowChangeEventHandler fn_J_ExcelessLoadReportRowDeleting;

            // Token: 0x140000F8 RID: 248
            // (add) Token: 0x060010EC RID: 4332 RVA: 0x0007C68C File Offset: 0x0007A88C
            // (remove) Token: 0x060010ED RID: 4333 RVA: 0x0007C6C4 File Offset: 0x0007A8C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_ExcelessLoadReportRowChangeEventHandler fn_J_ExcelessLoadReportRowDeleted;

            // Token: 0x060010EE RID: 4334 RVA: 0x0007C6F9 File Offset: 0x0007A8F9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfn_J_ExcelessLoadReportRow(DataSetGES.fn_J_ExcelessLoadReportRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060010EF RID: 4335 RVA: 0x0007C708 File Offset: 0x0007A908
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_ExcelessLoadReportRow Addfn_J_ExcelessLoadReportRow(int NetRegion, string SSSocrName, string Substation, string Switch, double PermisAmperage, int Iad, int Ibd, int Icd, int Ian, int Ibn, int Icn, string Address)
            {
                DataSetGES.fn_J_ExcelessLoadReportRow fn_J_ExcelessLoadReportRow = (DataSetGES.fn_J_ExcelessLoadReportRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    NetRegion,
                    SSSocrName,
                    Substation,
                    Switch,
                    PermisAmperage,
                    Iad,
                    Ibd,
                    Icd,
                    Ian,
                    Ibn,
                    Icn,
                    Address
                };
                fn_J_ExcelessLoadReportRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_ExcelessLoadReportRow);
                return fn_J_ExcelessLoadReportRow;
            }

            // Token: 0x060010F0 RID: 4336 RVA: 0x0007C7A4 File Offset: 0x0007A9A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_ExcelessLoadReportDataTable fn_J_ExcelessLoadReportDataTable = (DataSetGES.fn_J_ExcelessLoadReportDataTable)base.Clone();
                fn_J_ExcelessLoadReportDataTable.InitVars();
                return fn_J_ExcelessLoadReportDataTable;
            }

            // Token: 0x060010F1 RID: 4337 RVA: 0x0007C7C4 File Offset: 0x0007A9C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_ExcelessLoadReportDataTable();
            }

            // Token: 0x060010F2 RID: 4338 RVA: 0x0007C7CC File Offset: 0x0007A9CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnNetRegion = base.Columns["NetRegion"];
                this.columnSSSocrName = base.Columns["SSSocrName"];
                this.columnSubstation = base.Columns["Substation"];
                this.columnSwitch = base.Columns["Switch"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcn = base.Columns["Icn"];
                this.columnAddress = base.Columns["Address"];
            }

            // Token: 0x060010F3 RID: 4339 RVA: 0x0007C8E4 File Offset: 0x0007AAE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnNetRegion = new DataColumn("NetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegion);
                this.columnSSSocrName = new DataColumn("SSSocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSSSocrName);
                this.columnSubstation = new DataColumn("Substation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubstation);
                this.columnSwitch = new DataColumn("Switch", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSwitch);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnSSSocrName.MaxLength = 50;
                this.columnSubstation.MaxLength = 512;
                this.columnSwitch.MaxLength = 512;
                this.columnAddress.MaxLength = 512;
            }

            // Token: 0x060010F4 RID: 4340 RVA: 0x0007CB4A File Offset: 0x0007AD4A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_ExcelessLoadReportRow Newfn_J_ExcelessLoadReportRow()
            {
                return (DataSetGES.fn_J_ExcelessLoadReportRow)base.NewRow();
            }

            // Token: 0x060010F5 RID: 4341 RVA: 0x0007CB57 File Offset: 0x0007AD57
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_ExcelessLoadReportRow(builder);
            }

            // Token: 0x060010F6 RID: 4342 RVA: 0x0007CB5F File Offset: 0x0007AD5F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_ExcelessLoadReportRow);
            }

            // Token: 0x060010F7 RID: 4343 RVA: 0x0007CB6B File Offset: 0x0007AD6B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_ExcelessLoadReportRowChanged != null)
                {
                    this.fn_J_ExcelessLoadReportRowChanged(this, new DataSetGES.fn_J_ExcelessLoadReportRowChangeEvent((DataSetGES.fn_J_ExcelessLoadReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010F8 RID: 4344 RVA: 0x0007CB9E File Offset: 0x0007AD9E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_ExcelessLoadReportRowChanging != null)
                {
                    this.fn_J_ExcelessLoadReportRowChanging(this, new DataSetGES.fn_J_ExcelessLoadReportRowChangeEvent((DataSetGES.fn_J_ExcelessLoadReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010F9 RID: 4345 RVA: 0x0007CBD1 File Offset: 0x0007ADD1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_ExcelessLoadReportRowDeleted != null)
                {
                    this.fn_J_ExcelessLoadReportRowDeleted(this, new DataSetGES.fn_J_ExcelessLoadReportRowChangeEvent((DataSetGES.fn_J_ExcelessLoadReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010FA RID: 4346 RVA: 0x0007CC04 File Offset: 0x0007AE04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_ExcelessLoadReportRowDeleting != null)
                {
                    this.fn_J_ExcelessLoadReportRowDeleting(this, new DataSetGES.fn_J_ExcelessLoadReportRowChangeEvent((DataSetGES.fn_J_ExcelessLoadReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x060010FB RID: 4347 RVA: 0x0007CC37 File Offset: 0x0007AE37
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Removefn_J_ExcelessLoadReportRow(DataSetGES.fn_J_ExcelessLoadReportRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060010FC RID: 4348 RVA: 0x0007CC48 File Offset: 0x0007AE48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_ExcelessLoadReportDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000918 RID: 2328
            private DataColumn columnNetRegion;

            // Token: 0x04000919 RID: 2329
            private DataColumn columnSSSocrName;

            // Token: 0x0400091A RID: 2330
            private DataColumn columnSubstation;

            // Token: 0x0400091B RID: 2331
            private DataColumn columnSwitch;

            // Token: 0x0400091C RID: 2332
            private DataColumn columnPermisAmperage;

            // Token: 0x0400091D RID: 2333
            private DataColumn columnIad;

            // Token: 0x0400091E RID: 2334
            private DataColumn columnIbd;

            // Token: 0x0400091F RID: 2335
            private DataColumn columnIcd;

            // Token: 0x04000920 RID: 2336
            private DataColumn columnIan;

            // Token: 0x04000921 RID: 2337
            private DataColumn columnIbn;

            // Token: 0x04000922 RID: 2338
            private DataColumn columnIcn;

            // Token: 0x04000923 RID: 2339
            private DataColumn columnAddress;
        }

        // Token: 0x020000F8 RID: 248
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtExcelessLoadAddlReportDataTable : TypedTableBase<DataSetGES.dtExcelessLoadAddlReportRow>
        {
            // Token: 0x060010FD RID: 4349 RVA: 0x0007CE40 File Offset: 0x0007B040
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtExcelessLoadAddlReportDataTable()
            {
                base.TableName = "dtExcelessLoadAddlReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060010FE RID: 4350 RVA: 0x0007CE68 File Offset: 0x0007B068
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtExcelessLoadAddlReportDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060010FF RID: 4351 RVA: 0x0007CF10 File Offset: 0x0007B110
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtExcelessLoadAddlReportDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003E8 RID: 1000
            // (get) Token: 0x06001100 RID: 4352 RVA: 0x0007CF20 File Offset: 0x0007B120
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }

            // Token: 0x170003E9 RID: 1001
            // (get) Token: 0x06001101 RID: 4353 RVA: 0x0007CF28 File Offset: 0x0007B128
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CoefficientColumn
            {
                get
                {
                    return this.columnCoefficient;
                }
            }

            // Token: 0x170003EA RID: 1002
            // (get) Token: 0x06001102 RID: 4354 RVA: 0x0007CF30 File Offset: 0x0007B130
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003EB RID: 1003
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtExcelessLoadAddlReportRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtExcelessLoadAddlReportRow)base.Rows[index];
                }
            }

            // Token: 0x140000F9 RID: 249
            // (add) Token: 0x06001104 RID: 4356 RVA: 0x0007CF50 File Offset: 0x0007B150
            // (remove) Token: 0x06001105 RID: 4357 RVA: 0x0007CF88 File Offset: 0x0007B188
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtExcelessLoadAddlReportRowChangeEventHandler dtExcelessLoadAddlReportRowChanging;

            // Token: 0x140000FA RID: 250
            // (add) Token: 0x06001106 RID: 4358 RVA: 0x0007CFC0 File Offset: 0x0007B1C0
            // (remove) Token: 0x06001107 RID: 4359 RVA: 0x0007CFF8 File Offset: 0x0007B1F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtExcelessLoadAddlReportRowChangeEventHandler dtExcelessLoadAddlReportRowChanged;

            // Token: 0x140000FB RID: 251
            // (add) Token: 0x06001108 RID: 4360 RVA: 0x0007D030 File Offset: 0x0007B230
            // (remove) Token: 0x06001109 RID: 4361 RVA: 0x0007D068 File Offset: 0x0007B268
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtExcelessLoadAddlReportRowChangeEventHandler dtExcelessLoadAddlReportRowDeleting;

            // Token: 0x140000FC RID: 252
            // (add) Token: 0x0600110A RID: 4362 RVA: 0x0007D0A0 File Offset: 0x0007B2A0
            // (remove) Token: 0x0600110B RID: 4363 RVA: 0x0007D0D8 File Offset: 0x0007B2D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtExcelessLoadAddlReportRowChangeEventHandler dtExcelessLoadAddlReportRowDeleted;

            // Token: 0x0600110C RID: 4364 RVA: 0x0007D10D File Offset: 0x0007B30D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtExcelessLoadAddlReportRow(DataSetGES.dtExcelessLoadAddlReportRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600110D RID: 4365 RVA: 0x0007D11C File Offset: 0x0007B31C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtExcelessLoadAddlReportRow AdddtExcelessLoadAddlReportRow(int Year, decimal Coefficient)
            {
                DataSetGES.dtExcelessLoadAddlReportRow dtExcelessLoadAddlReportRow = (DataSetGES.dtExcelessLoadAddlReportRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Year,
                    Coefficient
                };
                dtExcelessLoadAddlReportRow.ItemArray = itemArray;
                base.Rows.Add(dtExcelessLoadAddlReportRow);
                return dtExcelessLoadAddlReportRow;
            }

            // Token: 0x0600110E RID: 4366 RVA: 0x0007D164 File Offset: 0x0007B364
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.dtExcelessLoadAddlReportDataTable dtExcelessLoadAddlReportDataTable = (DataSetGES.dtExcelessLoadAddlReportDataTable)base.Clone();
                dtExcelessLoadAddlReportDataTable.InitVars();
                return dtExcelessLoadAddlReportDataTable;
            }

            // Token: 0x0600110F RID: 4367 RVA: 0x0007D184 File Offset: 0x0007B384
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtExcelessLoadAddlReportDataTable();
            }

            // Token: 0x06001110 RID: 4368 RVA: 0x0007D18B File Offset: 0x0007B38B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnYear = base.Columns["Year"];
                this.columnCoefficient = base.Columns["Coefficient"];
            }

            // Token: 0x06001111 RID: 4369 RVA: 0x0007D1BC File Offset: 0x0007B3BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnCoefficient = new DataColumn("Coefficient", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnCoefficient);
            }

            // Token: 0x06001112 RID: 4370 RVA: 0x0007D223 File Offset: 0x0007B423
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtExcelessLoadAddlReportRow NewdtExcelessLoadAddlReportRow()
            {
                return (DataSetGES.dtExcelessLoadAddlReportRow)base.NewRow();
            }

            // Token: 0x06001113 RID: 4371 RVA: 0x0007D230 File Offset: 0x0007B430
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtExcelessLoadAddlReportRow(builder);
            }

            // Token: 0x06001114 RID: 4372 RVA: 0x0007D238 File Offset: 0x0007B438
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtExcelessLoadAddlReportRow);
            }

            // Token: 0x06001115 RID: 4373 RVA: 0x0007D244 File Offset: 0x0007B444
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtExcelessLoadAddlReportRowChanged != null)
                {
                    this.dtExcelessLoadAddlReportRowChanged(this, new DataSetGES.dtExcelessLoadAddlReportRowChangeEvent((DataSetGES.dtExcelessLoadAddlReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001116 RID: 4374 RVA: 0x0007D277 File Offset: 0x0007B477
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtExcelessLoadAddlReportRowChanging != null)
                {
                    this.dtExcelessLoadAddlReportRowChanging(this, new DataSetGES.dtExcelessLoadAddlReportRowChangeEvent((DataSetGES.dtExcelessLoadAddlReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001117 RID: 4375 RVA: 0x0007D2AA File Offset: 0x0007B4AA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtExcelessLoadAddlReportRowDeleted != null)
                {
                    this.dtExcelessLoadAddlReportRowDeleted(this, new DataSetGES.dtExcelessLoadAddlReportRowChangeEvent((DataSetGES.dtExcelessLoadAddlReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001118 RID: 4376 RVA: 0x0007D2DD File Offset: 0x0007B4DD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtExcelessLoadAddlReportRowDeleting != null)
                {
                    this.dtExcelessLoadAddlReportRowDeleting(this, new DataSetGES.dtExcelessLoadAddlReportRowChangeEvent((DataSetGES.dtExcelessLoadAddlReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001119 RID: 4377 RVA: 0x0007D310 File Offset: 0x0007B510
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtExcelessLoadAddlReportRow(DataSetGES.dtExcelessLoadAddlReportRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600111A RID: 4378 RVA: 0x0007D320 File Offset: 0x0007B520
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtExcelessLoadAddlReportDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000928 RID: 2344
            private DataColumn columnYear;

            // Token: 0x04000929 RID: 2345
            private DataColumn columnCoefficient;
        }

        // Token: 0x020000F9 RID: 249
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_CoefficientLoadingDataTable : TypedTableBase<DataSetGES.vJ_CoefficientLoadingRow>
        {
            // Token: 0x0600111B RID: 4379 RVA: 0x0007D518 File Offset: 0x0007B718
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CoefficientLoadingDataTable()
            {
                base.TableName = "vJ_CoefficientLoading";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600111C RID: 4380 RVA: 0x0007D540 File Offset: 0x0007B740
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CoefficientLoadingDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600111D RID: 4381 RVA: 0x0007D5E8 File Offset: 0x0007B7E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CoefficientLoadingDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003EC RID: 1004
            // (get) Token: 0x0600111E RID: 4382 RVA: 0x0007D5F8 File Offset: 0x0007B7F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NetRegionColumn
            {
                get
                {
                    return this.columnNetRegion;
                }
            }

            // Token: 0x170003ED RID: 1005
            // (get) Token: 0x0600111F RID: 4383 RVA: 0x0007D600 File Offset: 0x0007B800
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }

            // Token: 0x170003EE RID: 1006
            // (get) Token: 0x06001120 RID: 4384 RVA: 0x0007D608 File Offset: 0x0007B808
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SocrNameColumn
            {
                get
                {
                    return this.columnSocrName;
                }
            }

            // Token: 0x170003EF RID: 1007
            // (get) Token: 0x06001121 RID: 4385 RVA: 0x0007D610 File Offset: 0x0007B810
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubstationColumn
            {
                get
                {
                    return this.columnSubstation;
                }
            }

            // Token: 0x170003F0 RID: 1008
            // (get) Token: 0x06001122 RID: 4386 RVA: 0x0007D618 File Offset: 0x0007B818
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TransformerColumn
            {
                get
                {
                    return this.columnTransformer;
                }
            }

            // Token: 0x170003F1 RID: 1009
            // (get) Token: 0x06001123 RID: 4387 RVA: 0x0007D620 File Offset: 0x0007B820
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x170003F2 RID: 1010
            // (get) Token: 0x06001124 RID: 4388 RVA: 0x0007D628 File Offset: 0x0007B828
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            // Token: 0x170003F3 RID: 1011
            // (get) Token: 0x06001125 RID: 4389 RVA: 0x0007D630 File Offset: 0x0007B830
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            // Token: 0x170003F4 RID: 1012
            // (get) Token: 0x06001126 RID: 4390 RVA: 0x0007D638 File Offset: 0x0007B838
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003F5 RID: 1013
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CoefficientLoadingRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_CoefficientLoadingRow)base.Rows[index];
                }
            }

            // Token: 0x140000FD RID: 253
            // (add) Token: 0x06001128 RID: 4392 RVA: 0x0007D658 File Offset: 0x0007B858
            // (remove) Token: 0x06001129 RID: 4393 RVA: 0x0007D690 File Offset: 0x0007B890
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientLoadingRowChangeEventHandler vJ_CoefficientLoadingRowChanging;

            // Token: 0x140000FE RID: 254
            // (add) Token: 0x0600112A RID: 4394 RVA: 0x0007D6C8 File Offset: 0x0007B8C8
            // (remove) Token: 0x0600112B RID: 4395 RVA: 0x0007D700 File Offset: 0x0007B900
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientLoadingRowChangeEventHandler vJ_CoefficientLoadingRowChanged;

            // Token: 0x140000FF RID: 255
            // (add) Token: 0x0600112C RID: 4396 RVA: 0x0007D738 File Offset: 0x0007B938
            // (remove) Token: 0x0600112D RID: 4397 RVA: 0x0007D770 File Offset: 0x0007B970
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientLoadingRowChangeEventHandler vJ_CoefficientLoadingRowDeleting;

            // Token: 0x14000100 RID: 256
            // (add) Token: 0x0600112E RID: 4398 RVA: 0x0007D7A8 File Offset: 0x0007B9A8
            // (remove) Token: 0x0600112F RID: 4399 RVA: 0x0007D7E0 File Offset: 0x0007B9E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientLoadingRowChangeEventHandler vJ_CoefficientLoadingRowDeleted;

            // Token: 0x06001130 RID: 4400 RVA: 0x0007D815 File Offset: 0x0007BA15
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_CoefficientLoadingRow(DataSetGES.vJ_CoefficientLoadingRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001131 RID: 4401 RVA: 0x0007D824 File Offset: 0x0007BA24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CoefficientLoadingRow AddvJ_CoefficientLoadingRow(int NetRegion, int Year, string SocrName, string Substation, string Transformer, int Power, int Kntd, int Kntn)
            {
                DataSetGES.vJ_CoefficientLoadingRow vJ_CoefficientLoadingRow = (DataSetGES.vJ_CoefficientLoadingRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    NetRegion,
                    Year,
                    SocrName,
                    Substation,
                    Transformer,
                    Power,
                    Kntd,
                    Kntn
                };
                vJ_CoefficientLoadingRow.ItemArray = itemArray;
                base.Rows.Add(vJ_CoefficientLoadingRow);
                return vJ_CoefficientLoadingRow;
            }

            // Token: 0x06001132 RID: 4402 RVA: 0x0007D898 File Offset: 0x0007BA98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CoefficientLoadingDataTable vJ_CoefficientLoadingDataTable = (DataSetGES.vJ_CoefficientLoadingDataTable)base.Clone();
                vJ_CoefficientLoadingDataTable.InitVars();
                return vJ_CoefficientLoadingDataTable;
            }

            // Token: 0x06001133 RID: 4403 RVA: 0x0007D8B8 File Offset: 0x0007BAB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CoefficientLoadingDataTable();
            }

            // Token: 0x06001134 RID: 4404 RVA: 0x0007D8C0 File Offset: 0x0007BAC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnNetRegion = base.Columns["NetRegion"];
                this.columnYear = base.Columns["Year"];
                this.columnSocrName = base.Columns["SocrName"];
                this.columnSubstation = base.Columns["Substation"];
                this.columnTransformer = base.Columns["Transformer"];
                this.columnPower = base.Columns["Power"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
            }

            // Token: 0x06001135 RID: 4405 RVA: 0x0007D980 File Offset: 0x0007BB80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnNetRegion = new DataColumn("NetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegion);
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnSocrName = new DataColumn("SocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSocrName);
                this.columnSubstation = new DataColumn("Substation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubstation);
                this.columnTransformer = new DataColumn("Transformer", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTransformer);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnKntd = new DataColumn("Kntd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
                this.columnNetRegion.ReadOnly = true;
                this.columnSocrName.MaxLength = 50;
                this.columnSubstation.ReadOnly = true;
                this.columnSubstation.MaxLength = 563;
                this.columnTransformer.MaxLength = 512;
            }

            // Token: 0x06001136 RID: 4406 RVA: 0x0007DB3A File Offset: 0x0007BD3A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CoefficientLoadingRow NewvJ_CoefficientLoadingRow()
            {
                return (DataSetGES.vJ_CoefficientLoadingRow)base.NewRow();
            }

            // Token: 0x06001137 RID: 4407 RVA: 0x0007DB47 File Offset: 0x0007BD47
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_CoefficientLoadingRow(builder);
            }

            // Token: 0x06001138 RID: 4408 RVA: 0x0007DB4F File Offset: 0x0007BD4F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_CoefficientLoadingRow);
            }

            // Token: 0x06001139 RID: 4409 RVA: 0x0007DB5B File Offset: 0x0007BD5B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_CoefficientLoadingRowChanged != null)
                {
                    this.vJ_CoefficientLoadingRowChanged(this, new DataSetGES.vJ_CoefficientLoadingRowChangeEvent((DataSetGES.vJ_CoefficientLoadingRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600113A RID: 4410 RVA: 0x0007DB8E File Offset: 0x0007BD8E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_CoefficientLoadingRowChanging != null)
                {
                    this.vJ_CoefficientLoadingRowChanging(this, new DataSetGES.vJ_CoefficientLoadingRowChangeEvent((DataSetGES.vJ_CoefficientLoadingRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600113B RID: 4411 RVA: 0x0007DBC1 File Offset: 0x0007BDC1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_CoefficientLoadingRowDeleted != null)
                {
                    this.vJ_CoefficientLoadingRowDeleted(this, new DataSetGES.vJ_CoefficientLoadingRowChangeEvent((DataSetGES.vJ_CoefficientLoadingRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600113C RID: 4412 RVA: 0x0007DBF4 File Offset: 0x0007BDF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_CoefficientLoadingRowDeleting != null)
                {
                    this.vJ_CoefficientLoadingRowDeleting(this, new DataSetGES.vJ_CoefficientLoadingRowChangeEvent((DataSetGES.vJ_CoefficientLoadingRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600113D RID: 4413 RVA: 0x0007DC27 File Offset: 0x0007BE27
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_CoefficientLoadingRow(DataSetGES.vJ_CoefficientLoadingRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600113E RID: 4414 RVA: 0x0007DC38 File Offset: 0x0007BE38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_CoefficientLoadingDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400092E RID: 2350
            private DataColumn columnNetRegion;

            // Token: 0x0400092F RID: 2351
            private DataColumn columnYear;

            // Token: 0x04000930 RID: 2352
            private DataColumn columnSocrName;

            // Token: 0x04000931 RID: 2353
            private DataColumn columnSubstation;

            // Token: 0x04000932 RID: 2354
            private DataColumn columnTransformer;

            // Token: 0x04000933 RID: 2355
            private DataColumn columnPower;

            // Token: 0x04000934 RID: 2356
            private DataColumn columnKntd;

            // Token: 0x04000935 RID: 2357
            private DataColumn columnKntn;
        }

        // Token: 0x020000FA RID: 250
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtCoefficientLoadingAddlDataTable : TypedTableBase<DataSetGES.dtCoefficientLoadingAddlRow>
        {
            // Token: 0x0600113F RID: 4415 RVA: 0x0007DE30 File Offset: 0x0007C030
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtCoefficientLoadingAddlDataTable()
            {
                base.TableName = "dtCoefficientLoadingAddl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001140 RID: 4416 RVA: 0x0007DE58 File Offset: 0x0007C058
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtCoefficientLoadingAddlDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001141 RID: 4417 RVA: 0x0007DF00 File Offset: 0x0007C100
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtCoefficientLoadingAddlDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003F6 RID: 1014
            // (get) Token: 0x06001142 RID: 4418 RVA: 0x0007DF10 File Offset: 0x0007C110
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }

            // Token: 0x170003F7 RID: 1015
            // (get) Token: 0x06001143 RID: 4419 RVA: 0x0007DF18 File Offset: 0x0007C118
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x170003F8 RID: 1016
            // (get) Token: 0x06001144 RID: 4420 RVA: 0x0007DF20 File Offset: 0x0007C120
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            // Token: 0x170003F9 RID: 1017
            // (get) Token: 0x06001145 RID: 4421 RVA: 0x0007DF28 File Offset: 0x0007C128
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            // Token: 0x170003FA RID: 1018
            // (get) Token: 0x06001146 RID: 4422 RVA: 0x0007DF30 File Offset: 0x0007C130
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170003FB RID: 1019
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtCoefficientLoadingAddlRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtCoefficientLoadingAddlRow)base.Rows[index];
                }
            }

            // Token: 0x14000101 RID: 257
            // (add) Token: 0x06001148 RID: 4424 RVA: 0x0007DF50 File Offset: 0x0007C150
            // (remove) Token: 0x06001149 RID: 4425 RVA: 0x0007DF88 File Offset: 0x0007C188
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCoefficientLoadingAddlRowChangeEventHandler dtCoefficientLoadingAddlRowChanging;

            // Token: 0x14000102 RID: 258
            // (add) Token: 0x0600114A RID: 4426 RVA: 0x0007DFC0 File Offset: 0x0007C1C0
            // (remove) Token: 0x0600114B RID: 4427 RVA: 0x0007DFF8 File Offset: 0x0007C1F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCoefficientLoadingAddlRowChangeEventHandler dtCoefficientLoadingAddlRowChanged;

            // Token: 0x14000103 RID: 259
            // (add) Token: 0x0600114C RID: 4428 RVA: 0x0007E030 File Offset: 0x0007C230
            // (remove) Token: 0x0600114D RID: 4429 RVA: 0x0007E068 File Offset: 0x0007C268
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCoefficientLoadingAddlRowChangeEventHandler dtCoefficientLoadingAddlRowDeleting;

            // Token: 0x14000104 RID: 260
            // (add) Token: 0x0600114E RID: 4430 RVA: 0x0007E0A0 File Offset: 0x0007C2A0
            // (remove) Token: 0x0600114F RID: 4431 RVA: 0x0007E0D8 File Offset: 0x0007C2D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCoefficientLoadingAddlRowChangeEventHandler dtCoefficientLoadingAddlRowDeleted;

            // Token: 0x06001150 RID: 4432 RVA: 0x0007E10D File Offset: 0x0007C30D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AdddtCoefficientLoadingAddlRow(DataSetGES.dtCoefficientLoadingAddlRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001151 RID: 4433 RVA: 0x0007E11C File Offset: 0x0007C31C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtCoefficientLoadingAddlRow AdddtCoefficientLoadingAddlRow(int Year, string Power, string Kntd, string Kntn)
            {
                DataSetGES.dtCoefficientLoadingAddlRow dtCoefficientLoadingAddlRow = (DataSetGES.dtCoefficientLoadingAddlRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Year,
                    Power,
                    Kntd,
                    Kntn
                };
                dtCoefficientLoadingAddlRow.ItemArray = itemArray;
                base.Rows.Add(dtCoefficientLoadingAddlRow);
                return dtCoefficientLoadingAddlRow;
            }

            // Token: 0x06001152 RID: 4434 RVA: 0x0007E168 File Offset: 0x0007C368
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtCoefficientLoadingAddlDataTable dtCoefficientLoadingAddlDataTable = (DataSetGES.dtCoefficientLoadingAddlDataTable)base.Clone();
                dtCoefficientLoadingAddlDataTable.InitVars();
                return dtCoefficientLoadingAddlDataTable;
            }

            // Token: 0x06001153 RID: 4435 RVA: 0x0007E188 File Offset: 0x0007C388
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtCoefficientLoadingAddlDataTable();
            }

            // Token: 0x06001154 RID: 4436 RVA: 0x0007E190 File Offset: 0x0007C390
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnYear = base.Columns["Year"];
                this.columnPower = base.Columns["Power"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
            }

            // Token: 0x06001155 RID: 4437 RVA: 0x0007E1F8 File Offset: 0x0007C3F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnPower = new DataColumn("Power", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnKntd = new DataColumn("Kntd", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
            }

            // Token: 0x06001156 RID: 4438 RVA: 0x0007E2B9 File Offset: 0x0007C4B9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtCoefficientLoadingAddlRow NewdtCoefficientLoadingAddlRow()
            {
                return (DataSetGES.dtCoefficientLoadingAddlRow)base.NewRow();
            }

            // Token: 0x06001157 RID: 4439 RVA: 0x0007E2C6 File Offset: 0x0007C4C6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtCoefficientLoadingAddlRow(builder);
            }

            // Token: 0x06001158 RID: 4440 RVA: 0x0007E2CE File Offset: 0x0007C4CE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtCoefficientLoadingAddlRow);
            }

            // Token: 0x06001159 RID: 4441 RVA: 0x0007E2DA File Offset: 0x0007C4DA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtCoefficientLoadingAddlRowChanged != null)
                {
                    this.dtCoefficientLoadingAddlRowChanged(this, new DataSetGES.dtCoefficientLoadingAddlRowChangeEvent((DataSetGES.dtCoefficientLoadingAddlRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600115A RID: 4442 RVA: 0x0007E30D File Offset: 0x0007C50D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtCoefficientLoadingAddlRowChanging != null)
                {
                    this.dtCoefficientLoadingAddlRowChanging(this, new DataSetGES.dtCoefficientLoadingAddlRowChangeEvent((DataSetGES.dtCoefficientLoadingAddlRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600115B RID: 4443 RVA: 0x0007E340 File Offset: 0x0007C540
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtCoefficientLoadingAddlRowDeleted != null)
                {
                    this.dtCoefficientLoadingAddlRowDeleted(this, new DataSetGES.dtCoefficientLoadingAddlRowChangeEvent((DataSetGES.dtCoefficientLoadingAddlRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600115C RID: 4444 RVA: 0x0007E373 File Offset: 0x0007C573
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtCoefficientLoadingAddlRowDeleting != null)
                {
                    this.dtCoefficientLoadingAddlRowDeleting(this, new DataSetGES.dtCoefficientLoadingAddlRowChangeEvent((DataSetGES.dtCoefficientLoadingAddlRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600115D RID: 4445 RVA: 0x0007E3A6 File Offset: 0x0007C5A6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovedtCoefficientLoadingAddlRow(DataSetGES.dtCoefficientLoadingAddlRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600115E RID: 4446 RVA: 0x0007E3B4 File Offset: 0x0007C5B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtCoefficientLoadingAddlDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400093A RID: 2362
            private DataColumn columnYear;

            // Token: 0x0400093B RID: 2363
            private DataColumn columnPower;

            // Token: 0x0400093C RID: 2364
            private DataColumn columnKntd;

            // Token: 0x0400093D RID: 2365
            private DataColumn columnKntn;
        }

        // Token: 0x020000FB RID: 251
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_CoefficientIrregularityDataTable : TypedTableBase<DataSetGES.vJ_CoefficientIrregularityRow>
        {
            // Token: 0x0600115F RID: 4447 RVA: 0x0007E5AC File Offset: 0x0007C7AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CoefficientIrregularityDataTable()
            {
                base.TableName = "vJ_CoefficientIrregularity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001160 RID: 4448 RVA: 0x0007E5D4 File Offset: 0x0007C7D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CoefficientIrregularityDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001161 RID: 4449 RVA: 0x0007E67C File Offset: 0x0007C87C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CoefficientIrregularityDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170003FC RID: 1020
            // (get) Token: 0x06001162 RID: 4450 RVA: 0x0007E68C File Offset: 0x0007C88C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NetRegionColumn
            {
                get
                {
                    return this.columnNetRegion;
                }
            }

            // Token: 0x170003FD RID: 1021
            // (get) Token: 0x06001163 RID: 4451 RVA: 0x0007E694 File Offset: 0x0007C894
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idNetRegionColumn
            {
                get
                {
                    return this.columnidNetRegion;
                }
            }

            // Token: 0x170003FE RID: 1022
            // (get) Token: 0x06001164 RID: 4452 RVA: 0x0007E69C File Offset: 0x0007C89C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }

            // Token: 0x170003FF RID: 1023
            // (get) Token: 0x06001165 RID: 4453 RVA: 0x0007E6A4 File Offset: 0x0007C8A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SSSocrNameColumn
            {
                get
                {
                    return this.columnSSSocrName;
                }
            }

            // Token: 0x17000400 RID: 1024
            // (get) Token: 0x06001166 RID: 4454 RVA: 0x0007E6AC File Offset: 0x0007C8AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SubstationColumn
            {
                get
                {
                    return this.columnSubstation;
                }
            }

            // Token: 0x17000401 RID: 1025
            // (get) Token: 0x06001167 RID: 4455 RVA: 0x0007E6B4 File Offset: 0x0007C8B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TransformerColumn
            {
                get
                {
                    return this.columnTransformer;
                }
            }

            // Token: 0x17000402 RID: 1026
            // (get) Token: 0x06001168 RID: 4456 RVA: 0x0007E6BC File Offset: 0x0007C8BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x17000403 RID: 1027
            // (get) Token: 0x06001169 RID: 4457 RVA: 0x0007E6C4 File Offset: 0x0007C8C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KpfdColumn
            {
                get
                {
                    return this.columnKpfd;
                }
            }

            // Token: 0x17000404 RID: 1028
            // (get) Token: 0x0600116A RID: 4458 RVA: 0x0007E6CC File Offset: 0x0007C8CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KpfnColumn
            {
                get
                {
                    return this.columnKpfn;
                }
            }

            // Token: 0x17000405 RID: 1029
            // (get) Token: 0x0600116B RID: 4459 RVA: 0x0007E6D4 File Offset: 0x0007C8D4
            [Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000406 RID: 1030
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CoefficientIrregularityRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_CoefficientIrregularityRow)base.Rows[index];
                }
            }

            // Token: 0x14000105 RID: 261
            // (add) Token: 0x0600116D RID: 4461 RVA: 0x0007E6F4 File Offset: 0x0007C8F4
            // (remove) Token: 0x0600116E RID: 4462 RVA: 0x0007E72C File Offset: 0x0007C92C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientIrregularityRowChangeEventHandler vJ_CoefficientIrregularityRowChanging;

            // Token: 0x14000106 RID: 262
            // (add) Token: 0x0600116F RID: 4463 RVA: 0x0007E764 File Offset: 0x0007C964
            // (remove) Token: 0x06001170 RID: 4464 RVA: 0x0007E79C File Offset: 0x0007C99C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientIrregularityRowChangeEventHandler vJ_CoefficientIrregularityRowChanged;

            // Token: 0x14000107 RID: 263
            // (add) Token: 0x06001171 RID: 4465 RVA: 0x0007E7D4 File Offset: 0x0007C9D4
            // (remove) Token: 0x06001172 RID: 4466 RVA: 0x0007E80C File Offset: 0x0007CA0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientIrregularityRowChangeEventHandler vJ_CoefficientIrregularityRowDeleting;

            // Token: 0x14000108 RID: 264
            // (add) Token: 0x06001173 RID: 4467 RVA: 0x0007E844 File Offset: 0x0007CA44
            // (remove) Token: 0x06001174 RID: 4468 RVA: 0x0007E87C File Offset: 0x0007CA7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CoefficientIrregularityRowChangeEventHandler vJ_CoefficientIrregularityRowDeleted;

            // Token: 0x06001175 RID: 4469 RVA: 0x0007E8B1 File Offset: 0x0007CAB1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_CoefficientIrregularityRow(DataSetGES.vJ_CoefficientIrregularityRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001176 RID: 4470 RVA: 0x0007E8C0 File Offset: 0x0007CAC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CoefficientIrregularityRow AddvJ_CoefficientIrregularityRow(int NetRegion, string idNetRegion, int Year, string SSSocrName, string Substation, string Transformer, int Power, int Kpfd, int Kpfn)
            {
                DataSetGES.vJ_CoefficientIrregularityRow vJ_CoefficientIrregularityRow = (DataSetGES.vJ_CoefficientIrregularityRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    NetRegion,
                    idNetRegion,
                    Year,
                    SSSocrName,
                    Substation,
                    Transformer,
                    Power,
                    Kpfd,
                    Kpfn
                };
                vJ_CoefficientIrregularityRow.ItemArray = itemArray;
                base.Rows.Add(vJ_CoefficientIrregularityRow);
                return vJ_CoefficientIrregularityRow;
            }

            // Token: 0x06001177 RID: 4471 RVA: 0x0007E93C File Offset: 0x0007CB3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CoefficientIrregularityDataTable vJ_CoefficientIrregularityDataTable = (DataSetGES.vJ_CoefficientIrregularityDataTable)base.Clone();
                vJ_CoefficientIrregularityDataTable.InitVars();
                return vJ_CoefficientIrregularityDataTable;
            }

            // Token: 0x06001178 RID: 4472 RVA: 0x0007E95C File Offset: 0x0007CB5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CoefficientIrregularityDataTable();
            }

            // Token: 0x06001179 RID: 4473 RVA: 0x0007E964 File Offset: 0x0007CB64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnNetRegion = base.Columns["NetRegion"];
                this.columnidNetRegion = base.Columns["idNetRegion"];
                this.columnYear = base.Columns["Year"];
                this.columnSSSocrName = base.Columns["SSSocrName"];
                this.columnSubstation = base.Columns["Substation"];
                this.columnTransformer = base.Columns["Transformer"];
                this.columnPower = base.Columns["Power"];
                this.columnKpfd = base.Columns["Kpfd"];
                this.columnKpfn = base.Columns["Kpfn"];
            }

            // Token: 0x0600117A RID: 4474 RVA: 0x0007EA38 File Offset: 0x0007CC38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnNetRegion = new DataColumn("NetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegion);
                this.columnidNetRegion = new DataColumn("idNetRegion", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnidNetRegion);
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnSSSocrName = new DataColumn("SSSocrName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSSSocrName);
                this.columnSubstation = new DataColumn("Substation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSubstation);
                this.columnTransformer = new DataColumn("Transformer", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTransformer);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnKpfd = new DataColumn("Kpfd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfd);
                this.columnKpfn = new DataColumn("Kpfn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfn);
                this.columnNetRegion.ReadOnly = true;
                this.columnidNetRegion.MaxLength = 512;
                this.columnSSSocrName.MaxLength = 50;
                this.columnSubstation.ReadOnly = true;
                this.columnSubstation.MaxLength = 563;
                this.columnTransformer.MaxLength = 512;
            }

            // Token: 0x0600117B RID: 4475 RVA: 0x0007EC2F File Offset: 0x0007CE2F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CoefficientIrregularityRow NewvJ_CoefficientIrregularityRow()
            {
                return (DataSetGES.vJ_CoefficientIrregularityRow)base.NewRow();
            }

            // Token: 0x0600117C RID: 4476 RVA: 0x0007EC3C File Offset: 0x0007CE3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_CoefficientIrregularityRow(builder);
            }

            // Token: 0x0600117D RID: 4477 RVA: 0x0007EC44 File Offset: 0x0007CE44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_CoefficientIrregularityRow);
            }

            // Token: 0x0600117E RID: 4478 RVA: 0x0007EC50 File Offset: 0x0007CE50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_CoefficientIrregularityRowChanged != null)
                {
                    this.vJ_CoefficientIrregularityRowChanged(this, new DataSetGES.vJ_CoefficientIrregularityRowChangeEvent((DataSetGES.vJ_CoefficientIrregularityRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600117F RID: 4479 RVA: 0x0007EC83 File Offset: 0x0007CE83
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_CoefficientIrregularityRowChanging != null)
                {
                    this.vJ_CoefficientIrregularityRowChanging(this, new DataSetGES.vJ_CoefficientIrregularityRowChangeEvent((DataSetGES.vJ_CoefficientIrregularityRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001180 RID: 4480 RVA: 0x0007ECB6 File Offset: 0x0007CEB6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_CoefficientIrregularityRowDeleted != null)
                {
                    this.vJ_CoefficientIrregularityRowDeleted(this, new DataSetGES.vJ_CoefficientIrregularityRowChangeEvent((DataSetGES.vJ_CoefficientIrregularityRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001181 RID: 4481 RVA: 0x0007ECE9 File Offset: 0x0007CEE9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_CoefficientIrregularityRowDeleting != null)
                {
                    this.vJ_CoefficientIrregularityRowDeleting(this, new DataSetGES.vJ_CoefficientIrregularityRowChangeEvent((DataSetGES.vJ_CoefficientIrregularityRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001182 RID: 4482 RVA: 0x0007ED1C File Offset: 0x0007CF1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_CoefficientIrregularityRow(DataSetGES.vJ_CoefficientIrregularityRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001183 RID: 4483 RVA: 0x0007ED2C File Offset: 0x0007CF2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_CoefficientIrregularityDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000942 RID: 2370
            private DataColumn columnNetRegion;

            // Token: 0x04000943 RID: 2371
            private DataColumn columnidNetRegion;

            // Token: 0x04000944 RID: 2372
            private DataColumn columnYear;

            // Token: 0x04000945 RID: 2373
            private DataColumn columnSSSocrName;

            // Token: 0x04000946 RID: 2374
            private DataColumn columnSubstation;

            // Token: 0x04000947 RID: 2375
            private DataColumn columnTransformer;

            // Token: 0x04000948 RID: 2376
            private DataColumn columnPower;

            // Token: 0x04000949 RID: 2377
            private DataColumn columnKpfd;

            // Token: 0x0400094A RID: 2378
            private DataColumn columnKpfn;
        }

        // Token: 0x020000FC RID: 252
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vP_SubstationTransfDataTable : TypedTableBase<DataSetGES.vP_SubstationTransfRow>
        {
            // Token: 0x06001184 RID: 4484 RVA: 0x0007EF24 File Offset: 0x0007D124
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_SubstationTransfDataTable()
            {
                base.TableName = "vP_SubstationTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001185 RID: 4485 RVA: 0x0007EF4C File Offset: 0x0007D14C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vP_SubstationTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001186 RID: 4486 RVA: 0x0007EFF4 File Offset: 0x0007D1F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vP_SubstationTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000407 RID: 1031
            // (get) Token: 0x06001187 RID: 4487 RVA: 0x0007F004 File Offset: 0x0007D204
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000408 RID: 1032
            // (get) Token: 0x06001188 RID: 4488 RVA: 0x0007F00C File Offset: 0x0007D20C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            // Token: 0x17000409 RID: 1033
            // (get) Token: 0x06001189 RID: 4489 RVA: 0x0007F014 File Offset: 0x0007D214
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x1700040A RID: 1034
            // (get) Token: 0x0600118A RID: 4490 RVA: 0x0007F01C File Offset: 0x0007D21C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ParentKeyColumn
            {
                get
                {
                    return this.columnParentKey;
                }
            }

            // Token: 0x1700040B RID: 1035
            // (get) Token: 0x0600118B RID: 4491 RVA: 0x0007F024 File Offset: 0x0007D224
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn ValueColumn
            {
                get
                {
                    return this.columnValue;
                }
            }

            // Token: 0x1700040C RID: 1036
            // (get) Token: 0x0600118C RID: 4492 RVA: 0x0007F02C File Offset: 0x0007D22C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x1700040D RID: 1037
            // (get) Token: 0x0600118D RID: 4493 RVA: 0x0007F034 File Offset: 0x0007D234
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TextColumn
            {
                get
                {
                    return this.columnText;
                }
            }

            // Token: 0x1700040E RID: 1038
            // (get) Token: 0x0600118E RID: 4494 RVA: 0x0007F03C File Offset: 0x0007D23C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CountChildColumn
            {
                get
                {
                    return this.columnCountChild;
                }
            }

            // Token: 0x1700040F RID: 1039
            // (get) Token: 0x0600118F RID: 4495 RVA: 0x0007F044 File Offset: 0x0007D244
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000410 RID: 1040
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_SubstationTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.vP_SubstationTransfRow)base.Rows[index];
                }
            }

            // Token: 0x14000109 RID: 265
            // (add) Token: 0x06001191 RID: 4497 RVA: 0x0007F064 File Offset: 0x0007D264
            // (remove) Token: 0x06001192 RID: 4498 RVA: 0x0007F09C File Offset: 0x0007D29C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationTransfRowChangeEventHandler vP_SubstationTransfRowChanging;

            // Token: 0x1400010A RID: 266
            // (add) Token: 0x06001193 RID: 4499 RVA: 0x0007F0D4 File Offset: 0x0007D2D4
            // (remove) Token: 0x06001194 RID: 4500 RVA: 0x0007F10C File Offset: 0x0007D30C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationTransfRowChangeEventHandler vP_SubstationTransfRowChanged;

            // Token: 0x1400010B RID: 267
            // (add) Token: 0x06001195 RID: 4501 RVA: 0x0007F144 File Offset: 0x0007D344
            // (remove) Token: 0x06001196 RID: 4502 RVA: 0x0007F17C File Offset: 0x0007D37C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationTransfRowChangeEventHandler vP_SubstationTransfRowDeleting;

            // Token: 0x1400010C RID: 268
            // (add) Token: 0x06001197 RID: 4503 RVA: 0x0007F1B4 File Offset: 0x0007D3B4
            // (remove) Token: 0x06001198 RID: 4504 RVA: 0x0007F1EC File Offset: 0x0007D3EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationTransfRowChangeEventHandler vP_SubstationTransfRowDeleted;

            // Token: 0x06001199 RID: 4505 RVA: 0x0007F221 File Offset: 0x0007D421
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvP_SubstationTransfRow(DataSetGES.vP_SubstationTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600119A RID: 4506 RVA: 0x0007F230 File Offset: 0x0007D430
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_SubstationTransfRow AddvP_SubstationTransfRow(int Id, int IdParent, int TypeCodeId, string ParentKey, decimal Value, string Name, string Text, int CountChild)
            {
                DataSetGES.vP_SubstationTransfRow vP_SubstationTransfRow = (DataSetGES.vP_SubstationTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    IdParent,
                    TypeCodeId,
                    ParentKey,
                    Value,
                    Name,
                    Text,
                    CountChild
                };
                vP_SubstationTransfRow.ItemArray = itemArray;
                base.Rows.Add(vP_SubstationTransfRow);
                return vP_SubstationTransfRow;
            }

            // Token: 0x0600119B RID: 4507 RVA: 0x0007F2A4 File Offset: 0x0007D4A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vP_SubstationTransfDataTable vP_SubstationTransfDataTable = (DataSetGES.vP_SubstationTransfDataTable)base.Clone();
                vP_SubstationTransfDataTable.InitVars();
                return vP_SubstationTransfDataTable;
            }

            // Token: 0x0600119C RID: 4508 RVA: 0x0007F2C4 File Offset: 0x0007D4C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_SubstationTransfDataTable();
            }

            // Token: 0x0600119D RID: 4509 RVA: 0x0007F2CC File Offset: 0x0007D4CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnParentKey = base.Columns["ParentKey"];
                this.columnValue = base.Columns["Value"];
                this.columnName = base.Columns["Name"];
                this.columnText = base.Columns["Text"];
                this.columnCountChild = base.Columns["CountChild"];
            }

            // Token: 0x0600119E RID: 4510 RVA: 0x0007F38C File Offset: 0x0007D58C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnParentKey = new DataColumn("ParentKey", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnParentKey);
                this.columnValue = new DataColumn("Value", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnText = new DataColumn("Text", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnText);
                this.columnCountChild = new DataColumn("CountChild", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnCountChild);
                this.columnId.AllowDBNull = false;
                this.columnIdParent.AllowDBNull = false;
                this.columnParentKey.MaxLength = 50;
                this.columnName.MaxLength = 512;
                this.columnText.MaxLength = 565;
            }

            // Token: 0x0600119F RID: 4511 RVA: 0x0007F546 File Offset: 0x0007D746
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_SubstationTransfRow NewvP_SubstationTransfRow()
            {
                return (DataSetGES.vP_SubstationTransfRow)base.NewRow();
            }

            // Token: 0x060011A0 RID: 4512 RVA: 0x0007F553 File Offset: 0x0007D753
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vP_SubstationTransfRow(builder);
            }

            // Token: 0x060011A1 RID: 4513 RVA: 0x0007F55B File Offset: 0x0007D75B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vP_SubstationTransfRow);
            }

            // Token: 0x060011A2 RID: 4514 RVA: 0x0007F567 File Offset: 0x0007D767
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vP_SubstationTransfRowChanged != null)
                {
                    this.vP_SubstationTransfRowChanged(this, new DataSetGES.vP_SubstationTransfRowChangeEvent((DataSetGES.vP_SubstationTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011A3 RID: 4515 RVA: 0x0007F59A File Offset: 0x0007D79A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vP_SubstationTransfRowChanging != null)
                {
                    this.vP_SubstationTransfRowChanging(this, new DataSetGES.vP_SubstationTransfRowChangeEvent((DataSetGES.vP_SubstationTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011A4 RID: 4516 RVA: 0x0007F5CD File Offset: 0x0007D7CD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vP_SubstationTransfRowDeleted != null)
                {
                    this.vP_SubstationTransfRowDeleted(this, new DataSetGES.vP_SubstationTransfRowChangeEvent((DataSetGES.vP_SubstationTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011A5 RID: 4517 RVA: 0x0007F600 File Offset: 0x0007D800
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vP_SubstationTransfRowDeleting != null)
                {
                    this.vP_SubstationTransfRowDeleting(this, new DataSetGES.vP_SubstationTransfRowChangeEvent((DataSetGES.vP_SubstationTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011A6 RID: 4518 RVA: 0x0007F633 File Offset: 0x0007D833
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevP_SubstationTransfRow(DataSetGES.vP_SubstationTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060011A7 RID: 4519 RVA: 0x0007F644 File Offset: 0x0007D844
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vP_SubstationTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400094F RID: 2383
            private DataColumn columnId;

            // Token: 0x04000950 RID: 2384
            private DataColumn columnIdParent;

            // Token: 0x04000951 RID: 2385
            private DataColumn columnTypeCodeId;

            // Token: 0x04000952 RID: 2386
            private DataColumn columnParentKey;

            // Token: 0x04000953 RID: 2387
            private DataColumn columnValue;

            // Token: 0x04000954 RID: 2388
            private DataColumn columnName;

            // Token: 0x04000955 RID: 2389
            private DataColumn columnText;

            // Token: 0x04000956 RID: 2390
            private DataColumn columnCountChild;
        }

        // Token: 0x020000FD RID: 253
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tR_DocTemplateDataTable : TypedTableBase<DataSetGES.tR_DocTemplateRow>
        {
            // Token: 0x060011A8 RID: 4520 RVA: 0x0007F83C File Offset: 0x0007DA3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_DocTemplateDataTable()
            {
                base.TableName = "tR_DocTemplate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060011A9 RID: 4521 RVA: 0x0007F864 File Offset: 0x0007DA64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_DocTemplateDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060011AA RID: 4522 RVA: 0x0007F90C File Offset: 0x0007DB0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tR_DocTemplateDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000411 RID: 1041
            // (get) Token: 0x060011AB RID: 4523 RVA: 0x0007F91C File Offset: 0x0007DB1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000412 RID: 1042
            // (get) Token: 0x060011AC RID: 4524 RVA: 0x0007F924 File Offset: 0x0007DB24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTypeDocColumn
            {
                get
                {
                    return this.columnidTypeDoc;
                }
            }

            // Token: 0x17000413 RID: 1043
            // (get) Token: 0x060011AD RID: 4525 RVA: 0x0007F92C File Offset: 0x0007DB2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn FileNameColumn
            {
                get
                {
                    return this.columnFileName;
                }
            }

            // Token: 0x17000414 RID: 1044
            // (get) Token: 0x060011AE RID: 4526 RVA: 0x0007F934 File Offset: 0x0007DB34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FileDataColumn
            {
                get
                {
                    return this.columnFileData;
                }
            }

            // Token: 0x17000415 RID: 1045
            // (get) Token: 0x060011AF RID: 4527 RVA: 0x0007F93C File Offset: 0x0007DB3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SizeColumn
            {
                get
                {
                    return this.columnSize;
                }
            }

            // Token: 0x17000416 RID: 1046
            // (get) Token: 0x060011B0 RID: 4528 RVA: 0x0007F944 File Offset: 0x0007DB44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LastChangeColumn
            {
                get
                {
                    return this.columnLastChange;
                }
            }

            // Token: 0x17000417 RID: 1047
            // (get) Token: 0x060011B1 RID: 4529 RVA: 0x0007F94C File Offset: 0x0007DB4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateInColumn
            {
                get
                {
                    return this.columnDateIn;
                }
            }

            // Token: 0x17000418 RID: 1048
            // (get) Token: 0x060011B2 RID: 4530 RVA: 0x0007F954 File Offset: 0x0007DB54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x17000419 RID: 1049
            // (get) Token: 0x060011B3 RID: 4531 RVA: 0x0007F95C File Offset: 0x0007DB5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700041A RID: 1050
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_DocTemplateRow this[int index]
            {
                get
                {
                    return (DataSetGES.tR_DocTemplateRow)base.Rows[index];
                }
            }

            // Token: 0x1400010D RID: 269
            // (add) Token: 0x060011B5 RID: 4533 RVA: 0x0007F97C File Offset: 0x0007DB7C
            // (remove) Token: 0x060011B6 RID: 4534 RVA: 0x0007F9B4 File Offset: 0x0007DBB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_DocTemplateRowChangeEventHandler tR_DocTemplateRowChanging;

            // Token: 0x1400010E RID: 270
            // (add) Token: 0x060011B7 RID: 4535 RVA: 0x0007F9EC File Offset: 0x0007DBEC
            // (remove) Token: 0x060011B8 RID: 4536 RVA: 0x0007FA24 File Offset: 0x0007DC24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_DocTemplateRowChangeEventHandler tR_DocTemplateRowChanged;

            // Token: 0x1400010F RID: 271
            // (add) Token: 0x060011B9 RID: 4537 RVA: 0x0007FA5C File Offset: 0x0007DC5C
            // (remove) Token: 0x060011BA RID: 4538 RVA: 0x0007FA94 File Offset: 0x0007DC94
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_DocTemplateRowChangeEventHandler tR_DocTemplateRowDeleting;

            // Token: 0x14000110 RID: 272
            // (add) Token: 0x060011BB RID: 4539 RVA: 0x0007FACC File Offset: 0x0007DCCC
            // (remove) Token: 0x060011BC RID: 4540 RVA: 0x0007FB04 File Offset: 0x0007DD04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tR_DocTemplateRowChangeEventHandler tR_DocTemplateRowDeleted;

            // Token: 0x060011BD RID: 4541 RVA: 0x0007FB39 File Offset: 0x0007DD39
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtR_DocTemplateRow(DataSetGES.tR_DocTemplateRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060011BE RID: 4542 RVA: 0x0007FB48 File Offset: 0x0007DD48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_DocTemplateRow AddtR_DocTemplateRow(int idTypeDoc, string FileName, byte[] FileData, double Size, DateTime LastChange, DateTime DateIn, bool Deleted)
            {
                DataSetGES.tR_DocTemplateRow tR_DocTemplateRow = (DataSetGES.tR_DocTemplateRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idTypeDoc,
                    FileName,
                    FileData,
                    Size,
                    LastChange,
                    DateIn,
                    Deleted
                };
                tR_DocTemplateRow.ItemArray = itemArray;
                base.Rows.Add(tR_DocTemplateRow);
                return tR_DocTemplateRow;
            }

            // Token: 0x060011BF RID: 4543 RVA: 0x0007FBB8 File Offset: 0x0007DDB8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_DocTemplateRow FindByid(int id)
            {
                return (DataSetGES.tR_DocTemplateRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x060011C0 RID: 4544 RVA: 0x0007FBE8 File Offset: 0x0007DDE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tR_DocTemplateDataTable tR_DocTemplateDataTable = (DataSetGES.tR_DocTemplateDataTable)base.Clone();
                tR_DocTemplateDataTable.InitVars();
                return tR_DocTemplateDataTable;
            }

            // Token: 0x060011C1 RID: 4545 RVA: 0x0007FC08 File Offset: 0x0007DE08
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tR_DocTemplateDataTable();
            }

            // Token: 0x060011C2 RID: 4546 RVA: 0x0007FC10 File Offset: 0x0007DE10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidTypeDoc = base.Columns["idTypeDoc"];
                this.columnFileName = base.Columns["FileName"];
                this.columnFileData = base.Columns["FileData"];
                this.columnSize = base.Columns["Size"];
                this.columnLastChange = base.Columns["LastChange"];
                this.columnDateIn = base.Columns["DateIn"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x060011C3 RID: 4547 RVA: 0x0007FCD0 File Offset: 0x0007DED0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidTypeDoc = new DataColumn("idTypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTypeDoc);
                this.columnFileName = new DataColumn("FileName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnFileData = new DataColumn("FileData", typeof(byte[]), null, MappingType.Element);
                base.Columns.Add(this.columnFileData);
                this.columnSize = new DataColumn("Size", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnSize);
                this.columnLastChange = new DataColumn("LastChange", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnLastChange);
                this.columnDateIn = new DataColumn("DateIn", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateIn);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidTypeDoc.AllowDBNull = false;
                this.columnFileName.AllowDBNull = false;
                this.columnFileName.MaxLength = 256;
                this.columnFileData.AllowDBNull = false;
                this.columnSize.AllowDBNull = false;
                this.columnLastChange.AllowDBNull = false;
                this.columnDateIn.AllowDBNull = false;
            }

            // Token: 0x060011C4 RID: 4548 RVA: 0x0007FF0E File Offset: 0x0007E10E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_DocTemplateRow NewtR_DocTemplateRow()
            {
                return (DataSetGES.tR_DocTemplateRow)base.NewRow();
            }

            // Token: 0x060011C5 RID: 4549 RVA: 0x0007FF1B File Offset: 0x0007E11B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tR_DocTemplateRow(builder);
            }

            // Token: 0x060011C6 RID: 4550 RVA: 0x0007FF23 File Offset: 0x0007E123
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tR_DocTemplateRow);
            }

            // Token: 0x060011C7 RID: 4551 RVA: 0x0007FF2F File Offset: 0x0007E12F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tR_DocTemplateRowChanged != null)
                {
                    this.tR_DocTemplateRowChanged(this, new DataSetGES.tR_DocTemplateRowChangeEvent((DataSetGES.tR_DocTemplateRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011C8 RID: 4552 RVA: 0x0007FF62 File Offset: 0x0007E162
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tR_DocTemplateRowChanging != null)
                {
                    this.tR_DocTemplateRowChanging(this, new DataSetGES.tR_DocTemplateRowChangeEvent((DataSetGES.tR_DocTemplateRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011C9 RID: 4553 RVA: 0x0007FF95 File Offset: 0x0007E195
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tR_DocTemplateRowDeleted != null)
                {
                    this.tR_DocTemplateRowDeleted(this, new DataSetGES.tR_DocTemplateRowChangeEvent((DataSetGES.tR_DocTemplateRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011CA RID: 4554 RVA: 0x0007FFC8 File Offset: 0x0007E1C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tR_DocTemplateRowDeleting != null)
                {
                    this.tR_DocTemplateRowDeleting(this, new DataSetGES.tR_DocTemplateRowChangeEvent((DataSetGES.tR_DocTemplateRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011CB RID: 4555 RVA: 0x0007FFFB File Offset: 0x0007E1FB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetR_DocTemplateRow(DataSetGES.tR_DocTemplateRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060011CC RID: 4556 RVA: 0x0008000C File Offset: 0x0007E20C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tR_DocTemplateDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400095B RID: 2395
            private DataColumn columnid;

            // Token: 0x0400095C RID: 2396
            private DataColumn columnidTypeDoc;

            // Token: 0x0400095D RID: 2397
            private DataColumn columnFileName;

            // Token: 0x0400095E RID: 2398
            private DataColumn columnFileData;

            // Token: 0x0400095F RID: 2399
            private DataColumn columnSize;

            // Token: 0x04000960 RID: 2400
            private DataColumn columnLastChange;

            // Token: 0x04000961 RID: 2401
            private DataColumn columnDateIn;

            // Token: 0x04000962 RID: 2402
            private DataColumn columnDeleted;
        }

        // Token: 0x020000FE RID: 254
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_GetCellTransfByBusLVDataTable : TypedTableBase<DataSetGES.fn_J_GetCellTransfByBusLVRow>
        {
            // Token: 0x060011CD RID: 4557 RVA: 0x00080204 File Offset: 0x0007E404
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetCellTransfByBusLVDataTable()
            {
                base.TableName = "fn_J_GetCellTransfByBusLV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060011CE RID: 4558 RVA: 0x0008022C File Offset: 0x0007E42C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetCellTransfByBusLVDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060011CF RID: 4559 RVA: 0x000802D4 File Offset: 0x0007E4D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected fn_J_GetCellTransfByBusLVDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700041B RID: 1051
            // (get) Token: 0x060011D0 RID: 4560 RVA: 0x000802E4 File Offset: 0x0007E4E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdBusColumn
            {
                get
                {
                    return this.columnIdBus;
                }
            }

            // Token: 0x1700041C RID: 1052
            // (get) Token: 0x060011D1 RID: 4561 RVA: 0x000802EC File Offset: 0x0007E4EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x1700041D RID: 1053
            // (get) Token: 0x060011D2 RID: 4562 RVA: 0x000802F4 File Offset: 0x0007E4F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdCellColumn
            {
                get
                {
                    return this.columnIdCell;
                }
            }

            // Token: 0x1700041E RID: 1054
            // (get) Token: 0x060011D3 RID: 4563 RVA: 0x000802FC File Offset: 0x0007E4FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x1700041F RID: 1055
            // (get) Token: 0x060011D4 RID: 4564 RVA: 0x00080304 File Offset: 0x0007E504
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdTransfColumn
            {
                get
                {
                    return this.columnIdTransf;
                }
            }

            // Token: 0x17000420 RID: 1056
            // (get) Token: 0x060011D5 RID: 4565 RVA: 0x0008030C File Offset: 0x0007E50C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x17000421 RID: 1057
            // (get) Token: 0x060011D6 RID: 4566 RVA: 0x00080314 File Offset: 0x0007E514
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000422 RID: 1058
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellTransfByBusLVRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_GetCellTransfByBusLVRow)base.Rows[index];
                }
            }

            // Token: 0x14000111 RID: 273
            // (add) Token: 0x060011D8 RID: 4568 RVA: 0x00080334 File Offset: 0x0007E534
            // (remove) Token: 0x060011D9 RID: 4569 RVA: 0x0008036C File Offset: 0x0007E56C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEventHandler fn_J_GetCellTransfByBusLVRowChanging;

            // Token: 0x14000112 RID: 274
            // (add) Token: 0x060011DA RID: 4570 RVA: 0x000803A4 File Offset: 0x0007E5A4
            // (remove) Token: 0x060011DB RID: 4571 RVA: 0x000803DC File Offset: 0x0007E5DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEventHandler fn_J_GetCellTransfByBusLVRowChanged;

            // Token: 0x14000113 RID: 275
            // (add) Token: 0x060011DC RID: 4572 RVA: 0x00080414 File Offset: 0x0007E614
            // (remove) Token: 0x060011DD RID: 4573 RVA: 0x0008044C File Offset: 0x0007E64C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEventHandler fn_J_GetCellTransfByBusLVRowDeleting;

            // Token: 0x14000114 RID: 276
            // (add) Token: 0x060011DE RID: 4574 RVA: 0x00080484 File Offset: 0x0007E684
            // (remove) Token: 0x060011DF RID: 4575 RVA: 0x000804BC File Offset: 0x0007E6BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEventHandler fn_J_GetCellTransfByBusLVRowDeleted;

            // Token: 0x060011E0 RID: 4576 RVA: 0x000804F1 File Offset: 0x0007E6F1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Addfn_J_GetCellTransfByBusLVRow(DataSetGES.fn_J_GetCellTransfByBusLVRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060011E1 RID: 4577 RVA: 0x00080500 File Offset: 0x0007E700
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellTransfByBusLVRow Addfn_J_GetCellTransfByBusLVRow(int IdBus, string NameBus, int IdCell, string NameCell, int IdTransf, string NameTransf)
            {
                DataSetGES.fn_J_GetCellTransfByBusLVRow fn_J_GetCellTransfByBusLVRow = (DataSetGES.fn_J_GetCellTransfByBusLVRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    IdBus,
                    NameBus,
                    IdCell,
                    NameCell,
                    IdTransf,
                    NameTransf
                };
                fn_J_GetCellTransfByBusLVRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_GetCellTransfByBusLVRow);
                return fn_J_GetCellTransfByBusLVRow;
            }

            // Token: 0x060011E2 RID: 4578 RVA: 0x00080560 File Offset: 0x0007E760
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellTransfByBusLVDataTable fn_J_GetCellTransfByBusLVDataTable = (DataSetGES.fn_J_GetCellTransfByBusLVDataTable)base.Clone();
                fn_J_GetCellTransfByBusLVDataTable.InitVars();
                return fn_J_GetCellTransfByBusLVDataTable;
            }

            // Token: 0x060011E3 RID: 4579 RVA: 0x00080580 File Offset: 0x0007E780
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellTransfByBusLVDataTable();
            }

            // Token: 0x060011E4 RID: 4580 RVA: 0x00080588 File Offset: 0x0007E788
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnIdBus = base.Columns["IdBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnIdCell = base.Columns["IdCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnIdTransf = base.Columns["IdTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            // Token: 0x060011E5 RID: 4581 RVA: 0x0008061C File Offset: 0x0007E81C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnIdBus = new DataColumn("IdBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnIdCell = new DataColumn("IdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnIdTransf = new DataColumn("IdTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBus.MaxLength = 512;
                this.columnNameCell.MaxLength = 512;
                this.columnNameTransf.MaxLength = 512;
            }

            // Token: 0x060011E6 RID: 4582 RVA: 0x00080767 File Offset: 0x0007E967
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetCellTransfByBusLVRow Newfn_J_GetCellTransfByBusLVRow()
            {
                return (DataSetGES.fn_J_GetCellTransfByBusLVRow)base.NewRow();
            }

            // Token: 0x060011E7 RID: 4583 RVA: 0x00080774 File Offset: 0x0007E974
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_GetCellTransfByBusLVRow(builder);
            }

            // Token: 0x060011E8 RID: 4584 RVA: 0x0008077C File Offset: 0x0007E97C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_GetCellTransfByBusLVRow);
            }

            // Token: 0x060011E9 RID: 4585 RVA: 0x00080788 File Offset: 0x0007E988
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_GetCellTransfByBusLVRowChanged != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowChanged(this, new DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011EA RID: 4586 RVA: 0x000807BB File Offset: 0x0007E9BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_GetCellTransfByBusLVRowChanging != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowChanging(this, new DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011EB RID: 4587 RVA: 0x000807EE File Offset: 0x0007E9EE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_GetCellTransfByBusLVRowDeleted != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowDeleted(this, new DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011EC RID: 4588 RVA: 0x00080821 File Offset: 0x0007EA21
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_GetCellTransfByBusLVRowDeleting != null)
                {
                    this.fn_J_GetCellTransfByBusLVRowDeleting(this, new DataSetGES.fn_J_GetCellTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060011ED RID: 4589 RVA: 0x00080854 File Offset: 0x0007EA54
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefn_J_GetCellTransfByBusLVRow(DataSetGES.fn_J_GetCellTransfByBusLVRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060011EE RID: 4590 RVA: 0x00080864 File Offset: 0x0007EA64
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_GetCellTransfByBusLVDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000967 RID: 2407
            private DataColumn columnIdBus;

            // Token: 0x04000968 RID: 2408
            private DataColumn columnNameBus;

            // Token: 0x04000969 RID: 2409
            private DataColumn columnIdCell;

            // Token: 0x0400096A RID: 2410
            private DataColumn columnNameCell;

            // Token: 0x0400096B RID: 2411
            private DataColumn columnIdTransf;

            // Token: 0x0400096C RID: 2412
            private DataColumn columnNameTransf;
        }

        // Token: 0x020000FF RID: 255
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtBusesDataTable : TypedTableBase<DataSetGES.dtBusesRow>
        {
            // Token: 0x060011EF RID: 4591 RVA: 0x00080A5C File Offset: 0x0007EC5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtBusesDataTable()
            {
                base.TableName = "dtBuses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060011F0 RID: 4592 RVA: 0x00080A84 File Offset: 0x0007EC84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtBusesDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060011F1 RID: 4593 RVA: 0x00080B2C File Offset: 0x0007ED2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtBusesDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000423 RID: 1059
            // (get) Token: 0x060011F2 RID: 4594 RVA: 0x00080B3C File Offset: 0x0007ED3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000424 RID: 1060
            // (get) Token: 0x060011F3 RID: 4595 RVA: 0x00080B44 File Offset: 0x0007ED44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000425 RID: 1061
            // (get) Token: 0x060011F4 RID: 4596 RVA: 0x00080B4C File Offset: 0x0007ED4C
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000426 RID: 1062
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtBusesRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtBusesRow)base.Rows[index];
                }
            }

            // Token: 0x14000115 RID: 277
            // (add) Token: 0x060011F6 RID: 4598 RVA: 0x00080B6C File Offset: 0x0007ED6C
            // (remove) Token: 0x060011F7 RID: 4599 RVA: 0x00080BA4 File Offset: 0x0007EDA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesRowChangeEventHandler dtBusesRowChanging;

            // Token: 0x14000116 RID: 278
            // (add) Token: 0x060011F8 RID: 4600 RVA: 0x00080BDC File Offset: 0x0007EDDC
            // (remove) Token: 0x060011F9 RID: 4601 RVA: 0x00080C14 File Offset: 0x0007EE14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesRowChangeEventHandler dtBusesRowChanged;

            // Token: 0x14000117 RID: 279
            // (add) Token: 0x060011FA RID: 4602 RVA: 0x00080C4C File Offset: 0x0007EE4C
            // (remove) Token: 0x060011FB RID: 4603 RVA: 0x00080C84 File Offset: 0x0007EE84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesRowChangeEventHandler dtBusesRowDeleting;

            // Token: 0x14000118 RID: 280
            // (add) Token: 0x060011FC RID: 4604 RVA: 0x00080CBC File Offset: 0x0007EEBC
            // (remove) Token: 0x060011FD RID: 4605 RVA: 0x00080CF4 File Offset: 0x0007EEF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesRowChangeEventHandler dtBusesRowDeleted;

            // Token: 0x060011FE RID: 4606 RVA: 0x00080D29 File Offset: 0x0007EF29
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtBusesRow(DataSetGES.dtBusesRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060011FF RID: 4607 RVA: 0x00080D38 File Offset: 0x0007EF38
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtBusesRow AdddtBusesRow(int id, string Name)
            {
                DataSetGES.dtBusesRow dtBusesRow = (DataSetGES.dtBusesRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    Name
                };
                dtBusesRow.ItemArray = itemArray;
                base.Rows.Add(dtBusesRow);
                return dtBusesRow;
            }

            // Token: 0x06001200 RID: 4608 RVA: 0x00080D7C File Offset: 0x0007EF7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtBusesDataTable dtBusesDataTable = (DataSetGES.dtBusesDataTable)base.Clone();
                dtBusesDataTable.InitVars();
                return dtBusesDataTable;
            }

            // Token: 0x06001201 RID: 4609 RVA: 0x00080D9C File Offset: 0x0007EF9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtBusesDataTable();
            }

            // Token: 0x06001202 RID: 4610 RVA: 0x00080DA3 File Offset: 0x0007EFA3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x06001203 RID: 4611 RVA: 0x00080DD4 File Offset: 0x0007EFD4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
            }

            // Token: 0x06001204 RID: 4612 RVA: 0x00080E3B File Offset: 0x0007F03B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtBusesRow NewdtBusesRow()
            {
                return (DataSetGES.dtBusesRow)base.NewRow();
            }

            // Token: 0x06001205 RID: 4613 RVA: 0x00080E48 File Offset: 0x0007F048
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtBusesRow(builder);
            }

            // Token: 0x06001206 RID: 4614 RVA: 0x00080E50 File Offset: 0x0007F050
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtBusesRow);
            }

            // Token: 0x06001207 RID: 4615 RVA: 0x00080E5C File Offset: 0x0007F05C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtBusesRowChanged != null)
                {
                    this.dtBusesRowChanged(this, new DataSetGES.dtBusesRowChangeEvent((DataSetGES.dtBusesRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001208 RID: 4616 RVA: 0x00080E8F File Offset: 0x0007F08F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtBusesRowChanging != null)
                {
                    this.dtBusesRowChanging(this, new DataSetGES.dtBusesRowChangeEvent((DataSetGES.dtBusesRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001209 RID: 4617 RVA: 0x00080EC2 File Offset: 0x0007F0C2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtBusesRowDeleted != null)
                {
                    this.dtBusesRowDeleted(this, new DataSetGES.dtBusesRowChangeEvent((DataSetGES.dtBusesRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600120A RID: 4618 RVA: 0x00080EF5 File Offset: 0x0007F0F5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtBusesRowDeleting != null)
                {
                    this.dtBusesRowDeleting(this, new DataSetGES.dtBusesRowChangeEvent((DataSetGES.dtBusesRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600120B RID: 4619 RVA: 0x00080F28 File Offset: 0x0007F128
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtBusesRow(DataSetGES.dtBusesRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600120C RID: 4620 RVA: 0x00080F38 File Offset: 0x0007F138
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtBusesDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000971 RID: 2417
            private DataColumn columnid;

            // Token: 0x04000972 RID: 2418
            private DataColumn columnName;
        }

        // Token: 0x02000100 RID: 256
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtCellsDataTable : TypedTableBase<DataSetGES.dtCellsRow>
        {
            // Token: 0x0600120D RID: 4621 RVA: 0x00081130 File Offset: 0x0007F330
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtCellsDataTable()
            {
                base.TableName = "dtCells";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600120E RID: 4622 RVA: 0x00081158 File Offset: 0x0007F358
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtCellsDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600120F RID: 4623 RVA: 0x00081200 File Offset: 0x0007F400
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected dtCellsDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000427 RID: 1063
            // (get) Token: 0x06001210 RID: 4624 RVA: 0x00081210 File Offset: 0x0007F410
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000428 RID: 1064
            // (get) Token: 0x06001211 RID: 4625 RVA: 0x00081218 File Offset: 0x0007F418
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000429 RID: 1065
            // (get) Token: 0x06001212 RID: 4626 RVA: 0x00081220 File Offset: 0x0007F420
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700042A RID: 1066
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtCellsRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtCellsRow)base.Rows[index];
                }
            }

            // Token: 0x14000119 RID: 281
            // (add) Token: 0x06001214 RID: 4628 RVA: 0x00081240 File Offset: 0x0007F440
            // (remove) Token: 0x06001215 RID: 4629 RVA: 0x00081278 File Offset: 0x0007F478
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCellsRowChangeEventHandler dtCellsRowChanging;

            // Token: 0x1400011A RID: 282
            // (add) Token: 0x06001216 RID: 4630 RVA: 0x000812B0 File Offset: 0x0007F4B0
            // (remove) Token: 0x06001217 RID: 4631 RVA: 0x000812E8 File Offset: 0x0007F4E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCellsRowChangeEventHandler dtCellsRowChanged;

            // Token: 0x1400011B RID: 283
            // (add) Token: 0x06001218 RID: 4632 RVA: 0x00081320 File Offset: 0x0007F520
            // (remove) Token: 0x06001219 RID: 4633 RVA: 0x00081358 File Offset: 0x0007F558
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCellsRowChangeEventHandler dtCellsRowDeleting;

            // Token: 0x1400011C RID: 284
            // (add) Token: 0x0600121A RID: 4634 RVA: 0x00081390 File Offset: 0x0007F590
            // (remove) Token: 0x0600121B RID: 4635 RVA: 0x000813C8 File Offset: 0x0007F5C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtCellsRowChangeEventHandler dtCellsRowDeleted;

            // Token: 0x0600121C RID: 4636 RVA: 0x000813FD File Offset: 0x0007F5FD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtCellsRow(DataSetGES.dtCellsRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600121D RID: 4637 RVA: 0x0008140C File Offset: 0x0007F60C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtCellsRow AdddtCellsRow(int id, string Name)
            {
                DataSetGES.dtCellsRow dtCellsRow = (DataSetGES.dtCellsRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    Name
                };
                dtCellsRow.ItemArray = itemArray;
                base.Rows.Add(dtCellsRow);
                return dtCellsRow;
            }

            // Token: 0x0600121E RID: 4638 RVA: 0x00081450 File Offset: 0x0007F650
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtCellsDataTable dtCellsDataTable = (DataSetGES.dtCellsDataTable)base.Clone();
                dtCellsDataTable.InitVars();
                return dtCellsDataTable;
            }

            // Token: 0x0600121F RID: 4639 RVA: 0x00081470 File Offset: 0x0007F670
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtCellsDataTable();
            }

            // Token: 0x06001220 RID: 4640 RVA: 0x00081477 File Offset: 0x0007F677
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x06001221 RID: 4641 RVA: 0x000814A8 File Offset: 0x0007F6A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
            }

            // Token: 0x06001222 RID: 4642 RVA: 0x0008150F File Offset: 0x0007F70F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtCellsRow NewdtCellsRow()
            {
                return (DataSetGES.dtCellsRow)base.NewRow();
            }

            // Token: 0x06001223 RID: 4643 RVA: 0x0008151C File Offset: 0x0007F71C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtCellsRow(builder);
            }

            // Token: 0x06001224 RID: 4644 RVA: 0x00081524 File Offset: 0x0007F724
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtCellsRow);
            }

            // Token: 0x06001225 RID: 4645 RVA: 0x00081530 File Offset: 0x0007F730
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtCellsRowChanged != null)
                {
                    this.dtCellsRowChanged(this, new DataSetGES.dtCellsRowChangeEvent((DataSetGES.dtCellsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001226 RID: 4646 RVA: 0x00081563 File Offset: 0x0007F763
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtCellsRowChanging != null)
                {
                    this.dtCellsRowChanging(this, new DataSetGES.dtCellsRowChangeEvent((DataSetGES.dtCellsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001227 RID: 4647 RVA: 0x00081596 File Offset: 0x0007F796
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtCellsRowDeleted != null)
                {
                    this.dtCellsRowDeleted(this, new DataSetGES.dtCellsRowChangeEvent((DataSetGES.dtCellsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001228 RID: 4648 RVA: 0x000815C9 File Offset: 0x0007F7C9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtCellsRowDeleting != null)
                {
                    this.dtCellsRowDeleting(this, new DataSetGES.dtCellsRowChangeEvent((DataSetGES.dtCellsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001229 RID: 4649 RVA: 0x000815FC File Offset: 0x0007F7FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtCellsRow(DataSetGES.dtCellsRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600122A RID: 4650 RVA: 0x0008160C File Offset: 0x0007F80C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtCellsDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000977 RID: 2423
            private DataColumn columnid;

            // Token: 0x04000978 RID: 2424
            private DataColumn columnName;
        }

        // Token: 0x02000101 RID: 257
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_MeasurementDataTable : TypedTableBase<DataSetGES.tJ_MeasurementRow>
        {
            // Token: 0x0600122B RID: 4651 RVA: 0x00081804 File Offset: 0x0007FA04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasurementDataTable()
            {
                base.TableName = "tJ_Measurement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600122C RID: 4652 RVA: 0x0008182C File Offset: 0x0007FA2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_MeasurementDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600122D RID: 4653 RVA: 0x000818D4 File Offset: 0x0007FAD4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MeasurementDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700042B RID: 1067
            // (get) Token: 0x0600122E RID: 4654 RVA: 0x000818E4 File Offset: 0x0007FAE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700042C RID: 1068
            // (get) Token: 0x0600122F RID: 4655 RVA: 0x000818EC File Offset: 0x0007FAEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            // Token: 0x1700042D RID: 1069
            // (get) Token: 0x06001230 RID: 4656 RVA: 0x000818F4 File Offset: 0x0007FAF4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            // Token: 0x1700042E RID: 1070
            // (get) Token: 0x06001231 RID: 4657 RVA: 0x000818FC File Offset: 0x0007FAFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }

            // Token: 0x1700042F RID: 1071
            // (get) Token: 0x06001232 RID: 4658 RVA: 0x00081904 File Offset: 0x0007FB04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DateDColumn
            {
                get
                {
                    return this.columnDateD;
                }
            }

            // Token: 0x17000430 RID: 1072
            // (get) Token: 0x06001233 RID: 4659 RVA: 0x0008190C File Offset: 0x0007FB0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TemperatureDColumn
            {
                get
                {
                    return this.columnTemperatureD;
                }
            }

            // Token: 0x17000431 RID: 1073
            // (get) Token: 0x06001234 RID: 4660 RVA: 0x00081914 File Offset: 0x0007FB14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DateNColumn
            {
                get
                {
                    return this.columnDateN;
                }
            }

            // Token: 0x17000432 RID: 1074
            // (get) Token: 0x06001235 RID: 4661 RVA: 0x0008191C File Offset: 0x0007FB1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TemperatureNColumn
            {
                get
                {
                    return this.columnTemperatureN;
                }
            }

            // Token: 0x17000433 RID: 1075
            // (get) Token: 0x06001236 RID: 4662 RVA: 0x00081924 File Offset: 0x0007FB24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idWorkerColumn
            {
                get
                {
                    return this.columnidWorker;
                }
            }

            // Token: 0x17000434 RID: 1076
            // (get) Token: 0x06001237 RID: 4663 RVA: 0x0008192C File Offset: 0x0007FB2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idWorkerCheckColumn
            {
                get
                {
                    return this.columnidWorkerCheck;
                }
            }

            // Token: 0x17000435 RID: 1077
            // (get) Token: 0x06001238 RID: 4664 RVA: 0x00081934 File Offset: 0x0007FB34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000436 RID: 1078
            // (get) Token: 0x06001239 RID: 4665 RVA: 0x0008193C File Offset: 0x0007FB3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idOldMeasurementColumn
            {
                get
                {
                    return this.columnidOldMeasurement;
                }
            }

            // Token: 0x17000437 RID: 1079
            // (get) Token: 0x0600123A RID: 4666 RVA: 0x00081944 File Offset: 0x0007FB44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x17000438 RID: 1080
            // (get) Token: 0x0600123B RID: 4667 RVA: 0x0008194C File Offset: 0x0007FB4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000439 RID: 1081
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasurementRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_MeasurementRow)base.Rows[index];
                }
            }

            // Token: 0x1400011D RID: 285
            // (add) Token: 0x0600123D RID: 4669 RVA: 0x0008196C File Offset: 0x0007FB6C
            // (remove) Token: 0x0600123E RID: 4670 RVA: 0x000819A4 File Offset: 0x0007FBA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasurementRowChangeEventHandler tJ_MeasurementRowChanging;

            // Token: 0x1400011E RID: 286
            // (add) Token: 0x0600123F RID: 4671 RVA: 0x000819DC File Offset: 0x0007FBDC
            // (remove) Token: 0x06001240 RID: 4672 RVA: 0x00081A14 File Offset: 0x0007FC14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasurementRowChangeEventHandler tJ_MeasurementRowChanged;

            // Token: 0x1400011F RID: 287
            // (add) Token: 0x06001241 RID: 4673 RVA: 0x00081A4C File Offset: 0x0007FC4C
            // (remove) Token: 0x06001242 RID: 4674 RVA: 0x00081A84 File Offset: 0x0007FC84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasurementRowChangeEventHandler tJ_MeasurementRowDeleting;

            // Token: 0x14000120 RID: 288
            // (add) Token: 0x06001243 RID: 4675 RVA: 0x00081ABC File Offset: 0x0007FCBC
            // (remove) Token: 0x06001244 RID: 4676 RVA: 0x00081AF4 File Offset: 0x0007FCF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasurementRowChangeEventHandler tJ_MeasurementRowDeleted;

            // Token: 0x06001245 RID: 4677 RVA: 0x00081B29 File Offset: 0x0007FD29
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_MeasurementRow(DataSetGES.tJ_MeasurementRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001246 RID: 4678 RVA: 0x00081B38 File Offset: 0x0007FD38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasurementRow AddtJ_MeasurementRow(int idObjList, int TypeDoc, int Year, DateTime DateD, int TemperatureD, DateTime DateN, int TemperatureN, int idWorker, int idWorkerCheck, string Comment, int idOldMeasurement, bool Deleted)
            {
                DataSetGES.tJ_MeasurementRow tJ_MeasurementRow = (DataSetGES.tJ_MeasurementRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idObjList,
                    TypeDoc,
                    Year,
                    DateD,
                    TemperatureD,
                    DateN,
                    TemperatureN,
                    idWorker,
                    idWorkerCheck,
                    Comment,
                    idOldMeasurement,
                    Deleted
                };
                tJ_MeasurementRow.ItemArray = itemArray;
                base.Rows.Add(tJ_MeasurementRow);
                return tJ_MeasurementRow;
            }

            // Token: 0x06001247 RID: 4679 RVA: 0x00081BE4 File Offset: 0x0007FDE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasurementRow FindByid(int id)
            {
                return (DataSetGES.tJ_MeasurementRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06001248 RID: 4680 RVA: 0x00081C14 File Offset: 0x0007FE14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasurementDataTable tJ_MeasurementDataTable = (DataSetGES.tJ_MeasurementDataTable)base.Clone();
                tJ_MeasurementDataTable.InitVars();
                return tJ_MeasurementDataTable;
            }

            // Token: 0x06001249 RID: 4681 RVA: 0x00081C34 File Offset: 0x0007FE34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasurementDataTable();
            }

            // Token: 0x0600124A RID: 4682 RVA: 0x00081C3C File Offset: 0x0007FE3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnYear = base.Columns["Year"];
                this.columnDateD = base.Columns["DateD"];
                this.columnTemperatureD = base.Columns["TemperatureD"];
                this.columnDateN = base.Columns["DateN"];
                this.columnTemperatureN = base.Columns["TemperatureN"];
                this.columnidWorker = base.Columns["idWorker"];
                this.columnidWorkerCheck = base.Columns["idWorkerCheck"];
                this.columnComment = base.Columns["Comment"];
                this.columnidOldMeasurement = base.Columns["idOldMeasurement"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x0600124B RID: 4683 RVA: 0x00081D68 File Offset: 0x0007FF68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnDateD = new DataColumn("DateD", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateD);
                this.columnTemperatureD = new DataColumn("TemperatureD", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureD);
                this.columnDateN = new DataColumn("DateN", typeof(DateTime), null, MappingType.Element);
                base.Columns.Add(this.columnDateN);
                this.columnTemperatureN = new DataColumn("TemperatureN", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTemperatureN);
                this.columnidWorker = new DataColumn("idWorker", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorker);
                this.columnidWorkerCheck = new DataColumn("idWorkerCheck", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidWorkerCheck);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnidOldMeasurement = new DataColumn("idOldMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurement);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidObjList.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnComment.MaxLength = 50;
            }

            // Token: 0x0600124C RID: 4684 RVA: 0x00082054 File Offset: 0x00080254
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasurementRow NewtJ_MeasurementRow()
            {
                return (DataSetGES.tJ_MeasurementRow)base.NewRow();
            }

            // Token: 0x0600124D RID: 4685 RVA: 0x00082061 File Offset: 0x00080261
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_MeasurementRow(builder);
            }

            // Token: 0x0600124E RID: 4686 RVA: 0x00082069 File Offset: 0x00080269
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_MeasurementRow);
            }

            // Token: 0x0600124F RID: 4687 RVA: 0x00082075 File Offset: 0x00080275
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_MeasurementRowChanged != null)
                {
                    this.tJ_MeasurementRowChanged(this, new DataSetGES.tJ_MeasurementRowChangeEvent((DataSetGES.tJ_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001250 RID: 4688 RVA: 0x000820A8 File Offset: 0x000802A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_MeasurementRowChanging != null)
                {
                    this.tJ_MeasurementRowChanging(this, new DataSetGES.tJ_MeasurementRowChangeEvent((DataSetGES.tJ_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001251 RID: 4689 RVA: 0x000820DB File Offset: 0x000802DB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_MeasurementRowDeleted != null)
                {
                    this.tJ_MeasurementRowDeleted(this, new DataSetGES.tJ_MeasurementRowChangeEvent((DataSetGES.tJ_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001252 RID: 4690 RVA: 0x0008210E File Offset: 0x0008030E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_MeasurementRowDeleting != null)
                {
                    this.tJ_MeasurementRowDeleting(this, new DataSetGES.tJ_MeasurementRowChangeEvent((DataSetGES.tJ_MeasurementRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001253 RID: 4691 RVA: 0x00082141 File Offset: 0x00080341
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetJ_MeasurementRow(DataSetGES.tJ_MeasurementRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001254 RID: 4692 RVA: 0x00082150 File Offset: 0x00080350
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_MeasurementDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400097D RID: 2429
            private DataColumn columnid;

            // Token: 0x0400097E RID: 2430
            private DataColumn columnidObjList;

            // Token: 0x0400097F RID: 2431
            private DataColumn columnTypeDoc;

            // Token: 0x04000980 RID: 2432
            private DataColumn columnYear;

            // Token: 0x04000981 RID: 2433
            private DataColumn columnDateD;

            // Token: 0x04000982 RID: 2434
            private DataColumn columnTemperatureD;

            // Token: 0x04000983 RID: 2435
            private DataColumn columnDateN;

            // Token: 0x04000984 RID: 2436
            private DataColumn columnTemperatureN;

            // Token: 0x04000985 RID: 2437
            private DataColumn columnidWorker;

            // Token: 0x04000986 RID: 2438
            private DataColumn columnidWorkerCheck;

            // Token: 0x04000987 RID: 2439
            private DataColumn columnComment;

            // Token: 0x04000988 RID: 2440
            private DataColumn columnidOldMeasurement;

            // Token: 0x04000989 RID: 2441
            private DataColumn columnDeleted;
        }

        // Token: 0x02000102 RID: 258
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasTransfPassportDataTable : TypedTableBase<DataSetGES.vJ_MeasTransfPassportRow>
        {
            // Token: 0x06001255 RID: 4693 RVA: 0x00082348 File Offset: 0x00080548
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasTransfPassportDataTable()
            {
                base.TableName = "vJ_MeasTransfPassport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001256 RID: 4694 RVA: 0x00082370 File Offset: 0x00080570
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasTransfPassportDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001257 RID: 4695 RVA: 0x00082418 File Offset: 0x00080618
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasTransfPassportDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700043A RID: 1082
            // (get) Token: 0x06001258 RID: 4696 RVA: 0x00082428 File Offset: 0x00080628
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x1700043B RID: 1083
            // (get) Token: 0x06001259 RID: 4697 RVA: 0x00082430 File Offset: 0x00080630
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdPassportColumn
            {
                get
                {
                    return this.columnIdPassport;
                }
            }

            // Token: 0x1700043C RID: 1084
            // (get) Token: 0x0600125A RID: 4698 RVA: 0x00082438 File Offset: 0x00080638
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TransfNameColumn
            {
                get
                {
                    return this.columnTransfName;
                }
            }

            // Token: 0x1700043D RID: 1085
            // (get) Token: 0x0600125B RID: 4699 RVA: 0x00082440 File Offset: 0x00080640
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeColumn
            {
                get
                {
                    return this.columnType;
                }
            }

            // Token: 0x1700043E RID: 1086
            // (get) Token: 0x0600125C RID: 4700 RVA: 0x00082448 File Offset: 0x00080648
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x1700043F RID: 1087
            // (get) Token: 0x0600125D RID: 4701 RVA: 0x00082450 File Offset: 0x00080650
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn InvNumberColumn
            {
                get
                {
                    return this.columnInvNumber;
                }
            }

            // Token: 0x17000440 RID: 1088
            // (get) Token: 0x0600125E RID: 4702 RVA: 0x00082458 File Offset: 0x00080658
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UnomColumn
            {
                get
                {
                    return this.columnUnom;
                }
            }

            // Token: 0x17000441 RID: 1089
            // (get) Token: 0x0600125F RID: 4703 RVA: 0x00082460 File Offset: 0x00080660
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn InomColumn
            {
                get
                {
                    return this.columnInom;
                }
            }

            // Token: 0x17000442 RID: 1090
            // (get) Token: 0x06001260 RID: 4704 RVA: 0x00082468 File Offset: 0x00080668
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000443 RID: 1091
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasTransfPassportRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasTransfPassportRow)base.Rows[index];
                }
            }

            // Token: 0x14000121 RID: 289
            // (add) Token: 0x06001262 RID: 4706 RVA: 0x00082488 File Offset: 0x00080688
            // (remove) Token: 0x06001263 RID: 4707 RVA: 0x000824C0 File Offset: 0x000806C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfPassportRowChangeEventHandler vJ_MeasTransfPassportRowChanging;

            // Token: 0x14000122 RID: 290
            // (add) Token: 0x06001264 RID: 4708 RVA: 0x000824F8 File Offset: 0x000806F8
            // (remove) Token: 0x06001265 RID: 4709 RVA: 0x00082530 File Offset: 0x00080730
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfPassportRowChangeEventHandler vJ_MeasTransfPassportRowChanged;

            // Token: 0x14000123 RID: 291
            // (add) Token: 0x06001266 RID: 4710 RVA: 0x00082568 File Offset: 0x00080768
            // (remove) Token: 0x06001267 RID: 4711 RVA: 0x000825A0 File Offset: 0x000807A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfPassportRowChangeEventHandler vJ_MeasTransfPassportRowDeleting;

            // Token: 0x14000124 RID: 292
            // (add) Token: 0x06001268 RID: 4712 RVA: 0x000825D8 File Offset: 0x000807D8
            // (remove) Token: 0x06001269 RID: 4713 RVA: 0x00082610 File Offset: 0x00080810
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfPassportRowChangeEventHandler vJ_MeasTransfPassportRowDeleted;

            // Token: 0x0600126A RID: 4714 RVA: 0x00082645 File Offset: 0x00080845
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_MeasTransfPassportRow(DataSetGES.vJ_MeasTransfPassportRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600126B RID: 4715 RVA: 0x00082654 File Offset: 0x00080854
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasTransfPassportRow AddvJ_MeasTransfPassportRow(int Id, int IdPassport, string TransfName, string Type, string Power, string InvNumber, string Unom, string Inom)
            {
                DataSetGES.vJ_MeasTransfPassportRow vJ_MeasTransfPassportRow = (DataSetGES.vJ_MeasTransfPassportRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    IdPassport,
                    TransfName,
                    Type,
                    Power,
                    InvNumber,
                    Unom,
                    Inom
                };
                vJ_MeasTransfPassportRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasTransfPassportRow);
                return vJ_MeasTransfPassportRow;
            }

            // Token: 0x0600126C RID: 4716 RVA: 0x000826BC File Offset: 0x000808BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasTransfPassportDataTable vJ_MeasTransfPassportDataTable = (DataSetGES.vJ_MeasTransfPassportDataTable)base.Clone();
                vJ_MeasTransfPassportDataTable.InitVars();
                return vJ_MeasTransfPassportDataTable;
            }

            // Token: 0x0600126D RID: 4717 RVA: 0x000826DC File Offset: 0x000808DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasTransfPassportDataTable();
            }

            // Token: 0x0600126E RID: 4718 RVA: 0x000826E4 File Offset: 0x000808E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdPassport = base.Columns["IdPassport"];
                this.columnTransfName = base.Columns["TransfName"];
                this.columnType = base.Columns["Type"];
                this.columnPower = base.Columns["Power"];
                this.columnInvNumber = base.Columns["InvNumber"];
                this.columnUnom = base.Columns["Unom"];
                this.columnInom = base.Columns["Inom"];
            }

            // Token: 0x0600126F RID: 4719 RVA: 0x000827A4 File Offset: 0x000809A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdPassport = new DataColumn("IdPassport", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdPassport);
                this.columnTransfName = new DataColumn("TransfName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTransfName);
                this.columnType = new DataColumn("Type", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPower = new DataColumn("Power", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnInvNumber = new DataColumn("InvNumber", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnInvNumber);
                this.columnUnom = new DataColumn("Unom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnUnom);
                this.columnInom = new DataColumn("Inom", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnInom);
                this.columnId.AllowDBNull = false;
                this.columnTransfName.MaxLength = 512;
                this.columnType.ReadOnly = true;
                this.columnType.MaxLength = 512;
                this.columnPower.ReadOnly = true;
                this.columnPower.MaxLength = 512;
                this.columnInvNumber.ReadOnly = true;
                this.columnInvNumber.MaxLength = 512;
                this.columnUnom.ReadOnly = true;
                this.columnUnom.MaxLength = 512;
                this.columnInom.ReadOnly = true;
                this.columnInom.MaxLength = 512;
            }

            // Token: 0x06001270 RID: 4720 RVA: 0x000829C1 File Offset: 0x00080BC1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasTransfPassportRow NewvJ_MeasTransfPassportRow()
            {
                return (DataSetGES.vJ_MeasTransfPassportRow)base.NewRow();
            }

            // Token: 0x06001271 RID: 4721 RVA: 0x000829CE File Offset: 0x00080BCE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasTransfPassportRow(builder);
            }

            // Token: 0x06001272 RID: 4722 RVA: 0x000829D6 File Offset: 0x00080BD6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasTransfPassportRow);
            }

            // Token: 0x06001273 RID: 4723 RVA: 0x000829E2 File Offset: 0x00080BE2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasTransfPassportRowChanged != null)
                {
                    this.vJ_MeasTransfPassportRowChanged(this, new DataSetGES.vJ_MeasTransfPassportRowChangeEvent((DataSetGES.vJ_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001274 RID: 4724 RVA: 0x00082A15 File Offset: 0x00080C15
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasTransfPassportRowChanging != null)
                {
                    this.vJ_MeasTransfPassportRowChanging(this, new DataSetGES.vJ_MeasTransfPassportRowChangeEvent((DataSetGES.vJ_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001275 RID: 4725 RVA: 0x00082A48 File Offset: 0x00080C48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasTransfPassportRowDeleted != null)
                {
                    this.vJ_MeasTransfPassportRowDeleted(this, new DataSetGES.vJ_MeasTransfPassportRowChangeEvent((DataSetGES.vJ_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001276 RID: 4726 RVA: 0x00082A7B File Offset: 0x00080C7B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasTransfPassportRowDeleting != null)
                {
                    this.vJ_MeasTransfPassportRowDeleting(this, new DataSetGES.vJ_MeasTransfPassportRowChangeEvent((DataSetGES.vJ_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001277 RID: 4727 RVA: 0x00082AAE File Offset: 0x00080CAE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_MeasTransfPassportRow(DataSetGES.vJ_MeasTransfPassportRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001278 RID: 4728 RVA: 0x00082ABC File Offset: 0x00080CBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasTransfPassportDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400098E RID: 2446
            private DataColumn columnId;

            // Token: 0x0400098F RID: 2447
            private DataColumn columnIdPassport;

            // Token: 0x04000990 RID: 2448
            private DataColumn columnTransfName;

            // Token: 0x04000991 RID: 2449
            private DataColumn columnType;

            // Token: 0x04000992 RID: 2450
            private DataColumn columnPower;

            // Token: 0x04000993 RID: 2451
            private DataColumn columnInvNumber;

            // Token: 0x04000994 RID: 2452
            private DataColumn columnUnom;

            // Token: 0x04000995 RID: 2453
            private DataColumn columnInom;
        }

        // Token: 0x02000103 RID: 259
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_MeasTransfPassportDataTable : TypedTableBase<DataSetGES.fn_J_MeasTransfPassportRow>
        {
            // Token: 0x06001279 RID: 4729 RVA: 0x00082CB4 File Offset: 0x00080EB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_MeasTransfPassportDataTable()
            {
                base.TableName = "fn_J_MeasTransfPassport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600127A RID: 4730 RVA: 0x00082CDC File Offset: 0x00080EDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_MeasTransfPassportDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600127B RID: 4731 RVA: 0x00082D84 File Offset: 0x00080F84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_MeasTransfPassportDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000444 RID: 1092
            // (get) Token: 0x0600127C RID: 4732 RVA: 0x00082D94 File Offset: 0x00080F94
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000445 RID: 1093
            // (get) Token: 0x0600127D RID: 4733 RVA: 0x00082D9C File Offset: 0x00080F9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdPassportColumn
            {
                get
                {
                    return this.columnIdPassport;
                }
            }

            // Token: 0x17000446 RID: 1094
            // (get) Token: 0x0600127E RID: 4734 RVA: 0x00082DA4 File Offset: 0x00080FA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000447 RID: 1095
            // (get) Token: 0x0600127F RID: 4735 RVA: 0x00082DAC File Offset: 0x00080FAC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeColumn
            {
                get
                {
                    return this.columnType;
                }
            }

            // Token: 0x17000448 RID: 1096
            // (get) Token: 0x06001280 RID: 4736 RVA: 0x00082DB4 File Offset: 0x00080FB4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x17000449 RID: 1097
            // (get) Token: 0x06001281 RID: 4737 RVA: 0x00082DBC File Offset: 0x00080FBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn InvNumberColumn
            {
                get
                {
                    return this.columnInvNumber;
                }
            }

            // Token: 0x1700044A RID: 1098
            // (get) Token: 0x06001282 RID: 4738 RVA: 0x00082DC4 File Offset: 0x00080FC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UnomColumn
            {
                get
                {
                    return this.columnUnom;
                }
            }

            // Token: 0x1700044B RID: 1099
            // (get) Token: 0x06001283 RID: 4739 RVA: 0x00082DCC File Offset: 0x00080FCC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn InomColumn
            {
                get
                {
                    return this.columnInom;
                }
            }

            // Token: 0x1700044C RID: 1100
            // (get) Token: 0x06001284 RID: 4740 RVA: 0x00082DD4 File Offset: 0x00080FD4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn InomHVColumn
            {
                get
                {
                    return this.columnInomHV;
                }
            }

            // Token: 0x1700044D RID: 1101
            // (get) Token: 0x06001285 RID: 4741 RVA: 0x00082DDC File Offset: 0x00080FDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700044E RID: 1102
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_MeasTransfPassportRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_MeasTransfPassportRow)base.Rows[index];
                }
            }

            // Token: 0x14000125 RID: 293
            // (add) Token: 0x06001287 RID: 4743 RVA: 0x00082DFC File Offset: 0x00080FFC
            // (remove) Token: 0x06001288 RID: 4744 RVA: 0x00082E34 File Offset: 0x00081034
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasTransfPassportRowChangeEventHandler fn_J_MeasTransfPassportRowChanging;

            // Token: 0x14000126 RID: 294
            // (add) Token: 0x06001289 RID: 4745 RVA: 0x00082E6C File Offset: 0x0008106C
            // (remove) Token: 0x0600128A RID: 4746 RVA: 0x00082EA4 File Offset: 0x000810A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasTransfPassportRowChangeEventHandler fn_J_MeasTransfPassportRowChanged;

            // Token: 0x14000127 RID: 295
            // (add) Token: 0x0600128B RID: 4747 RVA: 0x00082EDC File Offset: 0x000810DC
            // (remove) Token: 0x0600128C RID: 4748 RVA: 0x00082F14 File Offset: 0x00081114
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasTransfPassportRowChangeEventHandler fn_J_MeasTransfPassportRowDeleting;

            // Token: 0x14000128 RID: 296
            // (add) Token: 0x0600128D RID: 4749 RVA: 0x00082F4C File Offset: 0x0008114C
            // (remove) Token: 0x0600128E RID: 4750 RVA: 0x00082F84 File Offset: 0x00081184
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_MeasTransfPassportRowChangeEventHandler fn_J_MeasTransfPassportRowDeleted;

            // Token: 0x0600128F RID: 4751 RVA: 0x00082FB9 File Offset: 0x000811B9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfn_J_MeasTransfPassportRow(DataSetGES.fn_J_MeasTransfPassportRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001290 RID: 4752 RVA: 0x00082FC8 File Offset: 0x000811C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_MeasTransfPassportRow Addfn_J_MeasTransfPassportRow(int Id, int IdPassport, string Name, string Type, int Power, string InvNumber, decimal Unom, decimal Inom, decimal InomHV)
            {
                DataSetGES.fn_J_MeasTransfPassportRow fn_J_MeasTransfPassportRow = (DataSetGES.fn_J_MeasTransfPassportRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    IdPassport,
                    Name,
                    Type,
                    Power,
                    InvNumber,
                    Unom,
                    Inom,
                    InomHV
                };
                fn_J_MeasTransfPassportRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_MeasTransfPassportRow);
                return fn_J_MeasTransfPassportRow;
            }

            // Token: 0x06001291 RID: 4753 RVA: 0x00083048 File Offset: 0x00081248
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_MeasTransfPassportDataTable fn_J_MeasTransfPassportDataTable = (DataSetGES.fn_J_MeasTransfPassportDataTable)base.Clone();
                fn_J_MeasTransfPassportDataTable.InitVars();
                return fn_J_MeasTransfPassportDataTable;
            }

            // Token: 0x06001292 RID: 4754 RVA: 0x00083068 File Offset: 0x00081268
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_MeasTransfPassportDataTable();
            }

            // Token: 0x06001293 RID: 4755 RVA: 0x00083070 File Offset: 0x00081270
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdPassport = base.Columns["IdPassport"];
                this.columnName = base.Columns["Name"];
                this.columnType = base.Columns["Type"];
                this.columnPower = base.Columns["Power"];
                this.columnInvNumber = base.Columns["InvNumber"];
                this.columnUnom = base.Columns["Unom"];
                this.columnInom = base.Columns["Inom"];
                this.columnInomHV = base.Columns["InomHV"];
            }

            // Token: 0x06001294 RID: 4756 RVA: 0x00083144 File Offset: 0x00081344
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdPassport = new DataColumn("IdPassport", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdPassport);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnType = new DataColumn("Type", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnInvNumber = new DataColumn("InvNumber", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnInvNumber);
                this.columnUnom = new DataColumn("Unom", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnUnom);
                this.columnInom = new DataColumn("Inom", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnInom);
                this.columnInomHV = new DataColumn("InomHV", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnInomHV);
                this.columnName.MaxLength = 512;
                this.columnType.MaxLength = 50;
                this.columnInvNumber.MaxLength = 50;
            }

            // Token: 0x06001295 RID: 4757 RVA: 0x00083310 File Offset: 0x00081510
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_MeasTransfPassportRow Newfn_J_MeasTransfPassportRow()
            {
                return (DataSetGES.fn_J_MeasTransfPassportRow)base.NewRow();
            }

            // Token: 0x06001296 RID: 4758 RVA: 0x0008331D File Offset: 0x0008151D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_MeasTransfPassportRow(builder);
            }

            // Token: 0x06001297 RID: 4759 RVA: 0x00083325 File Offset: 0x00081525
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_MeasTransfPassportRow);
            }

            // Token: 0x06001298 RID: 4760 RVA: 0x00083331 File Offset: 0x00081531
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_MeasTransfPassportRowChanged != null)
                {
                    this.fn_J_MeasTransfPassportRowChanged(this, new DataSetGES.fn_J_MeasTransfPassportRowChangeEvent((DataSetGES.fn_J_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001299 RID: 4761 RVA: 0x00083364 File Offset: 0x00081564
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_MeasTransfPassportRowChanging != null)
                {
                    this.fn_J_MeasTransfPassportRowChanging(this, new DataSetGES.fn_J_MeasTransfPassportRowChangeEvent((DataSetGES.fn_J_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600129A RID: 4762 RVA: 0x00083397 File Offset: 0x00081597
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_MeasTransfPassportRowDeleted != null)
                {
                    this.fn_J_MeasTransfPassportRowDeleted(this, new DataSetGES.fn_J_MeasTransfPassportRowChangeEvent((DataSetGES.fn_J_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600129B RID: 4763 RVA: 0x000833CA File Offset: 0x000815CA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_MeasTransfPassportRowDeleting != null)
                {
                    this.fn_J_MeasTransfPassportRowDeleting(this, new DataSetGES.fn_J_MeasTransfPassportRowChangeEvent((DataSetGES.fn_J_MeasTransfPassportRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600129C RID: 4764 RVA: 0x000833FD File Offset: 0x000815FD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Removefn_J_MeasTransfPassportRow(DataSetGES.fn_J_MeasTransfPassportRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600129D RID: 4765 RVA: 0x0008340C File Offset: 0x0008160C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_MeasTransfPassportDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x0400099A RID: 2458
            private DataColumn columnId;

            // Token: 0x0400099B RID: 2459
            private DataColumn columnIdPassport;

            // Token: 0x0400099C RID: 2460
            private DataColumn columnName;

            // Token: 0x0400099D RID: 2461
            private DataColumn columnType;

            // Token: 0x0400099E RID: 2462
            private DataColumn columnPower;

            // Token: 0x0400099F RID: 2463
            private DataColumn columnInvNumber;

            // Token: 0x040009A0 RID: 2464
            private DataColumn columnUnom;

            // Token: 0x040009A1 RID: 2465
            private DataColumn columnInom;

            // Token: 0x040009A2 RID: 2466
            private DataColumn columnInomHV;
        }

        // Token: 0x02000104 RID: 260
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasCableDataTable : TypedTableBase<DataSetGES.vJ_MeasCableRow>
        {
            // Token: 0x0600129E RID: 4766 RVA: 0x00083604 File Offset: 0x00081804
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasCableDataTable()
            {
                base.TableName = "vJ_MeasCable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600129F RID: 4767 RVA: 0x0008362C File Offset: 0x0008182C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasCableDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060012A0 RID: 4768 RVA: 0x000836D4 File Offset: 0x000818D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasCableDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700044F RID: 1103
            // (get) Token: 0x060012A1 RID: 4769 RVA: 0x000836E4 File Offset: 0x000818E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000450 RID: 1104
            // (get) Token: 0x060012A2 RID: 4770 RVA: 0x000836EC File Offset: 0x000818EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x17000451 RID: 1105
            // (get) Token: 0x060012A3 RID: 4771 RVA: 0x000836F4 File Offset: 0x000818F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x17000452 RID: 1106
            // (get) Token: 0x060012A4 RID: 4772 RVA: 0x000836FC File Offset: 0x000818FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000453 RID: 1107
            // (get) Token: 0x060012A5 RID: 4773 RVA: 0x00083704 File Offset: 0x00081904
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x17000454 RID: 1108
            // (get) Token: 0x060012A6 RID: 4774 RVA: 0x0008370C File Offset: 0x0008190C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OldCellColumn
            {
                get
                {
                    return this.columnOldCell;
                }
            }

            // Token: 0x17000455 RID: 1109
            // (get) Token: 0x060012A7 RID: 4775 RVA: 0x00083714 File Offset: 0x00081914
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x17000456 RID: 1110
            // (get) Token: 0x060012A8 RID: 4776 RVA: 0x0008371C File Offset: 0x0008191C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            // Token: 0x17000457 RID: 1111
            // (get) Token: 0x060012A9 RID: 4777 RVA: 0x00083724 File Offset: 0x00081924
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x17000458 RID: 1112
            // (get) Token: 0x060012AA RID: 4778 RVA: 0x0008372C File Offset: 0x0008192C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            // Token: 0x17000459 RID: 1113
            // (get) Token: 0x060012AB RID: 4779 RVA: 0x00083734 File Offset: 0x00081934
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            // Token: 0x1700045A RID: 1114
            // (get) Token: 0x060012AC RID: 4780 RVA: 0x0008373C File Offset: 0x0008193C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            // Token: 0x1700045B RID: 1115
            // (get) Token: 0x060012AD RID: 4781 RVA: 0x00083744 File Offset: 0x00081944
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            // Token: 0x1700045C RID: 1116
            // (get) Token: 0x060012AE RID: 4782 RVA: 0x0008374C File Offset: 0x0008194C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            // Token: 0x1700045D RID: 1117
            // (get) Token: 0x060012AF RID: 4783 RVA: 0x00083754 File Offset: 0x00081954
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            // Token: 0x1700045E RID: 1118
            // (get) Token: 0x060012B0 RID: 4784 RVA: 0x0008375C File Offset: 0x0008195C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            // Token: 0x1700045F RID: 1119
            // (get) Token: 0x060012B1 RID: 4785 RVA: 0x00083764 File Offset: 0x00081964
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            // Token: 0x17000460 RID: 1120
            // (get) Token: 0x060012B2 RID: 4786 RVA: 0x0008376C File Offset: 0x0008196C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            // Token: 0x17000461 RID: 1121
            // (get) Token: 0x060012B3 RID: 4787 RVA: 0x00083774 File Offset: 0x00081974
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            // Token: 0x17000462 RID: 1122
            // (get) Token: 0x060012B4 RID: 4788 RVA: 0x0008377C File Offset: 0x0008197C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            // Token: 0x17000463 RID: 1123
            // (get) Token: 0x060012B5 RID: 4789 RVA: 0x00083784 File Offset: 0x00081984
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            // Token: 0x17000464 RID: 1124
            // (get) Token: 0x060012B6 RID: 4790 RVA: 0x0008378C File Offset: 0x0008198C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            // Token: 0x17000465 RID: 1125
            // (get) Token: 0x060012B7 RID: 4791 RVA: 0x00083794 File Offset: 0x00081994
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            // Token: 0x17000466 RID: 1126
            // (get) Token: 0x060012B8 RID: 4792 RVA: 0x0008379C File Offset: 0x0008199C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            // Token: 0x17000467 RID: 1127
            // (get) Token: 0x060012B9 RID: 4793 RVA: 0x000837A4 File Offset: 0x000819A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            // Token: 0x17000468 RID: 1128
            // (get) Token: 0x060012BA RID: 4794 RVA: 0x000837AC File Offset: 0x000819AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000469 RID: 1129
            // (get) Token: 0x060012BB RID: 4795 RVA: 0x000837B4 File Offset: 0x000819B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x1700046A RID: 1130
            // (get) Token: 0x060012BC RID: 4796 RVA: 0x000837BC File Offset: 0x000819BC
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700046B RID: 1131
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasCableRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasCableRow)base.Rows[index];
                }
            }

            // Token: 0x14000129 RID: 297
            // (add) Token: 0x060012BE RID: 4798 RVA: 0x000837DC File Offset: 0x000819DC
            // (remove) Token: 0x060012BF RID: 4799 RVA: 0x00083814 File Offset: 0x00081A14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableRowChangeEventHandler vJ_MeasCableRowChanging;

            // Token: 0x1400012A RID: 298
            // (add) Token: 0x060012C0 RID: 4800 RVA: 0x0008384C File Offset: 0x00081A4C
            // (remove) Token: 0x060012C1 RID: 4801 RVA: 0x00083884 File Offset: 0x00081A84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableRowChangeEventHandler vJ_MeasCableRowChanged;

            // Token: 0x1400012B RID: 299
            // (add) Token: 0x060012C2 RID: 4802 RVA: 0x000838BC File Offset: 0x00081ABC
            // (remove) Token: 0x060012C3 RID: 4803 RVA: 0x000838F4 File Offset: 0x00081AF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableRowChangeEventHandler vJ_MeasCableRowDeleting;

            // Token: 0x1400012C RID: 300
            // (add) Token: 0x060012C4 RID: 4804 RVA: 0x0008392C File Offset: 0x00081B2C
            // (remove) Token: 0x060012C5 RID: 4805 RVA: 0x00083964 File Offset: 0x00081B64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableRowChangeEventHandler vJ_MeasCableRowDeleted;

            // Token: 0x060012C6 RID: 4806 RVA: 0x00083999 File Offset: 0x00081B99
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_MeasCableRow(DataSetGES.vJ_MeasCableRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060012C7 RID: 4807 RVA: 0x000839A8 File Offset: 0x00081BA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasCableRow AddvJ_MeasCableRow(int id, int idMeasurement, int idBus, int idTransf, int idCell, short OldCell, string NameCell, string NameCable, string Address, string Company, int idCable, int idSchmAbn, string Makeup, int Voltage, int Wires, double CrossSection, double PermisAmperage, int Iad, int Ian, int Ibd, int Ibn, int Icd, int Icn, int Iod, int Ion, string Comment, bool Deleted)
            {
                DataSetGES.vJ_MeasCableRow vJ_MeasCableRow = (DataSetGES.vJ_MeasCableRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idMeasurement,
                    idBus,
                    idTransf,
                    idCell,
                    OldCell,
                    NameCell,
                    NameCable,
                    Address,
                    Company,
                    idCable,
                    idSchmAbn,
                    Makeup,
                    Voltage,
                    Wires,
                    CrossSection,
                    PermisAmperage,
                    Iad,
                    Ian,
                    Ibd,
                    Ibn,
                    Icd,
                    Icn,
                    Iod,
                    Ion,
                    Comment,
                    Deleted
                };
                vJ_MeasCableRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasCableRow);
                return vJ_MeasCableRow;
            }

            // Token: 0x060012C8 RID: 4808 RVA: 0x00083AE0 File Offset: 0x00081CE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasCableRow FindByid(int id)
            {
                return (DataSetGES.vJ_MeasCableRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x060012C9 RID: 4809 RVA: 0x00083B10 File Offset: 0x00081D10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCableDataTable vJ_MeasCableDataTable = (DataSetGES.vJ_MeasCableDataTable)base.Clone();
                vJ_MeasCableDataTable.InitVars();
                return vJ_MeasCableDataTable;
            }

            // Token: 0x060012CA RID: 4810 RVA: 0x00083B30 File Offset: 0x00081D30
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCableDataTable();
            }

            // Token: 0x060012CB RID: 4811 RVA: 0x00083B38 File Offset: 0x00081D38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnOldCell = base.Columns["OldCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnNameCable = base.Columns["NameCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnCompany = base.Columns["Company"];
                this.columnidCable = base.Columns["idCable"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x060012CC RID: 4812 RVA: 0x00083D98 File Offset: 0x00081F98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnOldCell = new DataColumn("OldCell", typeof(short), null, MappingType.Element);
                base.Columns.Add(this.columnOldCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameCell.MaxLength = 512;
                this.columnNameCable.MaxLength = 512;
                this.columnAddress.MaxLength = 128;
                this.columnCompany.MaxLength = 128;
                this.columnMakeup.MaxLength = 50;
                this.columnComment.MaxLength = 128;
            }

            // Token: 0x060012CD RID: 4813 RVA: 0x00084318 File Offset: 0x00082518
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasCableRow NewvJ_MeasCableRow()
            {
                return (DataSetGES.vJ_MeasCableRow)base.NewRow();
            }

            // Token: 0x060012CE RID: 4814 RVA: 0x00084325 File Offset: 0x00082525
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasCableRow(builder);
            }

            // Token: 0x060012CF RID: 4815 RVA: 0x0008432D File Offset: 0x0008252D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasCableRow);
            }

            // Token: 0x060012D0 RID: 4816 RVA: 0x00084339 File Offset: 0x00082539
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasCableRowChanged != null)
                {
                    this.vJ_MeasCableRowChanged(this, new DataSetGES.vJ_MeasCableRowChangeEvent((DataSetGES.vJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012D1 RID: 4817 RVA: 0x0008436C File Offset: 0x0008256C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasCableRowChanging != null)
                {
                    this.vJ_MeasCableRowChanging(this, new DataSetGES.vJ_MeasCableRowChangeEvent((DataSetGES.vJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012D2 RID: 4818 RVA: 0x0008439F File Offset: 0x0008259F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasCableRowDeleted != null)
                {
                    this.vJ_MeasCableRowDeleted(this, new DataSetGES.vJ_MeasCableRowChangeEvent((DataSetGES.vJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012D3 RID: 4819 RVA: 0x000843D2 File Offset: 0x000825D2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasCableRowDeleting != null)
                {
                    this.vJ_MeasCableRowDeleting(this, new DataSetGES.vJ_MeasCableRowChangeEvent((DataSetGES.vJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012D4 RID: 4820 RVA: 0x00084405 File Offset: 0x00082605
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_MeasCableRow(DataSetGES.vJ_MeasCableRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060012D5 RID: 4821 RVA: 0x00084414 File Offset: 0x00082614
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasCableDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040009A7 RID: 2471
            private DataColumn columnid;

            // Token: 0x040009A8 RID: 2472
            private DataColumn columnidMeasurement;

            // Token: 0x040009A9 RID: 2473
            private DataColumn columnidBus;

            // Token: 0x040009AA RID: 2474
            private DataColumn columnidTransf;

            // Token: 0x040009AB RID: 2475
            private DataColumn columnidCell;

            // Token: 0x040009AC RID: 2476
            private DataColumn columnOldCell;

            // Token: 0x040009AD RID: 2477
            private DataColumn columnNameCell;

            // Token: 0x040009AE RID: 2478
            private DataColumn columnNameCable;

            // Token: 0x040009AF RID: 2479
            private DataColumn columnAddress;

            // Token: 0x040009B0 RID: 2480
            private DataColumn columnCompany;

            // Token: 0x040009B1 RID: 2481
            private DataColumn columnidCable;

            // Token: 0x040009B2 RID: 2482
            private DataColumn columnidSchmAbn;

            // Token: 0x040009B3 RID: 2483
            private DataColumn columnMakeup;

            // Token: 0x040009B4 RID: 2484
            private DataColumn columnVoltage;

            // Token: 0x040009B5 RID: 2485
            private DataColumn columnWires;

            // Token: 0x040009B6 RID: 2486
            private DataColumn columnCrossSection;

            // Token: 0x040009B7 RID: 2487
            private DataColumn columnPermisAmperage;

            // Token: 0x040009B8 RID: 2488
            private DataColumn columnIad;

            // Token: 0x040009B9 RID: 2489
            private DataColumn columnIan;

            // Token: 0x040009BA RID: 2490
            private DataColumn columnIbd;

            // Token: 0x040009BB RID: 2491
            private DataColumn columnIbn;

            // Token: 0x040009BC RID: 2492
            private DataColumn columnIcd;

            // Token: 0x040009BD RID: 2493
            private DataColumn columnIcn;

            // Token: 0x040009BE RID: 2494
            private DataColumn columnIod;

            // Token: 0x040009BF RID: 2495
            private DataColumn columnIon;

            // Token: 0x040009C0 RID: 2496
            private DataColumn columnComment;

            // Token: 0x040009C1 RID: 2497
            private DataColumn columnDeleted;
        }

        // Token: 0x02000105 RID: 261
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtMeasCellRatioDataTable : TypedTableBase<DataSetGES.dtMeasCellRatioRow>
        {
            // Token: 0x060012D6 RID: 4822 RVA: 0x0008460C File Offset: 0x0008280C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtMeasCellRatioDataTable()
            {
                base.TableName = "dtMeasCellRatio";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060012D7 RID: 4823 RVA: 0x00084634 File Offset: 0x00082834
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtMeasCellRatioDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060012D8 RID: 4824 RVA: 0x000846DC File Offset: 0x000828DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtMeasCellRatioDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700046C RID: 1132
            // (get) Token: 0x060012D9 RID: 4825 RVA: 0x000846EC File Offset: 0x000828EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadSumColumn
            {
                get
                {
                    return this.columnIadSum;
                }
            }

            // Token: 0x1700046D RID: 1133
            // (get) Token: 0x060012DA RID: 4826 RVA: 0x000846F4 File Offset: 0x000828F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanSumColumn
            {
                get
                {
                    return this.columnIanSum;
                }
            }

            // Token: 0x1700046E RID: 1134
            // (get) Token: 0x060012DB RID: 4827 RVA: 0x000846FC File Offset: 0x000828FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbdSumColumn
            {
                get
                {
                    return this.columnIbdSum;
                }
            }

            // Token: 0x1700046F RID: 1135
            // (get) Token: 0x060012DC RID: 4828 RVA: 0x00084704 File Offset: 0x00082904
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnSumColumn
            {
                get
                {
                    return this.columnIbnSum;
                }
            }

            // Token: 0x17000470 RID: 1136
            // (get) Token: 0x060012DD RID: 4829 RVA: 0x0008470C File Offset: 0x0008290C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdSumColumn
            {
                get
                {
                    return this.columnIcdSum;
                }
            }

            // Token: 0x17000471 RID: 1137
            // (get) Token: 0x060012DE RID: 4830 RVA: 0x00084714 File Offset: 0x00082914
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnSumColumn
            {
                get
                {
                    return this.columnIcnSum;
                }
            }

            // Token: 0x17000472 RID: 1138
            // (get) Token: 0x060012DF RID: 4831 RVA: 0x0008471C File Offset: 0x0008291C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000473 RID: 1139
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtMeasCellRatioRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtMeasCellRatioRow)base.Rows[index];
                }
            }

            // Token: 0x1400012D RID: 301
            // (add) Token: 0x060012E1 RID: 4833 RVA: 0x0008473C File Offset: 0x0008293C
            // (remove) Token: 0x060012E2 RID: 4834 RVA: 0x00084774 File Offset: 0x00082974
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCellRatioRowChangeEventHandler dtMeasCellRatioRowChanging;

            // Token: 0x1400012E RID: 302
            // (add) Token: 0x060012E3 RID: 4835 RVA: 0x000847AC File Offset: 0x000829AC
            // (remove) Token: 0x060012E4 RID: 4836 RVA: 0x000847E4 File Offset: 0x000829E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCellRatioRowChangeEventHandler dtMeasCellRatioRowChanged;

            // Token: 0x1400012F RID: 303
            // (add) Token: 0x060012E5 RID: 4837 RVA: 0x0008481C File Offset: 0x00082A1C
            // (remove) Token: 0x060012E6 RID: 4838 RVA: 0x00084854 File Offset: 0x00082A54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCellRatioRowChangeEventHandler dtMeasCellRatioRowDeleting;

            // Token: 0x14000130 RID: 304
            // (add) Token: 0x060012E7 RID: 4839 RVA: 0x0008488C File Offset: 0x00082A8C
            // (remove) Token: 0x060012E8 RID: 4840 RVA: 0x000848C4 File Offset: 0x00082AC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtMeasCellRatioRowChangeEventHandler dtMeasCellRatioRowDeleted;

            // Token: 0x060012E9 RID: 4841 RVA: 0x000848F9 File Offset: 0x00082AF9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtMeasCellRatioRow(DataSetGES.dtMeasCellRatioRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060012EA RID: 4842 RVA: 0x00084908 File Offset: 0x00082B08
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtMeasCellRatioRow AdddtMeasCellRatioRow(int IadSum, int IanSum, int IbdSum, int IbnSum, int IcdSum, int IcnSum)
            {
                DataSetGES.dtMeasCellRatioRow dtMeasCellRatioRow = (DataSetGES.dtMeasCellRatioRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    IadSum,
                    IanSum,
                    IbdSum,
                    IbnSum,
                    IcdSum,
                    IcnSum
                };
                dtMeasCellRatioRow.ItemArray = itemArray;
                base.Rows.Add(dtMeasCellRatioRow);
                return dtMeasCellRatioRow;
            }

            // Token: 0x060012EB RID: 4843 RVA: 0x00084978 File Offset: 0x00082B78
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.dtMeasCellRatioDataTable dtMeasCellRatioDataTable = (DataSetGES.dtMeasCellRatioDataTable)base.Clone();
                dtMeasCellRatioDataTable.InitVars();
                return dtMeasCellRatioDataTable;
            }

            // Token: 0x060012EC RID: 4844 RVA: 0x00084998 File Offset: 0x00082B98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtMeasCellRatioDataTable();
            }

            // Token: 0x060012ED RID: 4845 RVA: 0x000849A0 File Offset: 0x00082BA0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnIadSum = base.Columns["IadSum"];
                this.columnIanSum = base.Columns["IanSum"];
                this.columnIbdSum = base.Columns["IbdSum"];
                this.columnIbnSum = base.Columns["IbnSum"];
                this.columnIcdSum = base.Columns["IcdSum"];
                this.columnIcnSum = base.Columns["IcnSum"];
            }

            // Token: 0x060012EE RID: 4846 RVA: 0x00084A34 File Offset: 0x00082C34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnIadSum = new DataColumn("IadSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIadSum);
                this.columnIanSum = new DataColumn("IanSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIanSum);
                this.columnIbdSum = new DataColumn("IbdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbdSum);
                this.columnIbnSum = new DataColumn("IbnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbnSum);
                this.columnIcdSum = new DataColumn("IcdSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcdSum);
                this.columnIcnSum = new DataColumn("IcnSum", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcnSum);
                this.columnIanSum.Caption = "IadSum";
                this.columnIbdSum.Caption = "IadSum";
                this.columnIbnSum.Caption = "IadSum";
                this.columnIcdSum.Caption = "IadSum";
                this.columnIcnSum.Caption = "IadSum";
            }

            // Token: 0x060012EF RID: 4847 RVA: 0x00084B9F File Offset: 0x00082D9F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtMeasCellRatioRow NewdtMeasCellRatioRow()
            {
                return (DataSetGES.dtMeasCellRatioRow)base.NewRow();
            }

            // Token: 0x060012F0 RID: 4848 RVA: 0x00084BAC File Offset: 0x00082DAC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtMeasCellRatioRow(builder);
            }

            // Token: 0x060012F1 RID: 4849 RVA: 0x00084BB4 File Offset: 0x00082DB4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtMeasCellRatioRow);
            }

            // Token: 0x060012F2 RID: 4850 RVA: 0x00084BC0 File Offset: 0x00082DC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtMeasCellRatioRowChanged != null)
                {
                    this.dtMeasCellRatioRowChanged(this, new DataSetGES.dtMeasCellRatioRowChangeEvent((DataSetGES.dtMeasCellRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012F3 RID: 4851 RVA: 0x00084BF3 File Offset: 0x00082DF3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtMeasCellRatioRowChanging != null)
                {
                    this.dtMeasCellRatioRowChanging(this, new DataSetGES.dtMeasCellRatioRowChangeEvent((DataSetGES.dtMeasCellRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012F4 RID: 4852 RVA: 0x00084C26 File Offset: 0x00082E26
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtMeasCellRatioRowDeleted != null)
                {
                    this.dtMeasCellRatioRowDeleted(this, new DataSetGES.dtMeasCellRatioRowChangeEvent((DataSetGES.dtMeasCellRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012F5 RID: 4853 RVA: 0x00084C59 File Offset: 0x00082E59
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtMeasCellRatioRowDeleting != null)
                {
                    this.dtMeasCellRatioRowDeleting(this, new DataSetGES.dtMeasCellRatioRowChangeEvent((DataSetGES.dtMeasCellRatioRow)e.Row, e.Action));
                }
            }

            // Token: 0x060012F6 RID: 4854 RVA: 0x00084C8C File Offset: 0x00082E8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovedtMeasCellRatioRow(DataSetGES.dtMeasCellRatioRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060012F7 RID: 4855 RVA: 0x00084C9C File Offset: 0x00082E9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtMeasCellRatioDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040009C6 RID: 2502
            private DataColumn columnIadSum;

            // Token: 0x040009C7 RID: 2503
            private DataColumn columnIanSum;

            // Token: 0x040009C8 RID: 2504
            private DataColumn columnIbdSum;

            // Token: 0x040009C9 RID: 2505
            private DataColumn columnIbnSum;

            // Token: 0x040009CA RID: 2506
            private DataColumn columnIcdSum;

            // Token: 0x040009CB RID: 2507
            private DataColumn columnIcnSum;
        }

        // Token: 0x02000106 RID: 262
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tSchm_ObjList1DataTable : TypedTableBase<DataSetGES.tSchm_ObjList1Row>
        {
            // Token: 0x060012F8 RID: 4856 RVA: 0x00084E94 File Offset: 0x00083094
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tSchm_ObjList1DataTable()
            {
                base.TableName = "tSchm_ObjList1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060012F9 RID: 4857 RVA: 0x00084EBC File Offset: 0x000830BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tSchm_ObjList1DataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060012FA RID: 4858 RVA: 0x00084F64 File Offset: 0x00083164
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tSchm_ObjList1DataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000474 RID: 1140
            // (get) Token: 0x060012FB RID: 4859 RVA: 0x00084F74 File Offset: 0x00083174
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000475 RID: 1141
            // (get) Token: 0x060012FC RID: 4860 RVA: 0x00084F7C File Offset: 0x0008317C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000476 RID: 1142
            // (get) Token: 0x060012FD RID: 4861 RVA: 0x00084F84 File Offset: 0x00083184
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x17000477 RID: 1143
            // (get) Token: 0x060012FE RID: 4862 RVA: 0x00084F8C File Offset: 0x0008318C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            // Token: 0x17000478 RID: 1144
            // (get) Token: 0x060012FF RID: 4863 RVA: 0x00084F94 File Offset: 0x00083194
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OnOffColumn
            {
                get
                {
                    return this.columnOnOff;
                }
            }

            // Token: 0x17000479 RID: 1145
            // (get) Token: 0x06001300 RID: 4864 RVA: 0x00084F9C File Offset: 0x0008319C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn LocationColumn
            {
                get
                {
                    return this.columnLocation;
                }
            }

            // Token: 0x1700047A RID: 1146
            // (get) Token: 0x06001301 RID: 4865 RVA: 0x00084FA4 File Offset: 0x000831A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x1700047B RID: 1147
            // (get) Token: 0x06001302 RID: 4866 RVA: 0x00084FAC File Offset: 0x000831AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NamePColumn
            {
                get
                {
                    return this.columnNameP;
                }
            }

            // Token: 0x1700047C RID: 1148
            // (get) Token: 0x06001303 RID: 4867 RVA: 0x00084FB4 File Offset: 0x000831B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            // Token: 0x1700047D RID: 1149
            // (get) Token: 0x06001304 RID: 4868 RVA: 0x00084FBC File Offset: 0x000831BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            // Token: 0x1700047E RID: 1150
            // (get) Token: 0x06001305 RID: 4869 RVA: 0x00084FC4 File Offset: 0x000831C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700047F RID: 1151
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList1Row this[int index]
            {
                get
                {
                    return (DataSetGES.tSchm_ObjList1Row)base.Rows[index];
                }
            }

            // Token: 0x14000131 RID: 305
            // (add) Token: 0x06001307 RID: 4871 RVA: 0x00084FE4 File Offset: 0x000831E4
            // (remove) Token: 0x06001308 RID: 4872 RVA: 0x0008501C File Offset: 0x0008321C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList1RowChangeEventHandler tSchm_ObjList1RowChanging;

            // Token: 0x14000132 RID: 306
            // (add) Token: 0x06001309 RID: 4873 RVA: 0x00085054 File Offset: 0x00083254
            // (remove) Token: 0x0600130A RID: 4874 RVA: 0x0008508C File Offset: 0x0008328C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList1RowChangeEventHandler tSchm_ObjList1RowChanged;

            // Token: 0x14000133 RID: 307
            // (add) Token: 0x0600130B RID: 4875 RVA: 0x000850C4 File Offset: 0x000832C4
            // (remove) Token: 0x0600130C RID: 4876 RVA: 0x000850FC File Offset: 0x000832FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList1RowChangeEventHandler tSchm_ObjList1RowDeleting;

            // Token: 0x14000134 RID: 308
            // (add) Token: 0x0600130D RID: 4877 RVA: 0x00085134 File Offset: 0x00083334
            // (remove) Token: 0x0600130E RID: 4878 RVA: 0x0008516C File Offset: 0x0008336C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList1RowChangeEventHandler tSchm_ObjList1RowDeleted;

            // Token: 0x0600130F RID: 4879 RVA: 0x000851A1 File Offset: 0x000833A1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtSchm_ObjList1Row(DataSetGES.tSchm_ObjList1Row row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001310 RID: 4880 RVA: 0x000851B0 File Offset: 0x000833B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjList1Row AddtSchm_ObjList1Row(string Name, int TypeCodeId, int IdParent, bool OnOff, int Location, bool Deleted, int NameP, int idParentAddl, int idGroup)
            {
                DataSetGES.tSchm_ObjList1Row tSchm_ObjList1Row = (DataSetGES.tSchm_ObjList1Row)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    Name,
                    TypeCodeId,
                    IdParent,
                    OnOff,
                    Location,
                    Deleted,
                    NameP,
                    idParentAddl,
                    idGroup
                };
                tSchm_ObjList1Row.ItemArray = itemArray;
                base.Rows.Add(tSchm_ObjList1Row);
                return tSchm_ObjList1Row;
            }

            // Token: 0x06001311 RID: 4881 RVA: 0x0008523C File Offset: 0x0008343C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjList1Row FindById(int Id)
            {
                return (DataSetGES.tSchm_ObjList1Row)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x06001312 RID: 4882 RVA: 0x0008526C File Offset: 0x0008346C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjList1DataTable tSchm_ObjList1DataTable = (DataSetGES.tSchm_ObjList1DataTable)base.Clone();
                tSchm_ObjList1DataTable.InitVars();
                return tSchm_ObjList1DataTable;
            }

            // Token: 0x06001313 RID: 4883 RVA: 0x0008528C File Offset: 0x0008348C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjList1DataTable();
            }

            // Token: 0x06001314 RID: 4884 RVA: 0x00085294 File Offset: 0x00083494
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnOnOff = base.Columns["OnOff"];
                this.columnLocation = base.Columns["Location"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnNameP = base.Columns["NameP"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
                this.columnidGroup = base.Columns["idGroup"];
            }

            // Token: 0x06001315 RID: 4885 RVA: 0x00085380 File Offset: 0x00083580
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnOnOff = new DataColumn("OnOff", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnOnOff);
                this.columnLocation = new DataColumn("Location", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnNameP = new DataColumn("NameP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNameP);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 512;
                this.columnDeleted.AllowDBNull = false;
                this.columnNameP.ReadOnly = true;
            }

            // Token: 0x06001316 RID: 4886 RVA: 0x000855E8 File Offset: 0x000837E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList1Row NewtSchm_ObjList1Row()
            {
                return (DataSetGES.tSchm_ObjList1Row)base.NewRow();
            }

            // Token: 0x06001317 RID: 4887 RVA: 0x000855F5 File Offset: 0x000837F5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tSchm_ObjList1Row(builder);
            }

            // Token: 0x06001318 RID: 4888 RVA: 0x000855FD File Offset: 0x000837FD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tSchm_ObjList1Row);
            }

            // Token: 0x06001319 RID: 4889 RVA: 0x00085609 File Offset: 0x00083809
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tSchm_ObjList1RowChanged != null)
                {
                    this.tSchm_ObjList1RowChanged(this, new DataSetGES.tSchm_ObjList1RowChangeEvent((DataSetGES.tSchm_ObjList1Row)e.Row, e.Action));
                }
            }

            // Token: 0x0600131A RID: 4890 RVA: 0x0008563C File Offset: 0x0008383C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tSchm_ObjList1RowChanging != null)
                {
                    this.tSchm_ObjList1RowChanging(this, new DataSetGES.tSchm_ObjList1RowChangeEvent((DataSetGES.tSchm_ObjList1Row)e.Row, e.Action));
                }
            }

            // Token: 0x0600131B RID: 4891 RVA: 0x0008566F File Offset: 0x0008386F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tSchm_ObjList1RowDeleted != null)
                {
                    this.tSchm_ObjList1RowDeleted(this, new DataSetGES.tSchm_ObjList1RowChangeEvent((DataSetGES.tSchm_ObjList1Row)e.Row, e.Action));
                }
            }

            // Token: 0x0600131C RID: 4892 RVA: 0x000856A2 File Offset: 0x000838A2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tSchm_ObjList1RowDeleting != null)
                {
                    this.tSchm_ObjList1RowDeleting(this, new DataSetGES.tSchm_ObjList1RowChangeEvent((DataSetGES.tSchm_ObjList1Row)e.Row, e.Action));
                }
            }

            // Token: 0x0600131D RID: 4893 RVA: 0x000856D5 File Offset: 0x000838D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetSchm_ObjList1Row(DataSetGES.tSchm_ObjList1Row row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600131E RID: 4894 RVA: 0x000856E4 File Offset: 0x000838E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tSchm_ObjList1DataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040009D0 RID: 2512
            private DataColumn columnId;

            // Token: 0x040009D1 RID: 2513
            private DataColumn columnName;

            // Token: 0x040009D2 RID: 2514
            private DataColumn columnTypeCodeId;

            // Token: 0x040009D3 RID: 2515
            private DataColumn columnIdParent;

            // Token: 0x040009D4 RID: 2516
            private DataColumn columnOnOff;

            // Token: 0x040009D5 RID: 2517
            private DataColumn columnLocation;

            // Token: 0x040009D6 RID: 2518
            private DataColumn columnDeleted;

            // Token: 0x040009D7 RID: 2519
            private DataColumn columnNameP;

            // Token: 0x040009D8 RID: 2520
            private DataColumn columnidParentAddl;

            // Token: 0x040009D9 RID: 2521
            private DataColumn columnidGroup;
        }

        // Token: 0x02000107 RID: 263
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_TransfBySubstationDataTable : TypedTableBase<DataSetGES.vJ_TransfBySubstationRow>
        {
            // Token: 0x0600131F RID: 4895 RVA: 0x000858DC File Offset: 0x00083ADC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_TransfBySubstationDataTable()
            {
                base.TableName = "vJ_TransfBySubstation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001320 RID: 4896 RVA: 0x00085904 File Offset: 0x00083B04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_TransfBySubstationDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001321 RID: 4897 RVA: 0x000859AC File Offset: 0x00083BAC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_TransfBySubstationDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000480 RID: 1152
            // (get) Token: 0x06001322 RID: 4898 RVA: 0x000859BC File Offset: 0x00083BBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameSSColumn
            {
                get
                {
                    return this.columnNameSS;
                }
            }

            // Token: 0x17000481 RID: 1153
            // (get) Token: 0x06001323 RID: 4899 RVA: 0x000859C4 File Offset: 0x00083BC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x17000482 RID: 1154
            // (get) Token: 0x06001324 RID: 4900 RVA: 0x000859CC File Offset: 0x00083BCC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x17000483 RID: 1155
            // (get) Token: 0x06001325 RID: 4901 RVA: 0x000859D4 File Offset: 0x00083BD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x17000484 RID: 1156
            // (get) Token: 0x06001326 RID: 4902 RVA: 0x000859DC File Offset: 0x00083BDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSSColumn
            {
                get
                {
                    return this.columnidSS;
                }
            }

            // Token: 0x17000485 RID: 1157
            // (get) Token: 0x06001327 RID: 4903 RVA: 0x000859E4 File Offset: 0x00083BE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x17000486 RID: 1158
            // (get) Token: 0x06001328 RID: 4904 RVA: 0x000859EC File Offset: 0x00083BEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x17000487 RID: 1159
            // (get) Token: 0x06001329 RID: 4905 RVA: 0x000859F4 File Offset: 0x00083BF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000488 RID: 1160
            // (get) Token: 0x0600132A RID: 4906 RVA: 0x000859FC File Offset: 0x00083BFC
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000489 RID: 1161
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_TransfBySubstationRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_TransfBySubstationRow)base.Rows[index];
                }
            }

            // Token: 0x14000135 RID: 309
            // (add) Token: 0x0600132C RID: 4908 RVA: 0x00085A1C File Offset: 0x00083C1C
            // (remove) Token: 0x0600132D RID: 4909 RVA: 0x00085A54 File Offset: 0x00083C54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfBySubstationRowChangeEventHandler vJ_TransfBySubstationRowChanging;

            // Token: 0x14000136 RID: 310
            // (add) Token: 0x0600132E RID: 4910 RVA: 0x00085A8C File Offset: 0x00083C8C
            // (remove) Token: 0x0600132F RID: 4911 RVA: 0x00085AC4 File Offset: 0x00083CC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfBySubstationRowChangeEventHandler vJ_TransfBySubstationRowChanged;

            // Token: 0x14000137 RID: 311
            // (add) Token: 0x06001330 RID: 4912 RVA: 0x00085AFC File Offset: 0x00083CFC
            // (remove) Token: 0x06001331 RID: 4913 RVA: 0x00085B34 File Offset: 0x00083D34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfBySubstationRowChangeEventHandler vJ_TransfBySubstationRowDeleting;

            // Token: 0x14000138 RID: 312
            // (add) Token: 0x06001332 RID: 4914 RVA: 0x00085B6C File Offset: 0x00083D6C
            // (remove) Token: 0x06001333 RID: 4915 RVA: 0x00085BA4 File Offset: 0x00083DA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfBySubstationRowChangeEventHandler vJ_TransfBySubstationRowDeleted;

            // Token: 0x06001334 RID: 4916 RVA: 0x00085BD9 File Offset: 0x00083DD9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_TransfBySubstationRow(DataSetGES.vJ_TransfBySubstationRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001335 RID: 4917 RVA: 0x00085BE8 File Offset: 0x00083DE8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_TransfBySubstationRow AddvJ_TransfBySubstationRow(string NameSS, string NameBus, string NameCell, string NameTransf, int idSS, int idBus, int idCell, int idTransf)
            {
                DataSetGES.vJ_TransfBySubstationRow vJ_TransfBySubstationRow = (DataSetGES.vJ_TransfBySubstationRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    NameSS,
                    NameBus,
                    NameCell,
                    NameTransf,
                    idSS,
                    idBus,
                    idCell,
                    idTransf
                };
                vJ_TransfBySubstationRow.ItemArray = itemArray;
                base.Rows.Add(vJ_TransfBySubstationRow);
                return vJ_TransfBySubstationRow;
            }

            // Token: 0x06001336 RID: 4918 RVA: 0x00085C58 File Offset: 0x00083E58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_TransfBySubstationDataTable vJ_TransfBySubstationDataTable = (DataSetGES.vJ_TransfBySubstationDataTable)base.Clone();
                vJ_TransfBySubstationDataTable.InitVars();
                return vJ_TransfBySubstationDataTable;
            }

            // Token: 0x06001337 RID: 4919 RVA: 0x00085C78 File Offset: 0x00083E78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_TransfBySubstationDataTable();
            }

            // Token: 0x06001338 RID: 4920 RVA: 0x00085C80 File Offset: 0x00083E80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnNameSS = base.Columns["NameSS"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnidSS = base.Columns["idSS"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidCell = base.Columns["idCell"];
                this.columnidTransf = base.Columns["idTransf"];
            }

            // Token: 0x06001339 RID: 4921 RVA: 0x00085D40 File Offset: 0x00083F40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnNameSS = new DataColumn("NameSS", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSS);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnidSS = new DataColumn("idSS", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSS);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameSS.MaxLength = 563;
                this.columnNameBus.MaxLength = 512;
                this.columnNameCell.MaxLength = 512;
                this.columnNameTransf.MaxLength = 512;
                this.columnidSS.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnidCell.AllowDBNull = false;
            }

            // Token: 0x0600133A RID: 4922 RVA: 0x00085F19 File Offset: 0x00084119
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_TransfBySubstationRow NewvJ_TransfBySubstationRow()
            {
                return (DataSetGES.vJ_TransfBySubstationRow)base.NewRow();
            }

            // Token: 0x0600133B RID: 4923 RVA: 0x00085F26 File Offset: 0x00084126
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_TransfBySubstationRow(builder);
            }

            // Token: 0x0600133C RID: 4924 RVA: 0x00085F2E File Offset: 0x0008412E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_TransfBySubstationRow);
            }

            // Token: 0x0600133D RID: 4925 RVA: 0x00085F3A File Offset: 0x0008413A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_TransfBySubstationRowChanged != null)
                {
                    this.vJ_TransfBySubstationRowChanged(this, new DataSetGES.vJ_TransfBySubstationRowChangeEvent((DataSetGES.vJ_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600133E RID: 4926 RVA: 0x00085F6D File Offset: 0x0008416D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_TransfBySubstationRowChanging != null)
                {
                    this.vJ_TransfBySubstationRowChanging(this, new DataSetGES.vJ_TransfBySubstationRowChangeEvent((DataSetGES.vJ_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600133F RID: 4927 RVA: 0x00085FA0 File Offset: 0x000841A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_TransfBySubstationRowDeleted != null)
                {
                    this.vJ_TransfBySubstationRowDeleted(this, new DataSetGES.vJ_TransfBySubstationRowChangeEvent((DataSetGES.vJ_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001340 RID: 4928 RVA: 0x00085FD3 File Offset: 0x000841D3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_TransfBySubstationRowDeleting != null)
                {
                    this.vJ_TransfBySubstationRowDeleting(this, new DataSetGES.vJ_TransfBySubstationRowChangeEvent((DataSetGES.vJ_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001341 RID: 4929 RVA: 0x00086006 File Offset: 0x00084206
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_TransfBySubstationRow(DataSetGES.vJ_TransfBySubstationRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001342 RID: 4930 RVA: 0x00086014 File Offset: 0x00084214
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_TransfBySubstationDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040009DE RID: 2526
            private DataColumn columnNameSS;

            // Token: 0x040009DF RID: 2527
            private DataColumn columnNameBus;

            // Token: 0x040009E0 RID: 2528
            private DataColumn columnNameCell;

            // Token: 0x040009E1 RID: 2529
            private DataColumn columnNameTransf;

            // Token: 0x040009E2 RID: 2530
            private DataColumn columnidSS;

            // Token: 0x040009E3 RID: 2531
            private DataColumn columnidBus;

            // Token: 0x040009E4 RID: 2532
            private DataColumn columnidCell;

            // Token: 0x040009E5 RID: 2533
            private DataColumn columnidTransf;
        }

        // Token: 0x02000108 RID: 264
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_PowerISR_TransfDataTable : TypedTableBase<DataSetGES.vJ_PowerISR_TransfRow>
        {
            // Token: 0x06001343 RID: 4931 RVA: 0x0008620C File Offset: 0x0008440C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_PowerISR_TransfDataTable()
            {
                base.TableName = "vJ_PowerISR_Transf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001344 RID: 4932 RVA: 0x00086234 File Offset: 0x00084434
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_PowerISR_TransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001345 RID: 4933 RVA: 0x000862DC File Offset: 0x000844DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_PowerISR_TransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700048A RID: 1162
            // (get) Token: 0x06001346 RID: 4934 RVA: 0x000862EC File Offset: 0x000844EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x1700048B RID: 1163
            // (get) Token: 0x06001347 RID: 4935 RVA: 0x000862F4 File Offset: 0x000844F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x1700048C RID: 1164
            // (get) Token: 0x06001348 RID: 4936 RVA: 0x000862FC File Offset: 0x000844FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrColumn
            {
                get
                {
                    return this.columnIsr;
                }
            }

            // Token: 0x1700048D RID: 1165
            // (get) Token: 0x06001349 RID: 4937 RVA: 0x00086304 File Offset: 0x00084504
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700048E RID: 1166
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_PowerISR_TransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_PowerISR_TransfRow)base.Rows[index];
                }
            }

            // Token: 0x14000139 RID: 313
            // (add) Token: 0x0600134B RID: 4939 RVA: 0x00086324 File Offset: 0x00084524
            // (remove) Token: 0x0600134C RID: 4940 RVA: 0x0008635C File Offset: 0x0008455C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_TransfRowChangeEventHandler vJ_PowerISR_TransfRowChanging;

            // Token: 0x1400013A RID: 314
            // (add) Token: 0x0600134D RID: 4941 RVA: 0x00086394 File Offset: 0x00084594
            // (remove) Token: 0x0600134E RID: 4942 RVA: 0x000863CC File Offset: 0x000845CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_TransfRowChangeEventHandler vJ_PowerISR_TransfRowChanged;

            // Token: 0x1400013B RID: 315
            // (add) Token: 0x0600134F RID: 4943 RVA: 0x00086404 File Offset: 0x00084604
            // (remove) Token: 0x06001350 RID: 4944 RVA: 0x0008643C File Offset: 0x0008463C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_TransfRowChangeEventHandler vJ_PowerISR_TransfRowDeleting;

            // Token: 0x1400013C RID: 316
            // (add) Token: 0x06001351 RID: 4945 RVA: 0x00086474 File Offset: 0x00084674
            // (remove) Token: 0x06001352 RID: 4946 RVA: 0x000864AC File Offset: 0x000846AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_TransfRowChangeEventHandler vJ_PowerISR_TransfRowDeleted;

            // Token: 0x06001353 RID: 4947 RVA: 0x000864E1 File Offset: 0x000846E1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_PowerISR_TransfRow(DataSetGES.vJ_PowerISR_TransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001354 RID: 4948 RVA: 0x000864F0 File Offset: 0x000846F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_PowerISR_TransfRow AddvJ_PowerISR_TransfRow(int idTransf, int Power, int Isr)
            {
                DataSetGES.vJ_PowerISR_TransfRow vJ_PowerISR_TransfRow = (DataSetGES.vJ_PowerISR_TransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idTransf,
                    Power,
                    Isr
                };
                vJ_PowerISR_TransfRow.ItemArray = itemArray;
                base.Rows.Add(vJ_PowerISR_TransfRow);
                return vJ_PowerISR_TransfRow;
            }

            // Token: 0x06001355 RID: 4949 RVA: 0x00086544 File Offset: 0x00084744
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_PowerISR_TransfDataTable vJ_PowerISR_TransfDataTable = (DataSetGES.vJ_PowerISR_TransfDataTable)base.Clone();
                vJ_PowerISR_TransfDataTable.InitVars();
                return vJ_PowerISR_TransfDataTable;
            }

            // Token: 0x06001356 RID: 4950 RVA: 0x00086564 File Offset: 0x00084764
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_PowerISR_TransfDataTable();
            }

            // Token: 0x06001357 RID: 4951 RVA: 0x0008656C File Offset: 0x0008476C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidTransf = base.Columns["idTransf"];
                this.columnPower = base.Columns["Power"];
                this.columnIsr = base.Columns["Isr"];
            }

            // Token: 0x06001358 RID: 4952 RVA: 0x000865BC File Offset: 0x000847BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnIsr = new DataColumn("Isr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsr);
                this.columnidTransf.AllowDBNull = false;
                this.columnIsr.ReadOnly = true;
            }

            // Token: 0x06001359 RID: 4953 RVA: 0x00086668 File Offset: 0x00084868
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_PowerISR_TransfRow NewvJ_PowerISR_TransfRow()
            {
                return (DataSetGES.vJ_PowerISR_TransfRow)base.NewRow();
            }

            // Token: 0x0600135A RID: 4954 RVA: 0x00086675 File Offset: 0x00084875
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_PowerISR_TransfRow(builder);
            }

            // Token: 0x0600135B RID: 4955 RVA: 0x0008667D File Offset: 0x0008487D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_PowerISR_TransfRow);
            }

            // Token: 0x0600135C RID: 4956 RVA: 0x00086689 File Offset: 0x00084889
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_PowerISR_TransfRowChanged != null)
                {
                    this.vJ_PowerISR_TransfRowChanged(this, new DataSetGES.vJ_PowerISR_TransfRowChangeEvent((DataSetGES.vJ_PowerISR_TransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600135D RID: 4957 RVA: 0x000866BC File Offset: 0x000848BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_PowerISR_TransfRowChanging != null)
                {
                    this.vJ_PowerISR_TransfRowChanging(this, new DataSetGES.vJ_PowerISR_TransfRowChangeEvent((DataSetGES.vJ_PowerISR_TransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600135E RID: 4958 RVA: 0x000866EF File Offset: 0x000848EF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_PowerISR_TransfRowDeleted != null)
                {
                    this.vJ_PowerISR_TransfRowDeleted(this, new DataSetGES.vJ_PowerISR_TransfRowChangeEvent((DataSetGES.vJ_PowerISR_TransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600135F RID: 4959 RVA: 0x00086722 File Offset: 0x00084922
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_PowerISR_TransfRowDeleting != null)
                {
                    this.vJ_PowerISR_TransfRowDeleting(this, new DataSetGES.vJ_PowerISR_TransfRowChangeEvent((DataSetGES.vJ_PowerISR_TransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001360 RID: 4960 RVA: 0x00086755 File Offset: 0x00084955
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_PowerISR_TransfRow(DataSetGES.vJ_PowerISR_TransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001361 RID: 4961 RVA: 0x00086764 File Offset: 0x00084964
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_PowerISR_TransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040009EA RID: 2538
            private DataColumn columnidTransf;

            // Token: 0x040009EB RID: 2539
            private DataColumn columnPower;

            // Token: 0x040009EC RID: 2540
            private DataColumn columnIsr;
        }

        // Token: 0x02000109 RID: 265
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_PowerISR_SSTransfDataTable : TypedTableBase<DataSetGES.vJ_PowerISR_SSTransfRow>
        {
            // Token: 0x06001362 RID: 4962 RVA: 0x0008695C File Offset: 0x00084B5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_PowerISR_SSTransfDataTable()
            {
                base.TableName = "vJ_PowerISR_SSTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001363 RID: 4963 RVA: 0x00086984 File Offset: 0x00084B84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_PowerISR_SSTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001364 RID: 4964 RVA: 0x00086A2C File Offset: 0x00084C2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_PowerISR_SSTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700048F RID: 1167
            // (get) Token: 0x06001365 RID: 4965 RVA: 0x00086A3C File Offset: 0x00084C3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            // Token: 0x17000490 RID: 1168
            // (get) Token: 0x06001366 RID: 4966 RVA: 0x00086A44 File Offset: 0x00084C44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubColumn
            {
                get
                {
                    return this.columnNameSub;
                }
            }

            // Token: 0x17000491 RID: 1169
            // (get) Token: 0x06001367 RID: 4967 RVA: 0x00086A4C File Offset: 0x00084C4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000492 RID: 1170
            // (get) Token: 0x06001368 RID: 4968 RVA: 0x00086A54 File Offset: 0x00084C54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x17000493 RID: 1171
            // (get) Token: 0x06001369 RID: 4969 RVA: 0x00086A5C File Offset: 0x00084C5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x17000494 RID: 1172
            // (get) Token: 0x0600136A RID: 4970 RVA: 0x00086A64 File Offset: 0x00084C64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsrColumn
            {
                get
                {
                    return this.columnIsr;
                }
            }

            // Token: 0x17000495 RID: 1173
            // (get) Token: 0x0600136B RID: 4971 RVA: 0x00086A6C File Offset: 0x00084C6C
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000496 RID: 1174
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_PowerISR_SSTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_PowerISR_SSTransfRow)base.Rows[index];
                }
            }

            // Token: 0x1400013D RID: 317
            // (add) Token: 0x0600136D RID: 4973 RVA: 0x00086A8C File Offset: 0x00084C8C
            // (remove) Token: 0x0600136E RID: 4974 RVA: 0x00086AC4 File Offset: 0x00084CC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSTransfRowChangeEventHandler vJ_PowerISR_SSTransfRowChanging;

            // Token: 0x1400013E RID: 318
            // (add) Token: 0x0600136F RID: 4975 RVA: 0x00086AFC File Offset: 0x00084CFC
            // (remove) Token: 0x06001370 RID: 4976 RVA: 0x00086B34 File Offset: 0x00084D34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSTransfRowChangeEventHandler vJ_PowerISR_SSTransfRowChanged;

            // Token: 0x1400013F RID: 319
            // (add) Token: 0x06001371 RID: 4977 RVA: 0x00086B6C File Offset: 0x00084D6C
            // (remove) Token: 0x06001372 RID: 4978 RVA: 0x00086BA4 File Offset: 0x00084DA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSTransfRowChangeEventHandler vJ_PowerISR_SSTransfRowDeleting;

            // Token: 0x14000140 RID: 320
            // (add) Token: 0x06001373 RID: 4979 RVA: 0x00086BDC File Offset: 0x00084DDC
            // (remove) Token: 0x06001374 RID: 4980 RVA: 0x00086C14 File Offset: 0x00084E14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSTransfRowChangeEventHandler vJ_PowerISR_SSTransfRowDeleted;

            // Token: 0x06001375 RID: 4981 RVA: 0x00086C49 File Offset: 0x00084E49
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_PowerISR_SSTransfRow(DataSetGES.vJ_PowerISR_SSTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001376 RID: 4982 RVA: 0x00086C58 File Offset: 0x00084E58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_PowerISR_SSTransfRow AddvJ_PowerISR_SSTransfRow(int idSub, string NameSub, int idTransf, string NameTransf, int Power, int Isr)
            {
                DataSetGES.vJ_PowerISR_SSTransfRow vJ_PowerISR_SSTransfRow = (DataSetGES.vJ_PowerISR_SSTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idSub,
                    NameSub,
                    idTransf,
                    NameTransf,
                    Power,
                    Isr
                };
                vJ_PowerISR_SSTransfRow.ItemArray = itemArray;
                base.Rows.Add(vJ_PowerISR_SSTransfRow);
                return vJ_PowerISR_SSTransfRow;
            }

            // Token: 0x06001377 RID: 4983 RVA: 0x00086CC0 File Offset: 0x00084EC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_PowerISR_SSTransfDataTable vJ_PowerISR_SSTransfDataTable = (DataSetGES.vJ_PowerISR_SSTransfDataTable)base.Clone();
                vJ_PowerISR_SSTransfDataTable.InitVars();
                return vJ_PowerISR_SSTransfDataTable;
            }

            // Token: 0x06001378 RID: 4984 RVA: 0x00086CE0 File Offset: 0x00084EE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_PowerISR_SSTransfDataTable();
            }

            // Token: 0x06001379 RID: 4985 RVA: 0x00086CE8 File Offset: 0x00084EE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidSub = base.Columns["idSub"];
                this.columnNameSub = base.Columns["NameSub"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnPower = base.Columns["Power"];
                this.columnIsr = base.Columns["Isr"];
            }

            // Token: 0x0600137A RID: 4986 RVA: 0x00086D7C File Offset: 0x00084F7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnNameSub = new DataColumn("NameSub", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSub);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnPower = new DataColumn("Power", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnIsr = new DataColumn("Isr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsr);
                this.columnidSub.AllowDBNull = false;
                this.columnNameSub.MaxLength = 563;
                this.columnNameTransf.MaxLength = 512;
                this.columnIsr.ReadOnly = true;
            }

            // Token: 0x0600137B RID: 4987 RVA: 0x00086ECF File Offset: 0x000850CF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_PowerISR_SSTransfRow NewvJ_PowerISR_SSTransfRow()
            {
                return (DataSetGES.vJ_PowerISR_SSTransfRow)base.NewRow();
            }

            // Token: 0x0600137C RID: 4988 RVA: 0x00086EDC File Offset: 0x000850DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_PowerISR_SSTransfRow(builder);
            }

            // Token: 0x0600137D RID: 4989 RVA: 0x00086EE4 File Offset: 0x000850E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_PowerISR_SSTransfRow);
            }

            // Token: 0x0600137E RID: 4990 RVA: 0x00086EF0 File Offset: 0x000850F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_PowerISR_SSTransfRowChanged != null)
                {
                    this.vJ_PowerISR_SSTransfRowChanged(this, new DataSetGES.vJ_PowerISR_SSTransfRowChangeEvent((DataSetGES.vJ_PowerISR_SSTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600137F RID: 4991 RVA: 0x00086F23 File Offset: 0x00085123
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_PowerISR_SSTransfRowChanging != null)
                {
                    this.vJ_PowerISR_SSTransfRowChanging(this, new DataSetGES.vJ_PowerISR_SSTransfRowChangeEvent((DataSetGES.vJ_PowerISR_SSTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001380 RID: 4992 RVA: 0x00086F56 File Offset: 0x00085156
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_PowerISR_SSTransfRowDeleted != null)
                {
                    this.vJ_PowerISR_SSTransfRowDeleted(this, new DataSetGES.vJ_PowerISR_SSTransfRowChangeEvent((DataSetGES.vJ_PowerISR_SSTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001381 RID: 4993 RVA: 0x00086F89 File Offset: 0x00085189
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_PowerISR_SSTransfRowDeleting != null)
                {
                    this.vJ_PowerISR_SSTransfRowDeleting(this, new DataSetGES.vJ_PowerISR_SSTransfRowChangeEvent((DataSetGES.vJ_PowerISR_SSTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001382 RID: 4994 RVA: 0x00086FBC File Offset: 0x000851BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_PowerISR_SSTransfRow(DataSetGES.vJ_PowerISR_SSTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001383 RID: 4995 RVA: 0x00086FCC File Offset: 0x000851CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_PowerISR_SSTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040009F1 RID: 2545
            private DataColumn columnidSub;

            // Token: 0x040009F2 RID: 2546
            private DataColumn columnNameSub;

            // Token: 0x040009F3 RID: 2547
            private DataColumn columnidTransf;

            // Token: 0x040009F4 RID: 2548
            private DataColumn columnNameTransf;

            // Token: 0x040009F5 RID: 2549
            private DataColumn columnPower;

            // Token: 0x040009F6 RID: 2550
            private DataColumn columnIsr;
        }

        // Token: 0x0200010A RID: 266
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtAmountFreeCapasityDataTable : TypedTableBase<DataSetGES.dtAmountFreeCapasityRow>
        {
            // Token: 0x06001384 RID: 4996 RVA: 0x000871C4 File Offset: 0x000853C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtAmountFreeCapasityDataTable()
            {
                base.TableName = "dtAmountFreeCapasity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001385 RID: 4997 RVA: 0x000871EC File Offset: 0x000853EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtAmountFreeCapasityDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001386 RID: 4998 RVA: 0x00087294 File Offset: 0x00085494
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtAmountFreeCapasityDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000497 RID: 1175
            // (get) Token: 0x06001387 RID: 4999 RVA: 0x000872A4 File Offset: 0x000854A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameSubstationColumn
            {
                get
                {
                    return this.columnNameSubstation;
                }
            }

            // Token: 0x17000498 RID: 1176
            // (get) Token: 0x06001388 RID: 5000 RVA: 0x000872AC File Offset: 0x000854AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x17000499 RID: 1177
            // (get) Token: 0x06001389 RID: 5001 RVA: 0x000872B4 File Offset: 0x000854B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AmountFreeCapasityColumn
            {
                get
                {
                    return this.columnAmountFreeCapasity;
                }
            }

            // Token: 0x1700049A RID: 1178
            // (get) Token: 0x0600138A RID: 5002 RVA: 0x000872BC File Offset: 0x000854BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700049B RID: 1179
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtAmountFreeCapasityRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtAmountFreeCapasityRow)base.Rows[index];
                }
            }

            // Token: 0x14000141 RID: 321
            // (add) Token: 0x0600138C RID: 5004 RVA: 0x000872DC File Offset: 0x000854DC
            // (remove) Token: 0x0600138D RID: 5005 RVA: 0x00087314 File Offset: 0x00085514
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtAmountFreeCapasityRowChangeEventHandler dtAmountFreeCapasityRowChanging;

            // Token: 0x14000142 RID: 322
            // (add) Token: 0x0600138E RID: 5006 RVA: 0x0008734C File Offset: 0x0008554C
            // (remove) Token: 0x0600138F RID: 5007 RVA: 0x00087384 File Offset: 0x00085584
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtAmountFreeCapasityRowChangeEventHandler dtAmountFreeCapasityRowChanged;

            // Token: 0x14000143 RID: 323
            // (add) Token: 0x06001390 RID: 5008 RVA: 0x000873BC File Offset: 0x000855BC
            // (remove) Token: 0x06001391 RID: 5009 RVA: 0x000873F4 File Offset: 0x000855F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtAmountFreeCapasityRowChangeEventHandler dtAmountFreeCapasityRowDeleting;

            // Token: 0x14000144 RID: 324
            // (add) Token: 0x06001392 RID: 5010 RVA: 0x0008742C File Offset: 0x0008562C
            // (remove) Token: 0x06001393 RID: 5011 RVA: 0x00087464 File Offset: 0x00085664
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtAmountFreeCapasityRowChangeEventHandler dtAmountFreeCapasityRowDeleted;

            // Token: 0x06001394 RID: 5012 RVA: 0x00087499 File Offset: 0x00085699
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AdddtAmountFreeCapasityRow(DataSetGES.dtAmountFreeCapasityRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001395 RID: 5013 RVA: 0x000874A8 File Offset: 0x000856A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtAmountFreeCapasityRow AdddtAmountFreeCapasityRow(string NameSubstation, string NameBus, string AmountFreeCapasity)
            {
                DataSetGES.dtAmountFreeCapasityRow dtAmountFreeCapasityRow = (DataSetGES.dtAmountFreeCapasityRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    NameSubstation,
                    NameBus,
                    AmountFreeCapasity
                };
                dtAmountFreeCapasityRow.ItemArray = itemArray;
                base.Rows.Add(dtAmountFreeCapasityRow);
                return dtAmountFreeCapasityRow;
            }

            // Token: 0x06001396 RID: 5014 RVA: 0x000874EC File Offset: 0x000856EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.dtAmountFreeCapasityDataTable dtAmountFreeCapasityDataTable = (DataSetGES.dtAmountFreeCapasityDataTable)base.Clone();
                dtAmountFreeCapasityDataTable.InitVars();
                return dtAmountFreeCapasityDataTable;
            }

            // Token: 0x06001397 RID: 5015 RVA: 0x0008750C File Offset: 0x0008570C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtAmountFreeCapasityDataTable();
            }

            // Token: 0x06001398 RID: 5016 RVA: 0x00087514 File Offset: 0x00085714
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnNameSubstation = base.Columns["NameSubstation"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnAmountFreeCapasity = base.Columns["AmountFreeCapasity"];
            }

            // Token: 0x06001399 RID: 5017 RVA: 0x00087564 File Offset: 0x00085764
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnNameSubstation = new DataColumn("NameSubstation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSubstation);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnAmountFreeCapasity = new DataColumn("AmountFreeCapasity", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAmountFreeCapasity);
            }

            // Token: 0x0600139A RID: 5018 RVA: 0x000875F8 File Offset: 0x000857F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtAmountFreeCapasityRow NewdtAmountFreeCapasityRow()
            {
                return (DataSetGES.dtAmountFreeCapasityRow)base.NewRow();
            }

            // Token: 0x0600139B RID: 5019 RVA: 0x00087605 File Offset: 0x00085805
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtAmountFreeCapasityRow(builder);
            }

            // Token: 0x0600139C RID: 5020 RVA: 0x0008760D File Offset: 0x0008580D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtAmountFreeCapasityRow);
            }

            // Token: 0x0600139D RID: 5021 RVA: 0x00087619 File Offset: 0x00085819
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtAmountFreeCapasityRowChanged != null)
                {
                    this.dtAmountFreeCapasityRowChanged(this, new DataSetGES.dtAmountFreeCapasityRowChangeEvent((DataSetGES.dtAmountFreeCapasityRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600139E RID: 5022 RVA: 0x0008764C File Offset: 0x0008584C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtAmountFreeCapasityRowChanging != null)
                {
                    this.dtAmountFreeCapasityRowChanging(this, new DataSetGES.dtAmountFreeCapasityRowChangeEvent((DataSetGES.dtAmountFreeCapasityRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600139F RID: 5023 RVA: 0x0008767F File Offset: 0x0008587F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtAmountFreeCapasityRowDeleted != null)
                {
                    this.dtAmountFreeCapasityRowDeleted(this, new DataSetGES.dtAmountFreeCapasityRowChangeEvent((DataSetGES.dtAmountFreeCapasityRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013A0 RID: 5024 RVA: 0x000876B2 File Offset: 0x000858B2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtAmountFreeCapasityRowDeleting != null)
                {
                    this.dtAmountFreeCapasityRowDeleting(this, new DataSetGES.dtAmountFreeCapasityRowChangeEvent((DataSetGES.dtAmountFreeCapasityRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013A1 RID: 5025 RVA: 0x000876E5 File Offset: 0x000858E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovedtAmountFreeCapasityRow(DataSetGES.dtAmountFreeCapasityRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060013A2 RID: 5026 RVA: 0x000876F4 File Offset: 0x000858F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtAmountFreeCapasityDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x040009FB RID: 2555
            private DataColumn columnNameSubstation;

            // Token: 0x040009FC RID: 2556
            private DataColumn columnNameBus;

            // Token: 0x040009FD RID: 2557
            private DataColumn columnAmountFreeCapasity;
        }

        // Token: 0x0200010B RID: 267
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_GetCellTransfByBusHVDataTable : TypedTableBase<DataSetGES.fn_J_GetCellTransfByBusHVRow>
        {
            // Token: 0x060013A3 RID: 5027 RVA: 0x000878EC File Offset: 0x00085AEC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetCellTransfByBusHVDataTable()
            {
                base.TableName = "fn_J_GetCellTransfByBusHV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060013A4 RID: 5028 RVA: 0x00087914 File Offset: 0x00085B14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetCellTransfByBusHVDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060013A5 RID: 5029 RVA: 0x000879BC File Offset: 0x00085BBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetCellTransfByBusHVDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700049C RID: 1180
            // (get) Token: 0x060013A6 RID: 5030 RVA: 0x000879CC File Offset: 0x00085BCC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdBusColumn
            {
                get
                {
                    return this.columnIdBus;
                }
            }

            // Token: 0x1700049D RID: 1181
            // (get) Token: 0x060013A7 RID: 5031 RVA: 0x000879D4 File Offset: 0x00085BD4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x1700049E RID: 1182
            // (get) Token: 0x060013A8 RID: 5032 RVA: 0x000879DC File Offset: 0x00085BDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdCellColumn
            {
                get
                {
                    return this.columnIdCell;
                }
            }

            // Token: 0x1700049F RID: 1183
            // (get) Token: 0x060013A9 RID: 5033 RVA: 0x000879E4 File Offset: 0x00085BE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x170004A0 RID: 1184
            // (get) Token: 0x060013AA RID: 5034 RVA: 0x000879EC File Offset: 0x00085BEC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdTransfColumn
            {
                get
                {
                    return this.columnIdTransf;
                }
            }

            // Token: 0x170004A1 RID: 1185
            // (get) Token: 0x060013AB RID: 5035 RVA: 0x000879F4 File Offset: 0x00085BF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x170004A2 RID: 1186
            // (get) Token: 0x060013AC RID: 5036 RVA: 0x000879FC File Offset: 0x00085BFC
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004A3 RID: 1187
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellTransfByBusHVRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_GetCellTransfByBusHVRow)base.Rows[index];
                }
            }

            // Token: 0x14000145 RID: 325
            // (add) Token: 0x060013AE RID: 5038 RVA: 0x00087A1C File Offset: 0x00085C1C
            // (remove) Token: 0x060013AF RID: 5039 RVA: 0x00087A54 File Offset: 0x00085C54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEventHandler fn_J_GetCellTransfByBusHVRowChanging;

            // Token: 0x14000146 RID: 326
            // (add) Token: 0x060013B0 RID: 5040 RVA: 0x00087A8C File Offset: 0x00085C8C
            // (remove) Token: 0x060013B1 RID: 5041 RVA: 0x00087AC4 File Offset: 0x00085CC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEventHandler fn_J_GetCellTransfByBusHVRowChanged;

            // Token: 0x14000147 RID: 327
            // (add) Token: 0x060013B2 RID: 5042 RVA: 0x00087AFC File Offset: 0x00085CFC
            // (remove) Token: 0x060013B3 RID: 5043 RVA: 0x00087B34 File Offset: 0x00085D34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEventHandler fn_J_GetCellTransfByBusHVRowDeleting;

            // Token: 0x14000148 RID: 328
            // (add) Token: 0x060013B4 RID: 5044 RVA: 0x00087B6C File Offset: 0x00085D6C
            // (remove) Token: 0x060013B5 RID: 5045 RVA: 0x00087BA4 File Offset: 0x00085DA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEventHandler fn_J_GetCellTransfByBusHVRowDeleted;

            // Token: 0x060013B6 RID: 5046 RVA: 0x00087BD9 File Offset: 0x00085DD9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfn_J_GetCellTransfByBusHVRow(DataSetGES.fn_J_GetCellTransfByBusHVRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060013B7 RID: 5047 RVA: 0x00087BE8 File Offset: 0x00085DE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellTransfByBusHVRow Addfn_J_GetCellTransfByBusHVRow(int IdBus, string NameBus, int IdCell, string NameCell, int IdTransf, string NameTransf)
            {
                DataSetGES.fn_J_GetCellTransfByBusHVRow fn_J_GetCellTransfByBusHVRow = (DataSetGES.fn_J_GetCellTransfByBusHVRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    IdBus,
                    NameBus,
                    IdCell,
                    NameCell,
                    IdTransf,
                    NameTransf
                };
                fn_J_GetCellTransfByBusHVRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_GetCellTransfByBusHVRow);
                return fn_J_GetCellTransfByBusHVRow;
            }

            // Token: 0x060013B8 RID: 5048 RVA: 0x00087C48 File Offset: 0x00085E48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetCellTransfByBusHVDataTable fn_J_GetCellTransfByBusHVDataTable = (DataSetGES.fn_J_GetCellTransfByBusHVDataTable)base.Clone();
                fn_J_GetCellTransfByBusHVDataTable.InitVars();
                return fn_J_GetCellTransfByBusHVDataTable;
            }

            // Token: 0x060013B9 RID: 5049 RVA: 0x00087C68 File Offset: 0x00085E68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetCellTransfByBusHVDataTable();
            }

            // Token: 0x060013BA RID: 5050 RVA: 0x00087C70 File Offset: 0x00085E70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnIdBus = base.Columns["IdBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnIdCell = base.Columns["IdCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnIdTransf = base.Columns["IdTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            // Token: 0x060013BB RID: 5051 RVA: 0x00087D04 File Offset: 0x00085F04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnIdBus = new DataColumn("IdBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnIdCell = new DataColumn("IdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnIdTransf = new DataColumn("IdTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBus.MaxLength = 512;
                this.columnNameCell.MaxLength = 512;
                this.columnNameTransf.MaxLength = 512;
            }

            // Token: 0x060013BC RID: 5052 RVA: 0x00087E4F File Offset: 0x0008604F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetCellTransfByBusHVRow Newfn_J_GetCellTransfByBusHVRow()
            {
                return (DataSetGES.fn_J_GetCellTransfByBusHVRow)base.NewRow();
            }

            // Token: 0x060013BD RID: 5053 RVA: 0x00087E5C File Offset: 0x0008605C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_GetCellTransfByBusHVRow(builder);
            }

            // Token: 0x060013BE RID: 5054 RVA: 0x00087E64 File Offset: 0x00086064
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_GetCellTransfByBusHVRow);
            }

            // Token: 0x060013BF RID: 5055 RVA: 0x00087E70 File Offset: 0x00086070
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_GetCellTransfByBusHVRowChanged != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowChanged(this, new DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusHVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013C0 RID: 5056 RVA: 0x00087EA3 File Offset: 0x000860A3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_GetCellTransfByBusHVRowChanging != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowChanging(this, new DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusHVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013C1 RID: 5057 RVA: 0x00087ED6 File Offset: 0x000860D6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_GetCellTransfByBusHVRowDeleted != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowDeleted(this, new DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusHVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013C2 RID: 5058 RVA: 0x00087F09 File Offset: 0x00086109
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_GetCellTransfByBusHVRowDeleting != null)
                {
                    this.fn_J_GetCellTransfByBusHVRowDeleting(this, new DataSetGES.fn_J_GetCellTransfByBusHVRowChangeEvent((DataSetGES.fn_J_GetCellTransfByBusHVRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013C3 RID: 5059 RVA: 0x00087F3C File Offset: 0x0008613C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Removefn_J_GetCellTransfByBusHVRow(DataSetGES.fn_J_GetCellTransfByBusHVRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060013C4 RID: 5060 RVA: 0x00087F4C File Offset: 0x0008614C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_GetCellTransfByBusHVDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A02 RID: 2562
            private DataColumn columnIdBus;

            // Token: 0x04000A03 RID: 2563
            private DataColumn columnNameBus;

            // Token: 0x04000A04 RID: 2564
            private DataColumn columnIdCell;

            // Token: 0x04000A05 RID: 2565
            private DataColumn columnNameCell;

            // Token: 0x04000A06 RID: 2566
            private DataColumn columnIdTransf;

            // Token: 0x04000A07 RID: 2567
            private DataColumn columnNameTransf;
        }

        // Token: 0x0200010C RID: 268
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_MeasCableDataTable : TypedTableBase<DataSetGES.tJ_MeasCableRow>
        {
            // Token: 0x060013C5 RID: 5061 RVA: 0x00088144 File Offset: 0x00086344
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasCableDataTable()
            {
                base.TableName = "tJ_MeasCable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060013C6 RID: 5062 RVA: 0x0008816C File Offset: 0x0008636C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasCableDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060013C7 RID: 5063 RVA: 0x00088214 File Offset: 0x00086414
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tJ_MeasCableDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004A4 RID: 1188
            // (get) Token: 0x060013C8 RID: 5064 RVA: 0x00088224 File Offset: 0x00086424
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170004A5 RID: 1189
            // (get) Token: 0x060013C9 RID: 5065 RVA: 0x0008822C File Offset: 0x0008642C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x170004A6 RID: 1190
            // (get) Token: 0x060013CA RID: 5066 RVA: 0x00088234 File Offset: 0x00086434
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x170004A7 RID: 1191
            // (get) Token: 0x060013CB RID: 5067 RVA: 0x0008823C File Offset: 0x0008643C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x170004A8 RID: 1192
            // (get) Token: 0x060013CC RID: 5068 RVA: 0x00088244 File Offset: 0x00086444
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x170004A9 RID: 1193
            // (get) Token: 0x060013CD RID: 5069 RVA: 0x0008824C File Offset: 0x0008644C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x170004AA RID: 1194
            // (get) Token: 0x060013CE RID: 5070 RVA: 0x00088254 File Offset: 0x00086454
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn OldCellColumn
            {
                get
                {
                    return this.columnOldCell;
                }
            }

            // Token: 0x170004AB RID: 1195
            // (get) Token: 0x060013CF RID: 5071 RVA: 0x0008825C File Offset: 0x0008645C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            // Token: 0x170004AC RID: 1196
            // (get) Token: 0x060013D0 RID: 5072 RVA: 0x00088264 File Offset: 0x00086464
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            // Token: 0x170004AD RID: 1197
            // (get) Token: 0x060013D1 RID: 5073 RVA: 0x0008826C File Offset: 0x0008646C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x170004AE RID: 1198
            // (get) Token: 0x060013D2 RID: 5074 RVA: 0x00088274 File Offset: 0x00086474
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            // Token: 0x170004AF RID: 1199
            // (get) Token: 0x060013D3 RID: 5075 RVA: 0x0008827C File Offset: 0x0008647C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            // Token: 0x170004B0 RID: 1200
            // (get) Token: 0x060013D4 RID: 5076 RVA: 0x00088284 File Offset: 0x00086484
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            // Token: 0x170004B1 RID: 1201
            // (get) Token: 0x060013D5 RID: 5077 RVA: 0x0008828C File Offset: 0x0008648C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            // Token: 0x170004B2 RID: 1202
            // (get) Token: 0x060013D6 RID: 5078 RVA: 0x00088294 File Offset: 0x00086494
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            // Token: 0x170004B3 RID: 1203
            // (get) Token: 0x060013D7 RID: 5079 RVA: 0x0008829C File Offset: 0x0008649C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            // Token: 0x170004B4 RID: 1204
            // (get) Token: 0x060013D8 RID: 5080 RVA: 0x000882A4 File Offset: 0x000864A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            // Token: 0x170004B5 RID: 1205
            // (get) Token: 0x060013D9 RID: 5081 RVA: 0x000882AC File Offset: 0x000864AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            // Token: 0x170004B6 RID: 1206
            // (get) Token: 0x060013DA RID: 5082 RVA: 0x000882B4 File Offset: 0x000864B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            // Token: 0x170004B7 RID: 1207
            // (get) Token: 0x060013DB RID: 5083 RVA: 0x000882BC File Offset: 0x000864BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            // Token: 0x170004B8 RID: 1208
            // (get) Token: 0x060013DC RID: 5084 RVA: 0x000882C4 File Offset: 0x000864C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            // Token: 0x170004B9 RID: 1209
            // (get) Token: 0x060013DD RID: 5085 RVA: 0x000882CC File Offset: 0x000864CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            // Token: 0x170004BA RID: 1210
            // (get) Token: 0x060013DE RID: 5086 RVA: 0x000882D4 File Offset: 0x000864D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            // Token: 0x170004BB RID: 1211
            // (get) Token: 0x060013DF RID: 5087 RVA: 0x000882DC File Offset: 0x000864DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            // Token: 0x170004BC RID: 1212
            // (get) Token: 0x060013E0 RID: 5088 RVA: 0x000882E4 File Offset: 0x000864E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            // Token: 0x170004BD RID: 1213
            // (get) Token: 0x060013E1 RID: 5089 RVA: 0x000882EC File Offset: 0x000864EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x170004BE RID: 1214
            // (get) Token: 0x060013E2 RID: 5090 RVA: 0x000882F4 File Offset: 0x000864F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idOldMeasurementCableColumn
            {
                get
                {
                    return this.columnidOldMeasurementCable;
                }
            }

            // Token: 0x170004BF RID: 1215
            // (get) Token: 0x060013E3 RID: 5091 RVA: 0x000882FC File Offset: 0x000864FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170004C0 RID: 1216
            // (get) Token: 0x060013E4 RID: 5092 RVA: 0x00088304 File Offset: 0x00086504
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004C1 RID: 1217
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasCableRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_MeasCableRow)base.Rows[index];
                }
            }

            // Token: 0x14000149 RID: 329
            // (add) Token: 0x060013E6 RID: 5094 RVA: 0x00088324 File Offset: 0x00086524
            // (remove) Token: 0x060013E7 RID: 5095 RVA: 0x0008835C File Offset: 0x0008655C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCableRowChangeEventHandler tJ_MeasCableRowChanging;

            // Token: 0x1400014A RID: 330
            // (add) Token: 0x060013E8 RID: 5096 RVA: 0x00088394 File Offset: 0x00086594
            // (remove) Token: 0x060013E9 RID: 5097 RVA: 0x000883CC File Offset: 0x000865CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCableRowChangeEventHandler tJ_MeasCableRowChanged;

            // Token: 0x1400014B RID: 331
            // (add) Token: 0x060013EA RID: 5098 RVA: 0x00088404 File Offset: 0x00086604
            // (remove) Token: 0x060013EB RID: 5099 RVA: 0x0008843C File Offset: 0x0008663C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCableRowChangeEventHandler tJ_MeasCableRowDeleting;

            // Token: 0x1400014C RID: 332
            // (add) Token: 0x060013EC RID: 5100 RVA: 0x00088474 File Offset: 0x00086674
            // (remove) Token: 0x060013ED RID: 5101 RVA: 0x000884AC File Offset: 0x000866AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCableRowChangeEventHandler tJ_MeasCableRowDeleted;

            // Token: 0x060013EE RID: 5102 RVA: 0x000884E1 File Offset: 0x000866E1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_MeasCableRow(DataSetGES.tJ_MeasCableRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060013EF RID: 5103 RVA: 0x000884F0 File Offset: 0x000866F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasCableRow AddtJ_MeasCableRow(int idMeasurement, int idBus, int idTransf, int idCell, string NameCell, short OldCell, int idCable, string NameCable, string Address, string Company, int idSchmAbn, string Makeup, int Voltage, int Wires, double CrossSection, double PermisAmperage, int Iad, int Ian, int Ibd, int Ibn, int Icd, int Icn, int Iod, int Ion, string Comment, int idOldMeasurementCable, bool Deleted)
            {
                DataSetGES.tJ_MeasCableRow tJ_MeasCableRow = (DataSetGES.tJ_MeasCableRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idMeasurement,
                    idBus,
                    idTransf,
                    idCell,
                    NameCell,
                    OldCell,
                    idCable,
                    NameCable,
                    Address,
                    Company,
                    idSchmAbn,
                    Makeup,
                    Voltage,
                    Wires,
                    CrossSection,
                    PermisAmperage,
                    Iad,
                    Ian,
                    Ibd,
                    Ibn,
                    Icd,
                    Icn,
                    Iod,
                    Ion,
                    Comment,
                    idOldMeasurementCable,
                    Deleted
                };
                tJ_MeasCableRow.ItemArray = itemArray;
                base.Rows.Add(tJ_MeasCableRow);
                return tJ_MeasCableRow;
            }

            // Token: 0x060013F0 RID: 5104 RVA: 0x00088628 File Offset: 0x00086828
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasCableRow FindByid(int id)
            {
                return (DataSetGES.tJ_MeasCableRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x060013F1 RID: 5105 RVA: 0x00088658 File Offset: 0x00086858
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasCableDataTable tJ_MeasCableDataTable = (DataSetGES.tJ_MeasCableDataTable)base.Clone();
                tJ_MeasCableDataTable.InitVars();
                return tJ_MeasCableDataTable;
            }

            // Token: 0x060013F2 RID: 5106 RVA: 0x00088678 File Offset: 0x00086878
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasCableDataTable();
            }

            // Token: 0x060013F3 RID: 5107 RVA: 0x00088680 File Offset: 0x00086880
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnOldCell = base.Columns["OldCell"];
                this.columnidCable = base.Columns["idCable"];
                this.columnNameCable = base.Columns["NameCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnCompany = base.Columns["Company"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
                this.columnidOldMeasurementCable = base.Columns["idOldMeasurementCable"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x060013F4 RID: 5108 RVA: 0x000888F8 File Offset: 0x00086AF8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnOldCell = new DataColumn("OldCell", typeof(short), null, MappingType.Element);
                base.Columns.Add(this.columnOldCell);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnidOldMeasurementCable = new DataColumn("idOldMeasurementCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurementCable);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnAddress.MaxLength = 128;
                this.columnCompany.MaxLength = 128;
                this.columnMakeup.MaxLength = 50;
                this.columnComment.MaxLength = 128;
            }

            // Token: 0x060013F5 RID: 5109 RVA: 0x00088EB7 File Offset: 0x000870B7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasCableRow NewtJ_MeasCableRow()
            {
                return (DataSetGES.tJ_MeasCableRow)base.NewRow();
            }

            // Token: 0x060013F6 RID: 5110 RVA: 0x00088EC4 File Offset: 0x000870C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_MeasCableRow(builder);
            }

            // Token: 0x060013F7 RID: 5111 RVA: 0x00088ECC File Offset: 0x000870CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_MeasCableRow);
            }

            // Token: 0x060013F8 RID: 5112 RVA: 0x00088ED8 File Offset: 0x000870D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_MeasCableRowChanged != null)
                {
                    this.tJ_MeasCableRowChanged(this, new DataSetGES.tJ_MeasCableRowChangeEvent((DataSetGES.tJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013F9 RID: 5113 RVA: 0x00088F0B File Offset: 0x0008710B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_MeasCableRowChanging != null)
                {
                    this.tJ_MeasCableRowChanging(this, new DataSetGES.tJ_MeasCableRowChangeEvent((DataSetGES.tJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013FA RID: 5114 RVA: 0x00088F3E File Offset: 0x0008713E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_MeasCableRowDeleted != null)
                {
                    this.tJ_MeasCableRowDeleted(this, new DataSetGES.tJ_MeasCableRowChangeEvent((DataSetGES.tJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013FB RID: 5115 RVA: 0x00088F71 File Offset: 0x00087171
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_MeasCableRowDeleting != null)
                {
                    this.tJ_MeasCableRowDeleting(this, new DataSetGES.tJ_MeasCableRowChangeEvent((DataSetGES.tJ_MeasCableRow)e.Row, e.Action));
                }
            }

            // Token: 0x060013FC RID: 5116 RVA: 0x00088FA4 File Offset: 0x000871A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_MeasCableRow(DataSetGES.tJ_MeasCableRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060013FD RID: 5117 RVA: 0x00088FB4 File Offset: 0x000871B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_MeasCableDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A0C RID: 2572
            private DataColumn columnid;

            // Token: 0x04000A0D RID: 2573
            private DataColumn columnidMeasurement;

            // Token: 0x04000A0E RID: 2574
            private DataColumn columnidBus;

            // Token: 0x04000A0F RID: 2575
            private DataColumn columnidTransf;

            // Token: 0x04000A10 RID: 2576
            private DataColumn columnidCell;

            // Token: 0x04000A11 RID: 2577
            private DataColumn columnNameCell;

            // Token: 0x04000A12 RID: 2578
            private DataColumn columnOldCell;

            // Token: 0x04000A13 RID: 2579
            private DataColumn columnidCable;

            // Token: 0x04000A14 RID: 2580
            private DataColumn columnNameCable;

            // Token: 0x04000A15 RID: 2581
            private DataColumn columnAddress;

            // Token: 0x04000A16 RID: 2582
            private DataColumn columnCompany;

            // Token: 0x04000A17 RID: 2583
            private DataColumn columnidSchmAbn;

            // Token: 0x04000A18 RID: 2584
            private DataColumn columnMakeup;

            // Token: 0x04000A19 RID: 2585
            private DataColumn columnVoltage;

            // Token: 0x04000A1A RID: 2586
            private DataColumn columnWires;

            // Token: 0x04000A1B RID: 2587
            private DataColumn columnCrossSection;

            // Token: 0x04000A1C RID: 2588
            private DataColumn columnPermisAmperage;

            // Token: 0x04000A1D RID: 2589
            private DataColumn columnIad;

            // Token: 0x04000A1E RID: 2590
            private DataColumn columnIan;

            // Token: 0x04000A1F RID: 2591
            private DataColumn columnIbd;

            // Token: 0x04000A20 RID: 2592
            private DataColumn columnIbn;

            // Token: 0x04000A21 RID: 2593
            private DataColumn columnIcd;

            // Token: 0x04000A22 RID: 2594
            private DataColumn columnIcn;

            // Token: 0x04000A23 RID: 2595
            private DataColumn columnIod;

            // Token: 0x04000A24 RID: 2596
            private DataColumn columnIon;

            // Token: 0x04000A25 RID: 2597
            private DataColumn columnComment;

            // Token: 0x04000A26 RID: 2598
            private DataColumn columnidOldMeasurementCable;

            // Token: 0x04000A27 RID: 2599
            private DataColumn columnDeleted;
        }

        // Token: 0x0200010D RID: 269
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_LastCableInfoDataTable : TypedTableBase<DataSetGES.vJ_LastCableInfoRow>
        {
            // Token: 0x060013FE RID: 5118 RVA: 0x000891AC File Offset: 0x000873AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_LastCableInfoDataTable()
            {
                base.TableName = "vJ_LastCableInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060013FF RID: 5119 RVA: 0x000891D4 File Offset: 0x000873D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_LastCableInfoDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001400 RID: 5120 RVA: 0x0008927C File Offset: 0x0008747C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_LastCableInfoDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004C2 RID: 1218
            // (get) Token: 0x06001401 RID: 5121 RVA: 0x0008928C File Offset: 0x0008748C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn YearColumn
            {
                get
                {
                    return this.columnYear;
                }
            }

            // Token: 0x170004C3 RID: 1219
            // (get) Token: 0x06001402 RID: 5122 RVA: 0x00089294 File Offset: 0x00087494
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            // Token: 0x170004C4 RID: 1220
            // (get) Token: 0x06001403 RID: 5123 RVA: 0x0008929C File Offset: 0x0008749C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x170004C5 RID: 1221
            // (get) Token: 0x06001404 RID: 5124 RVA: 0x000892A4 File Offset: 0x000874A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x170004C6 RID: 1222
            // (get) Token: 0x06001405 RID: 5125 RVA: 0x000892AC File Offset: 0x000874AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            // Token: 0x170004C7 RID: 1223
            // (get) Token: 0x06001406 RID: 5126 RVA: 0x000892B4 File Offset: 0x000874B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x170004C8 RID: 1224
            // (get) Token: 0x06001407 RID: 5127 RVA: 0x000892BC File Offset: 0x000874BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            // Token: 0x170004C9 RID: 1225
            // (get) Token: 0x06001408 RID: 5128 RVA: 0x000892C4 File Offset: 0x000874C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            // Token: 0x170004CA RID: 1226
            // (get) Token: 0x06001409 RID: 5129 RVA: 0x000892CC File Offset: 0x000874CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            // Token: 0x170004CB RID: 1227
            // (get) Token: 0x0600140A RID: 5130 RVA: 0x000892D4 File Offset: 0x000874D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            // Token: 0x170004CC RID: 1228
            // (get) Token: 0x0600140B RID: 5131 RVA: 0x000892DC File Offset: 0x000874DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            // Token: 0x170004CD RID: 1229
            // (get) Token: 0x0600140C RID: 5132 RVA: 0x000892E4 File Offset: 0x000874E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            // Token: 0x170004CE RID: 1230
            // (get) Token: 0x0600140D RID: 5133 RVA: 0x000892EC File Offset: 0x000874EC
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004CF RID: 1231
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_LastCableInfoRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_LastCableInfoRow)base.Rows[index];
                }
            }

            // Token: 0x1400014D RID: 333
            // (add) Token: 0x0600140F RID: 5135 RVA: 0x0008930C File Offset: 0x0008750C
            // (remove) Token: 0x06001410 RID: 5136 RVA: 0x00089344 File Offset: 0x00087544
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_LastCableInfoRowChangeEventHandler vJ_LastCableInfoRowChanging;

            // Token: 0x1400014E RID: 334
            // (add) Token: 0x06001411 RID: 5137 RVA: 0x0008937C File Offset: 0x0008757C
            // (remove) Token: 0x06001412 RID: 5138 RVA: 0x000893B4 File Offset: 0x000875B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_LastCableInfoRowChangeEventHandler vJ_LastCableInfoRowChanged;

            // Token: 0x1400014F RID: 335
            // (add) Token: 0x06001413 RID: 5139 RVA: 0x000893EC File Offset: 0x000875EC
            // (remove) Token: 0x06001414 RID: 5140 RVA: 0x00089424 File Offset: 0x00087624
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_LastCableInfoRowChangeEventHandler vJ_LastCableInfoRowDeleting;

            // Token: 0x14000150 RID: 336
            // (add) Token: 0x06001415 RID: 5141 RVA: 0x0008945C File Offset: 0x0008765C
            // (remove) Token: 0x06001416 RID: 5142 RVA: 0x00089494 File Offset: 0x00087694
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_LastCableInfoRowChangeEventHandler vJ_LastCableInfoRowDeleted;

            // Token: 0x06001417 RID: 5143 RVA: 0x000894C9 File Offset: 0x000876C9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_LastCableInfoRow(DataSetGES.vJ_LastCableInfoRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001418 RID: 5144 RVA: 0x000894D8 File Offset: 0x000876D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_LastCableInfoRow AddvJ_LastCableInfoRow(int Year, int idSubstation, int idMeasurement, int idCell, int idCable, string Address, string Company, string Makeup, int Voltage, int Wires, double CrossSection, double PermisAmperage)
            {
                DataSetGES.vJ_LastCableInfoRow vJ_LastCableInfoRow = (DataSetGES.vJ_LastCableInfoRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Year,
                    idSubstation,
                    idMeasurement,
                    idCell,
                    idCable,
                    Address,
                    Company,
                    Makeup,
                    Voltage,
                    Wires,
                    CrossSection,
                    PermisAmperage
                };
                vJ_LastCableInfoRow.ItemArray = itemArray;
                base.Rows.Add(vJ_LastCableInfoRow);
                return vJ_LastCableInfoRow;
            }

            // Token: 0x06001419 RID: 5145 RVA: 0x00089578 File Offset: 0x00087778
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_LastCableInfoDataTable vJ_LastCableInfoDataTable = (DataSetGES.vJ_LastCableInfoDataTable)base.Clone();
                vJ_LastCableInfoDataTable.InitVars();
                return vJ_LastCableInfoDataTable;
            }

            // Token: 0x0600141A RID: 5146 RVA: 0x00089598 File Offset: 0x00087798
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_LastCableInfoDataTable();
            }

            // Token: 0x0600141B RID: 5147 RVA: 0x000895A0 File Offset: 0x000877A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnYear = base.Columns["Year"];
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidCell = base.Columns["idCell"];
                this.columnidCable = base.Columns["idCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnCompany = base.Columns["Company"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
            }

            // Token: 0x0600141C RID: 5148 RVA: 0x000896B8 File Offset: 0x000878B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnYear = new DataColumn("Year", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnidMeasurement.AllowDBNull = false;
                this.columnAddress.MaxLength = 128;
                this.columnCompany.MaxLength = 128;
                this.columnMakeup.MaxLength = 50;
            }

            // Token: 0x0600141D RID: 5149 RVA: 0x0008991A File Offset: 0x00087B1A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_LastCableInfoRow NewvJ_LastCableInfoRow()
            {
                return (DataSetGES.vJ_LastCableInfoRow)base.NewRow();
            }

            // Token: 0x0600141E RID: 5150 RVA: 0x00089927 File Offset: 0x00087B27
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_LastCableInfoRow(builder);
            }

            // Token: 0x0600141F RID: 5151 RVA: 0x0008992F File Offset: 0x00087B2F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_LastCableInfoRow);
            }

            // Token: 0x06001420 RID: 5152 RVA: 0x0008993B File Offset: 0x00087B3B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_LastCableInfoRowChanged != null)
                {
                    this.vJ_LastCableInfoRowChanged(this, new DataSetGES.vJ_LastCableInfoRowChangeEvent((DataSetGES.vJ_LastCableInfoRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001421 RID: 5153 RVA: 0x0008996E File Offset: 0x00087B6E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_LastCableInfoRowChanging != null)
                {
                    this.vJ_LastCableInfoRowChanging(this, new DataSetGES.vJ_LastCableInfoRowChangeEvent((DataSetGES.vJ_LastCableInfoRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001422 RID: 5154 RVA: 0x000899A1 File Offset: 0x00087BA1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_LastCableInfoRowDeleted != null)
                {
                    this.vJ_LastCableInfoRowDeleted(this, new DataSetGES.vJ_LastCableInfoRowChangeEvent((DataSetGES.vJ_LastCableInfoRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001423 RID: 5155 RVA: 0x000899D4 File Offset: 0x00087BD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_LastCableInfoRowDeleting != null)
                {
                    this.vJ_LastCableInfoRowDeleting(this, new DataSetGES.vJ_LastCableInfoRowChangeEvent((DataSetGES.vJ_LastCableInfoRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001424 RID: 5156 RVA: 0x00089A07 File Offset: 0x00087C07
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_LastCableInfoRow(DataSetGES.vJ_LastCableInfoRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001425 RID: 5157 RVA: 0x00089A18 File Offset: 0x00087C18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_LastCableInfoDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A2C RID: 2604
            private DataColumn columnYear;

            // Token: 0x04000A2D RID: 2605
            private DataColumn columnidSubstation;

            // Token: 0x04000A2E RID: 2606
            private DataColumn columnidMeasurement;

            // Token: 0x04000A2F RID: 2607
            private DataColumn columnidCell;

            // Token: 0x04000A30 RID: 2608
            private DataColumn columnidCable;

            // Token: 0x04000A31 RID: 2609
            private DataColumn columnAddress;

            // Token: 0x04000A32 RID: 2610
            private DataColumn columnCompany;

            // Token: 0x04000A33 RID: 2611
            private DataColumn columnMakeup;

            // Token: 0x04000A34 RID: 2612
            private DataColumn columnVoltage;

            // Token: 0x04000A35 RID: 2613
            private DataColumn columnWires;

            // Token: 0x04000A36 RID: 2614
            private DataColumn columnCrossSection;

            // Token: 0x04000A37 RID: 2615
            private DataColumn columnPermisAmperage;
        }

        // Token: 0x0200010E RID: 270
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_TransfByCellDataTable : TypedTableBase<DataSetGES.vJ_TransfByCellRow>
        {
            // Token: 0x06001426 RID: 5158 RVA: 0x00089C10 File Offset: 0x00087E10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_TransfByCellDataTable()
            {
                base.TableName = "vJ_TransfByCell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001427 RID: 5159 RVA: 0x00089C38 File Offset: 0x00087E38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_TransfByCellDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001428 RID: 5160 RVA: 0x00089CE0 File Offset: 0x00087EE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_TransfByCellDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004D0 RID: 1232
            // (get) Token: 0x06001429 RID: 5161 RVA: 0x00089CF0 File Offset: 0x00087EF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x170004D1 RID: 1233
            // (get) Token: 0x0600142A RID: 5162 RVA: 0x00089CF8 File Offset: 0x00087EF8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170004D2 RID: 1234
            // (get) Token: 0x0600142B RID: 5163 RVA: 0x00089D00 File Offset: 0x00087F00
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170004D3 RID: 1235
            // (get) Token: 0x0600142C RID: 5164 RVA: 0x00089D08 File Offset: 0x00087F08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            // Token: 0x170004D4 RID: 1236
            // (get) Token: 0x0600142D RID: 5165 RVA: 0x00089D10 File Offset: 0x00087F10
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004D5 RID: 1237
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_TransfByCellRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_TransfByCellRow)base.Rows[index];
                }
            }

            // Token: 0x14000151 RID: 337
            // (add) Token: 0x0600142F RID: 5167 RVA: 0x00089D30 File Offset: 0x00087F30
            // (remove) Token: 0x06001430 RID: 5168 RVA: 0x00089D68 File Offset: 0x00087F68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfByCellRowChangeEventHandler vJ_TransfByCellRowChanging;

            // Token: 0x14000152 RID: 338
            // (add) Token: 0x06001431 RID: 5169 RVA: 0x00089DA0 File Offset: 0x00087FA0
            // (remove) Token: 0x06001432 RID: 5170 RVA: 0x00089DD8 File Offset: 0x00087FD8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfByCellRowChangeEventHandler vJ_TransfByCellRowChanged;

            // Token: 0x14000153 RID: 339
            // (add) Token: 0x06001433 RID: 5171 RVA: 0x00089E10 File Offset: 0x00088010
            // (remove) Token: 0x06001434 RID: 5172 RVA: 0x00089E48 File Offset: 0x00088048
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfByCellRowChangeEventHandler vJ_TransfByCellRowDeleting;

            // Token: 0x14000154 RID: 340
            // (add) Token: 0x06001435 RID: 5173 RVA: 0x00089E80 File Offset: 0x00088080
            // (remove) Token: 0x06001436 RID: 5174 RVA: 0x00089EB8 File Offset: 0x000880B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_TransfByCellRowChangeEventHandler vJ_TransfByCellRowDeleted;

            // Token: 0x06001437 RID: 5175 RVA: 0x00089EED File Offset: 0x000880ED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_TransfByCellRow(DataSetGES.vJ_TransfByCellRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001438 RID: 5176 RVA: 0x00089EFC File Offset: 0x000880FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_TransfByCellRow AddvJ_TransfByCellRow(int idCell, int id, string Name, int idParentAddl)
            {
                DataSetGES.vJ_TransfByCellRow vJ_TransfByCellRow = (DataSetGES.vJ_TransfByCellRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idCell,
                    id,
                    Name,
                    idParentAddl
                };
                vJ_TransfByCellRow.ItemArray = itemArray;
                base.Rows.Add(vJ_TransfByCellRow);
                return vJ_TransfByCellRow;
            }

            // Token: 0x06001439 RID: 5177 RVA: 0x00089F54 File Offset: 0x00088154
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_TransfByCellRow FindByid(int id)
            {
                return (DataSetGES.vJ_TransfByCellRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x0600143A RID: 5178 RVA: 0x00089F84 File Offset: 0x00088184
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_TransfByCellDataTable vJ_TransfByCellDataTable = (DataSetGES.vJ_TransfByCellDataTable)base.Clone();
                vJ_TransfByCellDataTable.InitVars();
                return vJ_TransfByCellDataTable;
            }

            // Token: 0x0600143B RID: 5179 RVA: 0x00089FA4 File Offset: 0x000881A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_TransfByCellDataTable();
            }

            // Token: 0x0600143C RID: 5180 RVA: 0x00089FAC File Offset: 0x000881AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnidCell = base.Columns["idCell"];
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
            }

            // Token: 0x0600143D RID: 5181 RVA: 0x0008A014 File Offset: 0x00088214
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnName.MaxLength = 512;
            }

            // Token: 0x0600143E RID: 5182 RVA: 0x0008A124 File Offset: 0x00088324
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_TransfByCellRow NewvJ_TransfByCellRow()
            {
                return (DataSetGES.vJ_TransfByCellRow)base.NewRow();
            }

            // Token: 0x0600143F RID: 5183 RVA: 0x0008A131 File Offset: 0x00088331
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_TransfByCellRow(builder);
            }

            // Token: 0x06001440 RID: 5184 RVA: 0x0008A139 File Offset: 0x00088339
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_TransfByCellRow);
            }

            // Token: 0x06001441 RID: 5185 RVA: 0x0008A145 File Offset: 0x00088345
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_TransfByCellRowChanged != null)
                {
                    this.vJ_TransfByCellRowChanged(this, new DataSetGES.vJ_TransfByCellRowChangeEvent((DataSetGES.vJ_TransfByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001442 RID: 5186 RVA: 0x0008A178 File Offset: 0x00088378
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_TransfByCellRowChanging != null)
                {
                    this.vJ_TransfByCellRowChanging(this, new DataSetGES.vJ_TransfByCellRowChangeEvent((DataSetGES.vJ_TransfByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001443 RID: 5187 RVA: 0x0008A1AB File Offset: 0x000883AB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_TransfByCellRowDeleted != null)
                {
                    this.vJ_TransfByCellRowDeleted(this, new DataSetGES.vJ_TransfByCellRowChangeEvent((DataSetGES.vJ_TransfByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001444 RID: 5188 RVA: 0x0008A1DE File Offset: 0x000883DE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_TransfByCellRowDeleting != null)
                {
                    this.vJ_TransfByCellRowDeleting(this, new DataSetGES.vJ_TransfByCellRowChangeEvent((DataSetGES.vJ_TransfByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001445 RID: 5189 RVA: 0x0008A211 File Offset: 0x00088411
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_TransfByCellRow(DataSetGES.vJ_TransfByCellRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001446 RID: 5190 RVA: 0x0008A220 File Offset: 0x00088420
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_TransfByCellDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A3C RID: 2620
            private DataColumn columnidCell;

            // Token: 0x04000A3D RID: 2621
            private DataColumn columnid;

            // Token: 0x04000A3E RID: 2622
            private DataColumn columnName;

            // Token: 0x04000A3F RID: 2623
            private DataColumn columnidParentAddl;
        }

        // Token: 0x0200010F RID: 271
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_CableByCellDataTable : TypedTableBase<DataSetGES.vJ_CableByCellRow>
        {
            // Token: 0x06001447 RID: 5191 RVA: 0x0008A418 File Offset: 0x00088618
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CableByCellDataTable()
            {
                base.TableName = "vJ_CableByCell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001448 RID: 5192 RVA: 0x0008A440 File Offset: 0x00088640
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CableByCellDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001449 RID: 5193 RVA: 0x0008A4E8 File Offset: 0x000886E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CableByCellDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004D6 RID: 1238
            // (get) Token: 0x0600144A RID: 5194 RVA: 0x0008A4F8 File Offset: 0x000886F8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x170004D7 RID: 1239
            // (get) Token: 0x0600144B RID: 5195 RVA: 0x0008A500 File Offset: 0x00088700
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170004D8 RID: 1240
            // (get) Token: 0x0600144C RID: 5196 RVA: 0x0008A508 File Offset: 0x00088708
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170004D9 RID: 1241
            // (get) Token: 0x0600144D RID: 5197 RVA: 0x0008A510 File Offset: 0x00088710
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004DA RID: 1242
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableByCellRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_CableByCellRow)base.Rows[index];
                }
            }

            // Token: 0x14000155 RID: 341
            // (add) Token: 0x0600144F RID: 5199 RVA: 0x0008A530 File Offset: 0x00088730
            // (remove) Token: 0x06001450 RID: 5200 RVA: 0x0008A568 File Offset: 0x00088768
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellRowChangeEventHandler vJ_CableByCellRowChanging;

            // Token: 0x14000156 RID: 342
            // (add) Token: 0x06001451 RID: 5201 RVA: 0x0008A5A0 File Offset: 0x000887A0
            // (remove) Token: 0x06001452 RID: 5202 RVA: 0x0008A5D8 File Offset: 0x000887D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellRowChangeEventHandler vJ_CableByCellRowChanged;

            // Token: 0x14000157 RID: 343
            // (add) Token: 0x06001453 RID: 5203 RVA: 0x0008A610 File Offset: 0x00088810
            // (remove) Token: 0x06001454 RID: 5204 RVA: 0x0008A648 File Offset: 0x00088848
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellRowChangeEventHandler vJ_CableByCellRowDeleting;

            // Token: 0x14000158 RID: 344
            // (add) Token: 0x06001455 RID: 5205 RVA: 0x0008A680 File Offset: 0x00088880
            // (remove) Token: 0x06001456 RID: 5206 RVA: 0x0008A6B8 File Offset: 0x000888B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellRowChangeEventHandler vJ_CableByCellRowDeleted;

            // Token: 0x06001457 RID: 5207 RVA: 0x0008A6ED File Offset: 0x000888ED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_CableByCellRow(DataSetGES.vJ_CableByCellRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001458 RID: 5208 RVA: 0x0008A6FC File Offset: 0x000888FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableByCellRow AddvJ_CableByCellRow(int idCell, int id, string Name)
            {
                DataSetGES.vJ_CableByCellRow vJ_CableByCellRow = (DataSetGES.vJ_CableByCellRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idCell,
                    id,
                    Name
                };
                vJ_CableByCellRow.ItemArray = itemArray;
                base.Rows.Add(vJ_CableByCellRow);
                return vJ_CableByCellRow;
            }

            // Token: 0x06001459 RID: 5209 RVA: 0x0008A748 File Offset: 0x00088948
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableByCellDataTable vJ_CableByCellDataTable = (DataSetGES.vJ_CableByCellDataTable)base.Clone();
                vJ_CableByCellDataTable.InitVars();
                return vJ_CableByCellDataTable;
            }

            // Token: 0x0600145A RID: 5210 RVA: 0x0008A768 File Offset: 0x00088968
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableByCellDataTable();
            }

            // Token: 0x0600145B RID: 5211 RVA: 0x0008A770 File Offset: 0x00088970
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidCell = base.Columns["idCell"];
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x0600145C RID: 5212 RVA: 0x0008A7C0 File Offset: 0x000889C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidCell.Caption = "idCable";
                this.columnid.AllowDBNull = false;
                this.columnName.MaxLength = 512;
            }

            // Token: 0x0600145D RID: 5213 RVA: 0x0008A880 File Offset: 0x00088A80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableByCellRow NewvJ_CableByCellRow()
            {
                return (DataSetGES.vJ_CableByCellRow)base.NewRow();
            }

            // Token: 0x0600145E RID: 5214 RVA: 0x0008A88D File Offset: 0x00088A8D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_CableByCellRow(builder);
            }

            // Token: 0x0600145F RID: 5215 RVA: 0x0008A895 File Offset: 0x00088A95
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_CableByCellRow);
            }

            // Token: 0x06001460 RID: 5216 RVA: 0x0008A8A1 File Offset: 0x00088AA1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_CableByCellRowChanged != null)
                {
                    this.vJ_CableByCellRowChanged(this, new DataSetGES.vJ_CableByCellRowChangeEvent((DataSetGES.vJ_CableByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001461 RID: 5217 RVA: 0x0008A8D4 File Offset: 0x00088AD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_CableByCellRowChanging != null)
                {
                    this.vJ_CableByCellRowChanging(this, new DataSetGES.vJ_CableByCellRowChangeEvent((DataSetGES.vJ_CableByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001462 RID: 5218 RVA: 0x0008A907 File Offset: 0x00088B07
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_CableByCellRowDeleted != null)
                {
                    this.vJ_CableByCellRowDeleted(this, new DataSetGES.vJ_CableByCellRowChangeEvent((DataSetGES.vJ_CableByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001463 RID: 5219 RVA: 0x0008A93A File Offset: 0x00088B3A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_CableByCellRowDeleting != null)
                {
                    this.vJ_CableByCellRowDeleting(this, new DataSetGES.vJ_CableByCellRowChangeEvent((DataSetGES.vJ_CableByCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001464 RID: 5220 RVA: 0x0008A96D File Offset: 0x00088B6D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_CableByCellRow(DataSetGES.vJ_CableByCellRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001465 RID: 5221 RVA: 0x0008A97C File Offset: 0x00088B7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_CableByCellDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A44 RID: 2628
            private DataColumn columnidCell;

            // Token: 0x04000A45 RID: 2629
            private DataColumn columnid;

            // Token: 0x04000A46 RID: 2630
            private DataColumn columnName;
        }

        // Token: 0x02000110 RID: 272
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_GetBusMVByTransfDataTable : TypedTableBase<DataSetGES.fn_J_GetBusMVByTransfRow>
        {
            // Token: 0x06001466 RID: 5222 RVA: 0x0008AB74 File Offset: 0x00088D74
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetBusMVByTransfDataTable()
            {
                base.TableName = "fn_J_GetBusMVByTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001467 RID: 5223 RVA: 0x0008AB9C File Offset: 0x00088D9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetBusMVByTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001468 RID: 5224 RVA: 0x0008AC44 File Offset: 0x00088E44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetBusMVByTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004DB RID: 1243
            // (get) Token: 0x06001469 RID: 5225 RVA: 0x0008AC54 File Offset: 0x00088E54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x170004DC RID: 1244
            // (get) Token: 0x0600146A RID: 5226 RVA: 0x0008AC5C File Offset: 0x00088E5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170004DD RID: 1245
            // (get) Token: 0x0600146B RID: 5227 RVA: 0x0008AC64 File Offset: 0x00088E64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x170004DE RID: 1246
            // (get) Token: 0x0600146C RID: 5228 RVA: 0x0008AC6C File Offset: 0x00088E6C
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004DF RID: 1247
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetBusMVByTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_GetBusMVByTransfRow)base.Rows[index];
                }
            }

            // Token: 0x14000159 RID: 345
            // (add) Token: 0x0600146E RID: 5230 RVA: 0x0008AC8C File Offset: 0x00088E8C
            // (remove) Token: 0x0600146F RID: 5231 RVA: 0x0008ACC4 File Offset: 0x00088EC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusMVByTransfRowChangeEventHandler fn_J_GetBusMVByTransfRowChanging;

            // Token: 0x1400015A RID: 346
            // (add) Token: 0x06001470 RID: 5232 RVA: 0x0008ACFC File Offset: 0x00088EFC
            // (remove) Token: 0x06001471 RID: 5233 RVA: 0x0008AD34 File Offset: 0x00088F34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusMVByTransfRowChangeEventHandler fn_J_GetBusMVByTransfRowChanged;

            // Token: 0x1400015B RID: 347
            // (add) Token: 0x06001472 RID: 5234 RVA: 0x0008AD6C File Offset: 0x00088F6C
            // (remove) Token: 0x06001473 RID: 5235 RVA: 0x0008ADA4 File Offset: 0x00088FA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusMVByTransfRowChangeEventHandler fn_J_GetBusMVByTransfRowDeleting;

            // Token: 0x1400015C RID: 348
            // (add) Token: 0x06001474 RID: 5236 RVA: 0x0008ADDC File Offset: 0x00088FDC
            // (remove) Token: 0x06001475 RID: 5237 RVA: 0x0008AE14 File Offset: 0x00089014
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetBusMVByTransfRowChangeEventHandler fn_J_GetBusMVByTransfRowDeleted;

            // Token: 0x06001476 RID: 5238 RVA: 0x0008AE49 File Offset: 0x00089049
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addfn_J_GetBusMVByTransfRow(DataSetGES.fn_J_GetBusMVByTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001477 RID: 5239 RVA: 0x0008AE58 File Offset: 0x00089058
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetBusMVByTransfRow Addfn_J_GetBusMVByTransfRow(int Id, string Name, int TypeCodeId)
            {
                DataSetGES.fn_J_GetBusMVByTransfRow fn_J_GetBusMVByTransfRow = (DataSetGES.fn_J_GetBusMVByTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    Name,
                    TypeCodeId
                };
                fn_J_GetBusMVByTransfRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_GetBusMVByTransfRow);
                return fn_J_GetBusMVByTransfRow;
            }

            // Token: 0x06001478 RID: 5240 RVA: 0x0008AEA4 File Offset: 0x000890A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetBusMVByTransfDataTable fn_J_GetBusMVByTransfDataTable = (DataSetGES.fn_J_GetBusMVByTransfDataTable)base.Clone();
                fn_J_GetBusMVByTransfDataTable.InitVars();
                return fn_J_GetBusMVByTransfDataTable;
            }

            // Token: 0x06001479 RID: 5241 RVA: 0x0008AEC4 File Offset: 0x000890C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetBusMVByTransfDataTable();
            }

            // Token: 0x0600147A RID: 5242 RVA: 0x0008AECC File Offset: 0x000890CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
            }

            // Token: 0x0600147B RID: 5243 RVA: 0x0008AF1C File Offset: 0x0008911C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnName.MaxLength = 512;
            }

            // Token: 0x0600147C RID: 5244 RVA: 0x0008AFC0 File Offset: 0x000891C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetBusMVByTransfRow Newfn_J_GetBusMVByTransfRow()
            {
                return (DataSetGES.fn_J_GetBusMVByTransfRow)base.NewRow();
            }

            // Token: 0x0600147D RID: 5245 RVA: 0x0008AFCD File Offset: 0x000891CD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_GetBusMVByTransfRow(builder);
            }

            // Token: 0x0600147E RID: 5246 RVA: 0x0008AFD5 File Offset: 0x000891D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_GetBusMVByTransfRow);
            }

            // Token: 0x0600147F RID: 5247 RVA: 0x0008AFE1 File Offset: 0x000891E1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_GetBusMVByTransfRowChanged != null)
                {
                    this.fn_J_GetBusMVByTransfRowChanged(this, new DataSetGES.fn_J_GetBusMVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusMVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001480 RID: 5248 RVA: 0x0008B014 File Offset: 0x00089214
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_GetBusMVByTransfRowChanging != null)
                {
                    this.fn_J_GetBusMVByTransfRowChanging(this, new DataSetGES.fn_J_GetBusMVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusMVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001481 RID: 5249 RVA: 0x0008B047 File Offset: 0x00089247
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_GetBusMVByTransfRowDeleted != null)
                {
                    this.fn_J_GetBusMVByTransfRowDeleted(this, new DataSetGES.fn_J_GetBusMVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusMVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001482 RID: 5250 RVA: 0x0008B07A File Offset: 0x0008927A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_GetBusMVByTransfRowDeleting != null)
                {
                    this.fn_J_GetBusMVByTransfRowDeleting(this, new DataSetGES.fn_J_GetBusMVByTransfRowChangeEvent((DataSetGES.fn_J_GetBusMVByTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001483 RID: 5251 RVA: 0x0008B0AD File Offset: 0x000892AD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefn_J_GetBusMVByTransfRow(DataSetGES.fn_J_GetBusMVByTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001484 RID: 5252 RVA: 0x0008B0BC File Offset: 0x000892BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_GetBusMVByTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A4B RID: 2635
            private DataColumn columnId;

            // Token: 0x04000A4C RID: 2636
            private DataColumn columnName;

            // Token: 0x04000A4D RID: 2637
            private DataColumn columnTypeCodeId;
        }

        // Token: 0x02000111 RID: 273
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_MeasAmperageTransfDataTable : TypedTableBase<DataSetGES.tJ_MeasAmperageTransfRow>
        {
            // Token: 0x06001485 RID: 5253 RVA: 0x0008B2B4 File Offset: 0x000894B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasAmperageTransfDataTable()
            {
                base.TableName = "tJ_MeasAmperageTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001486 RID: 5254 RVA: 0x0008B2DC File Offset: 0x000894DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasAmperageTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001487 RID: 5255 RVA: 0x0008B384 File Offset: 0x00089584
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MeasAmperageTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004E0 RID: 1248
            // (get) Token: 0x06001488 RID: 5256 RVA: 0x0008B394 File Offset: 0x00089594
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170004E1 RID: 1249
            // (get) Token: 0x06001489 RID: 5257 RVA: 0x0008B39C File Offset: 0x0008959C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x170004E2 RID: 1250
            // (get) Token: 0x0600148A RID: 5258 RVA: 0x0008B3A4 File Offset: 0x000895A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdBusColumn
            {
                get
                {
                    return this.columnIdBus;
                }
            }

            // Token: 0x170004E3 RID: 1251
            // (get) Token: 0x0600148B RID: 5259 RVA: 0x0008B3AC File Offset: 0x000895AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            // Token: 0x170004E4 RID: 1252
            // (get) Token: 0x0600148C RID: 5260 RVA: 0x0008B3B4 File Offset: 0x000895B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IaColumn
            {
                get
                {
                    return this.columnIa;
                }
            }

            // Token: 0x170004E5 RID: 1253
            // (get) Token: 0x0600148D RID: 5261 RVA: 0x0008B3BC File Offset: 0x000895BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IbColumn
            {
                get
                {
                    return this.columnIb;
                }
            }

            // Token: 0x170004E6 RID: 1254
            // (get) Token: 0x0600148E RID: 5262 RVA: 0x0008B3C4 File Offset: 0x000895C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcColumn
            {
                get
                {
                    return this.columnIc;
                }
            }

            // Token: 0x170004E7 RID: 1255
            // (get) Token: 0x0600148F RID: 5263 RVA: 0x0008B3CC File Offset: 0x000895CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IoColumn
            {
                get
                {
                    return this.columnIo;
                }
            }

            // Token: 0x170004E8 RID: 1256
            // (get) Token: 0x06001490 RID: 5264 RVA: 0x0008B3D4 File Offset: 0x000895D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170004E9 RID: 1257
            // (get) Token: 0x06001491 RID: 5265 RVA: 0x0008B3DC File Offset: 0x000895DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004EA RID: 1258
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasAmperageTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_MeasAmperageTransfRow)base.Rows[index];
                }
            }

            // Token: 0x1400015D RID: 349
            // (add) Token: 0x06001493 RID: 5267 RVA: 0x0008B3FC File Offset: 0x000895FC
            // (remove) Token: 0x06001494 RID: 5268 RVA: 0x0008B434 File Offset: 0x00089634
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasAmperageTransfRowChangeEventHandler tJ_MeasAmperageTransfRowChanging;

            // Token: 0x1400015E RID: 350
            // (add) Token: 0x06001495 RID: 5269 RVA: 0x0008B46C File Offset: 0x0008966C
            // (remove) Token: 0x06001496 RID: 5270 RVA: 0x0008B4A4 File Offset: 0x000896A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasAmperageTransfRowChangeEventHandler tJ_MeasAmperageTransfRowChanged;

            // Token: 0x1400015F RID: 351
            // (add) Token: 0x06001497 RID: 5271 RVA: 0x0008B4DC File Offset: 0x000896DC
            // (remove) Token: 0x06001498 RID: 5272 RVA: 0x0008B514 File Offset: 0x00089714
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasAmperageTransfRowChangeEventHandler tJ_MeasAmperageTransfRowDeleting;

            // Token: 0x14000160 RID: 352
            // (add) Token: 0x06001499 RID: 5273 RVA: 0x0008B54C File Offset: 0x0008974C
            // (remove) Token: 0x0600149A RID: 5274 RVA: 0x0008B584 File Offset: 0x00089784
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasAmperageTransfRowChangeEventHandler tJ_MeasAmperageTransfRowDeleted;

            // Token: 0x0600149B RID: 5275 RVA: 0x0008B5B9 File Offset: 0x000897B9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtJ_MeasAmperageTransfRow(DataSetGES.tJ_MeasAmperageTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600149C RID: 5276 RVA: 0x0008B5C8 File Offset: 0x000897C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasAmperageTransfRow AddtJ_MeasAmperageTransfRow(int idMeasurement, int IdBus, int idObjList, int Ia, int Ib, int Ic, int Io, bool Deleted)
            {
                DataSetGES.tJ_MeasAmperageTransfRow tJ_MeasAmperageTransfRow = (DataSetGES.tJ_MeasAmperageTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idMeasurement,
                    IdBus,
                    idObjList,
                    Ia,
                    Ib,
                    Ic,
                    Io,
                    Deleted
                };
                tJ_MeasAmperageTransfRow.ItemArray = itemArray;
                base.Rows.Add(tJ_MeasAmperageTransfRow);
                return tJ_MeasAmperageTransfRow;
            }

            // Token: 0x0600149D RID: 5277 RVA: 0x0008B64C File Offset: 0x0008984C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasAmperageTransfRow FindByid(int id)
            {
                return (DataSetGES.tJ_MeasAmperageTransfRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x0600149E RID: 5278 RVA: 0x0008B67C File Offset: 0x0008987C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasAmperageTransfDataTable tJ_MeasAmperageTransfDataTable = (DataSetGES.tJ_MeasAmperageTransfDataTable)base.Clone();
                tJ_MeasAmperageTransfDataTable.InitVars();
                return tJ_MeasAmperageTransfDataTable;
            }

            // Token: 0x0600149F RID: 5279 RVA: 0x0008B69C File Offset: 0x0008989C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasAmperageTransfDataTable();
            }

            // Token: 0x060014A0 RID: 5280 RVA: 0x0008B6A4 File Offset: 0x000898A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnIdBus = base.Columns["IdBus"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnIa = base.Columns["Ia"];
                this.columnIb = base.Columns["Ib"];
                this.columnIc = base.Columns["Ic"];
                this.columnIo = base.Columns["Io"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x060014A1 RID: 5281 RVA: 0x0008B778 File Offset: 0x00089978
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnIdBus = new DataColumn("IdBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdBus);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnIa = new DataColumn("Ia", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIa);
                this.columnIb = new DataColumn("Ib", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIb);
                this.columnIc = new DataColumn("Ic", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIc);
                this.columnIo = new DataColumn("Io", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIo);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
            }

            // Token: 0x060014A2 RID: 5282 RVA: 0x0008B9A3 File Offset: 0x00089BA3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasAmperageTransfRow NewtJ_MeasAmperageTransfRow()
            {
                return (DataSetGES.tJ_MeasAmperageTransfRow)base.NewRow();
            }

            // Token: 0x060014A3 RID: 5283 RVA: 0x0008B9B0 File Offset: 0x00089BB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_MeasAmperageTransfRow(builder);
            }

            // Token: 0x060014A4 RID: 5284 RVA: 0x0008B9B8 File Offset: 0x00089BB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_MeasAmperageTransfRow);
            }

            // Token: 0x060014A5 RID: 5285 RVA: 0x0008B9C4 File Offset: 0x00089BC4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_MeasAmperageTransfRowChanged != null)
                {
                    this.tJ_MeasAmperageTransfRowChanged(this, new DataSetGES.tJ_MeasAmperageTransfRowChangeEvent((DataSetGES.tJ_MeasAmperageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060014A6 RID: 5286 RVA: 0x0008B9F7 File Offset: 0x00089BF7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_MeasAmperageTransfRowChanging != null)
                {
                    this.tJ_MeasAmperageTransfRowChanging(this, new DataSetGES.tJ_MeasAmperageTransfRowChangeEvent((DataSetGES.tJ_MeasAmperageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060014A7 RID: 5287 RVA: 0x0008BA2A File Offset: 0x00089C2A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_MeasAmperageTransfRowDeleted != null)
                {
                    this.tJ_MeasAmperageTransfRowDeleted(this, new DataSetGES.tJ_MeasAmperageTransfRowChangeEvent((DataSetGES.tJ_MeasAmperageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060014A8 RID: 5288 RVA: 0x0008BA5D File Offset: 0x00089C5D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_MeasAmperageTransfRowDeleting != null)
                {
                    this.tJ_MeasAmperageTransfRowDeleting(this, new DataSetGES.tJ_MeasAmperageTransfRowChangeEvent((DataSetGES.tJ_MeasAmperageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060014A9 RID: 5289 RVA: 0x0008BA90 File Offset: 0x00089C90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetJ_MeasAmperageTransfRow(DataSetGES.tJ_MeasAmperageTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060014AA RID: 5290 RVA: 0x0008BAA0 File Offset: 0x00089CA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_MeasAmperageTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A52 RID: 2642
            private DataColumn columnid;

            // Token: 0x04000A53 RID: 2643
            private DataColumn columnidMeasurement;

            // Token: 0x04000A54 RID: 2644
            private DataColumn columnIdBus;

            // Token: 0x04000A55 RID: 2645
            private DataColumn columnidObjList;

            // Token: 0x04000A56 RID: 2646
            private DataColumn columnIa;

            // Token: 0x04000A57 RID: 2647
            private DataColumn columnIb;

            // Token: 0x04000A58 RID: 2648
            private DataColumn columnIc;

            // Token: 0x04000A59 RID: 2649
            private DataColumn columnIo;

            // Token: 0x04000A5A RID: 2650
            private DataColumn columnDeleted;
        }

        // Token: 0x02000112 RID: 274
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tSchm_ObjList2DataTable : TypedTableBase<DataSetGES.tSchm_ObjList2Row>
        {
            // Token: 0x060014AB RID: 5291 RVA: 0x0008BC98 File Offset: 0x00089E98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tSchm_ObjList2DataTable()
            {
                base.TableName = "tSchm_ObjList2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060014AC RID: 5292 RVA: 0x0008BCC0 File Offset: 0x00089EC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tSchm_ObjList2DataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060014AD RID: 5293 RVA: 0x0008BD68 File Offset: 0x00089F68
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tSchm_ObjList2DataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004EB RID: 1259
            // (get) Token: 0x060014AE RID: 5294 RVA: 0x0008BD78 File Offset: 0x00089F78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x170004EC RID: 1260
            // (get) Token: 0x060014AF RID: 5295 RVA: 0x0008BD80 File Offset: 0x00089F80
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170004ED RID: 1261
            // (get) Token: 0x060014B0 RID: 5296 RVA: 0x0008BD88 File Offset: 0x00089F88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x170004EE RID: 1262
            // (get) Token: 0x060014B1 RID: 5297 RVA: 0x0008BD90 File Offset: 0x00089F90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            // Token: 0x170004EF RID: 1263
            // (get) Token: 0x060014B2 RID: 5298 RVA: 0x0008BD98 File Offset: 0x00089F98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn OnOffColumn
            {
                get
                {
                    return this.columnOnOff;
                }
            }

            // Token: 0x170004F0 RID: 1264
            // (get) Token: 0x060014B3 RID: 5299 RVA: 0x0008BDA0 File Offset: 0x00089FA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn LocationColumn
            {
                get
                {
                    return this.columnLocation;
                }
            }

            // Token: 0x170004F1 RID: 1265
            // (get) Token: 0x060014B4 RID: 5300 RVA: 0x0008BDA8 File Offset: 0x00089FA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170004F2 RID: 1266
            // (get) Token: 0x060014B5 RID: 5301 RVA: 0x0008BDB0 File Offset: 0x00089FB0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NamePColumn
            {
                get
                {
                    return this.columnNameP;
                }
            }

            // Token: 0x170004F3 RID: 1267
            // (get) Token: 0x060014B6 RID: 5302 RVA: 0x0008BDB8 File Offset: 0x00089FB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            // Token: 0x170004F4 RID: 1268
            // (get) Token: 0x060014B7 RID: 5303 RVA: 0x0008BDC0 File Offset: 0x00089FC0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            // Token: 0x170004F5 RID: 1269
            // (get) Token: 0x060014B8 RID: 5304 RVA: 0x0008BDC8 File Offset: 0x00089FC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170004F6 RID: 1270
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjList2Row this[int index]
            {
                get
                {
                    return (DataSetGES.tSchm_ObjList2Row)base.Rows[index];
                }
            }

            // Token: 0x14000161 RID: 353
            // (add) Token: 0x060014BA RID: 5306 RVA: 0x0008BDE8 File Offset: 0x00089FE8
            // (remove) Token: 0x060014BB RID: 5307 RVA: 0x0008BE20 File Offset: 0x0008A020
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList2RowChangeEventHandler tSchm_ObjList2RowChanging;

            // Token: 0x14000162 RID: 354
            // (add) Token: 0x060014BC RID: 5308 RVA: 0x0008BE58 File Offset: 0x0008A058
            // (remove) Token: 0x060014BD RID: 5309 RVA: 0x0008BE90 File Offset: 0x0008A090
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList2RowChangeEventHandler tSchm_ObjList2RowChanged;

            // Token: 0x14000163 RID: 355
            // (add) Token: 0x060014BE RID: 5310 RVA: 0x0008BEC8 File Offset: 0x0008A0C8
            // (remove) Token: 0x060014BF RID: 5311 RVA: 0x0008BF00 File Offset: 0x0008A100
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList2RowChangeEventHandler tSchm_ObjList2RowDeleting;

            // Token: 0x14000164 RID: 356
            // (add) Token: 0x060014C0 RID: 5312 RVA: 0x0008BF38 File Offset: 0x0008A138
            // (remove) Token: 0x060014C1 RID: 5313 RVA: 0x0008BF70 File Offset: 0x0008A170
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList2RowChangeEventHandler tSchm_ObjList2RowDeleted;

            // Token: 0x060014C2 RID: 5314 RVA: 0x0008BFA5 File Offset: 0x0008A1A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtSchm_ObjList2Row(DataSetGES.tSchm_ObjList2Row row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060014C3 RID: 5315 RVA: 0x0008BFB4 File Offset: 0x0008A1B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjList2Row AddtSchm_ObjList2Row(string Name, int TypeCodeId, int IdParent, bool OnOff, int Location, bool Deleted, int NameP, int idParentAddl, int idGroup)
            {
                DataSetGES.tSchm_ObjList2Row tSchm_ObjList2Row = (DataSetGES.tSchm_ObjList2Row)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    Name,
                    TypeCodeId,
                    IdParent,
                    OnOff,
                    Location,
                    Deleted,
                    NameP,
                    idParentAddl,
                    idGroup
                };
                tSchm_ObjList2Row.ItemArray = itemArray;
                base.Rows.Add(tSchm_ObjList2Row);
                return tSchm_ObjList2Row;
            }

            // Token: 0x060014C4 RID: 5316 RVA: 0x0008C040 File Offset: 0x0008A240
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList2Row FindById(int Id)
            {
                return (DataSetGES.tSchm_ObjList2Row)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x060014C5 RID: 5317 RVA: 0x0008C070 File Offset: 0x0008A270
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjList2DataTable tSchm_ObjList2DataTable = (DataSetGES.tSchm_ObjList2DataTable)base.Clone();
                tSchm_ObjList2DataTable.InitVars();
                return tSchm_ObjList2DataTable;
            }

            // Token: 0x060014C6 RID: 5318 RVA: 0x0008C090 File Offset: 0x0008A290
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjList2DataTable();
            }

            // Token: 0x060014C7 RID: 5319 RVA: 0x0008C098 File Offset: 0x0008A298
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnOnOff = base.Columns["OnOff"];
                this.columnLocation = base.Columns["Location"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnNameP = base.Columns["NameP"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
                this.columnidGroup = base.Columns["idGroup"];
            }

            // Token: 0x060014C8 RID: 5320 RVA: 0x0008C184 File Offset: 0x0008A384
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnOnOff = new DataColumn("OnOff", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnOnOff);
                this.columnLocation = new DataColumn("Location", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnNameP = new DataColumn("NameP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNameP);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 512;
                this.columnDeleted.AllowDBNull = false;
                this.columnNameP.ReadOnly = true;
            }

            // Token: 0x060014C9 RID: 5321 RVA: 0x0008C3EC File Offset: 0x0008A5EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjList2Row NewtSchm_ObjList2Row()
            {
                return (DataSetGES.tSchm_ObjList2Row)base.NewRow();
            }

            // Token: 0x060014CA RID: 5322 RVA: 0x0008C3F9 File Offset: 0x0008A5F9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tSchm_ObjList2Row(builder);
            }

            // Token: 0x060014CB RID: 5323 RVA: 0x0008C401 File Offset: 0x0008A601
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tSchm_ObjList2Row);
            }

            // Token: 0x060014CC RID: 5324 RVA: 0x0008C40D File Offset: 0x0008A60D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tSchm_ObjList2RowChanged != null)
                {
                    this.tSchm_ObjList2RowChanged(this, new DataSetGES.tSchm_ObjList2RowChangeEvent((DataSetGES.tSchm_ObjList2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014CD RID: 5325 RVA: 0x0008C440 File Offset: 0x0008A640
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tSchm_ObjList2RowChanging != null)
                {
                    this.tSchm_ObjList2RowChanging(this, new DataSetGES.tSchm_ObjList2RowChangeEvent((DataSetGES.tSchm_ObjList2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014CE RID: 5326 RVA: 0x0008C473 File Offset: 0x0008A673
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tSchm_ObjList2RowDeleted != null)
                {
                    this.tSchm_ObjList2RowDeleted(this, new DataSetGES.tSchm_ObjList2RowChangeEvent((DataSetGES.tSchm_ObjList2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014CF RID: 5327 RVA: 0x0008C4A6 File Offset: 0x0008A6A6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tSchm_ObjList2RowDeleting != null)
                {
                    this.tSchm_ObjList2RowDeleting(this, new DataSetGES.tSchm_ObjList2RowChangeEvent((DataSetGES.tSchm_ObjList2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014D0 RID: 5328 RVA: 0x0008C4D9 File Offset: 0x0008A6D9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetSchm_ObjList2Row(DataSetGES.tSchm_ObjList2Row row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060014D1 RID: 5329 RVA: 0x0008C4E8 File Offset: 0x0008A6E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tSchm_ObjList2DataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A5F RID: 2655
            private DataColumn columnId;

            // Token: 0x04000A60 RID: 2656
            private DataColumn columnName;

            // Token: 0x04000A61 RID: 2657
            private DataColumn columnTypeCodeId;

            // Token: 0x04000A62 RID: 2658
            private DataColumn columnIdParent;

            // Token: 0x04000A63 RID: 2659
            private DataColumn columnOnOff;

            // Token: 0x04000A64 RID: 2660
            private DataColumn columnLocation;

            // Token: 0x04000A65 RID: 2661
            private DataColumn columnDeleted;

            // Token: 0x04000A66 RID: 2662
            private DataColumn columnNameP;

            // Token: 0x04000A67 RID: 2663
            private DataColumn columnidParentAddl;

            // Token: 0x04000A68 RID: 2664
            private DataColumn columnidGroup;
        }

        // Token: 0x02000113 RID: 275
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tSchm_ObjList3DataTable : TypedTableBase<DataSetGES.tSchm_ObjList3Row>
        {
            // Token: 0x060014D2 RID: 5330 RVA: 0x0008C6E0 File Offset: 0x0008A8E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tSchm_ObjList3DataTable()
            {
                base.TableName = "tSchm_ObjList3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060014D3 RID: 5331 RVA: 0x0008C708 File Offset: 0x0008A908
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tSchm_ObjList3DataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060014D4 RID: 5332 RVA: 0x0008C7B0 File Offset: 0x0008A9B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected tSchm_ObjList3DataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170004F7 RID: 1271
            // (get) Token: 0x060014D5 RID: 5333 RVA: 0x0008C7C0 File Offset: 0x0008A9C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x170004F8 RID: 1272
            // (get) Token: 0x060014D6 RID: 5334 RVA: 0x0008C7C8 File Offset: 0x0008A9C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170004F9 RID: 1273
            // (get) Token: 0x060014D7 RID: 5335 RVA: 0x0008C7D0 File Offset: 0x0008A9D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x170004FA RID: 1274
            // (get) Token: 0x060014D8 RID: 5336 RVA: 0x0008C7D8 File Offset: 0x0008A9D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            // Token: 0x170004FB RID: 1275
            // (get) Token: 0x060014D9 RID: 5337 RVA: 0x0008C7E0 File Offset: 0x0008A9E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn OnOffColumn
            {
                get
                {
                    return this.columnOnOff;
                }
            }

            // Token: 0x170004FC RID: 1276
            // (get) Token: 0x060014DA RID: 5338 RVA: 0x0008C7E8 File Offset: 0x0008A9E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn LocationColumn
            {
                get
                {
                    return this.columnLocation;
                }
            }

            // Token: 0x170004FD RID: 1277
            // (get) Token: 0x060014DB RID: 5339 RVA: 0x0008C7F0 File Offset: 0x0008A9F0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170004FE RID: 1278
            // (get) Token: 0x060014DC RID: 5340 RVA: 0x0008C7F8 File Offset: 0x0008A9F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NamePColumn
            {
                get
                {
                    return this.columnNameP;
                }
            }

            // Token: 0x170004FF RID: 1279
            // (get) Token: 0x060014DD RID: 5341 RVA: 0x0008C800 File Offset: 0x0008AA00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idParentAddlColumn
            {
                get
                {
                    return this.columnidParentAddl;
                }
            }

            // Token: 0x17000500 RID: 1280
            // (get) Token: 0x060014DE RID: 5342 RVA: 0x0008C808 File Offset: 0x0008AA08
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idGroupColumn
            {
                get
                {
                    return this.columnidGroup;
                }
            }

            // Token: 0x17000501 RID: 1281
            // (get) Token: 0x060014DF RID: 5343 RVA: 0x0008C810 File Offset: 0x0008AA10
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000502 RID: 1282
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjList3Row this[int index]
            {
                get
                {
                    return (DataSetGES.tSchm_ObjList3Row)base.Rows[index];
                }
            }

            // Token: 0x14000165 RID: 357
            // (add) Token: 0x060014E1 RID: 5345 RVA: 0x0008C830 File Offset: 0x0008AA30
            // (remove) Token: 0x060014E2 RID: 5346 RVA: 0x0008C868 File Offset: 0x0008AA68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList3RowChangeEventHandler tSchm_ObjList3RowChanging;

            // Token: 0x14000166 RID: 358
            // (add) Token: 0x060014E3 RID: 5347 RVA: 0x0008C8A0 File Offset: 0x0008AAA0
            // (remove) Token: 0x060014E4 RID: 5348 RVA: 0x0008C8D8 File Offset: 0x0008AAD8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList3RowChangeEventHandler tSchm_ObjList3RowChanged;

            // Token: 0x14000167 RID: 359
            // (add) Token: 0x060014E5 RID: 5349 RVA: 0x0008C910 File Offset: 0x0008AB10
            // (remove) Token: 0x060014E6 RID: 5350 RVA: 0x0008C948 File Offset: 0x0008AB48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList3RowChangeEventHandler tSchm_ObjList3RowDeleting;

            // Token: 0x14000168 RID: 360
            // (add) Token: 0x060014E7 RID: 5351 RVA: 0x0008C980 File Offset: 0x0008AB80
            // (remove) Token: 0x060014E8 RID: 5352 RVA: 0x0008C9B8 File Offset: 0x0008ABB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tSchm_ObjList3RowChangeEventHandler tSchm_ObjList3RowDeleted;

            // Token: 0x060014E9 RID: 5353 RVA: 0x0008C9ED File Offset: 0x0008ABED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtSchm_ObjList3Row(DataSetGES.tSchm_ObjList3Row row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060014EA RID: 5354 RVA: 0x0008C9FC File Offset: 0x0008ABFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList3Row AddtSchm_ObjList3Row(string Name, int TypeCodeId, int IdParent, bool OnOff, int Location, bool Deleted, int NameP, int idParentAddl, int idGroup)
            {
                DataSetGES.tSchm_ObjList3Row tSchm_ObjList3Row = (DataSetGES.tSchm_ObjList3Row)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    Name,
                    TypeCodeId,
                    IdParent,
                    OnOff,
                    Location,
                    Deleted,
                    NameP,
                    idParentAddl,
                    idGroup
                };
                tSchm_ObjList3Row.ItemArray = itemArray;
                base.Rows.Add(tSchm_ObjList3Row);
                return tSchm_ObjList3Row;
            }

            // Token: 0x060014EB RID: 5355 RVA: 0x0008CA88 File Offset: 0x0008AC88
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList3Row FindById(int Id)
            {
                return (DataSetGES.tSchm_ObjList3Row)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x060014EC RID: 5356 RVA: 0x0008CAB8 File Offset: 0x0008ACB8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tSchm_ObjList3DataTable tSchm_ObjList3DataTable = (DataSetGES.tSchm_ObjList3DataTable)base.Clone();
                tSchm_ObjList3DataTable.InitVars();
                return tSchm_ObjList3DataTable;
            }

            // Token: 0x060014ED RID: 5357 RVA: 0x0008CAD8 File Offset: 0x0008ACD8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tSchm_ObjList3DataTable();
            }

            // Token: 0x060014EE RID: 5358 RVA: 0x0008CAE0 File Offset: 0x0008ACE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnOnOff = base.Columns["OnOff"];
                this.columnLocation = base.Columns["Location"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnNameP = base.Columns["NameP"];
                this.columnidParentAddl = base.Columns["idParentAddl"];
                this.columnidGroup = base.Columns["idGroup"];
            }

            // Token: 0x060014EF RID: 5359 RVA: 0x0008CBCC File Offset: 0x0008ADCC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnOnOff = new DataColumn("OnOff", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnOnOff);
                this.columnLocation = new DataColumn("Location", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnNameP = new DataColumn("NameP", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnNameP);
                this.columnidParentAddl = new DataColumn("idParentAddl", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentAddl);
                this.columnidGroup = new DataColumn("idGroup", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidGroup);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1L;
                this.columnId.AutoIncrementStep = -1L;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnName.MaxLength = 512;
                this.columnDeleted.AllowDBNull = false;
                this.columnNameP.ReadOnly = true;
            }

            // Token: 0x060014F0 RID: 5360 RVA: 0x0008CE34 File Offset: 0x0008B034
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList3Row NewtSchm_ObjList3Row()
            {
                return (DataSetGES.tSchm_ObjList3Row)base.NewRow();
            }

            // Token: 0x060014F1 RID: 5361 RVA: 0x0008CE41 File Offset: 0x0008B041
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tSchm_ObjList3Row(builder);
            }

            // Token: 0x060014F2 RID: 5362 RVA: 0x0008CE49 File Offset: 0x0008B049
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tSchm_ObjList3Row);
            }

            // Token: 0x060014F3 RID: 5363 RVA: 0x0008CE55 File Offset: 0x0008B055
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tSchm_ObjList3RowChanged != null)
                {
                    this.tSchm_ObjList3RowChanged(this, new DataSetGES.tSchm_ObjList3RowChangeEvent((DataSetGES.tSchm_ObjList3Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014F4 RID: 5364 RVA: 0x0008CE88 File Offset: 0x0008B088
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tSchm_ObjList3RowChanging != null)
                {
                    this.tSchm_ObjList3RowChanging(this, new DataSetGES.tSchm_ObjList3RowChangeEvent((DataSetGES.tSchm_ObjList3Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014F5 RID: 5365 RVA: 0x0008CEBB File Offset: 0x0008B0BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tSchm_ObjList3RowDeleted != null)
                {
                    this.tSchm_ObjList3RowDeleted(this, new DataSetGES.tSchm_ObjList3RowChangeEvent((DataSetGES.tSchm_ObjList3Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014F6 RID: 5366 RVA: 0x0008CEEE File Offset: 0x0008B0EE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tSchm_ObjList3RowDeleting != null)
                {
                    this.tSchm_ObjList3RowDeleting(this, new DataSetGES.tSchm_ObjList3RowChangeEvent((DataSetGES.tSchm_ObjList3Row)e.Row, e.Action));
                }
            }

            // Token: 0x060014F7 RID: 5367 RVA: 0x0008CF21 File Offset: 0x0008B121
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovetSchm_ObjList3Row(DataSetGES.tSchm_ObjList3Row row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060014F8 RID: 5368 RVA: 0x0008CF30 File Offset: 0x0008B130
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tSchm_ObjList3DataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A6D RID: 2669
            private DataColumn columnId;

            // Token: 0x04000A6E RID: 2670
            private DataColumn columnName;

            // Token: 0x04000A6F RID: 2671
            private DataColumn columnTypeCodeId;

            // Token: 0x04000A70 RID: 2672
            private DataColumn columnIdParent;

            // Token: 0x04000A71 RID: 2673
            private DataColumn columnOnOff;

            // Token: 0x04000A72 RID: 2674
            private DataColumn columnLocation;

            // Token: 0x04000A73 RID: 2675
            private DataColumn columnDeleted;

            // Token: 0x04000A74 RID: 2676
            private DataColumn columnNameP;

            // Token: 0x04000A75 RID: 2677
            private DataColumn columnidParentAddl;

            // Token: 0x04000A76 RID: 2678
            private DataColumn columnidGroup;
        }

        // Token: 0x02000114 RID: 276
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vP_TransfBySubstationDataTable : TypedTableBase<DataSetGES.vP_TransfBySubstationRow>
        {
            // Token: 0x060014F9 RID: 5369 RVA: 0x0008D128 File Offset: 0x0008B328
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_TransfBySubstationDataTable()
            {
                base.TableName = "vP_TransfBySubstation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060014FA RID: 5370 RVA: 0x0008D150 File Offset: 0x0008B350
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vP_TransfBySubstationDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060014FB RID: 5371 RVA: 0x0008D1F8 File Offset: 0x0008B3F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vP_TransfBySubstationDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000503 RID: 1283
            // (get) Token: 0x060014FC RID: 5372 RVA: 0x0008D208 File Offset: 0x0008B408
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            // Token: 0x17000504 RID: 1284
            // (get) Token: 0x060014FD RID: 5373 RVA: 0x0008D210 File Offset: 0x0008B410
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idNetRegionColumn
            {
                get
                {
                    return this.columnidNetRegion;
                }
            }

            // Token: 0x17000505 RID: 1285
            // (get) Token: 0x060014FE RID: 5374 RVA: 0x0008D218 File Offset: 0x0008B418
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NetRegionValueColumn
            {
                get
                {
                    return this.columnNetRegionValue;
                }
            }

            // Token: 0x17000506 RID: 1286
            // (get) Token: 0x060014FF RID: 5375 RVA: 0x0008D220 File Offset: 0x0008B420
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubstationColumn
            {
                get
                {
                    return this.columnNameSubstation;
                }
            }

            // Token: 0x17000507 RID: 1287
            // (get) Token: 0x06001500 RID: 5376 RVA: 0x0008D228 File Offset: 0x0008B428
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000508 RID: 1288
            // (get) Token: 0x06001501 RID: 5377 RVA: 0x0008D230 File Offset: 0x0008B430
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfNameColumn
            {
                get
                {
                    return this.columnNameTransfName;
                }
            }

            // Token: 0x17000509 RID: 1289
            // (get) Token: 0x06001502 RID: 5378 RVA: 0x0008D238 File Offset: 0x0008B438
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idPassportColumn
            {
                get
                {
                    return this.columnidPassport;
                }
            }

            // Token: 0x1700050A RID: 1290
            // (get) Token: 0x06001503 RID: 5379 RVA: 0x0008D240 File Offset: 0x0008B440
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700050B RID: 1291
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_TransfBySubstationRow this[int index]
            {
                get
                {
                    return (DataSetGES.vP_TransfBySubstationRow)base.Rows[index];
                }
            }

            // Token: 0x14000169 RID: 361
            // (add) Token: 0x06001505 RID: 5381 RVA: 0x0008D260 File Offset: 0x0008B460
            // (remove) Token: 0x06001506 RID: 5382 RVA: 0x0008D298 File Offset: 0x0008B498
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_TransfBySubstationRowChangeEventHandler vP_TransfBySubstationRowChanging;

            // Token: 0x1400016A RID: 362
            // (add) Token: 0x06001507 RID: 5383 RVA: 0x0008D2D0 File Offset: 0x0008B4D0
            // (remove) Token: 0x06001508 RID: 5384 RVA: 0x0008D308 File Offset: 0x0008B508
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_TransfBySubstationRowChangeEventHandler vP_TransfBySubstationRowChanged;

            // Token: 0x1400016B RID: 363
            // (add) Token: 0x06001509 RID: 5385 RVA: 0x0008D340 File Offset: 0x0008B540
            // (remove) Token: 0x0600150A RID: 5386 RVA: 0x0008D378 File Offset: 0x0008B578
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_TransfBySubstationRowChangeEventHandler vP_TransfBySubstationRowDeleting;

            // Token: 0x1400016C RID: 364
            // (add) Token: 0x0600150B RID: 5387 RVA: 0x0008D3B0 File Offset: 0x0008B5B0
            // (remove) Token: 0x0600150C RID: 5388 RVA: 0x0008D3E8 File Offset: 0x0008B5E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_TransfBySubstationRowChangeEventHandler vP_TransfBySubstationRowDeleted;

            // Token: 0x0600150D RID: 5389 RVA: 0x0008D41D File Offset: 0x0008B61D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvP_TransfBySubstationRow(DataSetGES.vP_TransfBySubstationRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600150E RID: 5390 RVA: 0x0008D42C File Offset: 0x0008B62C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_TransfBySubstationRow AddvP_TransfBySubstationRow(int idSubstation, int idNetRegion, decimal NetRegionValue, string NameSubstation, int idTransf, string NameTransfName, int idPassport)
            {
                DataSetGES.vP_TransfBySubstationRow vP_TransfBySubstationRow = (DataSetGES.vP_TransfBySubstationRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idSubstation,
                    idNetRegion,
                    NetRegionValue,
                    NameSubstation,
                    idTransf,
                    NameTransfName,
                    idPassport
                };
                vP_TransfBySubstationRow.ItemArray = itemArray;
                base.Rows.Add(vP_TransfBySubstationRow);
                return vP_TransfBySubstationRow;
            }

            // Token: 0x0600150F RID: 5391 RVA: 0x0008D49C File Offset: 0x0008B69C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vP_TransfBySubstationDataTable vP_TransfBySubstationDataTable = (DataSetGES.vP_TransfBySubstationDataTable)base.Clone();
                vP_TransfBySubstationDataTable.InitVars();
                return vP_TransfBySubstationDataTable;
            }

            // Token: 0x06001510 RID: 5392 RVA: 0x0008D4BC File Offset: 0x0008B6BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_TransfBySubstationDataTable();
            }

            // Token: 0x06001511 RID: 5393 RVA: 0x0008D4C4 File Offset: 0x0008B6C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnidNetRegion = base.Columns["idNetRegion"];
                this.columnNetRegionValue = base.Columns["NetRegionValue"];
                this.columnNameSubstation = base.Columns["NameSubstation"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransfName = base.Columns["NameTransfName"];
                this.columnidPassport = base.Columns["idPassport"];
            }

            // Token: 0x06001512 RID: 5394 RVA: 0x0008D56C File Offset: 0x0008B76C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnidNetRegion = new DataColumn("idNetRegion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidNetRegion);
                this.columnNetRegionValue = new DataColumn("NetRegionValue", typeof(decimal), null, MappingType.Element);
                base.Columns.Add(this.columnNetRegionValue);
                this.columnNameSubstation = new DataColumn("NameSubstation", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSubstation);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransfName = new DataColumn("NameTransfName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransfName);
                this.columnidPassport = new DataColumn("idPassport", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidPassport);
                this.columnidSubstation.AllowDBNull = false;
                this.columnidNetRegion.ReadOnly = true;
                this.columnNetRegionValue.ReadOnly = true;
                this.columnNameSubstation.MaxLength = 512;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameTransfName.MaxLength = 512;
            }

            // Token: 0x06001513 RID: 5395 RVA: 0x0008D704 File Offset: 0x0008B904
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_TransfBySubstationRow NewvP_TransfBySubstationRow()
            {
                return (DataSetGES.vP_TransfBySubstationRow)base.NewRow();
            }

            // Token: 0x06001514 RID: 5396 RVA: 0x0008D711 File Offset: 0x0008B911
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vP_TransfBySubstationRow(builder);
            }

            // Token: 0x06001515 RID: 5397 RVA: 0x0008D719 File Offset: 0x0008B919
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vP_TransfBySubstationRow);
            }

            // Token: 0x06001516 RID: 5398 RVA: 0x0008D725 File Offset: 0x0008B925
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vP_TransfBySubstationRowChanged != null)
                {
                    this.vP_TransfBySubstationRowChanged(this, new DataSetGES.vP_TransfBySubstationRowChangeEvent((DataSetGES.vP_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001517 RID: 5399 RVA: 0x0008D758 File Offset: 0x0008B958
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vP_TransfBySubstationRowChanging != null)
                {
                    this.vP_TransfBySubstationRowChanging(this, new DataSetGES.vP_TransfBySubstationRowChangeEvent((DataSetGES.vP_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001518 RID: 5400 RVA: 0x0008D78B File Offset: 0x0008B98B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vP_TransfBySubstationRowDeleted != null)
                {
                    this.vP_TransfBySubstationRowDeleted(this, new DataSetGES.vP_TransfBySubstationRowChangeEvent((DataSetGES.vP_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001519 RID: 5401 RVA: 0x0008D7BE File Offset: 0x0008B9BE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vP_TransfBySubstationRowDeleting != null)
                {
                    this.vP_TransfBySubstationRowDeleting(this, new DataSetGES.vP_TransfBySubstationRowChangeEvent((DataSetGES.vP_TransfBySubstationRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600151A RID: 5402 RVA: 0x0008D7F1 File Offset: 0x0008B9F1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevP_TransfBySubstationRow(DataSetGES.vP_TransfBySubstationRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600151B RID: 5403 RVA: 0x0008D800 File Offset: 0x0008BA00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vP_TransfBySubstationDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A7B RID: 2683
            private DataColumn columnidSubstation;

            // Token: 0x04000A7C RID: 2684
            private DataColumn columnidNetRegion;

            // Token: 0x04000A7D RID: 2685
            private DataColumn columnNetRegionValue;

            // Token: 0x04000A7E RID: 2686
            private DataColumn columnNameSubstation;

            // Token: 0x04000A7F RID: 2687
            private DataColumn columnidTransf;

            // Token: 0x04000A80 RID: 2688
            private DataColumn columnNameTransfName;

            // Token: 0x04000A81 RID: 2689
            private DataColumn columnidPassport;
        }

        // Token: 0x02000115 RID: 277
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasAmpSubTransf_TEMPDataTable : TypedTableBase<DataSetGES.vJ_MeasAmpSubTransf_TEMPRow>
        {
            // Token: 0x0600151C RID: 5404 RVA: 0x0008D9F8 File Offset: 0x0008BBF8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasAmpSubTransf_TEMPDataTable()
            {
                base.TableName = "vJ_MeasAmpSubTransf_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600151D RID: 5405 RVA: 0x0008DA20 File Offset: 0x0008BC20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasAmpSubTransf_TEMPDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600151E RID: 5406 RVA: 0x0008DAC8 File Offset: 0x0008BCC8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasAmpSubTransf_TEMPDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700050C RID: 1292
            // (get) Token: 0x0600151F RID: 5407 RVA: 0x0008DAD8 File Offset: 0x0008BCD8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700050D RID: 1293
            // (get) Token: 0x06001520 RID: 5408 RVA: 0x0008DAE0 File Offset: 0x0008BCE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            // Token: 0x1700050E RID: 1294
            // (get) Token: 0x06001521 RID: 5409 RVA: 0x0008DAE8 File Offset: 0x0008BCE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x1700050F RID: 1295
            // (get) Token: 0x06001522 RID: 5410 RVA: 0x0008DAF0 File Offset: 0x0008BCF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x17000510 RID: 1296
            // (get) Token: 0x06001523 RID: 5411 RVA: 0x0008DAF8 File Offset: 0x0008BCF8
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000511 RID: 1297
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasAmpSubTransf_TEMPRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)base.Rows[index];
                }
            }

            // Token: 0x1400016D RID: 365
            // (add) Token: 0x06001525 RID: 5413 RVA: 0x0008DB18 File Offset: 0x0008BD18
            // (remove) Token: 0x06001526 RID: 5414 RVA: 0x0008DB50 File Offset: 0x0008BD50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEventHandler vJ_MeasAmpSubTransf_TEMPRowChanging;

            // Token: 0x1400016E RID: 366
            // (add) Token: 0x06001527 RID: 5415 RVA: 0x0008DB88 File Offset: 0x0008BD88
            // (remove) Token: 0x06001528 RID: 5416 RVA: 0x0008DBC0 File Offset: 0x0008BDC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEventHandler vJ_MeasAmpSubTransf_TEMPRowChanged;

            // Token: 0x1400016F RID: 367
            // (add) Token: 0x06001529 RID: 5417 RVA: 0x0008DBF8 File Offset: 0x0008BDF8
            // (remove) Token: 0x0600152A RID: 5418 RVA: 0x0008DC30 File Offset: 0x0008BE30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEventHandler vJ_MeasAmpSubTransf_TEMPRowDeleting;

            // Token: 0x14000170 RID: 368
            // (add) Token: 0x0600152B RID: 5419 RVA: 0x0008DC68 File Offset: 0x0008BE68
            // (remove) Token: 0x0600152C RID: 5420 RVA: 0x0008DCA0 File Offset: 0x0008BEA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEventHandler vJ_MeasAmpSubTransf_TEMPRowDeleted;

            // Token: 0x0600152D RID: 5421 RVA: 0x0008DCD5 File Offset: 0x0008BED5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_MeasAmpSubTransf_TEMPRow(DataSetGES.vJ_MeasAmpSubTransf_TEMPRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600152E RID: 5422 RVA: 0x0008DCE4 File Offset: 0x0008BEE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasAmpSubTransf_TEMPRow AddvJ_MeasAmpSubTransf_TEMPRow(int id, int idSub, int idTransf, string NameTransf)
            {
                DataSetGES.vJ_MeasAmpSubTransf_TEMPRow vJ_MeasAmpSubTransf_TEMPRow = (DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idSub,
                    idTransf,
                    NameTransf
                };
                vJ_MeasAmpSubTransf_TEMPRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasAmpSubTransf_TEMPRow);
                return vJ_MeasAmpSubTransf_TEMPRow;
            }

            // Token: 0x0600152F RID: 5423 RVA: 0x0008DD3C File Offset: 0x0008BF3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasAmpSubTransf_TEMPRow FindByid(int id)
            {
                return (DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06001530 RID: 5424 RVA: 0x0008DD6C File Offset: 0x0008BF6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable vJ_MeasAmpSubTransf_TEMPDataTable = (DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable)base.Clone();
                vJ_MeasAmpSubTransf_TEMPDataTable.InitVars();
                return vJ_MeasAmpSubTransf_TEMPDataTable;
            }

            // Token: 0x06001531 RID: 5425 RVA: 0x0008DD8C File Offset: 0x0008BF8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable();
            }

            // Token: 0x06001532 RID: 5426 RVA: 0x0008DD94 File Offset: 0x0008BF94
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidSub = base.Columns["idSub"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            // Token: 0x06001533 RID: 5427 RVA: 0x0008DDFC File Offset: 0x0008BFFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidSub.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameTransf.MaxLength = 512;
            }

            // Token: 0x06001534 RID: 5428 RVA: 0x0008DF24 File Offset: 0x0008C124
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasAmpSubTransf_TEMPRow NewvJ_MeasAmpSubTransf_TEMPRow()
            {
                return (DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)base.NewRow();
            }

            // Token: 0x06001535 RID: 5429 RVA: 0x0008DF31 File Offset: 0x0008C131
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasAmpSubTransf_TEMPRow(builder);
            }

            // Token: 0x06001536 RID: 5430 RVA: 0x0008DF39 File Offset: 0x0008C139
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasAmpSubTransf_TEMPRow);
            }

            // Token: 0x06001537 RID: 5431 RVA: 0x0008DF45 File Offset: 0x0008C145
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasAmpSubTransf_TEMPRowChanged != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowChanged(this, new DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001538 RID: 5432 RVA: 0x0008DF78 File Offset: 0x0008C178
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasAmpSubTransf_TEMPRowChanging != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowChanging(this, new DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001539 RID: 5433 RVA: 0x0008DFAB File Offset: 0x0008C1AB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasAmpSubTransf_TEMPRowDeleted != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowDeleted(this, new DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600153A RID: 5434 RVA: 0x0008DFDE File Offset: 0x0008C1DE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasAmpSubTransf_TEMPRowDeleting != null)
                {
                    this.vJ_MeasAmpSubTransf_TEMPRowDeleting(this, new DataSetGES.vJ_MeasAmpSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasAmpSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600153B RID: 5435 RVA: 0x0008E011 File Offset: 0x0008C211
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_MeasAmpSubTransf_TEMPRow(DataSetGES.vJ_MeasAmpSubTransf_TEMPRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600153C RID: 5436 RVA: 0x0008E020 File Offset: 0x0008C220
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasAmpSubTransf_TEMPDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A86 RID: 2694
            private DataColumn columnid;

            // Token: 0x04000A87 RID: 2695
            private DataColumn columnidSub;

            // Token: 0x04000A88 RID: 2696
            private DataColumn columnidTransf;

            // Token: 0x04000A89 RID: 2697
            private DataColumn columnNameTransf;
        }

        // Token: 0x02000116 RID: 278
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasSubTransf_TEMPDataTable : TypedTableBase<DataSetGES.vJ_MeasSubTransf_TEMPRow>
        {
            // Token: 0x0600153D RID: 5437 RVA: 0x0008E218 File Offset: 0x0008C418
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasSubTransf_TEMPDataTable()
            {
                base.TableName = "vJ_MeasSubTransf_TEMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600153E RID: 5438 RVA: 0x0008E240 File Offset: 0x0008C440
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasSubTransf_TEMPDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600153F RID: 5439 RVA: 0x0008E2E8 File Offset: 0x0008C4E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasSubTransf_TEMPDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000512 RID: 1298
            // (get) Token: 0x06001540 RID: 5440 RVA: 0x0008E2F8 File Offset: 0x0008C4F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000513 RID: 1299
            // (get) Token: 0x06001541 RID: 5441 RVA: 0x0008E300 File Offset: 0x0008C500
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            // Token: 0x17000514 RID: 1300
            // (get) Token: 0x06001542 RID: 5442 RVA: 0x0008E308 File Offset: 0x0008C508
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000515 RID: 1301
            // (get) Token: 0x06001543 RID: 5443 RVA: 0x0008E310 File Offset: 0x0008C510
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x17000516 RID: 1302
            // (get) Token: 0x06001544 RID: 5444 RVA: 0x0008E318 File Offset: 0x0008C518
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000517 RID: 1303
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasSubTransf_TEMPRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasSubTransf_TEMPRow)base.Rows[index];
                }
            }

            // Token: 0x14000171 RID: 369
            // (add) Token: 0x06001546 RID: 5446 RVA: 0x0008E338 File Offset: 0x0008C538
            // (remove) Token: 0x06001547 RID: 5447 RVA: 0x0008E370 File Offset: 0x0008C570
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEventHandler vJ_MeasSubTransf_TEMPRowChanging;

            // Token: 0x14000172 RID: 370
            // (add) Token: 0x06001548 RID: 5448 RVA: 0x0008E3A8 File Offset: 0x0008C5A8
            // (remove) Token: 0x06001549 RID: 5449 RVA: 0x0008E3E0 File Offset: 0x0008C5E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEventHandler vJ_MeasSubTransf_TEMPRowChanged;

            // Token: 0x14000173 RID: 371
            // (add) Token: 0x0600154A RID: 5450 RVA: 0x0008E418 File Offset: 0x0008C618
            // (remove) Token: 0x0600154B RID: 5451 RVA: 0x0008E450 File Offset: 0x0008C650
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEventHandler vJ_MeasSubTransf_TEMPRowDeleting;

            // Token: 0x14000174 RID: 372
            // (add) Token: 0x0600154C RID: 5452 RVA: 0x0008E488 File Offset: 0x0008C688
            // (remove) Token: 0x0600154D RID: 5453 RVA: 0x0008E4C0 File Offset: 0x0008C6C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEventHandler vJ_MeasSubTransf_TEMPRowDeleted;

            // Token: 0x0600154E RID: 5454 RVA: 0x0008E4F5 File Offset: 0x0008C6F5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_MeasSubTransf_TEMPRow(DataSetGES.vJ_MeasSubTransf_TEMPRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600154F RID: 5455 RVA: 0x0008E504 File Offset: 0x0008C704
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasSubTransf_TEMPRow AddvJ_MeasSubTransf_TEMPRow(int id, int idSub, int idTransf, string NameTransf)
            {
                DataSetGES.vJ_MeasSubTransf_TEMPRow vJ_MeasSubTransf_TEMPRow = (DataSetGES.vJ_MeasSubTransf_TEMPRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idSub,
                    idTransf,
                    NameTransf
                };
                vJ_MeasSubTransf_TEMPRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasSubTransf_TEMPRow);
                return vJ_MeasSubTransf_TEMPRow;
            }

            // Token: 0x06001550 RID: 5456 RVA: 0x0008E55C File Offset: 0x0008C75C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasSubTransf_TEMPRow FindByid(int id)
            {
                return (DataSetGES.vJ_MeasSubTransf_TEMPRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06001551 RID: 5457 RVA: 0x0008E58C File Offset: 0x0008C78C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasSubTransf_TEMPDataTable vJ_MeasSubTransf_TEMPDataTable = (DataSetGES.vJ_MeasSubTransf_TEMPDataTable)base.Clone();
                vJ_MeasSubTransf_TEMPDataTable.InitVars();
                return vJ_MeasSubTransf_TEMPDataTable;
            }

            // Token: 0x06001552 RID: 5458 RVA: 0x0008E5AC File Offset: 0x0008C7AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasSubTransf_TEMPDataTable();
            }

            // Token: 0x06001553 RID: 5459 RVA: 0x0008E5B4 File Offset: 0x0008C7B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidSub = base.Columns["idSub"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
            }

            // Token: 0x06001554 RID: 5460 RVA: 0x0008E61C File Offset: 0x0008C81C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidSub.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameTransf.MaxLength = 512;
            }

            // Token: 0x06001555 RID: 5461 RVA: 0x0008E744 File Offset: 0x0008C944
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasSubTransf_TEMPRow NewvJ_MeasSubTransf_TEMPRow()
            {
                return (DataSetGES.vJ_MeasSubTransf_TEMPRow)base.NewRow();
            }

            // Token: 0x06001556 RID: 5462 RVA: 0x0008E751 File Offset: 0x0008C951
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasSubTransf_TEMPRow(builder);
            }

            // Token: 0x06001557 RID: 5463 RVA: 0x0008E759 File Offset: 0x0008C959
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasSubTransf_TEMPRow);
            }

            // Token: 0x06001558 RID: 5464 RVA: 0x0008E765 File Offset: 0x0008C965
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasSubTransf_TEMPRowChanged != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowChanged(this, new DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001559 RID: 5465 RVA: 0x0008E798 File Offset: 0x0008C998
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasSubTransf_TEMPRowChanging != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowChanging(this, new DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600155A RID: 5466 RVA: 0x0008E7CB File Offset: 0x0008C9CB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasSubTransf_TEMPRowDeleted != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowDeleted(this, new DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600155B RID: 5467 RVA: 0x0008E7FE File Offset: 0x0008C9FE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasSubTransf_TEMPRowDeleting != null)
                {
                    this.vJ_MeasSubTransf_TEMPRowDeleting(this, new DataSetGES.vJ_MeasSubTransf_TEMPRowChangeEvent((DataSetGES.vJ_MeasSubTransf_TEMPRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600155C RID: 5468 RVA: 0x0008E831 File Offset: 0x0008CA31
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_MeasSubTransf_TEMPRow(DataSetGES.vJ_MeasSubTransf_TEMPRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600155D RID: 5469 RVA: 0x0008E840 File Offset: 0x0008CA40
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasSubTransf_TEMPDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A8E RID: 2702
            private DataColumn columnid;

            // Token: 0x04000A8F RID: 2703
            private DataColumn columnidSub;

            // Token: 0x04000A90 RID: 2704
            private DataColumn columnidTransf;

            // Token: 0x04000A91 RID: 2705
            private DataColumn columnNameTransf;
        }

        // Token: 0x02000117 RID: 279
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class fn_J_GetTransfByBusLVDataTable : TypedTableBase<DataSetGES.fn_J_GetTransfByBusLVRow>
        {
            // Token: 0x0600155E RID: 5470 RVA: 0x0008EA38 File Offset: 0x0008CC38
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetTransfByBusLVDataTable()
            {
                base.TableName = "fn_J_GetTransfByBusLV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600155F RID: 5471 RVA: 0x0008EA60 File Offset: 0x0008CC60
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetTransfByBusLVDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001560 RID: 5472 RVA: 0x0008EB08 File Offset: 0x0008CD08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected fn_J_GetTransfByBusLVDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000518 RID: 1304
            // (get) Token: 0x06001561 RID: 5473 RVA: 0x0008EB18 File Offset: 0x0008CD18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x17000519 RID: 1305
            // (get) Token: 0x06001562 RID: 5474 RVA: 0x0008EB20 File Offset: 0x0008CD20
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x1700051A RID: 1306
            // (get) Token: 0x06001563 RID: 5475 RVA: 0x0008EB28 File Offset: 0x0008CD28
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x1700051B RID: 1307
            // (get) Token: 0x06001564 RID: 5476 RVA: 0x0008EB30 File Offset: 0x0008CD30
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700051C RID: 1308
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetTransfByBusLVRow this[int index]
            {
                get
                {
                    return (DataSetGES.fn_J_GetTransfByBusLVRow)base.Rows[index];
                }
            }

            // Token: 0x14000175 RID: 373
            // (add) Token: 0x06001566 RID: 5478 RVA: 0x0008EB50 File Offset: 0x0008CD50
            // (remove) Token: 0x06001567 RID: 5479 RVA: 0x0008EB88 File Offset: 0x0008CD88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetTransfByBusLVRowChangeEventHandler fn_J_GetTransfByBusLVRowChanging;

            // Token: 0x14000176 RID: 374
            // (add) Token: 0x06001568 RID: 5480 RVA: 0x0008EBC0 File Offset: 0x0008CDC0
            // (remove) Token: 0x06001569 RID: 5481 RVA: 0x0008EBF8 File Offset: 0x0008CDF8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetTransfByBusLVRowChangeEventHandler fn_J_GetTransfByBusLVRowChanged;

            // Token: 0x14000177 RID: 375
            // (add) Token: 0x0600156A RID: 5482 RVA: 0x0008EC30 File Offset: 0x0008CE30
            // (remove) Token: 0x0600156B RID: 5483 RVA: 0x0008EC68 File Offset: 0x0008CE68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetTransfByBusLVRowChangeEventHandler fn_J_GetTransfByBusLVRowDeleting;

            // Token: 0x14000178 RID: 376
            // (add) Token: 0x0600156C RID: 5484 RVA: 0x0008ECA0 File Offset: 0x0008CEA0
            // (remove) Token: 0x0600156D RID: 5485 RVA: 0x0008ECD8 File Offset: 0x0008CED8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.fn_J_GetTransfByBusLVRowChangeEventHandler fn_J_GetTransfByBusLVRowDeleted;

            // Token: 0x0600156E RID: 5486 RVA: 0x0008ED0D File Offset: 0x0008CF0D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Addfn_J_GetTransfByBusLVRow(DataSetGES.fn_J_GetTransfByBusLVRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600156F RID: 5487 RVA: 0x0008ED1C File Offset: 0x0008CF1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetTransfByBusLVRow Addfn_J_GetTransfByBusLVRow(int Id, string Name, int TypeCodeId)
            {
                DataSetGES.fn_J_GetTransfByBusLVRow fn_J_GetTransfByBusLVRow = (DataSetGES.fn_J_GetTransfByBusLVRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    Name,
                    TypeCodeId
                };
                fn_J_GetTransfByBusLVRow.ItemArray = itemArray;
                base.Rows.Add(fn_J_GetTransfByBusLVRow);
                return fn_J_GetTransfByBusLVRow;
            }

            // Token: 0x06001570 RID: 5488 RVA: 0x0008ED68 File Offset: 0x0008CF68
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.fn_J_GetTransfByBusLVDataTable fn_J_GetTransfByBusLVDataTable = (DataSetGES.fn_J_GetTransfByBusLVDataTable)base.Clone();
                fn_J_GetTransfByBusLVDataTable.InitVars();
                return fn_J_GetTransfByBusLVDataTable;
            }

            // Token: 0x06001571 RID: 5489 RVA: 0x0008ED88 File Offset: 0x0008CF88
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.fn_J_GetTransfByBusLVDataTable();
            }

            // Token: 0x06001572 RID: 5490 RVA: 0x0008ED90 File Offset: 0x0008CF90
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
            }

            // Token: 0x06001573 RID: 5491 RVA: 0x0008EDE0 File Offset: 0x0008CFE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnName.MaxLength = 512;
            }

            // Token: 0x06001574 RID: 5492 RVA: 0x0008EE84 File Offset: 0x0008D084
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetTransfByBusLVRow Newfn_J_GetTransfByBusLVRow()
            {
                return (DataSetGES.fn_J_GetTransfByBusLVRow)base.NewRow();
            }

            // Token: 0x06001575 RID: 5493 RVA: 0x0008EE91 File Offset: 0x0008D091
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.fn_J_GetTransfByBusLVRow(builder);
            }

            // Token: 0x06001576 RID: 5494 RVA: 0x0008EE99 File Offset: 0x0008D099
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.fn_J_GetTransfByBusLVRow);
            }

            // Token: 0x06001577 RID: 5495 RVA: 0x0008EEA5 File Offset: 0x0008D0A5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.fn_J_GetTransfByBusLVRowChanged != null)
                {
                    this.fn_J_GetTransfByBusLVRowChanged(this, new DataSetGES.fn_J_GetTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001578 RID: 5496 RVA: 0x0008EED8 File Offset: 0x0008D0D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.fn_J_GetTransfByBusLVRowChanging != null)
                {
                    this.fn_J_GetTransfByBusLVRowChanging(this, new DataSetGES.fn_J_GetTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001579 RID: 5497 RVA: 0x0008EF0B File Offset: 0x0008D10B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.fn_J_GetTransfByBusLVRowDeleted != null)
                {
                    this.fn_J_GetTransfByBusLVRowDeleted(this, new DataSetGES.fn_J_GetTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600157A RID: 5498 RVA: 0x0008EF3E File Offset: 0x0008D13E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.fn_J_GetTransfByBusLVRowDeleting != null)
                {
                    this.fn_J_GetTransfByBusLVRowDeleting(this, new DataSetGES.fn_J_GetTransfByBusLVRowChangeEvent((DataSetGES.fn_J_GetTransfByBusLVRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600157B RID: 5499 RVA: 0x0008EF71 File Offset: 0x0008D171
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removefn_J_GetTransfByBusLVRow(DataSetGES.fn_J_GetTransfByBusLVRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600157C RID: 5500 RVA: 0x0008EF80 File Offset: 0x0008D180
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "fn_J_GetTransfByBusLVDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A96 RID: 2710
            private DataColumn columnId;

            // Token: 0x04000A97 RID: 2711
            private DataColumn columnName;

            // Token: 0x04000A98 RID: 2712
            private DataColumn columnTypeCodeId;
        }

        // Token: 0x02000118 RID: 280
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vP_SubstationBusDataTable : TypedTableBase<DataSetGES.vP_SubstationBusRow>
        {
            // Token: 0x0600157D RID: 5501 RVA: 0x0008F178 File Offset: 0x0008D378
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vP_SubstationBusDataTable()
            {
                base.TableName = "vP_SubstationBus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600157E RID: 5502 RVA: 0x0008F1A0 File Offset: 0x0008D3A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vP_SubstationBusDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600157F RID: 5503 RVA: 0x0008F248 File Offset: 0x0008D448
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vP_SubstationBusDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700051D RID: 1309
            // (get) Token: 0x06001580 RID: 5504 RVA: 0x0008F258 File Offset: 0x0008D458
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IdColumn
            {
                get
                {
                    return this.columnId;
                }
            }

            // Token: 0x1700051E RID: 1310
            // (get) Token: 0x06001581 RID: 5505 RVA: 0x0008F260 File Offset: 0x0008D460
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IdParentColumn
            {
                get
                {
                    return this.columnIdParent;
                }
            }

            // Token: 0x1700051F RID: 1311
            // (get) Token: 0x06001582 RID: 5506 RVA: 0x0008F268 File Offset: 0x0008D468
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x17000520 RID: 1312
            // (get) Token: 0x06001583 RID: 5507 RVA: 0x0008F270 File Offset: 0x0008D470
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeNameColumn
            {
                get
                {
                    return this.columnTypeName;
                }
            }

            // Token: 0x17000521 RID: 1313
            // (get) Token: 0x06001584 RID: 5508 RVA: 0x0008F278 File Offset: 0x0008D478
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000522 RID: 1314
            // (get) Token: 0x06001585 RID: 5509 RVA: 0x0008F280 File Offset: 0x0008D480
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000523 RID: 1315
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_SubstationBusRow this[int index]
            {
                get
                {
                    return (DataSetGES.vP_SubstationBusRow)base.Rows[index];
                }
            }

            // Token: 0x14000179 RID: 377
            // (add) Token: 0x06001587 RID: 5511 RVA: 0x0008F2A0 File Offset: 0x0008D4A0
            // (remove) Token: 0x06001588 RID: 5512 RVA: 0x0008F2D8 File Offset: 0x0008D4D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationBusRowChangeEventHandler vP_SubstationBusRowChanging;

            // Token: 0x1400017A RID: 378
            // (add) Token: 0x06001589 RID: 5513 RVA: 0x0008F310 File Offset: 0x0008D510
            // (remove) Token: 0x0600158A RID: 5514 RVA: 0x0008F348 File Offset: 0x0008D548
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationBusRowChangeEventHandler vP_SubstationBusRowChanged;

            // Token: 0x1400017B RID: 379
            // (add) Token: 0x0600158B RID: 5515 RVA: 0x0008F380 File Offset: 0x0008D580
            // (remove) Token: 0x0600158C RID: 5516 RVA: 0x0008F3B8 File Offset: 0x0008D5B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationBusRowChangeEventHandler vP_SubstationBusRowDeleting;

            // Token: 0x1400017C RID: 380
            // (add) Token: 0x0600158D RID: 5517 RVA: 0x0008F3F0 File Offset: 0x0008D5F0
            // (remove) Token: 0x0600158E RID: 5518 RVA: 0x0008F428 File Offset: 0x0008D628
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vP_SubstationBusRowChangeEventHandler vP_SubstationBusRowDeleted;

            // Token: 0x0600158F RID: 5519 RVA: 0x0008F45D File Offset: 0x0008D65D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvP_SubstationBusRow(DataSetGES.vP_SubstationBusRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001590 RID: 5520 RVA: 0x0008F46C File Offset: 0x0008D66C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_SubstationBusRow AddvP_SubstationBusRow(int Id, int IdParent, int TypeCodeId, string TypeName, string Name)
            {
                DataSetGES.vP_SubstationBusRow vP_SubstationBusRow = (DataSetGES.vP_SubstationBusRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    Id,
                    IdParent,
                    TypeCodeId,
                    TypeName,
                    Name
                };
                vP_SubstationBusRow.ItemArray = itemArray;
                base.Rows.Add(vP_SubstationBusRow);
                return vP_SubstationBusRow;
            }

            // Token: 0x06001591 RID: 5521 RVA: 0x0008F4C8 File Offset: 0x0008D6C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_SubstationBusRow FindById(int Id)
            {
                return (DataSetGES.vP_SubstationBusRow)base.Rows.Find(new object[]
                {
                    Id
                });
            }

            // Token: 0x06001592 RID: 5522 RVA: 0x0008F4F8 File Offset: 0x0008D6F8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vP_SubstationBusDataTable vP_SubstationBusDataTable = (DataSetGES.vP_SubstationBusDataTable)base.Clone();
                vP_SubstationBusDataTable.InitVars();
                return vP_SubstationBusDataTable;
            }

            // Token: 0x06001593 RID: 5523 RVA: 0x0008F518 File Offset: 0x0008D718
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vP_SubstationBusDataTable();
            }

            // Token: 0x06001594 RID: 5524 RVA: 0x0008F520 File Offset: 0x0008D720
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnId = base.Columns["Id"];
                this.columnIdParent = base.Columns["IdParent"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x06001595 RID: 5525 RVA: 0x0008F59C File Offset: 0x0008D79C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnId = new DataColumn("Id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdParent = new DataColumn("IdParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIdParent);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnTypeName = new DataColumn("TypeName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnId
                }, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnTypeName.AllowDBNull = false;
                this.columnTypeName.MaxLength = 100;
                this.columnName.MaxLength = 512;
            }

            // Token: 0x06001596 RID: 5526 RVA: 0x0008F6F2 File Offset: 0x0008D8F2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_SubstationBusRow NewvP_SubstationBusRow()
            {
                return (DataSetGES.vP_SubstationBusRow)base.NewRow();
            }

            // Token: 0x06001597 RID: 5527 RVA: 0x0008F6FF File Offset: 0x0008D8FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vP_SubstationBusRow(builder);
            }

            // Token: 0x06001598 RID: 5528 RVA: 0x0008F707 File Offset: 0x0008D907
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vP_SubstationBusRow);
            }

            // Token: 0x06001599 RID: 5529 RVA: 0x0008F713 File Offset: 0x0008D913
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vP_SubstationBusRowChanged != null)
                {
                    this.vP_SubstationBusRowChanged(this, new DataSetGES.vP_SubstationBusRowChangeEvent((DataSetGES.vP_SubstationBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600159A RID: 5530 RVA: 0x0008F746 File Offset: 0x0008D946
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vP_SubstationBusRowChanging != null)
                {
                    this.vP_SubstationBusRowChanging(this, new DataSetGES.vP_SubstationBusRowChangeEvent((DataSetGES.vP_SubstationBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600159B RID: 5531 RVA: 0x0008F779 File Offset: 0x0008D979
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vP_SubstationBusRowDeleted != null)
                {
                    this.vP_SubstationBusRowDeleted(this, new DataSetGES.vP_SubstationBusRowChangeEvent((DataSetGES.vP_SubstationBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600159C RID: 5532 RVA: 0x0008F7AC File Offset: 0x0008D9AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vP_SubstationBusRowDeleting != null)
                {
                    this.vP_SubstationBusRowDeleting(this, new DataSetGES.vP_SubstationBusRowChangeEvent((DataSetGES.vP_SubstationBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600159D RID: 5533 RVA: 0x0008F7DF File Offset: 0x0008D9DF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevP_SubstationBusRow(DataSetGES.vP_SubstationBusRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600159E RID: 5534 RVA: 0x0008F7F0 File Offset: 0x0008D9F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vP_SubstationBusDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000A9D RID: 2717
            private DataColumn columnId;

            // Token: 0x04000A9E RID: 2718
            private DataColumn columnIdParent;

            // Token: 0x04000A9F RID: 2719
            private DataColumn columnTypeCodeId;

            // Token: 0x04000AA0 RID: 2720
            private DataColumn columnTypeName;

            // Token: 0x04000AA1 RID: 2721
            private DataColumn columnName;
        }

        // Token: 0x02000119 RID: 281
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_CellByBusDataTable : TypedTableBase<DataSetGES.vJ_CellByBusRow>
        {
            // Token: 0x0600159F RID: 5535 RVA: 0x0008F9E8 File Offset: 0x0008DBE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CellByBusDataTable()
            {
                base.TableName = "vJ_CellByBus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060015A0 RID: 5536 RVA: 0x0008FA10 File Offset: 0x0008DC10
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CellByBusDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060015A1 RID: 5537 RVA: 0x0008FAB8 File Offset: 0x0008DCB8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_CellByBusDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000524 RID: 1316
            // (get) Token: 0x060015A2 RID: 5538 RVA: 0x0008FAC8 File Offset: 0x0008DCC8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x17000525 RID: 1317
            // (get) Token: 0x060015A3 RID: 5539 RVA: 0x0008FAD0 File Offset: 0x0008DCD0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x17000526 RID: 1318
            // (get) Token: 0x060015A4 RID: 5540 RVA: 0x0008FAD8 File Offset: 0x0008DCD8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000527 RID: 1319
            // (get) Token: 0x060015A5 RID: 5541 RVA: 0x0008FAE0 File Offset: 0x0008DCE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x17000528 RID: 1320
            // (get) Token: 0x060015A6 RID: 5542 RVA: 0x0008FAE8 File Offset: 0x0008DCE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdColumn
            {
                get
                {
                    return this.columnTypeCodeId;
                }
            }

            // Token: 0x17000529 RID: 1321
            // (get) Token: 0x060015A7 RID: 5543 RVA: 0x0008FAF0 File Offset: 0x0008DCF0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idParentColumn
            {
                get
                {
                    return this.columnidParent;
                }
            }

            // Token: 0x1700052A RID: 1322
            // (get) Token: 0x060015A8 RID: 5544 RVA: 0x0008FAF8 File Offset: 0x0008DCF8
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700052B RID: 1323
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CellByBusRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_CellByBusRow)base.Rows[index];
                }
            }

            // Token: 0x1400017D RID: 381
            // (add) Token: 0x060015AA RID: 5546 RVA: 0x0008FB18 File Offset: 0x0008DD18
            // (remove) Token: 0x060015AB RID: 5547 RVA: 0x0008FB50 File Offset: 0x0008DD50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CellByBusRowChangeEventHandler vJ_CellByBusRowChanging;

            // Token: 0x1400017E RID: 382
            // (add) Token: 0x060015AC RID: 5548 RVA: 0x0008FB88 File Offset: 0x0008DD88
            // (remove) Token: 0x060015AD RID: 5549 RVA: 0x0008FBC0 File Offset: 0x0008DDC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CellByBusRowChangeEventHandler vJ_CellByBusRowChanged;

            // Token: 0x1400017F RID: 383
            // (add) Token: 0x060015AE RID: 5550 RVA: 0x0008FBF8 File Offset: 0x0008DDF8
            // (remove) Token: 0x060015AF RID: 5551 RVA: 0x0008FC30 File Offset: 0x0008DE30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CellByBusRowChangeEventHandler vJ_CellByBusRowDeleting;

            // Token: 0x14000180 RID: 384
            // (add) Token: 0x060015B0 RID: 5552 RVA: 0x0008FC68 File Offset: 0x0008DE68
            // (remove) Token: 0x060015B1 RID: 5553 RVA: 0x0008FCA0 File Offset: 0x0008DEA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CellByBusRowChangeEventHandler vJ_CellByBusRowDeleted;

            // Token: 0x060015B2 RID: 5554 RVA: 0x0008FCD5 File Offset: 0x0008DED5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_CellByBusRow(DataSetGES.vJ_CellByBusRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060015B3 RID: 5555 RVA: 0x0008FCE4 File Offset: 0x0008DEE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CellByBusRow AddvJ_CellByBusRow(int idBus, string NameBus, int id, string Name, int TypeCodeId, int idParent)
            {
                DataSetGES.vJ_CellByBusRow vJ_CellByBusRow = (DataSetGES.vJ_CellByBusRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idBus,
                    NameBus,
                    id,
                    Name,
                    TypeCodeId,
                    idParent
                };
                vJ_CellByBusRow.ItemArray = itemArray;
                base.Rows.Add(vJ_CellByBusRow);
                return vJ_CellByBusRow;
            }

            // Token: 0x060015B4 RID: 5556 RVA: 0x0008FD4C File Offset: 0x0008DF4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CellByBusDataTable vJ_CellByBusDataTable = (DataSetGES.vJ_CellByBusDataTable)base.Clone();
                vJ_CellByBusDataTable.InitVars();
                return vJ_CellByBusDataTable;
            }

            // Token: 0x060015B5 RID: 5557 RVA: 0x0008FD6C File Offset: 0x0008DF6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CellByBusDataTable();
            }

            // Token: 0x060015B6 RID: 5558 RVA: 0x0008FD74 File Offset: 0x0008DF74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnidBus = base.Columns["idBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnid = base.Columns["id"];
                this.columnName = base.Columns["Name"];
                this.columnTypeCodeId = base.Columns["TypeCodeId"];
                this.columnidParent = base.Columns["idParent"];
            }

            // Token: 0x060015B7 RID: 5559 RVA: 0x0008FE08 File Offset: 0x0008E008
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnTypeCodeId = new DataColumn("TypeCodeId", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeId);
                this.columnidParent = new DataColumn("idParent", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParent);
                this.columnidBus.AllowDBNull = false;
                this.columnNameBus.MaxLength = 512;
                this.columnid.AllowDBNull = false;
                this.columnName.MaxLength = 512;
            }

            // Token: 0x060015B8 RID: 5560 RVA: 0x0008FF5B File Offset: 0x0008E15B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CellByBusRow NewvJ_CellByBusRow()
            {
                return (DataSetGES.vJ_CellByBusRow)base.NewRow();
            }

            // Token: 0x060015B9 RID: 5561 RVA: 0x0008FF68 File Offset: 0x0008E168
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_CellByBusRow(builder);
            }

            // Token: 0x060015BA RID: 5562 RVA: 0x0008FF70 File Offset: 0x0008E170
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_CellByBusRow);
            }

            // Token: 0x060015BB RID: 5563 RVA: 0x0008FF7C File Offset: 0x0008E17C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_CellByBusRowChanged != null)
                {
                    this.vJ_CellByBusRowChanged(this, new DataSetGES.vJ_CellByBusRowChangeEvent((DataSetGES.vJ_CellByBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015BC RID: 5564 RVA: 0x0008FFAF File Offset: 0x0008E1AF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_CellByBusRowChanging != null)
                {
                    this.vJ_CellByBusRowChanging(this, new DataSetGES.vJ_CellByBusRowChangeEvent((DataSetGES.vJ_CellByBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015BD RID: 5565 RVA: 0x0008FFE2 File Offset: 0x0008E1E2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_CellByBusRowDeleted != null)
                {
                    this.vJ_CellByBusRowDeleted(this, new DataSetGES.vJ_CellByBusRowChangeEvent((DataSetGES.vJ_CellByBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015BE RID: 5566 RVA: 0x00090015 File Offset: 0x0008E215
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_CellByBusRowDeleting != null)
                {
                    this.vJ_CellByBusRowDeleting(this, new DataSetGES.vJ_CellByBusRowChangeEvent((DataSetGES.vJ_CellByBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015BF RID: 5567 RVA: 0x00090048 File Offset: 0x0008E248
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_CellByBusRow(DataSetGES.vJ_CellByBusRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060015C0 RID: 5568 RVA: 0x00090058 File Offset: 0x0008E258
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_CellByBusDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000AA6 RID: 2726
            private DataColumn columnidBus;

            // Token: 0x04000AA7 RID: 2727
            private DataColumn columnNameBus;

            // Token: 0x04000AA8 RID: 2728
            private DataColumn columnid;

            // Token: 0x04000AA9 RID: 2729
            private DataColumn columnName;

            // Token: 0x04000AAA RID: 2730
            private DataColumn columnTypeCodeId;

            // Token: 0x04000AAB RID: 2731
            private DataColumn columnidParent;
        }

        // Token: 0x0200011A RID: 282
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_PowerISR_SSBusDataTable : TypedTableBase<DataSetGES.vJ_PowerISR_SSBusRow>
        {
            // Token: 0x060015C1 RID: 5569 RVA: 0x00090250 File Offset: 0x0008E450
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_PowerISR_SSBusDataTable()
            {
                base.TableName = "vJ_PowerISR_SSBus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060015C2 RID: 5570 RVA: 0x00090278 File Offset: 0x0008E478
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_PowerISR_SSBusDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060015C3 RID: 5571 RVA: 0x00090320 File Offset: 0x0008E520
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_PowerISR_SSBusDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700052C RID: 1324
            // (get) Token: 0x060015C4 RID: 5572 RVA: 0x00090330 File Offset: 0x0008E530
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            // Token: 0x1700052D RID: 1325
            // (get) Token: 0x060015C5 RID: 5573 RVA: 0x00090338 File Offset: 0x0008E538
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameSubColumn
            {
                get
                {
                    return this.columnNameSub;
                }
            }

            // Token: 0x1700052E RID: 1326
            // (get) Token: 0x060015C6 RID: 5574 RVA: 0x00090340 File Offset: 0x0008E540
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x1700052F RID: 1327
            // (get) Token: 0x060015C7 RID: 5575 RVA: 0x00090348 File Offset: 0x0008E548
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameBusColumn
            {
                get
                {
                    return this.columnnameBus;
                }
            }

            // Token: 0x17000530 RID: 1328
            // (get) Token: 0x060015C8 RID: 5576 RVA: 0x00090350 File Offset: 0x0008E550
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000531 RID: 1329
            // (get) Token: 0x060015C9 RID: 5577 RVA: 0x00090358 File Offset: 0x0008E558
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x17000532 RID: 1330
            // (get) Token: 0x060015CA RID: 5578 RVA: 0x00090360 File Offset: 0x0008E560
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PowerColumn
            {
                get
                {
                    return this.columnPower;
                }
            }

            // Token: 0x17000533 RID: 1331
            // (get) Token: 0x060015CB RID: 5579 RVA: 0x00090368 File Offset: 0x0008E568
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrColumn
            {
                get
                {
                    return this.columnIsr;
                }
            }

            // Token: 0x17000534 RID: 1332
            // (get) Token: 0x060015CC RID: 5580 RVA: 0x00090370 File Offset: 0x0008E570
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000535 RID: 1333
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_PowerISR_SSBusRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_PowerISR_SSBusRow)base.Rows[index];
                }
            }

            // Token: 0x14000181 RID: 385
            // (add) Token: 0x060015CE RID: 5582 RVA: 0x00090390 File Offset: 0x0008E590
            // (remove) Token: 0x060015CF RID: 5583 RVA: 0x000903C8 File Offset: 0x0008E5C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSBusRowChangeEventHandler vJ_PowerISR_SSBusRowChanging;

            // Token: 0x14000182 RID: 386
            // (add) Token: 0x060015D0 RID: 5584 RVA: 0x00090400 File Offset: 0x0008E600
            // (remove) Token: 0x060015D1 RID: 5585 RVA: 0x00090438 File Offset: 0x0008E638
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSBusRowChangeEventHandler vJ_PowerISR_SSBusRowChanged;

            // Token: 0x14000183 RID: 387
            // (add) Token: 0x060015D2 RID: 5586 RVA: 0x00090470 File Offset: 0x0008E670
            // (remove) Token: 0x060015D3 RID: 5587 RVA: 0x000904A8 File Offset: 0x0008E6A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSBusRowChangeEventHandler vJ_PowerISR_SSBusRowDeleting;

            // Token: 0x14000184 RID: 388
            // (add) Token: 0x060015D4 RID: 5588 RVA: 0x000904E0 File Offset: 0x0008E6E0
            // (remove) Token: 0x060015D5 RID: 5589 RVA: 0x00090518 File Offset: 0x0008E718
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_PowerISR_SSBusRowChangeEventHandler vJ_PowerISR_SSBusRowDeleted;

            // Token: 0x060015D6 RID: 5590 RVA: 0x0009054D File Offset: 0x0008E74D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_PowerISR_SSBusRow(DataSetGES.vJ_PowerISR_SSBusRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060015D7 RID: 5591 RVA: 0x0009055C File Offset: 0x0008E75C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_PowerISR_SSBusRow AddvJ_PowerISR_SSBusRow(int idSub, string NameSub, int idBus, string nameBus, int idTransf, string NameTransf, string Power, int Isr)
            {
                DataSetGES.vJ_PowerISR_SSBusRow vJ_PowerISR_SSBusRow = (DataSetGES.vJ_PowerISR_SSBusRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idSub,
                    NameSub,
                    idBus,
                    nameBus,
                    idTransf,
                    NameTransf,
                    Power,
                    Isr
                };
                vJ_PowerISR_SSBusRow.ItemArray = itemArray;
                base.Rows.Add(vJ_PowerISR_SSBusRow);
                return vJ_PowerISR_SSBusRow;
            }

            // Token: 0x060015D8 RID: 5592 RVA: 0x000905CC File Offset: 0x0008E7CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_PowerISR_SSBusDataTable vJ_PowerISR_SSBusDataTable = (DataSetGES.vJ_PowerISR_SSBusDataTable)base.Clone();
                vJ_PowerISR_SSBusDataTable.InitVars();
                return vJ_PowerISR_SSBusDataTable;
            }

            // Token: 0x060015D9 RID: 5593 RVA: 0x000905EC File Offset: 0x0008E7EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_PowerISR_SSBusDataTable();
            }

            // Token: 0x060015DA RID: 5594 RVA: 0x000905F4 File Offset: 0x0008E7F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidSub = base.Columns["idSub"];
                this.columnNameSub = base.Columns["NameSub"];
                this.columnidBus = base.Columns["idBus"];
                this.columnnameBus = base.Columns["nameBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnPower = base.Columns["Power"];
                this.columnIsr = base.Columns["Isr"];
            }

            // Token: 0x060015DB RID: 5595 RVA: 0x000906B4 File Offset: 0x0008E8B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnNameSub = new DataColumn("NameSub", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameSub);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnnameBus = new DataColumn("nameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnPower = new DataColumn("Power", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnPower);
                this.columnIsr = new DataColumn("Isr", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsr);
                this.columnidSub.AllowDBNull = false;
                this.columnNameSub.MaxLength = 563;
                this.columnidBus.AllowDBNull = false;
                this.columnnameBus.MaxLength = 512;
                this.columnNameTransf.MaxLength = 512;
                this.columnPower.MaxLength = 512;
                this.columnIsr.ReadOnly = true;
            }

            // Token: 0x060015DC RID: 5596 RVA: 0x0009088D File Offset: 0x0008EA8D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_PowerISR_SSBusRow NewvJ_PowerISR_SSBusRow()
            {
                return (DataSetGES.vJ_PowerISR_SSBusRow)base.NewRow();
            }

            // Token: 0x060015DD RID: 5597 RVA: 0x0009089A File Offset: 0x0008EA9A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_PowerISR_SSBusRow(builder);
            }

            // Token: 0x060015DE RID: 5598 RVA: 0x000908A2 File Offset: 0x0008EAA2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_PowerISR_SSBusRow);
            }

            // Token: 0x060015DF RID: 5599 RVA: 0x000908AE File Offset: 0x0008EAAE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_PowerISR_SSBusRowChanged != null)
                {
                    this.vJ_PowerISR_SSBusRowChanged(this, new DataSetGES.vJ_PowerISR_SSBusRowChangeEvent((DataSetGES.vJ_PowerISR_SSBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015E0 RID: 5600 RVA: 0x000908E1 File Offset: 0x0008EAE1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_PowerISR_SSBusRowChanging != null)
                {
                    this.vJ_PowerISR_SSBusRowChanging(this, new DataSetGES.vJ_PowerISR_SSBusRowChangeEvent((DataSetGES.vJ_PowerISR_SSBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015E1 RID: 5601 RVA: 0x00090914 File Offset: 0x0008EB14
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_PowerISR_SSBusRowDeleted != null)
                {
                    this.vJ_PowerISR_SSBusRowDeleted(this, new DataSetGES.vJ_PowerISR_SSBusRowChangeEvent((DataSetGES.vJ_PowerISR_SSBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015E2 RID: 5602 RVA: 0x00090947 File Offset: 0x0008EB47
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_PowerISR_SSBusRowDeleting != null)
                {
                    this.vJ_PowerISR_SSBusRowDeleting(this, new DataSetGES.vJ_PowerISR_SSBusRowChangeEvent((DataSetGES.vJ_PowerISR_SSBusRow)e.Row, e.Action));
                }
            }

            // Token: 0x060015E3 RID: 5603 RVA: 0x0009097A File Offset: 0x0008EB7A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_PowerISR_SSBusRow(DataSetGES.vJ_PowerISR_SSBusRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060015E4 RID: 5604 RVA: 0x00090988 File Offset: 0x0008EB88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_PowerISR_SSBusDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000AB0 RID: 2736
            private DataColumn columnidSub;

            // Token: 0x04000AB1 RID: 2737
            private DataColumn columnNameSub;

            // Token: 0x04000AB2 RID: 2738
            private DataColumn columnidBus;

            // Token: 0x04000AB3 RID: 2739
            private DataColumn columnnameBus;

            // Token: 0x04000AB4 RID: 2740
            private DataColumn columnidTransf;

            // Token: 0x04000AB5 RID: 2741
            private DataColumn columnNameTransf;

            // Token: 0x04000AB6 RID: 2742
            private DataColumn columnPower;

            // Token: 0x04000AB7 RID: 2743
            private DataColumn columnIsr;
        }

        // Token: 0x0200011B RID: 283
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class dtBusesTransfDataTable : TypedTableBase<DataSetGES.dtBusesTransfRow>
        {
            // Token: 0x060015E5 RID: 5605 RVA: 0x00090B80 File Offset: 0x0008ED80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtBusesTransfDataTable()
            {
                base.TableName = "dtBusesTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060015E6 RID: 5606 RVA: 0x00090BA8 File Offset: 0x0008EDA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtBusesTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060015E7 RID: 5607 RVA: 0x00090C50 File Offset: 0x0008EE50
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtBusesTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000536 RID: 1334
            // (get) Token: 0x060015E8 RID: 5608 RVA: 0x00090C60 File Offset: 0x0008EE60
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x17000537 RID: 1335
            // (get) Token: 0x060015E9 RID: 5609 RVA: 0x00090C68 File Offset: 0x0008EE68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x17000538 RID: 1336
            // (get) Token: 0x060015EA RID: 5610 RVA: 0x00090C70 File Offset: 0x0008EE70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000539 RID: 1337
            // (get) Token: 0x060015EB RID: 5611 RVA: 0x00090C78 File Offset: 0x0008EE78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x1700053A RID: 1338
            // (get) Token: 0x060015EC RID: 5612 RVA: 0x00090C80 File Offset: 0x0008EE80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameBusTransfColumn
            {
                get
                {
                    return this.columnNameBusTransf;
                }
            }

            // Token: 0x1700053B RID: 1339
            // (get) Token: 0x060015ED RID: 5613 RVA: 0x00090C88 File Offset: 0x0008EE88
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700053C RID: 1340
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtBusesTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.dtBusesTransfRow)base.Rows[index];
                }
            }

            // Token: 0x14000185 RID: 389
            // (add) Token: 0x060015EF RID: 5615 RVA: 0x00090CA8 File Offset: 0x0008EEA8
            // (remove) Token: 0x060015F0 RID: 5616 RVA: 0x00090CE0 File Offset: 0x0008EEE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesTransfRowChangeEventHandler dtBusesTransfRowChanging;

            // Token: 0x14000186 RID: 390
            // (add) Token: 0x060015F1 RID: 5617 RVA: 0x00090D18 File Offset: 0x0008EF18
            // (remove) Token: 0x060015F2 RID: 5618 RVA: 0x00090D50 File Offset: 0x0008EF50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesTransfRowChangeEventHandler dtBusesTransfRowChanged;

            // Token: 0x14000187 RID: 391
            // (add) Token: 0x060015F3 RID: 5619 RVA: 0x00090D88 File Offset: 0x0008EF88
            // (remove) Token: 0x060015F4 RID: 5620 RVA: 0x00090DC0 File Offset: 0x0008EFC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesTransfRowChangeEventHandler dtBusesTransfRowDeleting;

            // Token: 0x14000188 RID: 392
            // (add) Token: 0x060015F5 RID: 5621 RVA: 0x00090DF8 File Offset: 0x0008EFF8
            // (remove) Token: 0x060015F6 RID: 5622 RVA: 0x00090E30 File Offset: 0x0008F030
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.dtBusesTransfRowChangeEventHandler dtBusesTransfRowDeleted;

            // Token: 0x060015F7 RID: 5623 RVA: 0x00090E65 File Offset: 0x0008F065
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtBusesTransfRow(DataSetGES.dtBusesTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060015F8 RID: 5624 RVA: 0x00090E74 File Offset: 0x0008F074
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtBusesTransfRow AdddtBusesTransfRow(int idBus, string NameBus, int idTransf, string NameTransf, string NameBusTransf)
            {
                DataSetGES.dtBusesTransfRow dtBusesTransfRow = (DataSetGES.dtBusesTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idBus,
                    NameBus,
                    idTransf,
                    NameTransf,
                    NameBusTransf
                };
                dtBusesTransfRow.ItemArray = itemArray;
                base.Rows.Add(dtBusesTransfRow);
                return dtBusesTransfRow;
            }

            // Token: 0x060015F9 RID: 5625 RVA: 0x00090ECC File Offset: 0x0008F0CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.dtBusesTransfDataTable dtBusesTransfDataTable = (DataSetGES.dtBusesTransfDataTable)base.Clone();
                dtBusesTransfDataTable.InitVars();
                return dtBusesTransfDataTable;
            }

            // Token: 0x060015FA RID: 5626 RVA: 0x00090EEC File Offset: 0x0008F0EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.dtBusesTransfDataTable();
            }

            // Token: 0x060015FB RID: 5627 RVA: 0x00090EF4 File Offset: 0x0008F0F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidBus = base.Columns["idBus"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnNameBusTransf = base.Columns["NameBusTransf"];
            }

            // Token: 0x060015FC RID: 5628 RVA: 0x00090F70 File Offset: 0x0008F170
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnNameBusTransf = new DataColumn("NameBusTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBusTransf);
            }

            // Token: 0x060015FD RID: 5629 RVA: 0x0009105E File Offset: 0x0008F25E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtBusesTransfRow NewdtBusesTransfRow()
            {
                return (DataSetGES.dtBusesTransfRow)base.NewRow();
            }

            // Token: 0x060015FE RID: 5630 RVA: 0x0009106B File Offset: 0x0008F26B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.dtBusesTransfRow(builder);
            }

            // Token: 0x060015FF RID: 5631 RVA: 0x00091073 File Offset: 0x0008F273
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.dtBusesTransfRow);
            }

            // Token: 0x06001600 RID: 5632 RVA: 0x0009107F File Offset: 0x0008F27F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.dtBusesTransfRowChanged != null)
                {
                    this.dtBusesTransfRowChanged(this, new DataSetGES.dtBusesTransfRowChangeEvent((DataSetGES.dtBusesTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001601 RID: 5633 RVA: 0x000910B2 File Offset: 0x0008F2B2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.dtBusesTransfRowChanging != null)
                {
                    this.dtBusesTransfRowChanging(this, new DataSetGES.dtBusesTransfRowChangeEvent((DataSetGES.dtBusesTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001602 RID: 5634 RVA: 0x000910E5 File Offset: 0x0008F2E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.dtBusesTransfRowDeleted != null)
                {
                    this.dtBusesTransfRowDeleted(this, new DataSetGES.dtBusesTransfRowChangeEvent((DataSetGES.dtBusesTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001603 RID: 5635 RVA: 0x00091118 File Offset: 0x0008F318
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.dtBusesTransfRowDeleting != null)
                {
                    this.dtBusesTransfRowDeleting(this, new DataSetGES.dtBusesTransfRowChangeEvent((DataSetGES.dtBusesTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001604 RID: 5636 RVA: 0x0009114B File Offset: 0x0008F34B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtBusesTransfRow(DataSetGES.dtBusesTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001605 RID: 5637 RVA: 0x0009115C File Offset: 0x0008F35C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "dtBusesTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000ABC RID: 2748
            private DataColumn columnidBus;

            // Token: 0x04000ABD RID: 2749
            private DataColumn columnNameBus;

            // Token: 0x04000ABE RID: 2750
            private DataColumn columnidTransf;

            // Token: 0x04000ABF RID: 2751
            private DataColumn columnNameTransf;

            // Token: 0x04000AC0 RID: 2752
            private DataColumn columnNameBusTransf;
        }

        // Token: 0x0200011C RID: 284
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_BusesTransfSchemaDataTable : TypedTableBase<DataSetGES.vJ_BusesTransfSchemaRow>
        {
            // Token: 0x06001606 RID: 5638 RVA: 0x00091354 File Offset: 0x0008F554
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_BusesTransfSchemaDataTable()
            {
                base.TableName = "vJ_BusesTransfSchema";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001607 RID: 5639 RVA: 0x0009137C File Offset: 0x0008F57C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_BusesTransfSchemaDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001608 RID: 5640 RVA: 0x00091424 File Offset: 0x0008F624
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_BusesTransfSchemaDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700053D RID: 1341
            // (get) Token: 0x06001609 RID: 5641 RVA: 0x00091434 File Offset: 0x0008F634
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSubColumn
            {
                get
                {
                    return this.columnidSub;
                }
            }

            // Token: 0x1700053E RID: 1342
            // (get) Token: 0x0600160A RID: 5642 RVA: 0x0009143C File Offset: 0x0008F63C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x1700053F RID: 1343
            // (get) Token: 0x0600160B RID: 5643 RVA: 0x00091444 File Offset: 0x0008F644
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameBusColumn
            {
                get
                {
                    return this.columnnameBus;
                }
            }

            // Token: 0x17000540 RID: 1344
            // (get) Token: 0x0600160C RID: 5644 RVA: 0x0009144C File Offset: 0x0008F64C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn tagBusColumn
            {
                get
                {
                    return this.columntagBus;
                }
            }

            // Token: 0x17000541 RID: 1345
            // (get) Token: 0x0600160D RID: 5645 RVA: 0x00091454 File Offset: 0x0008F654
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn parentKeyBusColumn
            {
                get
                {
                    return this.columnparentKeyBus;
                }
            }

            // Token: 0x17000542 RID: 1346
            // (get) Token: 0x0600160E RID: 5646 RVA: 0x0009145C File Offset: 0x0008F65C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000543 RID: 1347
            // (get) Token: 0x0600160F RID: 5647 RVA: 0x00091464 File Offset: 0x0008F664
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameTransfColumn
            {
                get
                {
                    return this.columnNameTransf;
                }
            }

            // Token: 0x17000544 RID: 1348
            // (get) Token: 0x06001610 RID: 5648 RVA: 0x0009146C File Offset: 0x0008F66C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameBusTransfColumn
            {
                get
                {
                    return this.columnnameBusTransf;
                }
            }

            // Token: 0x17000545 RID: 1349
            // (get) Token: 0x06001611 RID: 5649 RVA: 0x00091474 File Offset: 0x0008F674
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000546 RID: 1350
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_BusesTransfSchemaRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_BusesTransfSchemaRow)base.Rows[index];
                }
            }

            // Token: 0x14000189 RID: 393
            // (add) Token: 0x06001613 RID: 5651 RVA: 0x00091494 File Offset: 0x0008F694
            // (remove) Token: 0x06001614 RID: 5652 RVA: 0x000914CC File Offset: 0x0008F6CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfSchemaRowChangeEventHandler vJ_BusesTransfSchemaRowChanging;

            // Token: 0x1400018A RID: 394
            // (add) Token: 0x06001615 RID: 5653 RVA: 0x00091504 File Offset: 0x0008F704
            // (remove) Token: 0x06001616 RID: 5654 RVA: 0x0009153C File Offset: 0x0008F73C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfSchemaRowChangeEventHandler vJ_BusesTransfSchemaRowChanged;

            // Token: 0x1400018B RID: 395
            // (add) Token: 0x06001617 RID: 5655 RVA: 0x00091574 File Offset: 0x0008F774
            // (remove) Token: 0x06001618 RID: 5656 RVA: 0x000915AC File Offset: 0x0008F7AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfSchemaRowChangeEventHandler vJ_BusesTransfSchemaRowDeleting;

            // Token: 0x1400018C RID: 396
            // (add) Token: 0x06001619 RID: 5657 RVA: 0x000915E4 File Offset: 0x0008F7E4
            // (remove) Token: 0x0600161A RID: 5658 RVA: 0x0009161C File Offset: 0x0008F81C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfSchemaRowChangeEventHandler vJ_BusesTransfSchemaRowDeleted;

            // Token: 0x0600161B RID: 5659 RVA: 0x00091651 File Offset: 0x0008F851
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_BusesTransfSchemaRow(DataSetGES.vJ_BusesTransfSchemaRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600161C RID: 5660 RVA: 0x00091660 File Offset: 0x0008F860
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_BusesTransfSchemaRow AddvJ_BusesTransfSchemaRow(int idSub, int idBus, string nameBus, int tagBus, string parentKeyBus, int idTransf, string NameTransf, string nameBusTransf)
            {
                DataSetGES.vJ_BusesTransfSchemaRow vJ_BusesTransfSchemaRow = (DataSetGES.vJ_BusesTransfSchemaRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idSub,
                    idBus,
                    nameBus,
                    tagBus,
                    parentKeyBus,
                    idTransf,
                    NameTransf,
                    nameBusTransf
                };
                vJ_BusesTransfSchemaRow.ItemArray = itemArray;
                base.Rows.Add(vJ_BusesTransfSchemaRow);
                return vJ_BusesTransfSchemaRow;
            }

            // Token: 0x0600161D RID: 5661 RVA: 0x000916D0 File Offset: 0x0008F8D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_BusesTransfSchemaDataTable vJ_BusesTransfSchemaDataTable = (DataSetGES.vJ_BusesTransfSchemaDataTable)base.Clone();
                vJ_BusesTransfSchemaDataTable.InitVars();
                return vJ_BusesTransfSchemaDataTable;
            }

            // Token: 0x0600161E RID: 5662 RVA: 0x000916F0 File Offset: 0x0008F8F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_BusesTransfSchemaDataTable();
            }

            // Token: 0x0600161F RID: 5663 RVA: 0x000916F8 File Offset: 0x0008F8F8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnidSub = base.Columns["idSub"];
                this.columnidBus = base.Columns["idBus"];
                this.columnnameBus = base.Columns["nameBus"];
                this.columntagBus = base.Columns["tagBus"];
                this.columnparentKeyBus = base.Columns["parentKeyBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameTransf = base.Columns["NameTransf"];
                this.columnnameBusTransf = base.Columns["nameBusTransf"];
            }

            // Token: 0x06001620 RID: 5664 RVA: 0x000917B8 File Offset: 0x0008F9B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidSub = new DataColumn("idSub", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSub);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnnameBus = new DataColumn("nameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBus);
                this.columntagBus = new DataColumn("tagBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columntagBus);
                this.columnparentKeyBus = new DataColumn("parentKeyBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnparentKeyBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameTransf = new DataColumn("NameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameTransf);
                this.columnnameBusTransf = new DataColumn("nameBusTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBusTransf);
                this.columnidSub.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnnameBus.ReadOnly = true;
                this.columnnameBus.MaxLength = 565;
                this.columnparentKeyBus.MaxLength = 50;
                this.columnNameTransf.MaxLength = 512;
                this.columnnameBusTransf.ReadOnly = true;
                this.columnnameBusTransf.MaxLength = 1080;
            }

            // Token: 0x06001621 RID: 5665 RVA: 0x0009199A File Offset: 0x0008FB9A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_BusesTransfSchemaRow NewvJ_BusesTransfSchemaRow()
            {
                return (DataSetGES.vJ_BusesTransfSchemaRow)base.NewRow();
            }

            // Token: 0x06001622 RID: 5666 RVA: 0x000919A7 File Offset: 0x0008FBA7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_BusesTransfSchemaRow(builder);
            }

            // Token: 0x06001623 RID: 5667 RVA: 0x000919AF File Offset: 0x0008FBAF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_BusesTransfSchemaRow);
            }

            // Token: 0x06001624 RID: 5668 RVA: 0x000919BB File Offset: 0x0008FBBB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_BusesTransfSchemaRowChanged != null)
                {
                    this.vJ_BusesTransfSchemaRowChanged(this, new DataSetGES.vJ_BusesTransfSchemaRowChangeEvent((DataSetGES.vJ_BusesTransfSchemaRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001625 RID: 5669 RVA: 0x000919EE File Offset: 0x0008FBEE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_BusesTransfSchemaRowChanging != null)
                {
                    this.vJ_BusesTransfSchemaRowChanging(this, new DataSetGES.vJ_BusesTransfSchemaRowChangeEvent((DataSetGES.vJ_BusesTransfSchemaRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001626 RID: 5670 RVA: 0x00091A21 File Offset: 0x0008FC21
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_BusesTransfSchemaRowDeleted != null)
                {
                    this.vJ_BusesTransfSchemaRowDeleted(this, new DataSetGES.vJ_BusesTransfSchemaRowChangeEvent((DataSetGES.vJ_BusesTransfSchemaRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001627 RID: 5671 RVA: 0x00091A54 File Offset: 0x0008FC54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_BusesTransfSchemaRowDeleting != null)
                {
                    this.vJ_BusesTransfSchemaRowDeleting(this, new DataSetGES.vJ_BusesTransfSchemaRowChangeEvent((DataSetGES.vJ_BusesTransfSchemaRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001628 RID: 5672 RVA: 0x00091A87 File Offset: 0x0008FC87
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_BusesTransfSchemaRow(DataSetGES.vJ_BusesTransfSchemaRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001629 RID: 5673 RVA: 0x00091A98 File Offset: 0x0008FC98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_BusesTransfSchemaDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000AC5 RID: 2757
            private DataColumn columnidSub;

            // Token: 0x04000AC6 RID: 2758
            private DataColumn columnidBus;

            // Token: 0x04000AC7 RID: 2759
            private DataColumn columnnameBus;

            // Token: 0x04000AC8 RID: 2760
            private DataColumn columntagBus;

            // Token: 0x04000AC9 RID: 2761
            private DataColumn columnparentKeyBus;

            // Token: 0x04000ACA RID: 2762
            private DataColumn columnidTransf;

            // Token: 0x04000ACB RID: 2763
            private DataColumn columnNameTransf;

            // Token: 0x04000ACC RID: 2764
            private DataColumn columnnameBusTransf;
        }

        // Token: 0x0200011D RID: 285
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_BusesTransfsDataTable : TypedTableBase<DataSetGES.vJ_BusesTransfsRow>
        {
            // Token: 0x0600162A RID: 5674 RVA: 0x00091C90 File Offset: 0x0008FE90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_BusesTransfsDataTable()
            {
                base.TableName = "vJ_BusesTransfs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600162B RID: 5675 RVA: 0x00091CB8 File Offset: 0x0008FEB8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_BusesTransfsDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600162C RID: 5676 RVA: 0x00091D60 File Offset: 0x0008FF60
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_BusesTransfsDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000547 RID: 1351
            // (get) Token: 0x0600162D RID: 5677 RVA: 0x00091D70 File Offset: 0x0008FF70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idmeasurementColumn
            {
                get
                {
                    return this.columnidmeasurement;
                }
            }

            // Token: 0x17000548 RID: 1352
            // (get) Token: 0x0600162E RID: 5678 RVA: 0x00091D78 File Offset: 0x0008FF78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSubstationColumn
            {
                get
                {
                    return this.columnidSubstation;
                }
            }

            // Token: 0x17000549 RID: 1353
            // (get) Token: 0x0600162F RID: 5679 RVA: 0x00091D80 File Offset: 0x0008FF80
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn TypeDocColumn
            {
                get
                {
                    return this.columnTypeDoc;
                }
            }

            // Token: 0x1700054A RID: 1354
            // (get) Token: 0x06001630 RID: 5680 RVA: 0x00091D88 File Offset: 0x0008FF88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x1700054B RID: 1355
            // (get) Token: 0x06001631 RID: 5681 RVA: 0x00091D90 File Offset: 0x0008FF90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameBusColumn
            {
                get
                {
                    return this.columnnameBus;
                }
            }

            // Token: 0x1700054C RID: 1356
            // (get) Token: 0x06001632 RID: 5682 RVA: 0x00091D98 File Offset: 0x0008FF98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x1700054D RID: 1357
            // (get) Token: 0x06001633 RID: 5683 RVA: 0x00091DA0 File Offset: 0x0008FFA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn nameTransfColumn
            {
                get
                {
                    return this.columnnameTransf;
                }
            }

            // Token: 0x1700054E RID: 1358
            // (get) Token: 0x06001634 RID: 5684 RVA: 0x00091DA8 File Offset: 0x0008FFA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x1700054F RID: 1359
            // (get) Token: 0x06001635 RID: 5685 RVA: 0x00091DB0 File Offset: 0x0008FFB0
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000550 RID: 1360
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_BusesTransfsRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_BusesTransfsRow)base.Rows[index];
                }
            }

            // Token: 0x1400018D RID: 397
            // (add) Token: 0x06001637 RID: 5687 RVA: 0x00091DD0 File Offset: 0x0008FFD0
            // (remove) Token: 0x06001638 RID: 5688 RVA: 0x00091E08 File Offset: 0x00090008
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfsRowChangeEventHandler vJ_BusesTransfsRowChanging;

            // Token: 0x1400018E RID: 398
            // (add) Token: 0x06001639 RID: 5689 RVA: 0x00091E40 File Offset: 0x00090040
            // (remove) Token: 0x0600163A RID: 5690 RVA: 0x00091E78 File Offset: 0x00090078
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfsRowChangeEventHandler vJ_BusesTransfsRowChanged;

            // Token: 0x1400018F RID: 399
            // (add) Token: 0x0600163B RID: 5691 RVA: 0x00091EB0 File Offset: 0x000900B0
            // (remove) Token: 0x0600163C RID: 5692 RVA: 0x00091EE8 File Offset: 0x000900E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfsRowChangeEventHandler vJ_BusesTransfsRowDeleting;

            // Token: 0x14000190 RID: 400
            // (add) Token: 0x0600163D RID: 5693 RVA: 0x00091F20 File Offset: 0x00090120
            // (remove) Token: 0x0600163E RID: 5694 RVA: 0x00091F58 File Offset: 0x00090158
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_BusesTransfsRowChangeEventHandler vJ_BusesTransfsRowDeleted;

            // Token: 0x0600163F RID: 5695 RVA: 0x00091F8D File Offset: 0x0009018D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_BusesTransfsRow(DataSetGES.vJ_BusesTransfsRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001640 RID: 5696 RVA: 0x00091F9C File Offset: 0x0009019C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_BusesTransfsRow AddvJ_BusesTransfsRow(int idmeasurement, int idSubstation, int TypeDoc, int idBus, string nameBus, int idTransf, string nameTransf, string Name)
            {
                DataSetGES.vJ_BusesTransfsRow vJ_BusesTransfsRow = (DataSetGES.vJ_BusesTransfsRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idmeasurement,
                    idSubstation,
                    TypeDoc,
                    idBus,
                    nameBus,
                    idTransf,
                    nameTransf,
                    Name
                };
                vJ_BusesTransfsRow.ItemArray = itemArray;
                base.Rows.Add(vJ_BusesTransfsRow);
                return vJ_BusesTransfsRow;
            }

            // Token: 0x06001641 RID: 5697 RVA: 0x00092010 File Offset: 0x00090210
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_BusesTransfsDataTable vJ_BusesTransfsDataTable = (DataSetGES.vJ_BusesTransfsDataTable)base.Clone();
                vJ_BusesTransfsDataTable.InitVars();
                return vJ_BusesTransfsDataTable;
            }

            // Token: 0x06001642 RID: 5698 RVA: 0x00092030 File Offset: 0x00090230
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_BusesTransfsDataTable();
            }

            // Token: 0x06001643 RID: 5699 RVA: 0x00092038 File Offset: 0x00090238
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnidmeasurement = base.Columns["idmeasurement"];
                this.columnidSubstation = base.Columns["idSubstation"];
                this.columnTypeDoc = base.Columns["TypeDoc"];
                this.columnidBus = base.Columns["idBus"];
                this.columnnameBus = base.Columns["nameBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnnameTransf = base.Columns["nameTransf"];
                this.columnName = base.Columns["Name"];
            }

            // Token: 0x06001644 RID: 5700 RVA: 0x000920F8 File Offset: 0x000902F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnidmeasurement = new DataColumn("idmeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidmeasurement);
                this.columnidSubstation = new DataColumn("idSubstation", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSubstation);
                this.columnTypeDoc = new DataColumn("TypeDoc", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeDoc);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnnameBus = new DataColumn("nameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnnameTransf = new DataColumn("nameTransf", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnnameTransf);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidmeasurement.AllowDBNull = false;
                this.columnidSubstation.AllowDBNull = false;
                this.columnTypeDoc.AllowDBNull = false;
                this.columnnameBus.MaxLength = 512;
                this.columnnameTransf.MaxLength = 512;
                this.columnName.MaxLength = 1080;
            }

            // Token: 0x06001645 RID: 5701 RVA: 0x000922C1 File Offset: 0x000904C1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_BusesTransfsRow NewvJ_BusesTransfsRow()
            {
                return (DataSetGES.vJ_BusesTransfsRow)base.NewRow();
            }

            // Token: 0x06001646 RID: 5702 RVA: 0x000922CE File Offset: 0x000904CE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_BusesTransfsRow(builder);
            }

            // Token: 0x06001647 RID: 5703 RVA: 0x000922D6 File Offset: 0x000904D6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_BusesTransfsRow);
            }

            // Token: 0x06001648 RID: 5704 RVA: 0x000922E2 File Offset: 0x000904E2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_BusesTransfsRowChanged != null)
                {
                    this.vJ_BusesTransfsRowChanged(this, new DataSetGES.vJ_BusesTransfsRowChangeEvent((DataSetGES.vJ_BusesTransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001649 RID: 5705 RVA: 0x00092315 File Offset: 0x00090515
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_BusesTransfsRowChanging != null)
                {
                    this.vJ_BusesTransfsRowChanging(this, new DataSetGES.vJ_BusesTransfsRowChangeEvent((DataSetGES.vJ_BusesTransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600164A RID: 5706 RVA: 0x00092348 File Offset: 0x00090548
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_BusesTransfsRowDeleted != null)
                {
                    this.vJ_BusesTransfsRowDeleted(this, new DataSetGES.vJ_BusesTransfsRowChangeEvent((DataSetGES.vJ_BusesTransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600164B RID: 5707 RVA: 0x0009237B File Offset: 0x0009057B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_BusesTransfsRowDeleting != null)
                {
                    this.vJ_BusesTransfsRowDeleting(this, new DataSetGES.vJ_BusesTransfsRowChangeEvent((DataSetGES.vJ_BusesTransfsRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600164C RID: 5708 RVA: 0x000923AE File Offset: 0x000905AE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_BusesTransfsRow(DataSetGES.vJ_BusesTransfsRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600164D RID: 5709 RVA: 0x000923BC File Offset: 0x000905BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_BusesTransfsDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000AD1 RID: 2769
            private DataColumn columnidmeasurement;

            // Token: 0x04000AD2 RID: 2770
            private DataColumn columnidSubstation;

            // Token: 0x04000AD3 RID: 2771
            private DataColumn columnTypeDoc;

            // Token: 0x04000AD4 RID: 2772
            private DataColumn columnidBus;

            // Token: 0x04000AD5 RID: 2773
            private DataColumn columnnameBus;

            // Token: 0x04000AD6 RID: 2774
            private DataColumn columnidTransf;

            // Token: 0x04000AD7 RID: 2775
            private DataColumn columnnameTransf;

            // Token: 0x04000AD8 RID: 2776
            private DataColumn columnName;
        }

        // Token: 0x0200011E RID: 286
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasCableReportDataTable : TypedTableBase<DataSetGES.vJ_MeasCableReportRow>
        {
            // Token: 0x0600164E RID: 5710 RVA: 0x000925B4 File Offset: 0x000907B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasCableReportDataTable()
            {
                base.TableName = "vJ_MeasCableReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600164F RID: 5711 RVA: 0x000925DC File Offset: 0x000907DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasCableReportDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001650 RID: 5712 RVA: 0x00092684 File Offset: 0x00090884
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasCableReportDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x17000551 RID: 1361
            // (get) Token: 0x06001651 RID: 5713 RVA: 0x00092694 File Offset: 0x00090894
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x17000552 RID: 1362
            // (get) Token: 0x06001652 RID: 5714 RVA: 0x0009269C File Offset: 0x0009089C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x17000553 RID: 1363
            // (get) Token: 0x06001653 RID: 5715 RVA: 0x000926A4 File Offset: 0x000908A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x17000554 RID: 1364
            // (get) Token: 0x06001654 RID: 5716 RVA: 0x000926AC File Offset: 0x000908AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000555 RID: 1365
            // (get) Token: 0x06001655 RID: 5717 RVA: 0x000926B4 File Offset: 0x000908B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x17000556 RID: 1366
            // (get) Token: 0x06001656 RID: 5718 RVA: 0x000926BC File Offset: 0x000908BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CellNameColumn
            {
                get
                {
                    return this.columnCellName;
                }
            }

            // Token: 0x17000557 RID: 1367
            // (get) Token: 0x06001657 RID: 5719 RVA: 0x000926C4 File Offset: 0x000908C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            // Token: 0x17000558 RID: 1368
            // (get) Token: 0x06001658 RID: 5720 RVA: 0x000926CC File Offset: 0x000908CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn AddressColumn
            {
                get
                {
                    return this.columnAddress;
                }
            }

            // Token: 0x17000559 RID: 1369
            // (get) Token: 0x06001659 RID: 5721 RVA: 0x000926D4 File Offset: 0x000908D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            // Token: 0x1700055A RID: 1370
            // (get) Token: 0x0600165A RID: 5722 RVA: 0x000926DC File Offset: 0x000908DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            // Token: 0x1700055B RID: 1371
            // (get) Token: 0x0600165B RID: 5723 RVA: 0x000926E4 File Offset: 0x000908E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            // Token: 0x1700055C RID: 1372
            // (get) Token: 0x0600165C RID: 5724 RVA: 0x000926EC File Offset: 0x000908EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            // Token: 0x1700055D RID: 1373
            // (get) Token: 0x0600165D RID: 5725 RVA: 0x000926F4 File Offset: 0x000908F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            // Token: 0x1700055E RID: 1374
            // (get) Token: 0x0600165E RID: 5726 RVA: 0x000926FC File Offset: 0x000908FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            // Token: 0x1700055F RID: 1375
            // (get) Token: 0x0600165F RID: 5727 RVA: 0x00092704 File Offset: 0x00090904
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            // Token: 0x17000560 RID: 1376
            // (get) Token: 0x06001660 RID: 5728 RVA: 0x0009270C File Offset: 0x0009090C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            // Token: 0x17000561 RID: 1377
            // (get) Token: 0x06001661 RID: 5729 RVA: 0x00092714 File Offset: 0x00090914
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            // Token: 0x17000562 RID: 1378
            // (get) Token: 0x06001662 RID: 5730 RVA: 0x0009271C File Offset: 0x0009091C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            // Token: 0x17000563 RID: 1379
            // (get) Token: 0x06001663 RID: 5731 RVA: 0x00092724 File Offset: 0x00090924
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            // Token: 0x17000564 RID: 1380
            // (get) Token: 0x06001664 RID: 5732 RVA: 0x0009272C File Offset: 0x0009092C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            // Token: 0x17000565 RID: 1381
            // (get) Token: 0x06001665 RID: 5733 RVA: 0x00092734 File Offset: 0x00090934
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            // Token: 0x17000566 RID: 1382
            // (get) Token: 0x06001666 RID: 5734 RVA: 0x0009273C File Offset: 0x0009093C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            // Token: 0x17000567 RID: 1383
            // (get) Token: 0x06001667 RID: 5735 RVA: 0x00092744 File Offset: 0x00090944
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x17000568 RID: 1384
            // (get) Token: 0x06001668 RID: 5736 RVA: 0x0009274C File Offset: 0x0009094C
            [DebuggerNonUserCode, Browsable(false), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x17000569 RID: 1385
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasCableReportRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasCableReportRow)base.Rows[index];
                }
            }

            // Token: 0x14000191 RID: 401
            // (add) Token: 0x0600166A RID: 5738 RVA: 0x0009276C File Offset: 0x0009096C
            // (remove) Token: 0x0600166B RID: 5739 RVA: 0x000927A4 File Offset: 0x000909A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReportRowChangeEventHandler vJ_MeasCableReportRowChanging;

            // Token: 0x14000192 RID: 402
            // (add) Token: 0x0600166C RID: 5740 RVA: 0x000927DC File Offset: 0x000909DC
            // (remove) Token: 0x0600166D RID: 5741 RVA: 0x00092814 File Offset: 0x00090A14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReportRowChangeEventHandler vJ_MeasCableReportRowChanged;

            // Token: 0x14000193 RID: 403
            // (add) Token: 0x0600166E RID: 5742 RVA: 0x0009284C File Offset: 0x00090A4C
            // (remove) Token: 0x0600166F RID: 5743 RVA: 0x00092884 File Offset: 0x00090A84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReportRowChangeEventHandler vJ_MeasCableReportRowDeleting;

            // Token: 0x14000194 RID: 404
            // (add) Token: 0x06001670 RID: 5744 RVA: 0x000928BC File Offset: 0x00090ABC
            // (remove) Token: 0x06001671 RID: 5745 RVA: 0x000928F4 File Offset: 0x00090AF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReportRowChangeEventHandler vJ_MeasCableReportRowDeleted;

            // Token: 0x06001672 RID: 5746 RVA: 0x00092929 File Offset: 0x00090B29
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_MeasCableReportRow(DataSetGES.vJ_MeasCableReportRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001673 RID: 5747 RVA: 0x00092938 File Offset: 0x00090B38
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasCableReportRow AddvJ_MeasCableReportRow(int id, int idMeasurement, int idBus, int idTransf, int idCell, string CellName, int idCable, string Address, int idSchmAbn, string Makeup, int Voltage, int Wires, double CrossSection, double PermisAmperage, int Iad, int Ian, int Ibd, int Ibn, int Icd, int Icn, int Iod, int Ion, string Comment)
            {
                DataSetGES.vJ_MeasCableReportRow vJ_MeasCableReportRow = (DataSetGES.vJ_MeasCableReportRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idMeasurement,
                    idBus,
                    idTransf,
                    idCell,
                    CellName,
                    idCable,
                    Address,
                    idSchmAbn,
                    Makeup,
                    Voltage,
                    Wires,
                    CrossSection,
                    PermisAmperage,
                    Iad,
                    Ian,
                    Ibd,
                    Ibn,
                    Icd,
                    Icn,
                    Iod,
                    Ion,
                    Comment
                };
                vJ_MeasCableReportRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasCableReportRow);
                return vJ_MeasCableReportRow;
            }

            // Token: 0x06001674 RID: 5748 RVA: 0x00092A4C File Offset: 0x00090C4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCableReportDataTable vJ_MeasCableReportDataTable = (DataSetGES.vJ_MeasCableReportDataTable)base.Clone();
                vJ_MeasCableReportDataTable.InitVars();
                return vJ_MeasCableReportDataTable;
            }

            // Token: 0x06001675 RID: 5749 RVA: 0x00092A6C File Offset: 0x00090C6C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCableReportDataTable();
            }

            // Token: 0x06001676 RID: 5750 RVA: 0x00092A74 File Offset: 0x00090C74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnCellName = base.Columns["CellName"];
                this.columnidCable = base.Columns["idCable"];
                this.columnAddress = base.Columns["Address"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
            }

            // Token: 0x06001677 RID: 5751 RVA: 0x00092C7C File Offset: 0x00090E7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnCellName = new DataColumn("CellName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCellName);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnAddress = new DataColumn("Address", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnid.AllowDBNull = false;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnCellName.ReadOnly = true;
                this.columnCellName.MaxLength = 512;
                this.columnAddress.ReadOnly = true;
                this.columnAddress.MaxLength = 2147483647;
                this.columnMakeup.ReadOnly = true;
                this.columnMakeup.MaxLength = 68;
                this.columnVoltage.ReadOnly = true;
                this.columnComment.MaxLength = 128;
            }

            // Token: 0x06001678 RID: 5752 RVA: 0x00093125 File Offset: 0x00091325
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCableReportRow NewvJ_MeasCableReportRow()
            {
                return (DataSetGES.vJ_MeasCableReportRow)base.NewRow();
            }

            // Token: 0x06001679 RID: 5753 RVA: 0x00093132 File Offset: 0x00091332
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasCableReportRow(builder);
            }

            // Token: 0x0600167A RID: 5754 RVA: 0x0009313A File Offset: 0x0009133A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasCableReportRow);
            }

            // Token: 0x0600167B RID: 5755 RVA: 0x00093146 File Offset: 0x00091346
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasCableReportRowChanged != null)
                {
                    this.vJ_MeasCableReportRowChanged(this, new DataSetGES.vJ_MeasCableReportRowChangeEvent((DataSetGES.vJ_MeasCableReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600167C RID: 5756 RVA: 0x00093179 File Offset: 0x00091379
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasCableReportRowChanging != null)
                {
                    this.vJ_MeasCableReportRowChanging(this, new DataSetGES.vJ_MeasCableReportRowChangeEvent((DataSetGES.vJ_MeasCableReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600167D RID: 5757 RVA: 0x000931AC File Offset: 0x000913AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasCableReportRowDeleted != null)
                {
                    this.vJ_MeasCableReportRowDeleted(this, new DataSetGES.vJ_MeasCableReportRowChangeEvent((DataSetGES.vJ_MeasCableReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600167E RID: 5758 RVA: 0x000931DF File Offset: 0x000913DF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasCableReportRowDeleting != null)
                {
                    this.vJ_MeasCableReportRowDeleting(this, new DataSetGES.vJ_MeasCableReportRowChangeEvent((DataSetGES.vJ_MeasCableReportRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600167F RID: 5759 RVA: 0x00093212 File Offset: 0x00091412
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_MeasCableReportRow(DataSetGES.vJ_MeasCableReportRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001680 RID: 5760 RVA: 0x00093220 File Offset: 0x00091420
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasCableReportDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000ADD RID: 2781
            private DataColumn columnid;

            // Token: 0x04000ADE RID: 2782
            private DataColumn columnidMeasurement;

            // Token: 0x04000ADF RID: 2783
            private DataColumn columnidBus;

            // Token: 0x04000AE0 RID: 2784
            private DataColumn columnidTransf;

            // Token: 0x04000AE1 RID: 2785
            private DataColumn columnidCell;

            // Token: 0x04000AE2 RID: 2786
            private DataColumn columnCellName;

            // Token: 0x04000AE3 RID: 2787
            private DataColumn columnidCable;

            // Token: 0x04000AE4 RID: 2788
            private DataColumn columnAddress;

            // Token: 0x04000AE5 RID: 2789
            private DataColumn columnidSchmAbn;

            // Token: 0x04000AE6 RID: 2790
            private DataColumn columnMakeup;

            // Token: 0x04000AE7 RID: 2791
            private DataColumn columnVoltage;

            // Token: 0x04000AE8 RID: 2792
            private DataColumn columnWires;

            // Token: 0x04000AE9 RID: 2793
            private DataColumn columnCrossSection;

            // Token: 0x04000AEA RID: 2794
            private DataColumn columnPermisAmperage;

            // Token: 0x04000AEB RID: 2795
            private DataColumn columnIad;

            // Token: 0x04000AEC RID: 2796
            private DataColumn columnIan;

            // Token: 0x04000AED RID: 2797
            private DataColumn columnIbd;

            // Token: 0x04000AEE RID: 2798
            private DataColumn columnIbn;

            // Token: 0x04000AEF RID: 2799
            private DataColumn columnIcd;

            // Token: 0x04000AF0 RID: 2800
            private DataColumn columnIcn;

            // Token: 0x04000AF1 RID: 2801
            private DataColumn columnIod;

            // Token: 0x04000AF2 RID: 2802
            private DataColumn columnIon;

            // Token: 0x04000AF3 RID: 2803
            private DataColumn columnComment;
        }

        // Token: 0x0200011F RID: 287
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_MeasVoltageTransfDataTable : TypedTableBase<DataSetGES.tJ_MeasVoltageTransfRow>
        {
            // Token: 0x06001681 RID: 5761 RVA: 0x00093418 File Offset: 0x00091618
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MeasVoltageTransfDataTable()
            {
                base.TableName = "tJ_MeasVoltageTransf";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001682 RID: 5762 RVA: 0x00093440 File Offset: 0x00091640
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasVoltageTransfDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001683 RID: 5763 RVA: 0x000934E8 File Offset: 0x000916E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MeasVoltageTransfDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700056A RID: 1386
            // (get) Token: 0x06001684 RID: 5764 RVA: 0x000934F8 File Offset: 0x000916F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700056B RID: 1387
            // (get) Token: 0x06001685 RID: 5765 RVA: 0x00093500 File Offset: 0x00091700
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x1700056C RID: 1388
            // (get) Token: 0x06001686 RID: 5766 RVA: 0x00093508 File Offset: 0x00091708
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x1700056D RID: 1389
            // (get) Token: 0x06001687 RID: 5767 RVA: 0x00093510 File Offset: 0x00091710
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            // Token: 0x1700056E RID: 1390
            // (get) Token: 0x06001688 RID: 5768 RVA: 0x00093518 File Offset: 0x00091718
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idSwitchPositionColumn
            {
                get
                {
                    return this.columnidSwitchPosition;
                }
            }

            // Token: 0x1700056F RID: 1391
            // (get) Token: 0x06001689 RID: 5769 RVA: 0x00093520 File Offset: 0x00091720
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UabdColumn
            {
                get
                {
                    return this.columnUabd;
                }
            }

            // Token: 0x17000570 RID: 1392
            // (get) Token: 0x0600168A RID: 5770 RVA: 0x00093528 File Offset: 0x00091728
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UabnColumn
            {
                get
                {
                    return this.columnUabn;
                }
            }

            // Token: 0x17000571 RID: 1393
            // (get) Token: 0x0600168B RID: 5771 RVA: 0x00093530 File Offset: 0x00091730
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbcdColumn
            {
                get
                {
                    return this.columnUbcd;
                }
            }

            // Token: 0x17000572 RID: 1394
            // (get) Token: 0x0600168C RID: 5772 RVA: 0x00093538 File Offset: 0x00091738
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbcnColumn
            {
                get
                {
                    return this.columnUbcn;
                }
            }

            // Token: 0x17000573 RID: 1395
            // (get) Token: 0x0600168D RID: 5773 RVA: 0x00093540 File Offset: 0x00091740
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcadColumn
            {
                get
                {
                    return this.columnUcad;
                }
            }

            // Token: 0x17000574 RID: 1396
            // (get) Token: 0x0600168E RID: 5774 RVA: 0x00093548 File Offset: 0x00091748
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcanColumn
            {
                get
                {
                    return this.columnUcan;
                }
            }

            // Token: 0x17000575 RID: 1397
            // (get) Token: 0x0600168F RID: 5775 RVA: 0x00093550 File Offset: 0x00091750
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UaodColumn
            {
                get
                {
                    return this.columnUaod;
                }
            }

            // Token: 0x17000576 RID: 1398
            // (get) Token: 0x06001690 RID: 5776 RVA: 0x00093558 File Offset: 0x00091758
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UaonColumn
            {
                get
                {
                    return this.columnUaon;
                }
            }

            // Token: 0x17000577 RID: 1399
            // (get) Token: 0x06001691 RID: 5777 RVA: 0x00093560 File Offset: 0x00091760
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbodColumn
            {
                get
                {
                    return this.columnUbod;
                }
            }

            // Token: 0x17000578 RID: 1400
            // (get) Token: 0x06001692 RID: 5778 RVA: 0x00093568 File Offset: 0x00091768
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbonColumn
            {
                get
                {
                    return this.columnUbon;
                }
            }

            // Token: 0x17000579 RID: 1401
            // (get) Token: 0x06001693 RID: 5779 RVA: 0x00093570 File Offset: 0x00091770
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcodColumn
            {
                get
                {
                    return this.columnUcod;
                }
            }

            // Token: 0x1700057A RID: 1402
            // (get) Token: 0x06001694 RID: 5780 RVA: 0x00093578 File Offset: 0x00091778
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UconColumn
            {
                get
                {
                    return this.columnUcon;
                }
            }

            // Token: 0x1700057B RID: 1403
            // (get) Token: 0x06001695 RID: 5781 RVA: 0x00093580 File Offset: 0x00091780
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIadColumn
            {
                get
                {
                    return this.columnSumIad;
                }
            }

            // Token: 0x1700057C RID: 1404
            // (get) Token: 0x06001696 RID: 5782 RVA: 0x00093588 File Offset: 0x00091788
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIanColumn
            {
                get
                {
                    return this.columnSumIan;
                }
            }

            // Token: 0x1700057D RID: 1405
            // (get) Token: 0x06001697 RID: 5783 RVA: 0x00093590 File Offset: 0x00091790
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIbdColumn
            {
                get
                {
                    return this.columnSumIbd;
                }
            }

            // Token: 0x1700057E RID: 1406
            // (get) Token: 0x06001698 RID: 5784 RVA: 0x00093598 File Offset: 0x00091798
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIbnColumn
            {
                get
                {
                    return this.columnSumIbn;
                }
            }

            // Token: 0x1700057F RID: 1407
            // (get) Token: 0x06001699 RID: 5785 RVA: 0x000935A0 File Offset: 0x000917A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIcdColumn
            {
                get
                {
                    return this.columnSumIcd;
                }
            }

            // Token: 0x17000580 RID: 1408
            // (get) Token: 0x0600169A RID: 5786 RVA: 0x000935A8 File Offset: 0x000917A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIcnColumn
            {
                get
                {
                    return this.columnSumIcn;
                }
            }

            // Token: 0x17000581 RID: 1409
            // (get) Token: 0x0600169B RID: 5787 RVA: 0x000935B0 File Offset: 0x000917B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn SumIodColumn
            {
                get
                {
                    return this.columnSumIod;
                }
            }

            // Token: 0x17000582 RID: 1410
            // (get) Token: 0x0600169C RID: 5788 RVA: 0x000935B8 File Offset: 0x000917B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SumIonColumn
            {
                get
                {
                    return this.columnSumIon;
                }
            }

            // Token: 0x17000583 RID: 1411
            // (get) Token: 0x0600169D RID: 5789 RVA: 0x000935C0 File Offset: 0x000917C0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IsrdColumn
            {
                get
                {
                    return this.columnIsrd;
                }
            }

            // Token: 0x17000584 RID: 1412
            // (get) Token: 0x0600169E RID: 5790 RVA: 0x000935C8 File Offset: 0x000917C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IsrnColumn
            {
                get
                {
                    return this.columnIsrn;
                }
            }

            // Token: 0x17000585 RID: 1413
            // (get) Token: 0x0600169F RID: 5791 RVA: 0x000935D0 File Offset: 0x000917D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn KntdColumn
            {
                get
                {
                    return this.columnKntd;
                }
            }

            // Token: 0x17000586 RID: 1414
            // (get) Token: 0x060016A0 RID: 5792 RVA: 0x000935D8 File Offset: 0x000917D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KntnColumn
            {
                get
                {
                    return this.columnKntn;
                }
            }

            // Token: 0x17000587 RID: 1415
            // (get) Token: 0x060016A1 RID: 5793 RVA: 0x000935E0 File Offset: 0x000917E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KpfdColumn
            {
                get
                {
                    return this.columnKpfd;
                }
            }

            // Token: 0x17000588 RID: 1416
            // (get) Token: 0x060016A2 RID: 5794 RVA: 0x000935E8 File Offset: 0x000917E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn KpfnColumn
            {
                get
                {
                    return this.columnKpfn;
                }
            }

            // Token: 0x17000589 RID: 1417
            // (get) Token: 0x060016A3 RID: 5795 RVA: 0x000935F0 File Offset: 0x000917F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idOldMeasurementTransfColumn
            {
                get
                {
                    return this.columnidOldMeasurementTransf;
                }
            }

            // Token: 0x1700058A RID: 1418
            // (get) Token: 0x060016A4 RID: 5796 RVA: 0x000935F8 File Offset: 0x000917F8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x1700058B RID: 1419
            // (get) Token: 0x060016A5 RID: 5797 RVA: 0x00093600 File Offset: 0x00091800
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x1700058C RID: 1420
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasVoltageTransfRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_MeasVoltageTransfRow)base.Rows[index];
                }
            }

            // Token: 0x14000195 RID: 405
            // (add) Token: 0x060016A7 RID: 5799 RVA: 0x00093620 File Offset: 0x00091820
            // (remove) Token: 0x060016A8 RID: 5800 RVA: 0x00093658 File Offset: 0x00091858
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasVoltageTransfRowChangeEventHandler tJ_MeasVoltageTransfRowChanging;

            // Token: 0x14000196 RID: 406
            // (add) Token: 0x060016A9 RID: 5801 RVA: 0x00093690 File Offset: 0x00091890
            // (remove) Token: 0x060016AA RID: 5802 RVA: 0x000936C8 File Offset: 0x000918C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasVoltageTransfRowChangeEventHandler tJ_MeasVoltageTransfRowChanged;

            // Token: 0x14000197 RID: 407
            // (add) Token: 0x060016AB RID: 5803 RVA: 0x00093700 File Offset: 0x00091900
            // (remove) Token: 0x060016AC RID: 5804 RVA: 0x00093738 File Offset: 0x00091938
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasVoltageTransfRowChangeEventHandler tJ_MeasVoltageTransfRowDeleting;

            // Token: 0x14000198 RID: 408
            // (add) Token: 0x060016AD RID: 5805 RVA: 0x00093770 File Offset: 0x00091970
            // (remove) Token: 0x060016AE RID: 5806 RVA: 0x000937A8 File Offset: 0x000919A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasVoltageTransfRowChangeEventHandler tJ_MeasVoltageTransfRowDeleted;

            // Token: 0x060016AF RID: 5807 RVA: 0x000937DD File Offset: 0x000919DD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtJ_MeasVoltageTransfRow(DataSetGES.tJ_MeasVoltageTransfRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060016B0 RID: 5808 RVA: 0x000937EC File Offset: 0x000919EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasVoltageTransfRow AddtJ_MeasVoltageTransfRow(int idMeasurement, int idBus, int idObjList, int idSwitchPosition, int Uabd, int Uabn, int Ubcd, int Ubcn, int Ucad, int Ucan, int Uaod, int Uaon, int Ubod, int Ubon, int Ucod, int Ucon, int SumIad, int SumIan, int SumIbd, int SumIbn, int SumIcd, int SumIcn, int SumIod, int SumIon, int Isrd, int Isrn, int Kntd, int Kntn, int Kpfd, int Kpfn, int idOldMeasurementTransf, bool Deleted)
            {
                DataSetGES.tJ_MeasVoltageTransfRow tJ_MeasVoltageTransfRow = (DataSetGES.tJ_MeasVoltageTransfRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idMeasurement,
                    idBus,
                    idObjList,
                    idSwitchPosition,
                    Uabd,
                    Uabn,
                    Ubcd,
                    Ubcn,
                    Ucad,
                    Ucan,
                    Uaod,
                    Uaon,
                    Ubod,
                    Ubon,
                    Ucod,
                    Ucon,
                    SumIad,
                    SumIan,
                    SumIbd,
                    SumIbn,
                    SumIcd,
                    SumIcn,
                    SumIod,
                    SumIon,
                    Isrd,
                    Isrn,
                    Kntd,
                    Kntn,
                    Kpfd,
                    Kpfn,
                    idOldMeasurementTransf,
                    Deleted
                };
                tJ_MeasVoltageTransfRow.ItemArray = itemArray;
                base.Rows.Add(tJ_MeasVoltageTransfRow);
                return tJ_MeasVoltageTransfRow;
            }

            // Token: 0x060016B1 RID: 5809 RVA: 0x00093978 File Offset: 0x00091B78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasVoltageTransfRow FindByid(int id)
            {
                return (DataSetGES.tJ_MeasVoltageTransfRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x060016B2 RID: 5810 RVA: 0x000939A8 File Offset: 0x00091BA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasVoltageTransfDataTable tJ_MeasVoltageTransfDataTable = (DataSetGES.tJ_MeasVoltageTransfDataTable)base.Clone();
                tJ_MeasVoltageTransfDataTable.InitVars();
                return tJ_MeasVoltageTransfDataTable;
            }

            // Token: 0x060016B3 RID: 5811 RVA: 0x000939C8 File Offset: 0x00091BC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasVoltageTransfDataTable();
            }

            // Token: 0x060016B4 RID: 5812 RVA: 0x000939D0 File Offset: 0x00091BD0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnidSwitchPosition = base.Columns["idSwitchPosition"];
                this.columnUabd = base.Columns["Uabd"];
                this.columnUabn = base.Columns["Uabn"];
                this.columnUbcd = base.Columns["Ubcd"];
                this.columnUbcn = base.Columns["Ubcn"];
                this.columnUcad = base.Columns["Ucad"];
                this.columnUcan = base.Columns["Ucan"];
                this.columnUaod = base.Columns["Uaod"];
                this.columnUaon = base.Columns["Uaon"];
                this.columnUbod = base.Columns["Ubod"];
                this.columnUbon = base.Columns["Ubon"];
                this.columnUcod = base.Columns["Ucod"];
                this.columnUcon = base.Columns["Ucon"];
                this.columnSumIad = base.Columns["SumIad"];
                this.columnSumIan = base.Columns["SumIan"];
                this.columnSumIbd = base.Columns["SumIbd"];
                this.columnSumIbn = base.Columns["SumIbn"];
                this.columnSumIcd = base.Columns["SumIcd"];
                this.columnSumIcn = base.Columns["SumIcn"];
                this.columnSumIod = base.Columns["SumIod"];
                this.columnSumIon = base.Columns["SumIon"];
                this.columnIsrd = base.Columns["Isrd"];
                this.columnIsrn = base.Columns["Isrn"];
                this.columnKntd = base.Columns["Kntd"];
                this.columnKntn = base.Columns["Kntn"];
                this.columnKpfd = base.Columns["Kpfd"];
                this.columnKpfn = base.Columns["Kpfn"];
                this.columnidOldMeasurementTransf = base.Columns["idOldMeasurementTransf"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x060016B5 RID: 5813 RVA: 0x00093CB4 File Offset: 0x00091EB4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnidSwitchPosition = new DataColumn("idSwitchPosition", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSwitchPosition);
                this.columnUabd = new DataColumn("Uabd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabd);
                this.columnUabn = new DataColumn("Uabn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabn);
                this.columnUbcd = new DataColumn("Ubcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcd);
                this.columnUbcn = new DataColumn("Ubcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcn);
                this.columnUcad = new DataColumn("Ucad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcad);
                this.columnUcan = new DataColumn("Ucan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcan);
                this.columnUaod = new DataColumn("Uaod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaod);
                this.columnUaon = new DataColumn("Uaon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaon);
                this.columnUbod = new DataColumn("Ubod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbod);
                this.columnUbon = new DataColumn("Ubon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbon);
                this.columnUcod = new DataColumn("Ucod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcod);
                this.columnUcon = new DataColumn("Ucon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcon);
                this.columnSumIad = new DataColumn("SumIad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIad);
                this.columnSumIan = new DataColumn("SumIan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIan);
                this.columnSumIbd = new DataColumn("SumIbd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbd);
                this.columnSumIbn = new DataColumn("SumIbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIbn);
                this.columnSumIcd = new DataColumn("SumIcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcd);
                this.columnSumIcn = new DataColumn("SumIcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIcn);
                this.columnSumIod = new DataColumn("SumIod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIod);
                this.columnSumIon = new DataColumn("SumIon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnSumIon);
                this.columnIsrd = new DataColumn("Isrd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrd);
                this.columnIsrn = new DataColumn("Isrn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIsrn);
                this.columnKntd = new DataColumn("Kntd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntd);
                this.columnKntn = new DataColumn("Kntn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKntn);
                this.columnKpfd = new DataColumn("Kpfd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfd);
                this.columnKpfn = new DataColumn("Kpfn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnKpfn);
                this.columnidOldMeasurementTransf = new DataColumn("idOldMeasurementTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurementTransf);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
                base.CaseSensitive = false;
            }

            // Token: 0x060016B6 RID: 5814 RVA: 0x0009431E File Offset: 0x0009251E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasVoltageTransfRow NewtJ_MeasVoltageTransfRow()
            {
                return (DataSetGES.tJ_MeasVoltageTransfRow)base.NewRow();
            }

            // Token: 0x060016B7 RID: 5815 RVA: 0x0009432B File Offset: 0x0009252B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_MeasVoltageTransfRow(builder);
            }

            // Token: 0x060016B8 RID: 5816 RVA: 0x00094333 File Offset: 0x00092533
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_MeasVoltageTransfRow);
            }

            // Token: 0x060016B9 RID: 5817 RVA: 0x0009433F File Offset: 0x0009253F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_MeasVoltageTransfRowChanged != null)
                {
                    this.tJ_MeasVoltageTransfRowChanged(this, new DataSetGES.tJ_MeasVoltageTransfRowChangeEvent((DataSetGES.tJ_MeasVoltageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060016BA RID: 5818 RVA: 0x00094372 File Offset: 0x00092572
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_MeasVoltageTransfRowChanging != null)
                {
                    this.tJ_MeasVoltageTransfRowChanging(this, new DataSetGES.tJ_MeasVoltageTransfRowChangeEvent((DataSetGES.tJ_MeasVoltageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060016BB RID: 5819 RVA: 0x000943A5 File Offset: 0x000925A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_MeasVoltageTransfRowDeleted != null)
                {
                    this.tJ_MeasVoltageTransfRowDeleted(this, new DataSetGES.tJ_MeasVoltageTransfRowChangeEvent((DataSetGES.tJ_MeasVoltageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060016BC RID: 5820 RVA: 0x000943D8 File Offset: 0x000925D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_MeasVoltageTransfRowDeleting != null)
                {
                    this.tJ_MeasVoltageTransfRowDeleting(this, new DataSetGES.tJ_MeasVoltageTransfRowChangeEvent((DataSetGES.tJ_MeasVoltageTransfRow)e.Row, e.Action));
                }
            }

            // Token: 0x060016BD RID: 5821 RVA: 0x0009440B File Offset: 0x0009260B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetJ_MeasVoltageTransfRow(DataSetGES.tJ_MeasVoltageTransfRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060016BE RID: 5822 RVA: 0x0009441C File Offset: 0x0009261C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_MeasVoltageTransfDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000AF8 RID: 2808
            private DataColumn columnid;

            // Token: 0x04000AF9 RID: 2809
            private DataColumn columnidMeasurement;

            // Token: 0x04000AFA RID: 2810
            private DataColumn columnidBus;

            // Token: 0x04000AFB RID: 2811
            private DataColumn columnidObjList;

            // Token: 0x04000AFC RID: 2812
            private DataColumn columnidSwitchPosition;

            // Token: 0x04000AFD RID: 2813
            private DataColumn columnUabd;

            // Token: 0x04000AFE RID: 2814
            private DataColumn columnUabn;

            // Token: 0x04000AFF RID: 2815
            private DataColumn columnUbcd;

            // Token: 0x04000B00 RID: 2816
            private DataColumn columnUbcn;

            // Token: 0x04000B01 RID: 2817
            private DataColumn columnUcad;

            // Token: 0x04000B02 RID: 2818
            private DataColumn columnUcan;

            // Token: 0x04000B03 RID: 2819
            private DataColumn columnUaod;

            // Token: 0x04000B04 RID: 2820
            private DataColumn columnUaon;

            // Token: 0x04000B05 RID: 2821
            private DataColumn columnUbod;

            // Token: 0x04000B06 RID: 2822
            private DataColumn columnUbon;

            // Token: 0x04000B07 RID: 2823
            private DataColumn columnUcod;

            // Token: 0x04000B08 RID: 2824
            private DataColumn columnUcon;

            // Token: 0x04000B09 RID: 2825
            private DataColumn columnSumIad;

            // Token: 0x04000B0A RID: 2826
            private DataColumn columnSumIan;

            // Token: 0x04000B0B RID: 2827
            private DataColumn columnSumIbd;

            // Token: 0x04000B0C RID: 2828
            private DataColumn columnSumIbn;

            // Token: 0x04000B0D RID: 2829
            private DataColumn columnSumIcd;

            // Token: 0x04000B0E RID: 2830
            private DataColumn columnSumIcn;

            // Token: 0x04000B0F RID: 2831
            private DataColumn columnSumIod;

            // Token: 0x04000B10 RID: 2832
            private DataColumn columnSumIon;

            // Token: 0x04000B11 RID: 2833
            private DataColumn columnIsrd;

            // Token: 0x04000B12 RID: 2834
            private DataColumn columnIsrn;

            // Token: 0x04000B13 RID: 2835
            private DataColumn columnKntd;

            // Token: 0x04000B14 RID: 2836
            private DataColumn columnKntn;

            // Token: 0x04000B15 RID: 2837
            private DataColumn columnKpfd;

            // Token: 0x04000B16 RID: 2838
            private DataColumn columnKpfn;

            // Token: 0x04000B17 RID: 2839
            private DataColumn columnidOldMeasurementTransf;

            // Token: 0x04000B18 RID: 2840
            private DataColumn columnDeleted;
        }

        // Token: 0x02000120 RID: 288
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasCableReport2DataTable : TypedTableBase<DataSetGES.vJ_MeasCableReport2Row>
        {
            // Token: 0x060016BF RID: 5823 RVA: 0x00094614 File Offset: 0x00092814
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasCableReport2DataTable()
            {
                base.TableName = "vJ_MeasCableReport2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060016C0 RID: 5824 RVA: 0x0009463C File Offset: 0x0009283C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasCableReport2DataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060016C1 RID: 5825 RVA: 0x000946E4 File Offset: 0x000928E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasCableReport2DataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x1700058D RID: 1421
            // (get) Token: 0x060016C2 RID: 5826 RVA: 0x000946F4 File Offset: 0x000928F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x1700058E RID: 1422
            // (get) Token: 0x060016C3 RID: 5827 RVA: 0x000946FC File Offset: 0x000928FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x1700058F RID: 1423
            // (get) Token: 0x060016C4 RID: 5828 RVA: 0x00094704 File Offset: 0x00092904
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x17000590 RID: 1424
            // (get) Token: 0x060016C5 RID: 5829 RVA: 0x0009470C File Offset: 0x0009290C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x17000591 RID: 1425
            // (get) Token: 0x060016C6 RID: 5830 RVA: 0x00094714 File Offset: 0x00092914
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x17000592 RID: 1426
            // (get) Token: 0x060016C7 RID: 5831 RVA: 0x0009471C File Offset: 0x0009291C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CellNameColumn
            {
                get
                {
                    return this.columnCellName;
                }
            }

            // Token: 0x17000593 RID: 1427
            // (get) Token: 0x060016C8 RID: 5832 RVA: 0x00094724 File Offset: 0x00092924
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            // Token: 0x17000594 RID: 1428
            // (get) Token: 0x060016C9 RID: 5833 RVA: 0x0009472C File Offset: 0x0009292C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CompanyColumn
            {
                get
                {
                    return this.columnCompany;
                }
            }

            // Token: 0x17000595 RID: 1429
            // (get) Token: 0x060016CA RID: 5834 RVA: 0x00094734 File Offset: 0x00092934
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn StreetColumn
            {
                get
                {
                    return this.columnStreet;
                }
            }

            // Token: 0x17000596 RID: 1430
            // (get) Token: 0x060016CB RID: 5835 RVA: 0x0009473C File Offset: 0x0009293C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn HouseColumn
            {
                get
                {
                    return this.columnHouse;
                }
            }

            // Token: 0x17000597 RID: 1431
            // (get) Token: 0x060016CC RID: 5836 RVA: 0x00094744 File Offset: 0x00092944
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn FullHouseColumn
            {
                get
                {
                    return this.columnFullHouse;
                }
            }

            // Token: 0x17000598 RID: 1432
            // (get) Token: 0x060016CD RID: 5837 RVA: 0x0009474C File Offset: 0x0009294C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSchmAbnColumn
            {
                get
                {
                    return this.columnidSchmAbn;
                }
            }

            // Token: 0x17000599 RID: 1433
            // (get) Token: 0x060016CE RID: 5838 RVA: 0x00094754 File Offset: 0x00092954
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn MakeupColumn
            {
                get
                {
                    return this.columnMakeup;
                }
            }

            // Token: 0x1700059A RID: 1434
            // (get) Token: 0x060016CF RID: 5839 RVA: 0x0009475C File Offset: 0x0009295C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn VoltageColumn
            {
                get
                {
                    return this.columnVoltage;
                }
            }

            // Token: 0x1700059B RID: 1435
            // (get) Token: 0x060016D0 RID: 5840 RVA: 0x00094764 File Offset: 0x00092964
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn WiresColumn
            {
                get
                {
                    return this.columnWires;
                }
            }

            // Token: 0x1700059C RID: 1436
            // (get) Token: 0x060016D1 RID: 5841 RVA: 0x0009476C File Offset: 0x0009296C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn CrossSectionColumn
            {
                get
                {
                    return this.columnCrossSection;
                }
            }

            // Token: 0x1700059D RID: 1437
            // (get) Token: 0x060016D2 RID: 5842 RVA: 0x00094774 File Offset: 0x00092974
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermisAmperageColumn
            {
                get
                {
                    return this.columnPermisAmperage;
                }
            }

            // Token: 0x1700059E RID: 1438
            // (get) Token: 0x060016D3 RID: 5843 RVA: 0x0009477C File Offset: 0x0009297C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            // Token: 0x1700059F RID: 1439
            // (get) Token: 0x060016D4 RID: 5844 RVA: 0x00094784 File Offset: 0x00092984
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            // Token: 0x170005A0 RID: 1440
            // (get) Token: 0x060016D5 RID: 5845 RVA: 0x0009478C File Offset: 0x0009298C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            // Token: 0x170005A1 RID: 1441
            // (get) Token: 0x060016D6 RID: 5846 RVA: 0x00094794 File Offset: 0x00092994
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            // Token: 0x170005A2 RID: 1442
            // (get) Token: 0x060016D7 RID: 5847 RVA: 0x0009479C File Offset: 0x0009299C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            // Token: 0x170005A3 RID: 1443
            // (get) Token: 0x060016D8 RID: 5848 RVA: 0x000947A4 File Offset: 0x000929A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            // Token: 0x170005A4 RID: 1444
            // (get) Token: 0x060016D9 RID: 5849 RVA: 0x000947AC File Offset: 0x000929AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IodColumn
            {
                get
                {
                    return this.columnIod;
                }
            }

            // Token: 0x170005A5 RID: 1445
            // (get) Token: 0x060016DA RID: 5850 RVA: 0x000947B4 File Offset: 0x000929B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IonColumn
            {
                get
                {
                    return this.columnIon;
                }
            }

            // Token: 0x170005A6 RID: 1446
            // (get) Token: 0x060016DB RID: 5851 RVA: 0x000947BC File Offset: 0x000929BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x170005A7 RID: 1447
            // (get) Token: 0x060016DC RID: 5852 RVA: 0x000947C4 File Offset: 0x000929C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false)]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170005A8 RID: 1448
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCableReport2Row this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasCableReport2Row)base.Rows[index];
                }
            }

            // Token: 0x14000199 RID: 409
            // (add) Token: 0x060016DE RID: 5854 RVA: 0x000947E4 File Offset: 0x000929E4
            // (remove) Token: 0x060016DF RID: 5855 RVA: 0x0009481C File Offset: 0x00092A1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReport2RowChangeEventHandler vJ_MeasCableReport2RowChanging;

            // Token: 0x1400019A RID: 410
            // (add) Token: 0x060016E0 RID: 5856 RVA: 0x00094854 File Offset: 0x00092A54
            // (remove) Token: 0x060016E1 RID: 5857 RVA: 0x0009488C File Offset: 0x00092A8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReport2RowChangeEventHandler vJ_MeasCableReport2RowChanged;

            // Token: 0x1400019B RID: 411
            // (add) Token: 0x060016E2 RID: 5858 RVA: 0x000948C4 File Offset: 0x00092AC4
            // (remove) Token: 0x060016E3 RID: 5859 RVA: 0x000948FC File Offset: 0x00092AFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReport2RowChangeEventHandler vJ_MeasCableReport2RowDeleting;

            // Token: 0x1400019C RID: 412
            // (add) Token: 0x060016E4 RID: 5860 RVA: 0x00094934 File Offset: 0x00092B34
            // (remove) Token: 0x060016E5 RID: 5861 RVA: 0x0009496C File Offset: 0x00092B6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCableReport2RowChangeEventHandler vJ_MeasCableReport2RowDeleted;

            // Token: 0x060016E6 RID: 5862 RVA: 0x000949A1 File Offset: 0x00092BA1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_MeasCableReport2Row(DataSetGES.vJ_MeasCableReport2Row row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x060016E7 RID: 5863 RVA: 0x000949B0 File Offset: 0x00092BB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCableReport2Row AddvJ_MeasCableReport2Row(int id, int idMeasurement, int idBus, int idTransf, int idCell, string CellName, int idCable, string Company, string Street, int House, string FullHouse, int idSchmAbn, string Makeup, int Voltage, int Wires, double CrossSection, double PermisAmperage, int Iad, int Ian, int Ibd, int Ibn, int Icd, int Icn, int Iod, int Ion, string Comment)
            {
                DataSetGES.vJ_MeasCableReport2Row vJ_MeasCableReport2Row = (DataSetGES.vJ_MeasCableReport2Row)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idMeasurement,
                    idBus,
                    idTransf,
                    idCell,
                    CellName,
                    idCable,
                    Company,
                    Street,
                    House,
                    FullHouse,
                    idSchmAbn,
                    Makeup,
                    Voltage,
                    Wires,
                    CrossSection,
                    PermisAmperage,
                    Iad,
                    Ian,
                    Ibd,
                    Ibn,
                    Icd,
                    Icn,
                    Iod,
                    Ion,
                    Comment
                };
                vJ_MeasCableReport2Row.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasCableReport2Row);
                return vJ_MeasCableReport2Row;
            }

            // Token: 0x060016E8 RID: 5864 RVA: 0x00094ADC File Offset: 0x00092CDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCableReport2DataTable vJ_MeasCableReport2DataTable = (DataSetGES.vJ_MeasCableReport2DataTable)base.Clone();
                vJ_MeasCableReport2DataTable.InitVars();
                return vJ_MeasCableReport2DataTable;
            }

            // Token: 0x060016E9 RID: 5865 RVA: 0x00094AFC File Offset: 0x00092CFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCableReport2DataTable();
            }

            // Token: 0x060016EA RID: 5866 RVA: 0x00094B04 File Offset: 0x00092D04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnCellName = base.Columns["CellName"];
                this.columnidCable = base.Columns["idCable"];
                this.columnCompany = base.Columns["Company"];
                this.columnStreet = base.Columns["Street"];
                this.columnHouse = base.Columns["House"];
                this.columnFullHouse = base.Columns["FullHouse"];
                this.columnidSchmAbn = base.Columns["idSchmAbn"];
                this.columnMakeup = base.Columns["Makeup"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnWires = base.Columns["Wires"];
                this.columnCrossSection = base.Columns["CrossSection"];
                this.columnPermisAmperage = base.Columns["PermisAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnIod = base.Columns["Iod"];
                this.columnIon = base.Columns["Ion"];
                this.columnComment = base.Columns["Comment"];
            }

            // Token: 0x060016EB RID: 5867 RVA: 0x00094D50 File Offset: 0x00092F50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnCellName = new DataColumn("CellName", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCellName);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnCompany = new DataColumn("Company", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnStreet = new DataColumn("Street", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnHouse = new DataColumn("House", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnHouse);
                this.columnFullHouse = new DataColumn("FullHouse", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnFullHouse);
                this.columnidSchmAbn = new DataColumn("idSchmAbn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSchmAbn);
                this.columnMakeup = new DataColumn("Makeup", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnMakeup);
                this.columnVoltage = new DataColumn("Voltage", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnWires = new DataColumn("Wires", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnWires);
                this.columnCrossSection = new DataColumn("CrossSection", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnCrossSection);
                this.columnPermisAmperage = new DataColumn("PermisAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermisAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnIod = new DataColumn("Iod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIod);
                this.columnIon = new DataColumn("Ion", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIon);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnid.AllowDBNull = false;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidTransf.AllowDBNull = false;
                this.columnCellName.ReadOnly = true;
                this.columnCellName.MaxLength = 512;
                this.columnCompany.MaxLength = 255;
                this.columnStreet.MaxLength = 40;
                this.columnMakeup.ReadOnly = true;
                this.columnMakeup.MaxLength = 68;
                this.columnVoltage.ReadOnly = true;
                this.columnComment.MaxLength = 128;
            }

            // Token: 0x060016EC RID: 5868 RVA: 0x00095281 File Offset: 0x00093481
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCableReport2Row NewvJ_MeasCableReport2Row()
            {
                return (DataSetGES.vJ_MeasCableReport2Row)base.NewRow();
            }

            // Token: 0x060016ED RID: 5869 RVA: 0x0009528E File Offset: 0x0009348E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasCableReport2Row(builder);
            }

            // Token: 0x060016EE RID: 5870 RVA: 0x00095296 File Offset: 0x00093496
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasCableReport2Row);
            }

            // Token: 0x060016EF RID: 5871 RVA: 0x000952A2 File Offset: 0x000934A2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasCableReport2RowChanged != null)
                {
                    this.vJ_MeasCableReport2RowChanged(this, new DataSetGES.vJ_MeasCableReport2RowChangeEvent((DataSetGES.vJ_MeasCableReport2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060016F0 RID: 5872 RVA: 0x000952D5 File Offset: 0x000934D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasCableReport2RowChanging != null)
                {
                    this.vJ_MeasCableReport2RowChanging(this, new DataSetGES.vJ_MeasCableReport2RowChangeEvent((DataSetGES.vJ_MeasCableReport2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060016F1 RID: 5873 RVA: 0x00095308 File Offset: 0x00093508
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasCableReport2RowDeleted != null)
                {
                    this.vJ_MeasCableReport2RowDeleted(this, new DataSetGES.vJ_MeasCableReport2RowChangeEvent((DataSetGES.vJ_MeasCableReport2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060016F2 RID: 5874 RVA: 0x0009533B File Offset: 0x0009353B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasCableReport2RowDeleting != null)
                {
                    this.vJ_MeasCableReport2RowDeleting(this, new DataSetGES.vJ_MeasCableReport2RowChangeEvent((DataSetGES.vJ_MeasCableReport2Row)e.Row, e.Action));
                }
            }

            // Token: 0x060016F3 RID: 5875 RVA: 0x0009536E File Offset: 0x0009356E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_MeasCableReport2Row(DataSetGES.vJ_MeasCableReport2Row row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060016F4 RID: 5876 RVA: 0x0009537C File Offset: 0x0009357C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasCableReport2DataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000B1D RID: 2845
            private DataColumn columnid;

            // Token: 0x04000B1E RID: 2846
            private DataColumn columnidMeasurement;

            // Token: 0x04000B1F RID: 2847
            private DataColumn columnidBus;

            // Token: 0x04000B20 RID: 2848
            private DataColumn columnidTransf;

            // Token: 0x04000B21 RID: 2849
            private DataColumn columnidCell;

            // Token: 0x04000B22 RID: 2850
            private DataColumn columnCellName;

            // Token: 0x04000B23 RID: 2851
            private DataColumn columnidCable;

            // Token: 0x04000B24 RID: 2852
            private DataColumn columnCompany;

            // Token: 0x04000B25 RID: 2853
            private DataColumn columnStreet;

            // Token: 0x04000B26 RID: 2854
            private DataColumn columnHouse;

            // Token: 0x04000B27 RID: 2855
            private DataColumn columnFullHouse;

            // Token: 0x04000B28 RID: 2856
            private DataColumn columnidSchmAbn;

            // Token: 0x04000B29 RID: 2857
            private DataColumn columnMakeup;

            // Token: 0x04000B2A RID: 2858
            private DataColumn columnVoltage;

            // Token: 0x04000B2B RID: 2859
            private DataColumn columnWires;

            // Token: 0x04000B2C RID: 2860
            private DataColumn columnCrossSection;

            // Token: 0x04000B2D RID: 2861
            private DataColumn columnPermisAmperage;

            // Token: 0x04000B2E RID: 2862
            private DataColumn columnIad;

            // Token: 0x04000B2F RID: 2863
            private DataColumn columnIan;

            // Token: 0x04000B30 RID: 2864
            private DataColumn columnIbd;

            // Token: 0x04000B31 RID: 2865
            private DataColumn columnIbn;

            // Token: 0x04000B32 RID: 2866
            private DataColumn columnIcd;

            // Token: 0x04000B33 RID: 2867
            private DataColumn columnIcn;

            // Token: 0x04000B34 RID: 2868
            private DataColumn columnIod;

            // Token: 0x04000B35 RID: 2869
            private DataColumn columnIon;

            // Token: 0x04000B36 RID: 2870
            private DataColumn columnComment;
        }

        // Token: 0x02000121 RID: 289
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_CableByCellMeasDataTable : TypedTableBase<DataSetGES.vJ_CableByCellMeasRow>
        {
            // Token: 0x060016F5 RID: 5877 RVA: 0x00095574 File Offset: 0x00093774
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CableByCellMeasDataTable()
            {
                base.TableName = "vJ_CableByCellMeas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x060016F6 RID: 5878 RVA: 0x0009559C File Offset: 0x0009379C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableByCellMeasDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x060016F7 RID: 5879 RVA: 0x00095644 File Offset: 0x00093844
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_CableByCellMeasDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170005A9 RID: 1449
            // (get) Token: 0x060016F8 RID: 5880 RVA: 0x00095654 File Offset: 0x00093854
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x170005AA RID: 1450
            // (get) Token: 0x060016F9 RID: 5881 RVA: 0x0009565C File Offset: 0x0009385C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x170005AB RID: 1451
            // (get) Token: 0x060016FA RID: 5882 RVA: 0x00095664 File Offset: 0x00093864
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameColumn
            {
                get
                {
                    return this.columnName;
                }
            }

            // Token: 0x170005AC RID: 1452
            // (get) Token: 0x060016FB RID: 5883 RVA: 0x0009566C File Offset: 0x0009386C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x170005AD RID: 1453
            // (get) Token: 0x060016FC RID: 5884 RVA: 0x00095674 File Offset: 0x00093874
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x170005AE RID: 1454
            // (get) Token: 0x060016FD RID: 5885 RVA: 0x0009567C File Offset: 0x0009387C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x170005AF RID: 1455
            // (get) Token: 0x060016FE RID: 5886 RVA: 0x00095684 File Offset: 0x00093884
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn TypeCodeIdCellColumn
            {
                get
                {
                    return this.columnTypeCodeIdCell;
                }
            }

            // Token: 0x170005B0 RID: 1456
            // (get) Token: 0x060016FF RID: 5887 RVA: 0x0009568C File Offset: 0x0009388C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idParentCellColumn
            {
                get
                {
                    return this.columnidParentCell;
                }
            }

            // Token: 0x170005B1 RID: 1457
            // (get) Token: 0x06001700 RID: 5888 RVA: 0x00095694 File Offset: 0x00093894
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idCableColumn
            {
                get
                {
                    return this.columnidCable;
                }
            }

            // Token: 0x170005B2 RID: 1458
            // (get) Token: 0x06001701 RID: 5889 RVA: 0x0009569C File Offset: 0x0009389C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCableColumn
            {
                get
                {
                    return this.columnNameCable;
                }
            }

            // Token: 0x170005B3 RID: 1459
            // (get) Token: 0x06001702 RID: 5890 RVA: 0x000956A4 File Offset: 0x000938A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170005B4 RID: 1460
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableByCellMeasRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_CableByCellMeasRow)base.Rows[index];
                }
            }

            // Token: 0x1400019D RID: 413
            // (add) Token: 0x06001704 RID: 5892 RVA: 0x000956C4 File Offset: 0x000938C4
            // (remove) Token: 0x06001705 RID: 5893 RVA: 0x000956FC File Offset: 0x000938FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellMeasRowChangeEventHandler vJ_CableByCellMeasRowChanging;

            // Token: 0x1400019E RID: 414
            // (add) Token: 0x06001706 RID: 5894 RVA: 0x00095734 File Offset: 0x00093934
            // (remove) Token: 0x06001707 RID: 5895 RVA: 0x0009576C File Offset: 0x0009396C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellMeasRowChangeEventHandler vJ_CableByCellMeasRowChanged;

            // Token: 0x1400019F RID: 415
            // (add) Token: 0x06001708 RID: 5896 RVA: 0x000957A4 File Offset: 0x000939A4
            // (remove) Token: 0x06001709 RID: 5897 RVA: 0x000957DC File Offset: 0x000939DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellMeasRowChangeEventHandler vJ_CableByCellMeasRowDeleting;

            // Token: 0x140001A0 RID: 416
            // (add) Token: 0x0600170A RID: 5898 RVA: 0x00095814 File Offset: 0x00093A14
            // (remove) Token: 0x0600170B RID: 5899 RVA: 0x0009584C File Offset: 0x00093A4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_CableByCellMeasRowChangeEventHandler vJ_CableByCellMeasRowDeleted;

            // Token: 0x0600170C RID: 5900 RVA: 0x00095881 File Offset: 0x00093A81
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_CableByCellMeasRow(DataSetGES.vJ_CableByCellMeasRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x0600170D RID: 5901 RVA: 0x00095890 File Offset: 0x00093A90
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CableByCellMeasRow AddvJ_CableByCellMeasRow(int idMeasurement, int idBus, string Name, int idTransf, int idCell, string NameCell, int TypeCodeIdCell, int idParentCell, int idCable, string NameCable)
            {
                DataSetGES.vJ_CableByCellMeasRow vJ_CableByCellMeasRow = (DataSetGES.vJ_CableByCellMeasRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    idMeasurement,
                    idBus,
                    Name,
                    idTransf,
                    idCell,
                    NameCell,
                    TypeCodeIdCell,
                    idParentCell,
                    idCable,
                    NameCable
                };
                vJ_CableByCellMeasRow.ItemArray = itemArray;
                base.Rows.Add(vJ_CableByCellMeasRow);
                return vJ_CableByCellMeasRow;
            }

            // Token: 0x0600170E RID: 5902 RVA: 0x0009591C File Offset: 0x00093B1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_CableByCellMeasDataTable vJ_CableByCellMeasDataTable = (DataSetGES.vJ_CableByCellMeasDataTable)base.Clone();
                vJ_CableByCellMeasDataTable.InitVars();
                return vJ_CableByCellMeasDataTable;
            }

            // Token: 0x0600170F RID: 5903 RVA: 0x0009593C File Offset: 0x00093B3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_CableByCellMeasDataTable();
            }

            // Token: 0x06001710 RID: 5904 RVA: 0x00095944 File Offset: 0x00093B44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnName = base.Columns["Name"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnidCell = base.Columns["idCell"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnTypeCodeIdCell = base.Columns["TypeCodeIdCell"];
                this.columnidParentCell = base.Columns["idParentCell"];
                this.columnidCable = base.Columns["idCable"];
                this.columnNameCable = base.Columns["NameCable"];
            }

            // Token: 0x06001711 RID: 5905 RVA: 0x00095A30 File Offset: 0x00093C30
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnName = new DataColumn("Name", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnTypeCodeIdCell = new DataColumn("TypeCodeIdCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnTypeCodeIdCell);
                this.columnidParentCell = new DataColumn("idParentCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidParentCell);
                this.columnidCable = new DataColumn("idCable", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCable);
                this.columnNameCable = new DataColumn("NameCable", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCable);
                this.columnidMeasurement.AllowDBNull = false;
                this.columnName.MaxLength = 512;
                this.columnidTransf.AllowDBNull = false;
                this.columnNameCell.MaxLength = 512;
                this.columnNameCable.MaxLength = 512;
            }

            // Token: 0x06001712 RID: 5906 RVA: 0x00095C47 File Offset: 0x00093E47
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CableByCellMeasRow NewvJ_CableByCellMeasRow()
            {
                return (DataSetGES.vJ_CableByCellMeasRow)base.NewRow();
            }

            // Token: 0x06001713 RID: 5907 RVA: 0x00095C54 File Offset: 0x00093E54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_CableByCellMeasRow(builder);
            }

            // Token: 0x06001714 RID: 5908 RVA: 0x00095C5C File Offset: 0x00093E5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_CableByCellMeasRow);
            }

            // Token: 0x06001715 RID: 5909 RVA: 0x00095C68 File Offset: 0x00093E68
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_CableByCellMeasRowChanged != null)
                {
                    this.vJ_CableByCellMeasRowChanged(this, new DataSetGES.vJ_CableByCellMeasRowChangeEvent((DataSetGES.vJ_CableByCellMeasRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001716 RID: 5910 RVA: 0x00095C9B File Offset: 0x00093E9B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_CableByCellMeasRowChanging != null)
                {
                    this.vJ_CableByCellMeasRowChanging(this, new DataSetGES.vJ_CableByCellMeasRowChangeEvent((DataSetGES.vJ_CableByCellMeasRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001717 RID: 5911 RVA: 0x00095CCE File Offset: 0x00093ECE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_CableByCellMeasRowDeleted != null)
                {
                    this.vJ_CableByCellMeasRowDeleted(this, new DataSetGES.vJ_CableByCellMeasRowChangeEvent((DataSetGES.vJ_CableByCellMeasRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001718 RID: 5912 RVA: 0x00095D01 File Offset: 0x00093F01
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_CableByCellMeasRowDeleting != null)
                {
                    this.vJ_CableByCellMeasRowDeleting(this, new DataSetGES.vJ_CableByCellMeasRowChangeEvent((DataSetGES.vJ_CableByCellMeasRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001719 RID: 5913 RVA: 0x00095D34 File Offset: 0x00093F34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevJ_CableByCellMeasRow(DataSetGES.vJ_CableByCellMeasRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x0600171A RID: 5914 RVA: 0x00095D44 File Offset: 0x00093F44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_CableByCellMeasDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000B3B RID: 2875
            private DataColumn columnidMeasurement;

            // Token: 0x04000B3C RID: 2876
            private DataColumn columnidBus;

            // Token: 0x04000B3D RID: 2877
            private DataColumn columnName;

            // Token: 0x04000B3E RID: 2878
            private DataColumn columnidTransf;

            // Token: 0x04000B3F RID: 2879
            private DataColumn columnidCell;

            // Token: 0x04000B40 RID: 2880
            private DataColumn columnNameCell;

            // Token: 0x04000B41 RID: 2881
            private DataColumn columnTypeCodeIdCell;

            // Token: 0x04000B42 RID: 2882
            private DataColumn columnidParentCell;

            // Token: 0x04000B43 RID: 2883
            private DataColumn columnidCable;

            // Token: 0x04000B44 RID: 2884
            private DataColumn columnNameCable;
        }

        // Token: 0x02000122 RID: 290
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class tJ_MeasCellDataTable : TypedTableBase<DataSetGES.tJ_MeasCellRow>
        {
            // Token: 0x0600171B RID: 5915 RVA: 0x00095F3C File Offset: 0x0009413C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasCellDataTable()
            {
                base.TableName = "tJ_MeasCell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x0600171C RID: 5916 RVA: 0x00095F64 File Offset: 0x00094164
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasCellDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x0600171D RID: 5917 RVA: 0x0009600C File Offset: 0x0009420C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tJ_MeasCellDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170005B5 RID: 1461
            // (get) Token: 0x0600171E RID: 5918 RVA: 0x0009601C File Offset: 0x0009421C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170005B6 RID: 1462
            // (get) Token: 0x0600171F RID: 5919 RVA: 0x00096024 File Offset: 0x00094224
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x170005B7 RID: 1463
            // (get) Token: 0x06001720 RID: 5920 RVA: 0x0009602C File Offset: 0x0009422C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x170005B8 RID: 1464
            // (get) Token: 0x06001721 RID: 5921 RVA: 0x00096034 File Offset: 0x00094234
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idCellColumn
            {
                get
                {
                    return this.columnidCell;
                }
            }

            // Token: 0x170005B9 RID: 1465
            // (get) Token: 0x06001722 RID: 5922 RVA: 0x0009603C File Offset: 0x0009423C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x170005BA RID: 1466
            // (get) Token: 0x06001723 RID: 5923 RVA: 0x00096044 File Offset: 0x00094244
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermissAmperageColumn
            {
                get
                {
                    return this.columnPermissAmperage;
                }
            }

            // Token: 0x170005BB RID: 1467
            // (get) Token: 0x06001724 RID: 5924 RVA: 0x0009604C File Offset: 0x0009424C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            // Token: 0x170005BC RID: 1468
            // (get) Token: 0x06001725 RID: 5925 RVA: 0x00096054 File Offset: 0x00094254
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            // Token: 0x170005BD RID: 1469
            // (get) Token: 0x06001726 RID: 5926 RVA: 0x0009605C File Offset: 0x0009425C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            // Token: 0x170005BE RID: 1470
            // (get) Token: 0x06001727 RID: 5927 RVA: 0x00096064 File Offset: 0x00094264
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            // Token: 0x170005BF RID: 1471
            // (get) Token: 0x06001728 RID: 5928 RVA: 0x0009606C File Offset: 0x0009426C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            // Token: 0x170005C0 RID: 1472
            // (get) Token: 0x06001729 RID: 5929 RVA: 0x00096074 File Offset: 0x00094274
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            // Token: 0x170005C1 RID: 1473
            // (get) Token: 0x0600172A RID: 5930 RVA: 0x0009607C File Offset: 0x0009427C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x170005C2 RID: 1474
            // (get) Token: 0x0600172B RID: 5931 RVA: 0x00096084 File Offset: 0x00094284
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170005C3 RID: 1475
            // (get) Token: 0x0600172C RID: 5932 RVA: 0x0009608C File Offset: 0x0009428C
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170005C4 RID: 1476
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasCellRow this[int index]
            {
                get
                {
                    return (DataSetGES.tJ_MeasCellRow)base.Rows[index];
                }
            }

            // Token: 0x140001A1 RID: 417
            // (add) Token: 0x0600172E RID: 5934 RVA: 0x000960AC File Offset: 0x000942AC
            // (remove) Token: 0x0600172F RID: 5935 RVA: 0x000960E4 File Offset: 0x000942E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCellRowChangeEventHandler tJ_MeasCellRowChanging;

            // Token: 0x140001A2 RID: 418
            // (add) Token: 0x06001730 RID: 5936 RVA: 0x0009611C File Offset: 0x0009431C
            // (remove) Token: 0x06001731 RID: 5937 RVA: 0x00096154 File Offset: 0x00094354
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCellRowChangeEventHandler tJ_MeasCellRowChanged;

            // Token: 0x140001A3 RID: 419
            // (add) Token: 0x06001732 RID: 5938 RVA: 0x0009618C File Offset: 0x0009438C
            // (remove) Token: 0x06001733 RID: 5939 RVA: 0x000961C4 File Offset: 0x000943C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCellRowChangeEventHandler tJ_MeasCellRowDeleting;

            // Token: 0x140001A4 RID: 420
            // (add) Token: 0x06001734 RID: 5940 RVA: 0x000961FC File Offset: 0x000943FC
            // (remove) Token: 0x06001735 RID: 5941 RVA: 0x00096234 File Offset: 0x00094434
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.tJ_MeasCellRowChangeEventHandler tJ_MeasCellRowDeleted;

            // Token: 0x06001736 RID: 5942 RVA: 0x00096269 File Offset: 0x00094469
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddtJ_MeasCellRow(DataSetGES.tJ_MeasCellRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001737 RID: 5943 RVA: 0x00096278 File Offset: 0x00094478
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasCellRow AddtJ_MeasCellRow(int idMeasurement, int idBus, int idCell, int idTransf, double PermissAmperage, int Iad, int Ian, int Ibd, int Ibn, int Icd, int Icn, string Comment, bool Deleted)
            {
                DataSetGES.tJ_MeasCellRow tJ_MeasCellRow = (DataSetGES.tJ_MeasCellRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    null,
                    idMeasurement,
                    idBus,
                    idCell,
                    idTransf,
                    PermissAmperage,
                    Iad,
                    Ian,
                    Ibd,
                    Ibn,
                    Icd,
                    Icn,
                    Comment,
                    Deleted
                };
                tJ_MeasCellRow.ItemArray = itemArray;
                base.Rows.Add(tJ_MeasCellRow);
                return tJ_MeasCellRow;
            }

            // Token: 0x06001738 RID: 5944 RVA: 0x00096330 File Offset: 0x00094530
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasCellRow FindByid(int id)
            {
                return (DataSetGES.tJ_MeasCellRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06001739 RID: 5945 RVA: 0x00096360 File Offset: 0x00094560
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.tJ_MeasCellDataTable tJ_MeasCellDataTable = (DataSetGES.tJ_MeasCellDataTable)base.Clone();
                tJ_MeasCellDataTable.InitVars();
                return tJ_MeasCellDataTable;
            }

            // Token: 0x0600173A RID: 5946 RVA: 0x00096380 File Offset: 0x00094580
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.tJ_MeasCellDataTable();
            }

            // Token: 0x0600173B RID: 5947 RVA: 0x00096388 File Offset: 0x00094588
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidCell = base.Columns["idCell"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnPermissAmperage = base.Columns["PermissAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x0600173C RID: 5948 RVA: 0x000964CC File Offset: 0x000946CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidCell = new DataColumn("idCell", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidCell);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnPermissAmperage = new DataColumn("PermissAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermissAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1L;
                this.columnid.AutoIncrementStep = -1L;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnidCell.AllowDBNull = false;
                this.columnComment.MaxLength = 128;
                this.columnDeleted.AllowDBNull = false;
            }

            // Token: 0x0600173D RID: 5949 RVA: 0x00096800 File Offset: 0x00094A00
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasCellRow NewtJ_MeasCellRow()
            {
                return (DataSetGES.tJ_MeasCellRow)base.NewRow();
            }

            // Token: 0x0600173E RID: 5950 RVA: 0x0009680D File Offset: 0x00094A0D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.tJ_MeasCellRow(builder);
            }

            // Token: 0x0600173F RID: 5951 RVA: 0x00096815 File Offset: 0x00094A15
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.tJ_MeasCellRow);
            }

            // Token: 0x06001740 RID: 5952 RVA: 0x00096821 File Offset: 0x00094A21
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.tJ_MeasCellRowChanged != null)
                {
                    this.tJ_MeasCellRowChanged(this, new DataSetGES.tJ_MeasCellRowChangeEvent((DataSetGES.tJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001741 RID: 5953 RVA: 0x00096854 File Offset: 0x00094A54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.tJ_MeasCellRowChanging != null)
                {
                    this.tJ_MeasCellRowChanging(this, new DataSetGES.tJ_MeasCellRowChangeEvent((DataSetGES.tJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001742 RID: 5954 RVA: 0x00096887 File Offset: 0x00094A87
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.tJ_MeasCellRowDeleted != null)
                {
                    this.tJ_MeasCellRowDeleted(this, new DataSetGES.tJ_MeasCellRowChangeEvent((DataSetGES.tJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001743 RID: 5955 RVA: 0x000968BA File Offset: 0x00094ABA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.tJ_MeasCellRowDeleting != null)
                {
                    this.tJ_MeasCellRowDeleting(this, new DataSetGES.tJ_MeasCellRowChangeEvent((DataSetGES.tJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001744 RID: 5956 RVA: 0x000968ED File Offset: 0x00094AED
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetJ_MeasCellRow(DataSetGES.tJ_MeasCellRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001745 RID: 5957 RVA: 0x000968FC File Offset: 0x00094AFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "tJ_MeasCellDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000B49 RID: 2889
            private DataColumn columnid;

            // Token: 0x04000B4A RID: 2890
            private DataColumn columnidMeasurement;

            // Token: 0x04000B4B RID: 2891
            private DataColumn columnidBus;

            // Token: 0x04000B4C RID: 2892
            private DataColumn columnidCell;

            // Token: 0x04000B4D RID: 2893
            private DataColumn columnidTransf;

            // Token: 0x04000B4E RID: 2894
            private DataColumn columnPermissAmperage;

            // Token: 0x04000B4F RID: 2895
            private DataColumn columnIad;

            // Token: 0x04000B50 RID: 2896
            private DataColumn columnIan;

            // Token: 0x04000B51 RID: 2897
            private DataColumn columnIbd;

            // Token: 0x04000B52 RID: 2898
            private DataColumn columnIbn;

            // Token: 0x04000B53 RID: 2899
            private DataColumn columnIcd;

            // Token: 0x04000B54 RID: 2900
            private DataColumn columnIcn;

            // Token: 0x04000B55 RID: 2901
            private DataColumn columnComment;

            // Token: 0x04000B56 RID: 2902
            private DataColumn columnDeleted;
        }

        // Token: 0x02000123 RID: 291
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasCellDataTable : TypedTableBase<DataSetGES.vJ_MeasCellRow>
        {
            // Token: 0x06001746 RID: 5958 RVA: 0x00096AF4 File Offset: 0x00094CF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasCellDataTable()
            {
                base.TableName = "vJ_MeasCell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001747 RID: 5959 RVA: 0x00096B1C File Offset: 0x00094D1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasCellDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001748 RID: 5960 RVA: 0x00096BC4 File Offset: 0x00094DC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected vJ_MeasCellDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170005C5 RID: 1477
            // (get) Token: 0x06001749 RID: 5961 RVA: 0x00096BD4 File Offset: 0x00094DD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170005C6 RID: 1478
            // (get) Token: 0x0600174A RID: 5962 RVA: 0x00096BDC File Offset: 0x00094DDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x170005C7 RID: 1479
            // (get) Token: 0x0600174B RID: 5963 RVA: 0x00096BE4 File Offset: 0x00094DE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idBusColumn
            {
                get
                {
                    return this.columnidBus;
                }
            }

            // Token: 0x170005C8 RID: 1480
            // (get) Token: 0x0600174C RID: 5964 RVA: 0x00096BEC File Offset: 0x00094DEC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idTransfColumn
            {
                get
                {
                    return this.columnidTransf;
                }
            }

            // Token: 0x170005C9 RID: 1481
            // (get) Token: 0x0600174D RID: 5965 RVA: 0x00096BF4 File Offset: 0x00094DF4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameBusColumn
            {
                get
                {
                    return this.columnNameBus;
                }
            }

            // Token: 0x170005CA RID: 1482
            // (get) Token: 0x0600174E RID: 5966 RVA: 0x00096BFC File Offset: 0x00094DFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn NameCellColumn
            {
                get
                {
                    return this.columnNameCell;
                }
            }

            // Token: 0x170005CB RID: 1483
            // (get) Token: 0x0600174F RID: 5967 RVA: 0x00096C04 File Offset: 0x00094E04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn PermissAmperageColumn
            {
                get
                {
                    return this.columnPermissAmperage;
                }
            }

            // Token: 0x170005CC RID: 1484
            // (get) Token: 0x06001750 RID: 5968 RVA: 0x00096C0C File Offset: 0x00094E0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IadColumn
            {
                get
                {
                    return this.columnIad;
                }
            }

            // Token: 0x170005CD RID: 1485
            // (get) Token: 0x06001751 RID: 5969 RVA: 0x00096C14 File Offset: 0x00094E14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IanColumn
            {
                get
                {
                    return this.columnIan;
                }
            }

            // Token: 0x170005CE RID: 1486
            // (get) Token: 0x06001752 RID: 5970 RVA: 0x00096C1C File Offset: 0x00094E1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbdColumn
            {
                get
                {
                    return this.columnIbd;
                }
            }

            // Token: 0x170005CF RID: 1487
            // (get) Token: 0x06001753 RID: 5971 RVA: 0x00096C24 File Offset: 0x00094E24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn IbnColumn
            {
                get
                {
                    return this.columnIbn;
                }
            }

            // Token: 0x170005D0 RID: 1488
            // (get) Token: 0x06001754 RID: 5972 RVA: 0x00096C2C File Offset: 0x00094E2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcdColumn
            {
                get
                {
                    return this.columnIcd;
                }
            }

            // Token: 0x170005D1 RID: 1489
            // (get) Token: 0x06001755 RID: 5973 RVA: 0x00096C34 File Offset: 0x00094E34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn IcnColumn
            {
                get
                {
                    return this.columnIcn;
                }
            }

            // Token: 0x170005D2 RID: 1490
            // (get) Token: 0x06001756 RID: 5974 RVA: 0x00096C3C File Offset: 0x00094E3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn CommentColumn
            {
                get
                {
                    return this.columnComment;
                }
            }

            // Token: 0x170005D3 RID: 1491
            // (get) Token: 0x06001757 RID: 5975 RVA: 0x00096C44 File Offset: 0x00094E44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170005D4 RID: 1492
            // (get) Token: 0x06001758 RID: 5976 RVA: 0x00096C4C File Offset: 0x00094E4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170005D5 RID: 1493
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCellRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasCellRow)base.Rows[index];
                }
            }

            // Token: 0x140001A5 RID: 421
            // (add) Token: 0x0600175A RID: 5978 RVA: 0x00096C6C File Offset: 0x00094E6C
            // (remove) Token: 0x0600175B RID: 5979 RVA: 0x00096CA4 File Offset: 0x00094EA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCellRowChangeEventHandler vJ_MeasCellRowChanging;

            // Token: 0x140001A6 RID: 422
            // (add) Token: 0x0600175C RID: 5980 RVA: 0x00096CDC File Offset: 0x00094EDC
            // (remove) Token: 0x0600175D RID: 5981 RVA: 0x00096D14 File Offset: 0x00094F14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCellRowChangeEventHandler vJ_MeasCellRowChanged;

            // Token: 0x140001A7 RID: 423
            // (add) Token: 0x0600175E RID: 5982 RVA: 0x00096D4C File Offset: 0x00094F4C
            // (remove) Token: 0x0600175F RID: 5983 RVA: 0x00096D84 File Offset: 0x00094F84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCellRowChangeEventHandler vJ_MeasCellRowDeleting;

            // Token: 0x140001A8 RID: 424
            // (add) Token: 0x06001760 RID: 5984 RVA: 0x00096DBC File Offset: 0x00094FBC
            // (remove) Token: 0x06001761 RID: 5985 RVA: 0x00096DF4 File Offset: 0x00094FF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasCellRowChangeEventHandler vJ_MeasCellRowDeleted;

            // Token: 0x06001762 RID: 5986 RVA: 0x00096E29 File Offset: 0x00095029
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvJ_MeasCellRow(DataSetGES.vJ_MeasCellRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001763 RID: 5987 RVA: 0x00096E38 File Offset: 0x00095038
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCellRow AddvJ_MeasCellRow(int id, int idMeasurement, int idBus, int idTransf, string NameBus, string NameCell, double PermissAmperage, int Iad, int Ian, int Ibd, int Ibn, int Icd, int Icn, string Comment, bool Deleted)
            {
                DataSetGES.vJ_MeasCellRow vJ_MeasCellRow = (DataSetGES.vJ_MeasCellRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idMeasurement,
                    idBus,
                    idTransf,
                    NameBus,
                    NameCell,
                    PermissAmperage,
                    Iad,
                    Ian,
                    Ibd,
                    Ibn,
                    Icd,
                    Icn,
                    Comment,
                    Deleted
                };
                vJ_MeasCellRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasCellRow);
                return vJ_MeasCellRow;
            }

            // Token: 0x06001764 RID: 5988 RVA: 0x00096EFC File Offset: 0x000950FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCellRow FindByid(int id)
            {
                return (DataSetGES.vJ_MeasCellRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06001765 RID: 5989 RVA: 0x00096F2C File Offset: 0x0009512C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasCellDataTable vJ_MeasCellDataTable = (DataSetGES.vJ_MeasCellDataTable)base.Clone();
                vJ_MeasCellDataTable.InitVars();
                return vJ_MeasCellDataTable;
            }

            // Token: 0x06001766 RID: 5990 RVA: 0x00096F4C File Offset: 0x0009514C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasCellDataTable();
            }

            // Token: 0x06001767 RID: 5991 RVA: 0x00096F54 File Offset: 0x00095154
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidBus = base.Columns["idBus"];
                this.columnidTransf = base.Columns["idTransf"];
                this.columnNameBus = base.Columns["NameBus"];
                this.columnNameCell = base.Columns["NameCell"];
                this.columnPermissAmperage = base.Columns["PermissAmperage"];
                this.columnIad = base.Columns["Iad"];
                this.columnIan = base.Columns["Ian"];
                this.columnIbd = base.Columns["Ibd"];
                this.columnIbn = base.Columns["Ibn"];
                this.columnIcd = base.Columns["Icd"];
                this.columnIcn = base.Columns["Icn"];
                this.columnComment = base.Columns["Comment"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x06001768 RID: 5992 RVA: 0x000970AC File Offset: 0x000952AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidBus = new DataColumn("idBus", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidBus);
                this.columnidTransf = new DataColumn("idTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidTransf);
                this.columnNameBus = new DataColumn("NameBus", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameBus);
                this.columnNameCell = new DataColumn("NameCell", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnNameCell);
                this.columnPermissAmperage = new DataColumn("PermissAmperage", typeof(double), null, MappingType.Element);
                base.Columns.Add(this.columnPermissAmperage);
                this.columnIad = new DataColumn("Iad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIad);
                this.columnIan = new DataColumn("Ian", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIan);
                this.columnIbd = new DataColumn("Ibd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbd);
                this.columnIbn = new DataColumn("Ibn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIbn);
                this.columnIcd = new DataColumn("Icd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcd);
                this.columnIcn = new DataColumn("Icn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnIcn);
                this.columnComment = new DataColumn("Comment", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidBus.AllowDBNull = false;
                this.columnNameBus.MaxLength = 512;
                this.columnNameCell.MaxLength = 512;
                this.columnComment.MaxLength = 128;
                this.columnDeleted.AllowDBNull = false;
            }

            // Token: 0x06001769 RID: 5993 RVA: 0x000973EF File Offset: 0x000955EF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasCellRow NewvJ_MeasCellRow()
            {
                return (DataSetGES.vJ_MeasCellRow)base.NewRow();
            }

            // Token: 0x0600176A RID: 5994 RVA: 0x000973FC File Offset: 0x000955FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasCellRow(builder);
            }

            // Token: 0x0600176B RID: 5995 RVA: 0x00097404 File Offset: 0x00095604
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasCellRow);
            }

            // Token: 0x0600176C RID: 5996 RVA: 0x00097410 File Offset: 0x00095610
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasCellRowChanged != null)
                {
                    this.vJ_MeasCellRowChanged(this, new DataSetGES.vJ_MeasCellRowChangeEvent((DataSetGES.vJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600176D RID: 5997 RVA: 0x00097443 File Offset: 0x00095643
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasCellRowChanging != null)
                {
                    this.vJ_MeasCellRowChanging(this, new DataSetGES.vJ_MeasCellRowChangeEvent((DataSetGES.vJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600176E RID: 5998 RVA: 0x00097476 File Offset: 0x00095676
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasCellRowDeleted != null)
                {
                    this.vJ_MeasCellRowDeleted(this, new DataSetGES.vJ_MeasCellRowChangeEvent((DataSetGES.vJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600176F RID: 5999 RVA: 0x000974A9 File Offset: 0x000956A9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasCellRowDeleting != null)
                {
                    this.vJ_MeasCellRowDeleting(this, new DataSetGES.vJ_MeasCellRowChangeEvent((DataSetGES.vJ_MeasCellRow)e.Row, e.Action));
                }
            }

            // Token: 0x06001770 RID: 6000 RVA: 0x000974DC File Offset: 0x000956DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_MeasCellRow(DataSetGES.vJ_MeasCellRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x06001771 RID: 6001 RVA: 0x000974EC File Offset: 0x000956EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasCellDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000B5B RID: 2907
            private DataColumn columnid;

            // Token: 0x04000B5C RID: 2908
            private DataColumn columnidMeasurement;

            // Token: 0x04000B5D RID: 2909
            private DataColumn columnidBus;

            // Token: 0x04000B5E RID: 2910
            private DataColumn columnidTransf;

            // Token: 0x04000B5F RID: 2911
            private DataColumn columnNameBus;

            // Token: 0x04000B60 RID: 2912
            private DataColumn columnNameCell;

            // Token: 0x04000B61 RID: 2913
            private DataColumn columnPermissAmperage;

            // Token: 0x04000B62 RID: 2914
            private DataColumn columnIad;

            // Token: 0x04000B63 RID: 2915
            private DataColumn columnIan;

            // Token: 0x04000B64 RID: 2916
            private DataColumn columnIbd;

            // Token: 0x04000B65 RID: 2917
            private DataColumn columnIbn;

            // Token: 0x04000B66 RID: 2918
            private DataColumn columnIcd;

            // Token: 0x04000B67 RID: 2919
            private DataColumn columnIcn;

            // Token: 0x04000B68 RID: 2920
            private DataColumn columnComment;

            // Token: 0x04000B69 RID: 2921
            private DataColumn columnDeleted;
        }

        // Token: 0x02000124 RID: 292
        [XmlSchemaProvider("GetTypedTableSchema")]
        [Serializable]
        public class vJ_MeasTransfVoltageDataTable : TypedTableBase<DataSetGES.vJ_MeasTransfVoltageRow>
        {
            // Token: 0x06001772 RID: 6002 RVA: 0x000976E4 File Offset: 0x000958E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasTransfVoltageDataTable()
            {
                base.TableName = "vJ_MeasTransfVoltage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            // Token: 0x06001773 RID: 6003 RVA: 0x0009770C File Offset: 0x0009590C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasTransfVoltageDataTable(DataTable table)
            {
                base.TableName = table.TableName;
                if (table.CaseSensitive != table.DataSet.CaseSensitive)
                {
                    base.CaseSensitive = table.CaseSensitive;
                }
                if (table.Locale.ToString() != table.DataSet.Locale.ToString())
                {
                    base.Locale = table.Locale;
                }
                if (table.Namespace != table.DataSet.Namespace)
                {
                    base.Namespace = table.Namespace;
                }
                base.Prefix = table.Prefix;
                base.MinimumCapacity = table.MinimumCapacity;
            }

            // Token: 0x06001774 RID: 6004 RVA: 0x000977B4 File Offset: 0x000959B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vJ_MeasTransfVoltageDataTable(SerializationInfo info, StreamingContext context) : base(info, context)
            {
                this.InitVars();
            }

            // Token: 0x170005D6 RID: 1494
            // (get) Token: 0x06001775 RID: 6005 RVA: 0x000977C4 File Offset: 0x000959C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idColumn
            {
                get
                {
                    return this.columnid;
                }
            }

            // Token: 0x170005D7 RID: 1495
            // (get) Token: 0x06001776 RID: 6006 RVA: 0x000977CC File Offset: 0x000959CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idMeasurementColumn
            {
                get
                {
                    return this.columnidMeasurement;
                }
            }

            // Token: 0x170005D8 RID: 1496
            // (get) Token: 0x06001777 RID: 6007 RVA: 0x000977D4 File Offset: 0x000959D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn idObjListColumn
            {
                get
                {
                    return this.columnidObjList;
                }
            }

            // Token: 0x170005D9 RID: 1497
            // (get) Token: 0x06001778 RID: 6008 RVA: 0x000977DC File Offset: 0x000959DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn SwitchPositionColumn
            {
                get
                {
                    return this.columnSwitchPosition;
                }
            }

            // Token: 0x170005DA RID: 1498
            // (get) Token: 0x06001779 RID: 6009 RVA: 0x000977E4 File Offset: 0x000959E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idSwitchPositionColumn
            {
                get
                {
                    return this.columnidSwitchPosition;
                }
            }

            // Token: 0x170005DB RID: 1499
            // (get) Token: 0x0600177A RID: 6010 RVA: 0x000977EC File Offset: 0x000959EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UabdColumn
            {
                get
                {
                    return this.columnUabd;
                }
            }

            // Token: 0x170005DC RID: 1500
            // (get) Token: 0x0600177B RID: 6011 RVA: 0x000977F4 File Offset: 0x000959F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UabnColumn
            {
                get
                {
                    return this.columnUabn;
                }
            }

            // Token: 0x170005DD RID: 1501
            // (get) Token: 0x0600177C RID: 6012 RVA: 0x000977FC File Offset: 0x000959FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbcdColumn
            {
                get
                {
                    return this.columnUbcd;
                }
            }

            // Token: 0x170005DE RID: 1502
            // (get) Token: 0x0600177D RID: 6013 RVA: 0x00097804 File Offset: 0x00095A04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbcnColumn
            {
                get
                {
                    return this.columnUbcn;
                }
            }

            // Token: 0x170005DF RID: 1503
            // (get) Token: 0x0600177E RID: 6014 RVA: 0x0009780C File Offset: 0x00095A0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UcadColumn
            {
                get
                {
                    return this.columnUcad;
                }
            }

            // Token: 0x170005E0 RID: 1504
            // (get) Token: 0x0600177F RID: 6015 RVA: 0x00097814 File Offset: 0x00095A14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcanColumn
            {
                get
                {
                    return this.columnUcan;
                }
            }

            // Token: 0x170005E1 RID: 1505
            // (get) Token: 0x06001780 RID: 6016 RVA: 0x0009781C File Offset: 0x00095A1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UaodColumn
            {
                get
                {
                    return this.columnUaod;
                }
            }

            // Token: 0x170005E2 RID: 1506
            // (get) Token: 0x06001781 RID: 6017 RVA: 0x00097824 File Offset: 0x00095A24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UaonColumn
            {
                get
                {
                    return this.columnUaon;
                }
            }

            // Token: 0x170005E3 RID: 1507
            // (get) Token: 0x06001782 RID: 6018 RVA: 0x0009782C File Offset: 0x00095A2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UbodColumn
            {
                get
                {
                    return this.columnUbod;
                }
            }

            // Token: 0x170005E4 RID: 1508
            // (get) Token: 0x06001783 RID: 6019 RVA: 0x00097834 File Offset: 0x00095A34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn UbonColumn
            {
                get
                {
                    return this.columnUbon;
                }
            }

            // Token: 0x170005E5 RID: 1509
            // (get) Token: 0x06001784 RID: 6020 RVA: 0x0009783C File Offset: 0x00095A3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UcodColumn
            {
                get
                {
                    return this.columnUcod;
                }
            }

            // Token: 0x170005E6 RID: 1510
            // (get) Token: 0x06001785 RID: 6021 RVA: 0x00097844 File Offset: 0x00095A44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn UconColumn
            {
                get
                {
                    return this.columnUcon;
                }
            }

            // Token: 0x170005E7 RID: 1511
            // (get) Token: 0x06001786 RID: 6022 RVA: 0x0009784C File Offset: 0x00095A4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataColumn idOldMeasurementTransfColumn
            {
                get
                {
                    return this.columnidOldMeasurementTransf;
                }
            }

            // Token: 0x170005E8 RID: 1512
            // (get) Token: 0x06001787 RID: 6023 RVA: 0x00097854 File Offset: 0x00095A54
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataColumn DeletedColumn
            {
                get
                {
                    return this.columnDeleted;
                }
            }

            // Token: 0x170005E9 RID: 1513
            // (get) Token: 0x06001788 RID: 6024 RVA: 0x0009785C File Offset: 0x00095A5C
            [Browsable(false), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Count
            {
                get
                {
                    return base.Rows.Count;
                }
            }

            // Token: 0x170005EA RID: 1514
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasTransfVoltageRow this[int index]
            {
                get
                {
                    return (DataSetGES.vJ_MeasTransfVoltageRow)base.Rows[index];
                }
            }

            // Token: 0x140001A9 RID: 425
            // (add) Token: 0x0600178A RID: 6026 RVA: 0x0009787C File Offset: 0x00095A7C
            // (remove) Token: 0x0600178B RID: 6027 RVA: 0x000978B4 File Offset: 0x00095AB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfVoltageRowChangeEventHandler vJ_MeasTransfVoltageRowChanging;

            // Token: 0x140001AA RID: 426
            // (add) Token: 0x0600178C RID: 6028 RVA: 0x000978EC File Offset: 0x00095AEC
            // (remove) Token: 0x0600178D RID: 6029 RVA: 0x00097924 File Offset: 0x00095B24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfVoltageRowChangeEventHandler vJ_MeasTransfVoltageRowChanged;

            // Token: 0x140001AB RID: 427
            // (add) Token: 0x0600178E RID: 6030 RVA: 0x0009795C File Offset: 0x00095B5C
            // (remove) Token: 0x0600178F RID: 6031 RVA: 0x00097994 File Offset: 0x00095B94
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfVoltageRowChangeEventHandler vJ_MeasTransfVoltageRowDeleting;

            // Token: 0x140001AC RID: 428
            // (add) Token: 0x06001790 RID: 6032 RVA: 0x000979CC File Offset: 0x00095BCC
            // (remove) Token: 0x06001791 RID: 6033 RVA: 0x00097A04 File Offset: 0x00095C04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataSetGES.vJ_MeasTransfVoltageRowChangeEventHandler vJ_MeasTransfVoltageRowDeleted;

            // Token: 0x06001792 RID: 6034 RVA: 0x00097A39 File Offset: 0x00095C39
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void AddvJ_MeasTransfVoltageRow(DataSetGES.vJ_MeasTransfVoltageRow row)
            {
                base.Rows.Add(row);
            }

            // Token: 0x06001793 RID: 6035 RVA: 0x00097A48 File Offset: 0x00095C48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasTransfVoltageRow AddvJ_MeasTransfVoltageRow(int id, int idMeasurement, int idObjList, string SwitchPosition, int idSwitchPosition, int Uabd, int Uabn, int Ubcd, int Ubcn, int Ucad, int Ucan, int Uaod, int Uaon, int Ubod, int Ubon, int Ucod, int Ucon, int idOldMeasurementTransf, bool Deleted)
            {
                DataSetGES.vJ_MeasTransfVoltageRow vJ_MeasTransfVoltageRow = (DataSetGES.vJ_MeasTransfVoltageRow)base.NewRow();
                object[] itemArray = new object[]
                {
                    id,
                    idMeasurement,
                    idObjList,
                    SwitchPosition,
                    idSwitchPosition,
                    Uabd,
                    Uabn,
                    Ubcd,
                    Ubcn,
                    Ucad,
                    Ucan,
                    Uaod,
                    Uaon,
                    Ubod,
                    Ubon,
                    Ucod,
                    Ucon,
                    idOldMeasurementTransf,
                    Deleted
                };
                vJ_MeasTransfVoltageRow.ItemArray = itemArray;
                base.Rows.Add(vJ_MeasTransfVoltageRow);
                return vJ_MeasTransfVoltageRow;
            }

            // Token: 0x06001794 RID: 6036 RVA: 0x00097B40 File Offset: 0x00095D40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasTransfVoltageRow FindByid(int id)
            {
                return (DataSetGES.vJ_MeasTransfVoltageRow)base.Rows.Find(new object[]
                {
                    id
                });
            }

            // Token: 0x06001795 RID: 6037 RVA: 0x00097B70 File Offset: 0x00095D70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override DataTable Clone()
            {
                DataSetGES.vJ_MeasTransfVoltageDataTable vJ_MeasTransfVoltageDataTable = (DataSetGES.vJ_MeasTransfVoltageDataTable)base.Clone();
                vJ_MeasTransfVoltageDataTable.InitVars();
                return vJ_MeasTransfVoltageDataTable;
            }

            // Token: 0x06001796 RID: 6038 RVA: 0x00097B90 File Offset: 0x00095D90
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override DataTable CreateInstance()
            {
                return new DataSetGES.vJ_MeasTransfVoltageDataTable();
            }

            // Token: 0x06001797 RID: 6039 RVA: 0x00097B98 File Offset: 0x00095D98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal void InitVars()
            {
                this.columnid = base.Columns["id"];
                this.columnidMeasurement = base.Columns["idMeasurement"];
                this.columnidObjList = base.Columns["idObjList"];
                this.columnSwitchPosition = base.Columns["SwitchPosition"];
                this.columnidSwitchPosition = base.Columns["idSwitchPosition"];
                this.columnUabd = base.Columns["Uabd"];
                this.columnUabn = base.Columns["Uabn"];
                this.columnUbcd = base.Columns["Ubcd"];
                this.columnUbcn = base.Columns["Ubcn"];
                this.columnUcad = base.Columns["Ucad"];
                this.columnUcan = base.Columns["Ucan"];
                this.columnUaod = base.Columns["Uaod"];
                this.columnUaon = base.Columns["Uaon"];
                this.columnUbod = base.Columns["Ubod"];
                this.columnUbon = base.Columns["Ubon"];
                this.columnUcod = base.Columns["Ucod"];
                this.columnUcon = base.Columns["Ucon"];
                this.columnidOldMeasurementTransf = base.Columns["idOldMeasurementTransf"];
                this.columnDeleted = base.Columns["Deleted"];
            }

            // Token: 0x06001798 RID: 6040 RVA: 0x00097D48 File Offset: 0x00095F48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private void InitClass()
            {
                this.columnid = new DataColumn("id", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnidMeasurement = new DataColumn("idMeasurement", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidMeasurement);
                this.columnidObjList = new DataColumn("idObjList", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidObjList);
                this.columnSwitchPosition = new DataColumn("SwitchPosition", typeof(string), null, MappingType.Element);
                base.Columns.Add(this.columnSwitchPosition);
                this.columnidSwitchPosition = new DataColumn("idSwitchPosition", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidSwitchPosition);
                this.columnUabd = new DataColumn("Uabd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabd);
                this.columnUabn = new DataColumn("Uabn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUabn);
                this.columnUbcd = new DataColumn("Ubcd", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcd);
                this.columnUbcn = new DataColumn("Ubcn", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbcn);
                this.columnUcad = new DataColumn("Ucad", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcad);
                this.columnUcan = new DataColumn("Ucan", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcan);
                this.columnUaod = new DataColumn("Uaod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaod);
                this.columnUaon = new DataColumn("Uaon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUaon);
                this.columnUbod = new DataColumn("Ubod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbod);
                this.columnUbon = new DataColumn("Ubon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUbon);
                this.columnUcod = new DataColumn("Ucod", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcod);
                this.columnUcon = new DataColumn("Ucon", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnUcon);
                this.columnidOldMeasurementTransf = new DataColumn("idOldMeasurementTransf", typeof(int), null, MappingType.Element);
                base.Columns.Add(this.columnidOldMeasurementTransf);
                this.columnDeleted = new DataColumn("Deleted", typeof(bool), null, MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                base.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[]
                {
                    this.columnid
                }, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnidMeasurement.AllowDBNull = false;
                this.columnidObjList.AllowDBNull = false;
                this.columnSwitchPosition.MaxLength = 100;
            }

            // Token: 0x06001799 RID: 6041 RVA: 0x00098110 File Offset: 0x00096310
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasTransfVoltageRow NewvJ_MeasTransfVoltageRow()
            {
                return (DataSetGES.vJ_MeasTransfVoltageRow)base.NewRow();
            }

            // Token: 0x0600179A RID: 6042 RVA: 0x0009811D File Offset: 0x0009631D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                return new DataSetGES.vJ_MeasTransfVoltageRow(builder);
            }

            // Token: 0x0600179B RID: 6043 RVA: 0x00098125 File Offset: 0x00096325
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override Type GetRowType()
            {
                return typeof(DataSetGES.vJ_MeasTransfVoltageRow);
            }

            // Token: 0x0600179C RID: 6044 RVA: 0x00098131 File Offset: 0x00096331
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if (this.vJ_MeasTransfVoltageRowChanged != null)
                {
                    this.vJ_MeasTransfVoltageRowChanged(this, new DataSetGES.vJ_MeasTransfVoltageRowChangeEvent((DataSetGES.vJ_MeasTransfVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600179D RID: 6045 RVA: 0x00098164 File Offset: 0x00096364
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if (this.vJ_MeasTransfVoltageRowChanging != null)
                {
                    this.vJ_MeasTransfVoltageRowChanging(this, new DataSetGES.vJ_MeasTransfVoltageRowChangeEvent((DataSetGES.vJ_MeasTransfVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600179E RID: 6046 RVA: 0x00098197 File Offset: 0x00096397
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if (this.vJ_MeasTransfVoltageRowDeleted != null)
                {
                    this.vJ_MeasTransfVoltageRowDeleted(this, new DataSetGES.vJ_MeasTransfVoltageRowChangeEvent((DataSetGES.vJ_MeasTransfVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x0600179F RID: 6047 RVA: 0x000981CA File Offset: 0x000963CA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if (this.vJ_MeasTransfVoltageRowDeleting != null)
                {
                    this.vJ_MeasTransfVoltageRowDeleting(this, new DataSetGES.vJ_MeasTransfVoltageRowChangeEvent((DataSetGES.vJ_MeasTransfVoltageRow)e.Row, e.Action));
                }
            }

            // Token: 0x060017A0 RID: 6048 RVA: 0x000981FD File Offset: 0x000963FD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void RemovevJ_MeasTransfVoltageRow(DataSetGES.vJ_MeasTransfVoltageRow row)
            {
                base.Rows.Remove(row);
            }

            // Token: 0x060017A1 RID: 6049 RVA: 0x0009820C File Offset: 0x0009640C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static XmlSchemaComplexType GetTypedTableSchema(XmlSchemaSet xs)
            {
                XmlSchemaComplexType xmlSchemaComplexType = new XmlSchemaComplexType();
                XmlSchemaSequence xmlSchemaSequence = new XmlSchemaSequence();
                DataSetGES dataSetGES = new DataSetGES();
                XmlSchemaAny xmlSchemaAny = new XmlSchemaAny();
                xmlSchemaAny.Namespace = "http://www.w3.org/2001/XMLSchema";
                xmlSchemaAny.MinOccurs = 0m;
                xmlSchemaAny.MaxOccurs = 79228162514264337593543950335m;
                xmlSchemaAny.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny);
                XmlSchemaAny xmlSchemaAny2 = new XmlSchemaAny();
                xmlSchemaAny2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                xmlSchemaAny2.MinOccurs = 1m;
                xmlSchemaAny2.ProcessContents = XmlSchemaContentProcessing.Lax;
                xmlSchemaSequence.Items.Add(xmlSchemaAny2);
                XmlSchemaAttribute xmlSchemaAttribute = new XmlSchemaAttribute();
                xmlSchemaAttribute.Name = "namespace";
                xmlSchemaAttribute.FixedValue = dataSetGES.Namespace;
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute);
                XmlSchemaAttribute xmlSchemaAttribute2 = new XmlSchemaAttribute();
                xmlSchemaAttribute2.Name = "tableTypeName";
                xmlSchemaAttribute2.FixedValue = "vJ_MeasTransfVoltageDataTable";
                xmlSchemaComplexType.Attributes.Add(xmlSchemaAttribute2);
                xmlSchemaComplexType.Particle = xmlSchemaSequence;
                XmlSchema schemaSerializable = dataSetGES.GetSchemaSerializable();
                if (xs.Contains(schemaSerializable.TargetNamespace))
                {
                    MemoryStream memoryStream = new MemoryStream();
                    MemoryStream memoryStream2 = new MemoryStream();
                    try
                    {
                        schemaSerializable.Write(memoryStream);
                        IEnumerator enumerator = xs.Schemas(schemaSerializable.TargetNamespace).GetEnumerator();
                        while (enumerator.MoveNext())
                        {
                            XmlSchema xmlSchema = (XmlSchema)enumerator.Current;
                            memoryStream2.SetLength(0L);
                            xmlSchema.Write(memoryStream2);
                            if (memoryStream.Length == memoryStream2.Length)
                            {
                                memoryStream.Position = 0L;
                                memoryStream2.Position = 0L;
                                while (memoryStream.Position != memoryStream.Length && memoryStream.ReadByte() == memoryStream2.ReadByte())
                                {
                                }
                                if (memoryStream.Position == memoryStream.Length)
                                {
                                    return xmlSchemaComplexType;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if (memoryStream != null)
                        {
                            memoryStream.Close();
                        }
                        if (memoryStream2 != null)
                        {
                            memoryStream2.Close();
                        }
                    }
                }
                xs.Add(schemaSerializable);
                return xmlSchemaComplexType;
            }

            // Token: 0x04000B6E RID: 2926
            private DataColumn columnid;

            // Token: 0x04000B6F RID: 2927
            private DataColumn columnidMeasurement;

            // Token: 0x04000B70 RID: 2928
            private DataColumn columnidObjList;

            // Token: 0x04000B71 RID: 2929
            private DataColumn columnSwitchPosition;

            // Token: 0x04000B72 RID: 2930
            private DataColumn columnidSwitchPosition;

            // Token: 0x04000B73 RID: 2931
            private DataColumn columnUabd;

            // Token: 0x04000B74 RID: 2932
            private DataColumn columnUabn;

            // Token: 0x04000B75 RID: 2933
            private DataColumn columnUbcd;

            // Token: 0x04000B76 RID: 2934
            private DataColumn columnUbcn;

            // Token: 0x04000B77 RID: 2935
            private DataColumn columnUcad;

            // Token: 0x04000B78 RID: 2936
            private DataColumn columnUcan;

            // Token: 0x04000B79 RID: 2937
            private DataColumn columnUaod;

            // Token: 0x04000B7A RID: 2938
            private DataColumn columnUaon;

            // Token: 0x04000B7B RID: 2939
            private DataColumn columnUbod;

            // Token: 0x04000B7C RID: 2940
            private DataColumn columnUbon;

            // Token: 0x04000B7D RID: 2941
            private DataColumn columnUcod;

            // Token: 0x04000B7E RID: 2942
            private DataColumn columnUcon;

            // Token: 0x04000B7F RID: 2943
            private DataColumn columnidOldMeasurementTransf;

            // Token: 0x04000B80 RID: 2944
            private DataColumn columnDeleted;
        }

        // Token: 0x02000125 RID: 293
        public class tUserRow : DataRow
        {
            // Token: 0x060017A2 RID: 6050 RVA: 0x00098404 File Offset: 0x00096604
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tUserRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletUser = (DataSetGES.tUserDataTable)base.Table;
            }

            // Token: 0x170005EB RID: 1515
            // (get) Token: 0x060017A3 RID: 6051 RVA: 0x0009841E File Offset: 0x0009661E
            // (set) Token: 0x060017A4 RID: 6052 RVA: 0x00098436 File Offset: 0x00096636
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IDUser
            {
                get
                {
                    return (int)base[this.tabletUser.IDUserColumn];
                }
                set
                {
                    base[this.tabletUser.IDUserColumn] = value;
                }
            }

            // Token: 0x170005EC RID: 1516
            // (get) Token: 0x060017A5 RID: 6053 RVA: 0x00098450 File Offset: 0x00096650
            // (set) Token: 0x060017A6 RID: 6054 RVA: 0x00098494 File Offset: 0x00096694
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdWorker
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletUser.IdWorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdWorker' in table 'tUser' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletUser.IdWorkerColumn] = value;
                }
            }

            // Token: 0x170005ED RID: 1517
            // (get) Token: 0x060017A7 RID: 6055 RVA: 0x000984AD File Offset: 0x000966AD
            // (set) Token: 0x060017A8 RID: 6056 RVA: 0x000984C5 File Offset: 0x000966C5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Login
            {
                get
                {
                    return (string)base[this.tabletUser.LoginColumn];
                }
                set
                {
                    base[this.tabletUser.LoginColumn] = value;
                }
            }

            // Token: 0x170005EE RID: 1518
            // (get) Token: 0x060017A9 RID: 6057 RVA: 0x000984DC File Offset: 0x000966DC
            // (set) Token: 0x060017AA RID: 6058 RVA: 0x00098520 File Offset: 0x00096720
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletUser.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tUser' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletUser.NameColumn] = value;
                }
            }

            // Token: 0x170005EF RID: 1519
            // (get) Token: 0x060017AB RID: 6059 RVA: 0x00098534 File Offset: 0x00096734
            // (set) Token: 0x060017AC RID: 6060 RVA: 0x0009854C File Offset: 0x0009674C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tabletUser.DeletedColumn];
                }
                set
                {
                    base[this.tabletUser.DeletedColumn] = value;
                }
            }

            // Token: 0x060017AD RID: 6061 RVA: 0x00098565 File Offset: 0x00096765
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdWorkerNull()
            {
                return base.IsNull(this.tabletUser.IdWorkerColumn);
            }

            // Token: 0x060017AE RID: 6062 RVA: 0x00098578 File Offset: 0x00096778
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdWorkerNull()
            {
                base[this.tabletUser.IdWorkerColumn] = Convert.DBNull;
            }

            // Token: 0x060017AF RID: 6063 RVA: 0x00098590 File Offset: 0x00096790
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tabletUser.NameColumn);
            }

            // Token: 0x060017B0 RID: 6064 RVA: 0x000985A3 File Offset: 0x000967A3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tabletUser.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000B85 RID: 2949
            private DataSetGES.tUserDataTable tabletUser;
        }

        // Token: 0x02000126 RID: 294
        public class tJ_RequestDocRow : DataRow
        {
            // Token: 0x060017B1 RID: 6065 RVA: 0x000985BB File Offset: 0x000967BB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestDocRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_RequestDoc = (DataSetGES.tJ_RequestDocDataTable)base.Table;
            }

            // Token: 0x170005F0 RID: 1520
            // (get) Token: 0x060017B2 RID: 6066 RVA: 0x000985D5 File Offset: 0x000967D5
            // (set) Token: 0x060017B3 RID: 6067 RVA: 0x000985ED File Offset: 0x000967ED
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_RequestDoc.idColumn];
                }
                set
                {
                    base[this.tabletJ_RequestDoc.idColumn] = value;
                }
            }

            // Token: 0x170005F1 RID: 1521
            // (get) Token: 0x060017B4 RID: 6068 RVA: 0x00098606 File Offset: 0x00096806
            // (set) Token: 0x060017B5 RID: 6069 RVA: 0x0009861E File Offset: 0x0009681E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idRequest
            {
                get
                {
                    return (int)base[this.tabletJ_RequestDoc.idRequestColumn];
                }
                set
                {
                    base[this.tabletJ_RequestDoc.idRequestColumn] = value;
                }
            }

            // Token: 0x170005F2 RID: 1522
            // (get) Token: 0x060017B6 RID: 6070 RVA: 0x00098637 File Offset: 0x00096837
            // (set) Token: 0x060017B7 RID: 6071 RVA: 0x0009864F File Offset: 0x0009684F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Document
            {
                get
                {
                    return (byte[])base[this.tabletJ_RequestDoc.DocumentColumn];
                }
                set
                {
                    base[this.tabletJ_RequestDoc.DocumentColumn] = value;
                }
            }

            // Token: 0x170005F3 RID: 1523
            // (get) Token: 0x060017B8 RID: 6072 RVA: 0x00098663 File Offset: 0x00096863
            // (set) Token: 0x060017B9 RID: 6073 RVA: 0x0009867B File Offset: 0x0009687B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileName
            {
                get
                {
                    return (string)base[this.tabletJ_RequestDoc.FileNameColumn];
                }
                set
                {
                    base[this.tabletJ_RequestDoc.FileNameColumn] = value;
                }
            }

            // Token: 0x04000B86 RID: 2950
            private DataSetGES.tJ_RequestDocDataTable tabletJ_RequestDoc;
        }

        // Token: 0x02000127 RID: 295
        public class tJ_RequestRow : DataRow
        {
            // Token: 0x060017BA RID: 6074 RVA: 0x0009868F File Offset: 0x0009688F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_Request = (DataSetGES.tJ_RequestDataTable)base.Table;
            }

            // Token: 0x170005F4 RID: 1524
            // (get) Token: 0x060017BB RID: 6075 RVA: 0x000986A9 File Offset: 0x000968A9
            // (set) Token: 0x060017BC RID: 6076 RVA: 0x000986C1 File Offset: 0x000968C1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_Request.idColumn];
                }
                set
                {
                    base[this.tabletJ_Request.idColumn] = value;
                }
            }

            // Token: 0x170005F5 RID: 1525
            // (get) Token: 0x060017BD RID: 6077 RVA: 0x000986DA File Offset: 0x000968DA
            // (set) Token: 0x060017BE RID: 6078 RVA: 0x000986F2 File Offset: 0x000968F2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserTask
            {
                get
                {
                    return (int)base[this.tabletJ_Request.idUserTaskColumn];
                }
                set
                {
                    base[this.tabletJ_Request.idUserTaskColumn] = value;
                }
            }

            // Token: 0x170005F6 RID: 1526
            // (get) Token: 0x060017BF RID: 6079 RVA: 0x0009870B File Offset: 0x0009690B
            // (set) Token: 0x060017C0 RID: 6080 RVA: 0x00098723 File Offset: 0x00096923
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateTask
            {
                get
                {
                    return (DateTime)base[this.tabletJ_Request.DateTaskColumn];
                }
                set
                {
                    base[this.tabletJ_Request.DateTaskColumn] = value;
                }
            }

            // Token: 0x170005F7 RID: 1527
            // (get) Token: 0x060017C1 RID: 6081 RVA: 0x0009873C File Offset: 0x0009693C
            // (set) Token: 0x060017C2 RID: 6082 RVA: 0x00098780 File Offset: 0x00096980
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Modul
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Request.ModulColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Modul' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.ModulColumn] = value;
                }
            }

            // Token: 0x170005F8 RID: 1528
            // (get) Token: 0x060017C3 RID: 6083 RVA: 0x0009879C File Offset: 0x0009699C
            // (set) Token: 0x060017C4 RID: 6084 RVA: 0x000987E0 File Offset: 0x000969E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TextTask
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_Request.TextTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TextTask' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.TextTaskColumn] = value;
                }
            }

            // Token: 0x170005F9 RID: 1529
            // (get) Token: 0x060017C5 RID: 6085 RVA: 0x000987F4 File Offset: 0x000969F4
            // (set) Token: 0x060017C6 RID: 6086 RVA: 0x00098838 File Offset: 0x00096A38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public byte[] TextTaskBin
            {
                get
                {
                    byte[] result;
                    try
                    {
                        result = (byte[])base[this.tabletJ_Request.TextTaskBinColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TextTaskBin' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.TextTaskBinColumn] = value;
                }
            }

            // Token: 0x170005FA RID: 1530
            // (get) Token: 0x060017C7 RID: 6087 RVA: 0x0009884C File Offset: 0x00096A4C
            // (set) Token: 0x060017C8 RID: 6088 RVA: 0x00098890 File Offset: 0x00096A90
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserWhom
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Request.idUserWhomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idUserWhom' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.idUserWhomColumn] = value;
                }
            }

            // Token: 0x170005FB RID: 1531
            // (get) Token: 0x060017C9 RID: 6089 RVA: 0x000988AC File Offset: 0x00096AAC
            // (set) Token: 0x060017CA RID: 6090 RVA: 0x000988F0 File Offset: 0x00096AF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeTask
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Request.TypeTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeTask' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.TypeTaskColumn] = value;
                }
            }

            // Token: 0x170005FC RID: 1532
            // (get) Token: 0x060017CB RID: 6091 RVA: 0x0009890C File Offset: 0x00096B0C
            // (set) Token: 0x060017CC RID: 6092 RVA: 0x00098950 File Offset: 0x00096B50
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StatusTask
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_Request.StatusTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'StatusTask' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.StatusTaskColumn] = value;
                }
            }

            // Token: 0x170005FD RID: 1533
            // (get) Token: 0x060017CD RID: 6093 RVA: 0x00098964 File Offset: 0x00096B64
            // (set) Token: 0x060017CE RID: 6094 RVA: 0x000989A8 File Offset: 0x00096BA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserPerfom
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Request.idUserPerfomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idUserPerfom' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.idUserPerfomColumn] = value;
                }
            }

            // Token: 0x170005FE RID: 1534
            // (get) Token: 0x060017CF RID: 6095 RVA: 0x000989C4 File Offset: 0x00096BC4
            // (set) Token: 0x060017D0 RID: 6096 RVA: 0x00098A08 File Offset: 0x00096C08
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DatePerfom
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tabletJ_Request.DatePerfomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DatePerfom' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.DatePerfomColumn] = value;
                }
            }

            // Token: 0x170005FF RID: 1535
            // (get) Token: 0x060017D1 RID: 6097 RVA: 0x00098A24 File Offset: 0x00096C24
            // (set) Token: 0x060017D2 RID: 6098 RVA: 0x00098A68 File Offset: 0x00096C68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_Request.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Request.CommentColumn] = value;
                }
            }

            // Token: 0x060017D3 RID: 6099 RVA: 0x00098A7C File Offset: 0x00096C7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsModulNull()
            {
                return base.IsNull(this.tabletJ_Request.ModulColumn);
            }

            // Token: 0x060017D4 RID: 6100 RVA: 0x00098A8F File Offset: 0x00096C8F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModulNull()
            {
                base[this.tabletJ_Request.ModulColumn] = Convert.DBNull;
            }

            // Token: 0x060017D5 RID: 6101 RVA: 0x00098AA7 File Offset: 0x00096CA7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTextTaskNull()
            {
                return base.IsNull(this.tabletJ_Request.TextTaskColumn);
            }

            // Token: 0x060017D6 RID: 6102 RVA: 0x00098ABA File Offset: 0x00096CBA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTextTaskNull()
            {
                base[this.tabletJ_Request.TextTaskColumn] = Convert.DBNull;
            }

            // Token: 0x060017D7 RID: 6103 RVA: 0x00098AD2 File Offset: 0x00096CD2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTextTaskBinNull()
            {
                return base.IsNull(this.tabletJ_Request.TextTaskBinColumn);
            }

            // Token: 0x060017D8 RID: 6104 RVA: 0x00098AE5 File Offset: 0x00096CE5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTextTaskBinNull()
            {
                base[this.tabletJ_Request.TextTaskBinColumn] = Convert.DBNull;
            }

            // Token: 0x060017D9 RID: 6105 RVA: 0x00098AFD File Offset: 0x00096CFD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidUserWhomNull()
            {
                return base.IsNull(this.tabletJ_Request.idUserWhomColumn);
            }

            // Token: 0x060017DA RID: 6106 RVA: 0x00098B10 File Offset: 0x00096D10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidUserWhomNull()
            {
                base[this.tabletJ_Request.idUserWhomColumn] = Convert.DBNull;
            }

            // Token: 0x060017DB RID: 6107 RVA: 0x00098B28 File Offset: 0x00096D28
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeTaskNull()
            {
                return base.IsNull(this.tabletJ_Request.TypeTaskColumn);
            }

            // Token: 0x060017DC RID: 6108 RVA: 0x00098B3B File Offset: 0x00096D3B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeTaskNull()
            {
                base[this.tabletJ_Request.TypeTaskColumn] = Convert.DBNull;
            }

            // Token: 0x060017DD RID: 6109 RVA: 0x00098B53 File Offset: 0x00096D53
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusTaskNull()
            {
                return base.IsNull(this.tabletJ_Request.StatusTaskColumn);
            }

            // Token: 0x060017DE RID: 6110 RVA: 0x00098B66 File Offset: 0x00096D66
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusTaskNull()
            {
                base[this.tabletJ_Request.StatusTaskColumn] = Convert.DBNull;
            }

            // Token: 0x060017DF RID: 6111 RVA: 0x00098B7E File Offset: 0x00096D7E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidUserPerfomNull()
            {
                return base.IsNull(this.tabletJ_Request.idUserPerfomColumn);
            }

            // Token: 0x060017E0 RID: 6112 RVA: 0x00098B91 File Offset: 0x00096D91
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidUserPerfomNull()
            {
                base[this.tabletJ_Request.idUserPerfomColumn] = Convert.DBNull;
            }

            // Token: 0x060017E1 RID: 6113 RVA: 0x00098BA9 File Offset: 0x00096DA9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDatePerfomNull()
            {
                return base.IsNull(this.tabletJ_Request.DatePerfomColumn);
            }

            // Token: 0x060017E2 RID: 6114 RVA: 0x00098BBC File Offset: 0x00096DBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatePerfomNull()
            {
                base[this.tabletJ_Request.DatePerfomColumn] = Convert.DBNull;
            }

            // Token: 0x060017E3 RID: 6115 RVA: 0x00098BD4 File Offset: 0x00096DD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tabletJ_Request.CommentColumn);
            }

            // Token: 0x060017E4 RID: 6116 RVA: 0x00098BE7 File Offset: 0x00096DE7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tabletJ_Request.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x04000B87 RID: 2951
            private DataSetGES.tJ_RequestDataTable tabletJ_Request;
        }

        // Token: 0x02000128 RID: 296
        public class vJ_RequestRow : DataRow
        {
            // Token: 0x060017E5 RID: 6117 RVA: 0x00098BFF File Offset: 0x00096DFF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RequestRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_Request = (DataSetGES.vJ_RequestDataTable)base.Table;
            }

            // Token: 0x17000600 RID: 1536
            // (get) Token: 0x060017E6 RID: 6118 RVA: 0x00098C19 File Offset: 0x00096E19
            // (set) Token: 0x060017E7 RID: 6119 RVA: 0x00098C31 File Offset: 0x00096E31
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_Request.idColumn];
                }
                set
                {
                    base[this.tablevJ_Request.idColumn] = value;
                }
            }

            // Token: 0x17000601 RID: 1537
            // (get) Token: 0x060017E8 RID: 6120 RVA: 0x00098C4A File Offset: 0x00096E4A
            // (set) Token: 0x060017E9 RID: 6121 RVA: 0x00098C62 File Offset: 0x00096E62
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserTask
            {
                get
                {
                    return (int)base[this.tablevJ_Request.idUserTaskColumn];
                }
                set
                {
                    base[this.tablevJ_Request.idUserTaskColumn] = value;
                }
            }

            // Token: 0x17000602 RID: 1538
            // (get) Token: 0x060017EA RID: 6122 RVA: 0x00098C7C File Offset: 0x00096E7C
            // (set) Token: 0x060017EB RID: 6123 RVA: 0x00098CC0 File Offset: 0x00096EC0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nameUserTask
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_Request.nameUserTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameUserTask' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.nameUserTaskColumn] = value;
                }
            }

            // Token: 0x17000603 RID: 1539
            // (get) Token: 0x060017EC RID: 6124 RVA: 0x00098CD4 File Offset: 0x00096ED4
            // (set) Token: 0x060017ED RID: 6125 RVA: 0x00098CEC File Offset: 0x00096EEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateTask
            {
                get
                {
                    return (DateTime)base[this.tablevJ_Request.DateTaskColumn];
                }
                set
                {
                    base[this.tablevJ_Request.DateTaskColumn] = value;
                }
            }

            // Token: 0x17000604 RID: 1540
            // (get) Token: 0x060017EE RID: 6126 RVA: 0x00098D08 File Offset: 0x00096F08
            // (set) Token: 0x060017EF RID: 6127 RVA: 0x00098D4C File Offset: 0x00096F4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modul
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_Request.ModulColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Modul' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.ModulColumn] = value;
                }
            }

            // Token: 0x17000605 RID: 1541
            // (get) Token: 0x060017F0 RID: 6128 RVA: 0x00098D68 File Offset: 0x00096F68
            // (set) Token: 0x060017F1 RID: 6129 RVA: 0x00098DAC File Offset: 0x00096FAC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string TextTask
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_Request.TextTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TextTask' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.TextTaskColumn] = value;
                }
            }

            // Token: 0x17000606 RID: 1542
            // (get) Token: 0x060017F2 RID: 6130 RVA: 0x00098DC0 File Offset: 0x00096FC0
            // (set) Token: 0x060017F3 RID: 6131 RVA: 0x00098E04 File Offset: 0x00097004
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] TextTaskBin
            {
                get
                {
                    byte[] result;
                    try
                    {
                        result = (byte[])base[this.tablevJ_Request.TextTaskBinColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TextTaskBin' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.TextTaskBinColumn] = value;
                }
            }

            // Token: 0x17000607 RID: 1543
            // (get) Token: 0x060017F4 RID: 6132 RVA: 0x00098E18 File Offset: 0x00097018
            // (set) Token: 0x060017F5 RID: 6133 RVA: 0x00098E5C File Offset: 0x0009705C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserWhom
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_Request.idUserWhomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idUserWhom' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.idUserWhomColumn] = value;
                }
            }

            // Token: 0x17000608 RID: 1544
            // (get) Token: 0x060017F6 RID: 6134 RVA: 0x00098E78 File Offset: 0x00097078
            // (set) Token: 0x060017F7 RID: 6135 RVA: 0x00098EBC File Offset: 0x000970BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameUserWhom
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_Request.NameUserWhomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameUserWhom' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.NameUserWhomColumn] = value;
                }
            }

            // Token: 0x17000609 RID: 1545
            // (get) Token: 0x060017F8 RID: 6136 RVA: 0x00098ED0 File Offset: 0x000970D0
            // (set) Token: 0x060017F9 RID: 6137 RVA: 0x00098F14 File Offset: 0x00097114
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeTask
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_Request.TypeTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeTask' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.TypeTaskColumn] = value;
                }
            }

            // Token: 0x1700060A RID: 1546
            // (get) Token: 0x060017FA RID: 6138 RVA: 0x00098F30 File Offset: 0x00097130
            // (set) Token: 0x060017FB RID: 6139 RVA: 0x00098F74 File Offset: 0x00097174
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameTypeTask
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_Request.NameTypeTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTypeTask' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.NameTypeTaskColumn] = value;
                }
            }

            // Token: 0x1700060B RID: 1547
            // (get) Token: 0x060017FC RID: 6140 RVA: 0x00098F88 File Offset: 0x00097188
            // (set) Token: 0x060017FD RID: 6141 RVA: 0x00098FCC File Offset: 0x000971CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserPerfom
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_Request.idUserPerfomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idUserPerfom' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.idUserPerfomColumn] = value;
                }
            }

            // Token: 0x1700060C RID: 1548
            // (get) Token: 0x060017FE RID: 6142 RVA: 0x00098FE8 File Offset: 0x000971E8
            // (set) Token: 0x060017FF RID: 6143 RVA: 0x0009902C File Offset: 0x0009722C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string nameUserPerfom
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_Request.nameUserPerfomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameUserPerfom' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.nameUserPerfomColumn] = value;
                }
            }

            // Token: 0x1700060D RID: 1549
            // (get) Token: 0x06001800 RID: 6144 RVA: 0x00099040 File Offset: 0x00097240
            // (set) Token: 0x06001801 RID: 6145 RVA: 0x00099084 File Offset: 0x00097284
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DatePerfom
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_Request.DatePerfomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DatePerfom' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.DatePerfomColumn] = value;
                }
            }

            // Token: 0x1700060E RID: 1550
            // (get) Token: 0x06001802 RID: 6146 RVA: 0x000990A0 File Offset: 0x000972A0
            // (set) Token: 0x06001803 RID: 6147 RVA: 0x000990E4 File Offset: 0x000972E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_Request.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.CommentColumn] = value;
                }
            }

            // Token: 0x1700060F RID: 1551
            // (get) Token: 0x06001804 RID: 6148 RVA: 0x000990F8 File Offset: 0x000972F8
            // (set) Token: 0x06001805 RID: 6149 RVA: 0x0009913C File Offset: 0x0009733C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int StatusTask
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_Request.StatusTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'StatusTask' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.StatusTaskColumn] = value;
                }
            }

            // Token: 0x17000610 RID: 1552
            // (get) Token: 0x06001806 RID: 6150 RVA: 0x00099158 File Offset: 0x00097358
            // (set) Token: 0x06001807 RID: 6151 RVA: 0x0009919C File Offset: 0x0009739C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string nameStatusTask
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_Request.nameStatusTaskColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameStatusTask' in table 'vJ_Request' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_Request.nameStatusTaskColumn] = value;
                }
            }

            // Token: 0x17000611 RID: 1553
            // (get) Token: 0x06001808 RID: 6152 RVA: 0x000991B0 File Offset: 0x000973B0
            // (set) Token: 0x06001809 RID: 6153 RVA: 0x000991C8 File Offset: 0x000973C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nameModul
            {
                get
                {
                    return (string)base[this.tablevJ_Request.nameModulColumn];
                }
                set
                {
                    base[this.tablevJ_Request.nameModulColumn] = value;
                }
            }

            // Token: 0x0600180A RID: 6154 RVA: 0x000991DC File Offset: 0x000973DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameUserTaskNull()
            {
                return base.IsNull(this.tablevJ_Request.nameUserTaskColumn);
            }

            // Token: 0x0600180B RID: 6155 RVA: 0x000991EF File Offset: 0x000973EF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetnameUserTaskNull()
            {
                base[this.tablevJ_Request.nameUserTaskColumn] = Convert.DBNull;
            }

            // Token: 0x0600180C RID: 6156 RVA: 0x00099207 File Offset: 0x00097407
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsModulNull()
            {
                return base.IsNull(this.tablevJ_Request.ModulColumn);
            }

            // Token: 0x0600180D RID: 6157 RVA: 0x0009921A File Offset: 0x0009741A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetModulNull()
            {
                base[this.tablevJ_Request.ModulColumn] = Convert.DBNull;
            }

            // Token: 0x0600180E RID: 6158 RVA: 0x00099232 File Offset: 0x00097432
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTextTaskNull()
            {
                return base.IsNull(this.tablevJ_Request.TextTaskColumn);
            }

            // Token: 0x0600180F RID: 6159 RVA: 0x00099245 File Offset: 0x00097445
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTextTaskNull()
            {
                base[this.tablevJ_Request.TextTaskColumn] = Convert.DBNull;
            }

            // Token: 0x06001810 RID: 6160 RVA: 0x0009925D File Offset: 0x0009745D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTextTaskBinNull()
            {
                return base.IsNull(this.tablevJ_Request.TextTaskBinColumn);
            }

            // Token: 0x06001811 RID: 6161 RVA: 0x00099270 File Offset: 0x00097470
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTextTaskBinNull()
            {
                base[this.tablevJ_Request.TextTaskBinColumn] = Convert.DBNull;
            }

            // Token: 0x06001812 RID: 6162 RVA: 0x00099288 File Offset: 0x00097488
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidUserWhomNull()
            {
                return base.IsNull(this.tablevJ_Request.idUserWhomColumn);
            }

            // Token: 0x06001813 RID: 6163 RVA: 0x0009929B File Offset: 0x0009749B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidUserWhomNull()
            {
                base[this.tablevJ_Request.idUserWhomColumn] = Convert.DBNull;
            }

            // Token: 0x06001814 RID: 6164 RVA: 0x000992B3 File Offset: 0x000974B3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameUserWhomNull()
            {
                return base.IsNull(this.tablevJ_Request.NameUserWhomColumn);
            }

            // Token: 0x06001815 RID: 6165 RVA: 0x000992C6 File Offset: 0x000974C6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameUserWhomNull()
            {
                base[this.tablevJ_Request.NameUserWhomColumn] = Convert.DBNull;
            }

            // Token: 0x06001816 RID: 6166 RVA: 0x000992DE File Offset: 0x000974DE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeTaskNull()
            {
                return base.IsNull(this.tablevJ_Request.TypeTaskColumn);
            }

            // Token: 0x06001817 RID: 6167 RVA: 0x000992F1 File Offset: 0x000974F1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTypeTaskNull()
            {
                base[this.tablevJ_Request.TypeTaskColumn] = Convert.DBNull;
            }

            // Token: 0x06001818 RID: 6168 RVA: 0x00099309 File Offset: 0x00097509
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTypeTaskNull()
            {
                return base.IsNull(this.tablevJ_Request.NameTypeTaskColumn);
            }

            // Token: 0x06001819 RID: 6169 RVA: 0x0009931C File Offset: 0x0009751C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameTypeTaskNull()
            {
                base[this.tablevJ_Request.NameTypeTaskColumn] = Convert.DBNull;
            }

            // Token: 0x0600181A RID: 6170 RVA: 0x00099334 File Offset: 0x00097534
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidUserPerfomNull()
            {
                return base.IsNull(this.tablevJ_Request.idUserPerfomColumn);
            }

            // Token: 0x0600181B RID: 6171 RVA: 0x00099347 File Offset: 0x00097547
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidUserPerfomNull()
            {
                base[this.tablevJ_Request.idUserPerfomColumn] = Convert.DBNull;
            }

            // Token: 0x0600181C RID: 6172 RVA: 0x0009935F File Offset: 0x0009755F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameUserPerfomNull()
            {
                return base.IsNull(this.tablevJ_Request.nameUserPerfomColumn);
            }

            // Token: 0x0600181D RID: 6173 RVA: 0x00099372 File Offset: 0x00097572
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameUserPerfomNull()
            {
                base[this.tablevJ_Request.nameUserPerfomColumn] = Convert.DBNull;
            }

            // Token: 0x0600181E RID: 6174 RVA: 0x0009938A File Offset: 0x0009758A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDatePerfomNull()
            {
                return base.IsNull(this.tablevJ_Request.DatePerfomColumn);
            }

            // Token: 0x0600181F RID: 6175 RVA: 0x0009939D File Offset: 0x0009759D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatePerfomNull()
            {
                base[this.tablevJ_Request.DatePerfomColumn] = Convert.DBNull;
            }

            // Token: 0x06001820 RID: 6176 RVA: 0x000993B5 File Offset: 0x000975B5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tablevJ_Request.CommentColumn);
            }

            // Token: 0x06001821 RID: 6177 RVA: 0x000993C8 File Offset: 0x000975C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull()
            {
                base[this.tablevJ_Request.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x06001822 RID: 6178 RVA: 0x000993E0 File Offset: 0x000975E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsStatusTaskNull()
            {
                return base.IsNull(this.tablevJ_Request.StatusTaskColumn);
            }

            // Token: 0x06001823 RID: 6179 RVA: 0x000993F3 File Offset: 0x000975F3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusTaskNull()
            {
                base[this.tablevJ_Request.StatusTaskColumn] = Convert.DBNull;
            }

            // Token: 0x06001824 RID: 6180 RVA: 0x0009940B File Offset: 0x0009760B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameStatusTaskNull()
            {
                return base.IsNull(this.tablevJ_Request.nameStatusTaskColumn);
            }

            // Token: 0x06001825 RID: 6181 RVA: 0x0009941E File Offset: 0x0009761E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetnameStatusTaskNull()
            {
                base[this.tablevJ_Request.nameStatusTaskColumn] = Convert.DBNull;
            }

            // Token: 0x04000B88 RID: 2952
            private DataSetGES.vJ_RequestDataTable tablevJ_Request;
        }

        // Token: 0x02000129 RID: 297
        public class vJ_RequestForRepairRow : DataRow
        {
            // Token: 0x06001826 RID: 6182 RVA: 0x00099436 File Offset: 0x00097636
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RequestForRepairRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_RequestForRepair = (DataSetGES.vJ_RequestForRepairDataTable)base.Table;
            }

            // Token: 0x17000612 RID: 1554
            // (get) Token: 0x06001827 RID: 6183 RVA: 0x00099450 File Offset: 0x00097650
            // (set) Token: 0x06001828 RID: 6184 RVA: 0x00099468 File Offset: 0x00097668
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepair.idColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.idColumn] = value;
                }
            }

            // Token: 0x17000613 RID: 1555
            // (get) Token: 0x06001829 RID: 6185 RVA: 0x00099481 File Offset: 0x00097681
            // (set) Token: 0x0600182A RID: 6186 RVA: 0x00099499 File Offset: 0x00097699
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int num
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepair.numColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.numColumn] = value;
                }
            }

            // Token: 0x17000614 RID: 1556
            // (get) Token: 0x0600182B RID: 6187 RVA: 0x000994B2 File Offset: 0x000976B2
            // (set) Token: 0x0600182C RID: 6188 RVA: 0x000994CA File Offset: 0x000976CA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime dateCreate
            {
                get
                {
                    return (DateTime)base[this.tablevJ_RequestForRepair.dateCreateColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.dateCreateColumn] = value;
                }
            }

            // Token: 0x17000615 RID: 1557
            // (get) Token: 0x0600182D RID: 6189 RVA: 0x000994E4 File Offset: 0x000976E4
            // (set) Token: 0x0600182E RID: 6190 RVA: 0x00099528 File Offset: 0x00097728
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorker
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RequestForRepair.idWorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.idWorkerColumn] = value;
                }
            }

            // Token: 0x17000616 RID: 1558
            // (get) Token: 0x0600182F RID: 6191 RVA: 0x00099544 File Offset: 0x00097744
            // (set) Token: 0x06001830 RID: 6192 RVA: 0x00099588 File Offset: 0x00097788
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string workerCreate
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.workerCreateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'workerCreate' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.workerCreateColumn] = value;
                }
            }

            // Token: 0x17000617 RID: 1559
            // (get) Token: 0x06001831 RID: 6193 RVA: 0x0009959C File Offset: 0x0009779C
            // (set) Token: 0x06001832 RID: 6194 RVA: 0x000995B4 File Offset: 0x000977B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string reguestFiled
            {
                get
                {
                    return (string)base[this.tablevJ_RequestForRepair.reguestFiledColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.reguestFiledColumn] = value;
                }
            }

            // Token: 0x17000618 RID: 1560
            // (get) Token: 0x06001833 RID: 6195 RVA: 0x000995C8 File Offset: 0x000977C8
            // (set) Token: 0x06001834 RID: 6196 RVA: 0x000995E0 File Offset: 0x000977E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSR
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepair.idSRColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.idSRColumn] = value;
                }
            }

            // Token: 0x17000619 RID: 1561
            // (get) Token: 0x06001835 RID: 6197 RVA: 0x000995FC File Offset: 0x000977FC
            // (set) Token: 0x06001836 RID: 6198 RVA: 0x00099640 File Offset: 0x00097840
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SR
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.SRColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SR' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.SRColumn] = value;
                }
            }

            // Token: 0x1700061A RID: 1562
            // (get) Token: 0x06001837 RID: 6199 RVA: 0x00099654 File Offset: 0x00097854
            // (set) Token: 0x06001838 RID: 6200 RVA: 0x00099698 File Offset: 0x00097898
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string SRSocr
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.SRSocrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SRSocr' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.SRSocrColumn] = value;
                }
            }

            // Token: 0x1700061B RID: 1563
            // (get) Token: 0x06001839 RID: 6201 RVA: 0x000996AC File Offset: 0x000978AC
            // (set) Token: 0x0600183A RID: 6202 RVA: 0x000996C4 File Offset: 0x000978C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string schmObj
            {
                get
                {
                    return (string)base[this.tablevJ_RequestForRepair.schmObjColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.schmObjColumn] = value;
                }
            }

            // Token: 0x1700061C RID: 1564
            // (get) Token: 0x0600183B RID: 6203 RVA: 0x000996D8 File Offset: 0x000978D8
            // (set) Token: 0x0600183C RID: 6204 RVA: 0x000996F0 File Offset: 0x000978F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Purpose
            {
                get
                {
                    return (string)base[this.tablevJ_RequestForRepair.PurposeColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.PurposeColumn] = value;
                }
            }

            // Token: 0x1700061D RID: 1565
            // (get) Token: 0x0600183D RID: 6205 RVA: 0x00099704 File Offset: 0x00097904
            // (set) Token: 0x0600183E RID: 6206 RVA: 0x0009971C File Offset: 0x0009791C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlanned
            {
                get
                {
                    return (bool)base[this.tablevJ_RequestForRepair.IsPlannedColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.IsPlannedColumn] = value;
                }
            }

            // Token: 0x1700061E RID: 1566
            // (get) Token: 0x0600183F RID: 6207 RVA: 0x00099738 File Offset: 0x00097938
            // (set) Token: 0x06001840 RID: 6208 RVA: 0x0009977C File Offset: 0x0009797C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateTripBeg
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RequestForRepair.DateTripBegColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateTripBeg' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.DateTripBegColumn] = value;
                }
            }

            // Token: 0x1700061F RID: 1567
            // (get) Token: 0x06001841 RID: 6209 RVA: 0x00099798 File Offset: 0x00097998
            // (set) Token: 0x06001842 RID: 6210 RVA: 0x000997DC File Offset: 0x000979DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateTripEnd
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RequestForRepair.DateTripEndColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateTripEnd' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.DateTripEndColumn] = value;
                }
            }

            // Token: 0x17000620 RID: 1568
            // (get) Token: 0x06001843 RID: 6211 RVA: 0x000997F8 File Offset: 0x000979F8
            // (set) Token: 0x06001844 RID: 6212 RVA: 0x0009983C File Offset: 0x00097A3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgreeWith
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.AgreeWithColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AgreeWith' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.AgreeWithColumn] = value;
                }
            }

            // Token: 0x17000621 RID: 1569
            // (get) Token: 0x06001845 RID: 6213 RVA: 0x00099850 File Offset: 0x00097A50
            // (set) Token: 0x06001846 RID: 6214 RVA: 0x00099894 File Offset: 0x00097A94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.CommentColumn] = value;
                }
            }

            // Token: 0x17000622 RID: 1570
            // (get) Token: 0x06001847 RID: 6215 RVA: 0x000998A8 File Offset: 0x00097AA8
            // (set) Token: 0x06001848 RID: 6216 RVA: 0x000998EC File Offset: 0x00097AEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.AddressColumn] = value;
                }
            }

            // Token: 0x17000623 RID: 1571
            // (get) Token: 0x06001849 RID: 6217 RVA: 0x00099900 File Offset: 0x00097B00
            // (set) Token: 0x0600184A RID: 6218 RVA: 0x00099918 File Offset: 0x00097B18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Agreed
            {
                get
                {
                    return (bool)base[this.tablevJ_RequestForRepair.AgreedColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.AgreedColumn] = value;
                }
            }

            // Token: 0x17000624 RID: 1572
            // (get) Token: 0x0600184B RID: 6219 RVA: 0x00099934 File Offset: 0x00097B34
            // (set) Token: 0x0600184C RID: 6220 RVA: 0x00099978 File Offset: 0x00097B78
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateAgreed
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RequestForRepair.DateAgreedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateAgreed' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.DateAgreedColumn] = value;
                }
            }

            // Token: 0x17000625 RID: 1573
            // (get) Token: 0x0600184D RID: 6221 RVA: 0x00099994 File Offset: 0x00097B94
            // (set) Token: 0x0600184E RID: 6222 RVA: 0x000999D8 File Offset: 0x00097BD8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WorkerAgreed
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RequestForRepair.WorkerAgreedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'WorkerAgreed' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.WorkerAgreedColumn] = value;
                }
            }

            // Token: 0x17000626 RID: 1574
            // (get) Token: 0x0600184F RID: 6223 RVA: 0x000999F4 File Offset: 0x00097BF4
            // (set) Token: 0x06001850 RID: 6224 RVA: 0x00099A38 File Offset: 0x00097C38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string FIO
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.FIOColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.FIOColumn] = value;
                }
            }

            // Token: 0x17000627 RID: 1575
            // (get) Token: 0x06001851 RID: 6225 RVA: 0x00099A4C File Offset: 0x00097C4C
            // (set) Token: 0x06001852 RID: 6226 RVA: 0x00099A64 File Offset: 0x00097C64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int iddivision
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepair.iddivisionColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.iddivisionColumn] = value;
                }
            }

            // Token: 0x17000628 RID: 1576
            // (get) Token: 0x06001853 RID: 6227 RVA: 0x00099A80 File Offset: 0x00097C80
            // (set) Token: 0x06001854 RID: 6228 RVA: 0x00099AC4 File Offset: 0x00097CC4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string division
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.divisionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'division' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.divisionColumn] = value;
                }
            }

            // Token: 0x17000629 RID: 1577
            // (get) Token: 0x06001855 RID: 6229 RVA: 0x00099AD8 File Offset: 0x00097CD8
            // (set) Token: 0x06001856 RID: 6230 RVA: 0x00099B1C File Offset: 0x00097D1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idUserCreate
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RequestForRepair.idUserCreateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idUserCreate' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.idUserCreateColumn] = value;
                }
            }

            // Token: 0x1700062A RID: 1578
            // (get) Token: 0x06001857 RID: 6231 RVA: 0x00099B38 File Offset: 0x00097D38
            // (set) Token: 0x06001858 RID: 6232 RVA: 0x00099B7C File Offset: 0x00097D7C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepair.UserNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UserName' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.UserNameColumn] = value;
                }
            }

            // Token: 0x1700062B RID: 1579
            // (get) Token: 0x06001859 RID: 6233 RVA: 0x00099B90 File Offset: 0x00097D90
            // (set) Token: 0x0600185A RID: 6234 RVA: 0x00099BD4 File Offset: 0x00097DD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_RequestForRepair.deletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'deleted' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.deletedColumn] = value;
                }
            }

            // Token: 0x1700062C RID: 1580
            // (get) Token: 0x0600185B RID: 6235 RVA: 0x00099BF0 File Offset: 0x00097DF0
            // (set) Token: 0x0600185C RID: 6236 RVA: 0x00099C34 File Offset: 0x00097E34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool isSend
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_RequestForRepair.isSendColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'isSend' in table 'vJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepair.isSendColumn] = value;
                }
            }

            // Token: 0x0600185D RID: 6237 RVA: 0x00099C4D File Offset: 0x00097E4D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidWorkerNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.idWorkerColumn);
            }

            // Token: 0x0600185E RID: 6238 RVA: 0x00099C60 File Offset: 0x00097E60
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidWorkerNull()
            {
                base[this.tablevJ_RequestForRepair.idWorkerColumn] = Convert.DBNull;
            }

            // Token: 0x0600185F RID: 6239 RVA: 0x00099C78 File Offset: 0x00097E78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsworkerCreateNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.workerCreateColumn);
            }

            // Token: 0x06001860 RID: 6240 RVA: 0x00099C8B File Offset: 0x00097E8B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetworkerCreateNull()
            {
                base[this.tablevJ_RequestForRepair.workerCreateColumn] = Convert.DBNull;
            }

            // Token: 0x06001861 RID: 6241 RVA: 0x00099CA3 File Offset: 0x00097EA3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSRNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.SRColumn);
            }

            // Token: 0x06001862 RID: 6242 RVA: 0x00099CB6 File Offset: 0x00097EB6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSRNull()
            {
                base[this.tablevJ_RequestForRepair.SRColumn] = Convert.DBNull;
            }

            // Token: 0x06001863 RID: 6243 RVA: 0x00099CCE File Offset: 0x00097ECE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSRSocrNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.SRSocrColumn);
            }

            // Token: 0x06001864 RID: 6244 RVA: 0x00099CE1 File Offset: 0x00097EE1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSRSocrNull()
            {
                base[this.tablevJ_RequestForRepair.SRSocrColumn] = Convert.DBNull;
            }

            // Token: 0x06001865 RID: 6245 RVA: 0x00099CF9 File Offset: 0x00097EF9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateTripBegNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.DateTripBegColumn);
            }

            // Token: 0x06001866 RID: 6246 RVA: 0x00099D0C File Offset: 0x00097F0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateTripBegNull()
            {
                base[this.tablevJ_RequestForRepair.DateTripBegColumn] = Convert.DBNull;
            }

            // Token: 0x06001867 RID: 6247 RVA: 0x00099D24 File Offset: 0x00097F24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDateTripEndNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.DateTripEndColumn);
            }

            // Token: 0x06001868 RID: 6248 RVA: 0x00099D37 File Offset: 0x00097F37
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDateTripEndNull()
            {
                base[this.tablevJ_RequestForRepair.DateTripEndColumn] = Convert.DBNull;
            }

            // Token: 0x06001869 RID: 6249 RVA: 0x00099D4F File Offset: 0x00097F4F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgreeWithNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.AgreeWithColumn);
            }

            // Token: 0x0600186A RID: 6250 RVA: 0x00099D62 File Offset: 0x00097F62
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgreeWithNull()
            {
                base[this.tablevJ_RequestForRepair.AgreeWithColumn] = Convert.DBNull;
            }

            // Token: 0x0600186B RID: 6251 RVA: 0x00099D7A File Offset: 0x00097F7A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.CommentColumn);
            }

            // Token: 0x0600186C RID: 6252 RVA: 0x00099D8D File Offset: 0x00097F8D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tablevJ_RequestForRepair.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x0600186D RID: 6253 RVA: 0x00099DA5 File Offset: 0x00097FA5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.AddressColumn);
            }

            // Token: 0x0600186E RID: 6254 RVA: 0x00099DB8 File Offset: 0x00097FB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetAddressNull()
            {
                base[this.tablevJ_RequestForRepair.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x0600186F RID: 6255 RVA: 0x00099DD0 File Offset: 0x00097FD0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateAgreedNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.DateAgreedColumn);
            }

            // Token: 0x06001870 RID: 6256 RVA: 0x00099DE3 File Offset: 0x00097FE3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDateAgreedNull()
            {
                base[this.tablevJ_RequestForRepair.DateAgreedColumn] = Convert.DBNull;
            }

            // Token: 0x06001871 RID: 6257 RVA: 0x00099DFB File Offset: 0x00097FFB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkerAgreedNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.WorkerAgreedColumn);
            }

            // Token: 0x06001872 RID: 6258 RVA: 0x00099E0E File Offset: 0x0009800E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkerAgreedNull()
            {
                base[this.tablevJ_RequestForRepair.WorkerAgreedColumn] = Convert.DBNull;
            }

            // Token: 0x06001873 RID: 6259 RVA: 0x00099E26 File Offset: 0x00098026
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIONull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.FIOColumn);
            }

            // Token: 0x06001874 RID: 6260 RVA: 0x00099E39 File Offset: 0x00098039
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIONull()
            {
                base[this.tablevJ_RequestForRepair.FIOColumn] = Convert.DBNull;
            }

            // Token: 0x06001875 RID: 6261 RVA: 0x00099E51 File Offset: 0x00098051
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsdivisionNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.divisionColumn);
            }

            // Token: 0x06001876 RID: 6262 RVA: 0x00099E64 File Offset: 0x00098064
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdivisionNull()
            {
                base[this.tablevJ_RequestForRepair.divisionColumn] = Convert.DBNull;
            }

            // Token: 0x06001877 RID: 6263 RVA: 0x00099E7C File Offset: 0x0009807C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidUserCreateNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.idUserCreateColumn);
            }

            // Token: 0x06001878 RID: 6264 RVA: 0x00099E8F File Offset: 0x0009808F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidUserCreateNull()
            {
                base[this.tablevJ_RequestForRepair.idUserCreateColumn] = Convert.DBNull;
            }

            // Token: 0x06001879 RID: 6265 RVA: 0x00099EA7 File Offset: 0x000980A7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserNameNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.UserNameColumn);
            }

            // Token: 0x0600187A RID: 6266 RVA: 0x00099EBA File Offset: 0x000980BA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserNameNull()
            {
                base[this.tablevJ_RequestForRepair.UserNameColumn] = Convert.DBNull;
            }

            // Token: 0x0600187B RID: 6267 RVA: 0x00099ED2 File Offset: 0x000980D2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsdeletedNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.deletedColumn);
            }

            // Token: 0x0600187C RID: 6268 RVA: 0x00099EE5 File Offset: 0x000980E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdeletedNull()
            {
                base[this.tablevJ_RequestForRepair.deletedColumn] = Convert.DBNull;
            }

            // Token: 0x0600187D RID: 6269 RVA: 0x00099EFD File Offset: 0x000980FD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisSendNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepair.isSendColumn);
            }

            // Token: 0x0600187E RID: 6270 RVA: 0x00099F10 File Offset: 0x00098110
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetisSendNull()
            {
                base[this.tablevJ_RequestForRepair.isSendColumn] = Convert.DBNull;
            }

            // Token: 0x0600187F RID: 6271 RVA: 0x00099F28 File Offset: 0x00098128
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestForRepairDailyRow[] GettJ_RequestForRepairDailyRows()
            {
                if (base.Table.ChildRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"] == null)
                {
                    return new DataSetGES.tJ_RequestForRepairDailyRow[0];
                }
                return (DataSetGES.tJ_RequestForRepairDailyRow[])base.GetChildRows(base.Table.ChildRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"]);
            }

            // Token: 0x04000B89 RID: 2953
            private DataSetGES.vJ_RequestForRepairDataTable tablevJ_RequestForRepair;
        }

        // Token: 0x0200012A RID: 298
        public class tJ_RequestForRepairRow : DataRow
        {
            // Token: 0x06001880 RID: 6272 RVA: 0x00099F68 File Offset: 0x00098168
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestForRepairRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_RequestForRepair = (DataSetGES.tJ_RequestForRepairDataTable)base.Table;
            }

            // Token: 0x1700062D RID: 1581
            // (get) Token: 0x06001881 RID: 6273 RVA: 0x00099F82 File Offset: 0x00098182
            // (set) Token: 0x06001882 RID: 6274 RVA: 0x00099F9A File Offset: 0x0009819A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepair.idColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.idColumn] = value;
                }
            }

            // Token: 0x1700062E RID: 1582
            // (get) Token: 0x06001883 RID: 6275 RVA: 0x00099FB3 File Offset: 0x000981B3
            // (set) Token: 0x06001884 RID: 6276 RVA: 0x00099FCB File Offset: 0x000981CB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int num
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepair.numColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.numColumn] = value;
                }
            }

            // Token: 0x1700062F RID: 1583
            // (get) Token: 0x06001885 RID: 6277 RVA: 0x00099FE4 File Offset: 0x000981E4
            // (set) Token: 0x06001886 RID: 6278 RVA: 0x00099FFC File Offset: 0x000981FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateCreate
            {
                get
                {
                    return (DateTime)base[this.tabletJ_RequestForRepair.dateCreateColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.dateCreateColumn] = value;
                }
            }

            // Token: 0x17000630 RID: 1584
            // (get) Token: 0x06001887 RID: 6279 RVA: 0x0009A018 File Offset: 0x00098218
            // (set) Token: 0x06001888 RID: 6280 RVA: 0x0009A05C File Offset: 0x0009825C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RequestForRepair.idWorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.idWorkerColumn] = value;
                }
            }

            // Token: 0x17000631 RID: 1585
            // (get) Token: 0x06001889 RID: 6281 RVA: 0x0009A075 File Offset: 0x00098275
            // (set) Token: 0x0600188A RID: 6282 RVA: 0x0009A08D File Offset: 0x0009828D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string reguestFiled
            {
                get
                {
                    return (string)base[this.tabletJ_RequestForRepair.reguestFiledColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.reguestFiledColumn] = value;
                }
            }

            // Token: 0x17000632 RID: 1586
            // (get) Token: 0x0600188B RID: 6283 RVA: 0x0009A0A1 File Offset: 0x000982A1
            // (set) Token: 0x0600188C RID: 6284 RVA: 0x0009A0B9 File Offset: 0x000982B9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSR
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepair.idSRColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.idSRColumn] = value;
                }
            }

            // Token: 0x17000633 RID: 1587
            // (get) Token: 0x0600188D RID: 6285 RVA: 0x0009A0D2 File Offset: 0x000982D2
            // (set) Token: 0x0600188E RID: 6286 RVA: 0x0009A0EA File Offset: 0x000982EA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string schmObj
            {
                get
                {
                    return (string)base[this.tabletJ_RequestForRepair.schmObjColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.schmObjColumn] = value;
                }
            }

            // Token: 0x17000634 RID: 1588
            // (get) Token: 0x0600188F RID: 6287 RVA: 0x0009A0FE File Offset: 0x000982FE
            // (set) Token: 0x06001890 RID: 6288 RVA: 0x0009A116 File Offset: 0x00098316
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Purpose
            {
                get
                {
                    return (string)base[this.tabletJ_RequestForRepair.PurposeColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.PurposeColumn] = value;
                }
            }

            // Token: 0x17000635 RID: 1589
            // (get) Token: 0x06001891 RID: 6289 RVA: 0x0009A12A File Offset: 0x0009832A
            // (set) Token: 0x06001892 RID: 6290 RVA: 0x0009A142 File Offset: 0x00098342
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPlanned
            {
                get
                {
                    return (bool)base[this.tabletJ_RequestForRepair.IsPlannedColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.IsPlannedColumn] = value;
                }
            }

            // Token: 0x17000636 RID: 1590
            // (get) Token: 0x06001893 RID: 6291 RVA: 0x0009A15C File Offset: 0x0009835C
            // (set) Token: 0x06001894 RID: 6292 RVA: 0x0009A1A0 File Offset: 0x000983A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Crash
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_RequestForRepair.CrashColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Crash' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.CrashColumn] = value;
                }
            }

            // Token: 0x17000637 RID: 1591
            // (get) Token: 0x06001895 RID: 6293 RVA: 0x0009A1BC File Offset: 0x000983BC
            // (set) Token: 0x06001896 RID: 6294 RVA: 0x0009A200 File Offset: 0x00098400
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string AgreeWith
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RequestForRepair.AgreeWithColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AgreeWith' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.AgreeWithColumn] = value;
                }
            }

            // Token: 0x17000638 RID: 1592
            // (get) Token: 0x06001897 RID: 6295 RVA: 0x0009A214 File Offset: 0x00098414
            // (set) Token: 0x06001898 RID: 6296 RVA: 0x0009A258 File Offset: 0x00098458
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RequestForRepair.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.CommentColumn] = value;
                }
            }

            // Token: 0x17000639 RID: 1593
            // (get) Token: 0x06001899 RID: 6297 RVA: 0x0009A26C File Offset: 0x0009846C
            // (set) Token: 0x0600189A RID: 6298 RVA: 0x0009A2B0 File Offset: 0x000984B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RequestForRepair.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.AddressColumn] = value;
                }
            }

            // Token: 0x1700063A RID: 1594
            // (get) Token: 0x0600189B RID: 6299 RVA: 0x0009A2C4 File Offset: 0x000984C4
            // (set) Token: 0x0600189C RID: 6300 RVA: 0x0009A2DC File Offset: 0x000984DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Agreed
            {
                get
                {
                    return (bool)base[this.tabletJ_RequestForRepair.AgreedColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.AgreedColumn] = value;
                }
            }

            // Token: 0x1700063B RID: 1595
            // (get) Token: 0x0600189D RID: 6301 RVA: 0x0009A2F8 File Offset: 0x000984F8
            // (set) Token: 0x0600189E RID: 6302 RVA: 0x0009A33C File Offset: 0x0009853C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateAgreed
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tabletJ_RequestForRepair.DateAgreedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateAgreed' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.DateAgreedColumn] = value;
                }
            }

            // Token: 0x1700063C RID: 1596
            // (get) Token: 0x0600189F RID: 6303 RVA: 0x0009A358 File Offset: 0x00098558
            // (set) Token: 0x060018A0 RID: 6304 RVA: 0x0009A39C File Offset: 0x0009859C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WorkerAgreed
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RequestForRepair.WorkerAgreedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'WorkerAgreed' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.WorkerAgreedColumn] = value;
                }
            }

            // Token: 0x1700063D RID: 1597
            // (get) Token: 0x060018A1 RID: 6305 RVA: 0x0009A3B5 File Offset: 0x000985B5
            // (set) Token: 0x060018A2 RID: 6306 RVA: 0x0009A3CD File Offset: 0x000985CD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int iddivision
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepair.iddivisionColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.iddivisionColumn] = value;
                }
            }

            // Token: 0x1700063E RID: 1598
            // (get) Token: 0x060018A3 RID: 6307 RVA: 0x0009A3E8 File Offset: 0x000985E8
            // (set) Token: 0x060018A4 RID: 6308 RVA: 0x0009A42C File Offset: 0x0009862C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserCreate
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RequestForRepair.idUserCreateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idUserCreate' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.idUserCreateColumn] = value;
                }
            }

            // Token: 0x1700063F RID: 1599
            // (get) Token: 0x060018A5 RID: 6309 RVA: 0x0009A445 File Offset: 0x00098645
            // (set) Token: 0x060018A6 RID: 6310 RVA: 0x0009A45D File Offset: 0x0009865D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool deleted
            {
                get
                {
                    return (bool)base[this.tabletJ_RequestForRepair.deletedColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.deletedColumn] = value;
                }
            }

            // Token: 0x17000640 RID: 1600
            // (get) Token: 0x060018A7 RID: 6311 RVA: 0x0009A478 File Offset: 0x00098678
            // (set) Token: 0x060018A8 RID: 6312 RVA: 0x0009A4BC File Offset: 0x000986BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isSend
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_RequestForRepair.isSendColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'isSend' in table 'tJ_RequestForRepair' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepair.isSendColumn] = value;
                }
            }

            // Token: 0x060018A9 RID: 6313 RVA: 0x0009A4D5 File Offset: 0x000986D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidWorkerNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.idWorkerColumn);
            }

            // Token: 0x060018AA RID: 6314 RVA: 0x0009A4E8 File Offset: 0x000986E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidWorkerNull()
            {
                base[this.tabletJ_RequestForRepair.idWorkerColumn] = Convert.DBNull;
            }

            // Token: 0x060018AB RID: 6315 RVA: 0x0009A500 File Offset: 0x00098700
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCrashNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.CrashColumn);
            }

            // Token: 0x060018AC RID: 6316 RVA: 0x0009A513 File Offset: 0x00098713
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCrashNull()
            {
                base[this.tabletJ_RequestForRepair.CrashColumn] = Convert.DBNull;
            }

            // Token: 0x060018AD RID: 6317 RVA: 0x0009A52B File Offset: 0x0009872B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAgreeWithNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.AgreeWithColumn);
            }

            // Token: 0x060018AE RID: 6318 RVA: 0x0009A53E File Offset: 0x0009873E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgreeWithNull()
            {
                base[this.tabletJ_RequestForRepair.AgreeWithColumn] = Convert.DBNull;
            }

            // Token: 0x060018AF RID: 6319 RVA: 0x0009A556 File Offset: 0x00098756
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.CommentColumn);
            }

            // Token: 0x060018B0 RID: 6320 RVA: 0x0009A569 File Offset: 0x00098769
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tabletJ_RequestForRepair.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x060018B1 RID: 6321 RVA: 0x0009A581 File Offset: 0x00098781
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.AddressColumn);
            }

            // Token: 0x060018B2 RID: 6322 RVA: 0x0009A594 File Offset: 0x00098794
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull()
            {
                base[this.tabletJ_RequestForRepair.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x060018B3 RID: 6323 RVA: 0x0009A5AC File Offset: 0x000987AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDateAgreedNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.DateAgreedColumn);
            }

            // Token: 0x060018B4 RID: 6324 RVA: 0x0009A5BF File Offset: 0x000987BF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateAgreedNull()
            {
                base[this.tabletJ_RequestForRepair.DateAgreedColumn] = Convert.DBNull;
            }

            // Token: 0x060018B5 RID: 6325 RVA: 0x0009A5D7 File Offset: 0x000987D7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsWorkerAgreedNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.WorkerAgreedColumn);
            }

            // Token: 0x060018B6 RID: 6326 RVA: 0x0009A5EA File Offset: 0x000987EA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkerAgreedNull()
            {
                base[this.tabletJ_RequestForRepair.WorkerAgreedColumn] = Convert.DBNull;
            }

            // Token: 0x060018B7 RID: 6327 RVA: 0x0009A602 File Offset: 0x00098802
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidUserCreateNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.idUserCreateColumn);
            }

            // Token: 0x060018B8 RID: 6328 RVA: 0x0009A615 File Offset: 0x00098815
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidUserCreateNull()
            {
                base[this.tabletJ_RequestForRepair.idUserCreateColumn] = Convert.DBNull;
            }

            // Token: 0x060018B9 RID: 6329 RVA: 0x0009A62D File Offset: 0x0009882D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisSendNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepair.isSendColumn);
            }

            // Token: 0x060018BA RID: 6330 RVA: 0x0009A640 File Offset: 0x00098840
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetisSendNull()
            {
                base[this.tabletJ_RequestForRepair.isSendColumn] = Convert.DBNull;
            }

            // Token: 0x060018BB RID: 6331 RVA: 0x0009A658 File Offset: 0x00098858
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDailyRow[] GettJ_RequestForRepairDailyRows()
            {
                if (base.Table.ChildRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"] == null)
                {
                    return new DataSetGES.tJ_RequestForRepairDailyRow[0];
                }
                return (DataSetGES.tJ_RequestForRepairDailyRow[])base.GetChildRows(base.Table.ChildRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"]);
            }

            // Token: 0x04000B8A RID: 2954
            private DataSetGES.tJ_RequestForRepairDataTable tabletJ_RequestForRepair;
        }

        // Token: 0x0200012B RID: 299
        public class tR_ClassifierRow : DataRow
        {
            // Token: 0x060018BC RID: 6332 RVA: 0x0009A698 File Offset: 0x00098898
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_ClassifierRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletR_Classifier = (DataSetGES.tR_ClassifierDataTable)base.Table;
            }

            // Token: 0x17000641 RID: 1601
            // (get) Token: 0x060018BD RID: 6333 RVA: 0x0009A6B2 File Offset: 0x000988B2
            // (set) Token: 0x060018BE RID: 6334 RVA: 0x0009A6CA File Offset: 0x000988CA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int)base[this.tabletR_Classifier.IdColumn];
                }
                set
                {
                    base[this.tabletR_Classifier.IdColumn] = value;
                }
            }

            // Token: 0x17000642 RID: 1602
            // (get) Token: 0x060018BF RID: 6335 RVA: 0x0009A6E3 File Offset: 0x000988E3
            // (set) Token: 0x060018C0 RID: 6336 RVA: 0x0009A6FB File Offset: 0x000988FB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    return (string)base[this.tabletR_Classifier.NameColumn];
                }
                set
                {
                    base[this.tabletR_Classifier.NameColumn] = value;
                }
            }

            // Token: 0x17000643 RID: 1603
            // (get) Token: 0x060018C1 RID: 6337 RVA: 0x0009A710 File Offset: 0x00098910
            // (set) Token: 0x060018C2 RID: 6338 RVA: 0x0009A754 File Offset: 0x00098954
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SocrName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletR_Classifier.SocrNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SocrName' in table 'tR_Classifier' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_Classifier.SocrNameColumn] = value;
                }
            }

            // Token: 0x17000644 RID: 1604
            // (get) Token: 0x060018C3 RID: 6339 RVA: 0x0009A768 File Offset: 0x00098968
            // (set) Token: 0x060018C4 RID: 6340 RVA: 0x0009A7AC File Offset: 0x000989AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Value
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tabletR_Classifier.ValueColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Value' in table 'tR_Classifier' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_Classifier.ValueColumn] = value;
                }
            }

            // Token: 0x17000645 RID: 1605
            // (get) Token: 0x060018C5 RID: 6341 RVA: 0x0009A7C8 File Offset: 0x000989C8
            // (set) Token: 0x060018C6 RID: 6342 RVA: 0x0009A80C File Offset: 0x00098A0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletR_Classifier.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tR_Classifier' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_Classifier.CommentColumn] = value;
                }
            }

            // Token: 0x17000646 RID: 1606
            // (get) Token: 0x060018C7 RID: 6343 RVA: 0x0009A820 File Offset: 0x00098A20
            // (set) Token: 0x060018C8 RID: 6344 RVA: 0x0009A864 File Offset: 0x00098A64
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParentId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletR_Classifier.ParentIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ParentId' in table 'tR_Classifier' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_Classifier.ParentIdColumn] = value;
                }
            }

            // Token: 0x17000647 RID: 1607
            // (get) Token: 0x060018C9 RID: 6345 RVA: 0x0009A880 File Offset: 0x00098A80
            // (set) Token: 0x060018CA RID: 6346 RVA: 0x0009A8C4 File Offset: 0x00098AC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ParentKey
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletR_Classifier.ParentKeyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'tR_Classifier' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_Classifier.ParentKeyColumn] = value;
                }
            }

            // Token: 0x17000648 RID: 1608
            // (get) Token: 0x060018CB RID: 6347 RVA: 0x0009A8D8 File Offset: 0x00098AD8
            // (set) Token: 0x060018CC RID: 6348 RVA: 0x0009A91C File Offset: 0x00098B1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public byte[] OtherId
            {
                get
                {
                    byte[] result;
                    try
                    {
                        result = (byte[])base[this.tabletR_Classifier.OtherIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'OtherId' in table 'tR_Classifier' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_Classifier.OtherIdColumn] = value;
                }
            }

            // Token: 0x17000649 RID: 1609
            // (get) Token: 0x060018CD RID: 6349 RVA: 0x0009A930 File Offset: 0x00098B30
            // (set) Token: 0x060018CE RID: 6350 RVA: 0x0009A948 File Offset: 0x00098B48
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGroup
            {
                get
                {
                    return (bool)base[this.tabletR_Classifier.IsGroupColumn];
                }
                set
                {
                    base[this.tabletR_Classifier.IsGroupColumn] = value;
                }
            }

            // Token: 0x1700064A RID: 1610
            // (get) Token: 0x060018CF RID: 6351 RVA: 0x0009A961 File Offset: 0x00098B61
            // (set) Token: 0x060018D0 RID: 6352 RVA: 0x0009A979 File Offset: 0x00098B79
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tabletR_Classifier.DeletedColumn];
                }
                set
                {
                    base[this.tabletR_Classifier.DeletedColumn] = value;
                }
            }

            // Token: 0x060018D1 RID: 6353 RVA: 0x0009A992 File Offset: 0x00098B92
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSocrNameNull()
            {
                return base.IsNull(this.tabletR_Classifier.SocrNameColumn);
            }

            // Token: 0x060018D2 RID: 6354 RVA: 0x0009A9A5 File Offset: 0x00098BA5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSocrNameNull()
            {
                base[this.tabletR_Classifier.SocrNameColumn] = Convert.DBNull;
            }

            // Token: 0x060018D3 RID: 6355 RVA: 0x0009A9BD File Offset: 0x00098BBD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsValueNull()
            {
                return base.IsNull(this.tabletR_Classifier.ValueColumn);
            }

            // Token: 0x060018D4 RID: 6356 RVA: 0x0009A9D0 File Offset: 0x00098BD0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetValueNull()
            {
                base[this.tabletR_Classifier.ValueColumn] = Convert.DBNull;
            }

            // Token: 0x060018D5 RID: 6357 RVA: 0x0009A9E8 File Offset: 0x00098BE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tabletR_Classifier.CommentColumn);
            }

            // Token: 0x060018D6 RID: 6358 RVA: 0x0009A9FB File Offset: 0x00098BFB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull()
            {
                base[this.tabletR_Classifier.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x060018D7 RID: 6359 RVA: 0x0009AA13 File Offset: 0x00098C13
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentIdNull()
            {
                return base.IsNull(this.tabletR_Classifier.ParentIdColumn);
            }

            // Token: 0x060018D8 RID: 6360 RVA: 0x0009AA26 File Offset: 0x00098C26
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentIdNull()
            {
                base[this.tabletR_Classifier.ParentIdColumn] = Convert.DBNull;
            }

            // Token: 0x060018D9 RID: 6361 RVA: 0x0009AA3E File Offset: 0x00098C3E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsParentKeyNull()
            {
                return base.IsNull(this.tabletR_Classifier.ParentKeyColumn);
            }

            // Token: 0x060018DA RID: 6362 RVA: 0x0009AA51 File Offset: 0x00098C51
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetParentKeyNull()
            {
                base[this.tabletR_Classifier.ParentKeyColumn] = Convert.DBNull;
            }

            // Token: 0x060018DB RID: 6363 RVA: 0x0009AA69 File Offset: 0x00098C69
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsOtherIdNull()
            {
                return base.IsNull(this.tabletR_Classifier.OtherIdColumn);
            }

            // Token: 0x060018DC RID: 6364 RVA: 0x0009AA7C File Offset: 0x00098C7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetOtherIdNull()
            {
                base[this.tabletR_Classifier.OtherIdColumn] = Convert.DBNull;
            }

            // Token: 0x04000B8B RID: 2955
            private DataSetGES.tR_ClassifierDataTable tabletR_Classifier;
        }

        // Token: 0x0200012C RID: 300
        public class tJ_RequestForRepairDailyRow : DataRow
        {
            // Token: 0x060018DD RID: 6365 RVA: 0x0009AA94 File Offset: 0x00098C94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestForRepairDailyRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_RequestForRepairDaily = (DataSetGES.tJ_RequestForRepairDailyDataTable)base.Table;
            }

            // Token: 0x1700064B RID: 1611
            // (get) Token: 0x060018DE RID: 6366 RVA: 0x0009AAAE File Offset: 0x00098CAE
            // (set) Token: 0x060018DF RID: 6367 RVA: 0x0009AAC6 File Offset: 0x00098CC6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepairDaily.idColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDaily.idColumn] = value;
                }
            }

            // Token: 0x1700064C RID: 1612
            // (get) Token: 0x060018E0 RID: 6368 RVA: 0x0009AADF File Offset: 0x00098CDF
            // (set) Token: 0x060018E1 RID: 6369 RVA: 0x0009AAF7 File Offset: 0x00098CF7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idRequest
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepairDaily.idRequestColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDaily.idRequestColumn] = value;
                }
            }

            // Token: 0x1700064D RID: 1613
            // (get) Token: 0x060018E2 RID: 6370 RVA: 0x0009AB10 File Offset: 0x00098D10
            // (set) Token: 0x060018E3 RID: 6371 RVA: 0x0009AB28 File Offset: 0x00098D28
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateBeg
            {
                get
                {
                    return (DateTime)base[this.tabletJ_RequestForRepairDaily.dateBegColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDaily.dateBegColumn] = value;
                }
            }

            // Token: 0x1700064E RID: 1614
            // (get) Token: 0x060018E4 RID: 6372 RVA: 0x0009AB41 File Offset: 0x00098D41
            // (set) Token: 0x060018E5 RID: 6373 RVA: 0x0009AB59 File Offset: 0x00098D59
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime dateEnd
            {
                get
                {
                    return (DateTime)base[this.tabletJ_RequestForRepairDaily.dateEndColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDaily.dateEndColumn] = value;
                }
            }

            // Token: 0x1700064F RID: 1615
            // (get) Token: 0x060018E6 RID: 6374 RVA: 0x0009AB72 File Offset: 0x00098D72
            // (set) Token: 0x060018E7 RID: 6375 RVA: 0x0009AB94 File Offset: 0x00098D94
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestForRepairRow tJ_RequestForRepairRow
            {
                get
                {
                    return (DataSetGES.tJ_RequestForRepairRow)base.GetParentRow(base.Table.ParentRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
                set
                {
                    base.SetParentRow(value, base.Table.ParentRelations["tJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
            }

            // Token: 0x17000650 RID: 1616
            // (get) Token: 0x060018E8 RID: 6376 RVA: 0x0009ABB2 File Offset: 0x00098DB2
            // (set) Token: 0x060018E9 RID: 6377 RVA: 0x0009ABD4 File Offset: 0x00098DD4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestForRepairRow vJ_RequestForRepairRow
            {
                get
                {
                    return (DataSetGES.vJ_RequestForRepairRow)base.GetParentRow(base.Table.ParentRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
                set
                {
                    base.SetParentRow(value, base.Table.ParentRelations["vJ_RequestForRepair_tJ_RequestForRepairDaily"]);
                }
            }

            // Token: 0x04000B8C RID: 2956
            private DataSetGES.tJ_RequestForRepairDailyDataTable tabletJ_RequestForRepairDaily;
        }

        // Token: 0x0200012D RID: 301
        public class vJ_RequestForRepairDailyRow : DataRow
        {
            // Token: 0x060018EA RID: 6378 RVA: 0x0009ABF2 File Offset: 0x00098DF2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_RequestForRepairDailyRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_RequestForRepairDaily = (DataSetGES.vJ_RequestForRepairDailyDataTable)base.Table;
            }

            // Token: 0x17000651 RID: 1617
            // (get) Token: 0x060018EB RID: 6379 RVA: 0x0009AC0C File Offset: 0x00098E0C
            // (set) Token: 0x060018EC RID: 6380 RVA: 0x0009AC24 File Offset: 0x00098E24
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepairDaily.idColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.idColumn] = value;
                }
            }

            // Token: 0x17000652 RID: 1618
            // (get) Token: 0x060018ED RID: 6381 RVA: 0x0009AC3D File Offset: 0x00098E3D
            // (set) Token: 0x060018EE RID: 6382 RVA: 0x0009AC55 File Offset: 0x00098E55
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int num
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepairDaily.numColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.numColumn] = value;
                }
            }

            // Token: 0x17000653 RID: 1619
            // (get) Token: 0x060018EF RID: 6383 RVA: 0x0009AC6E File Offset: 0x00098E6E
            // (set) Token: 0x060018F0 RID: 6384 RVA: 0x0009AC86 File Offset: 0x00098E86
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime dateCreate
            {
                get
                {
                    return (DateTime)base[this.tablevJ_RequestForRepairDaily.dateCreateColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.dateCreateColumn] = value;
                }
            }

            // Token: 0x17000654 RID: 1620
            // (get) Token: 0x060018F1 RID: 6385 RVA: 0x0009ACA0 File Offset: 0x00098EA0
            // (set) Token: 0x060018F2 RID: 6386 RVA: 0x0009ACE4 File Offset: 0x00098EE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorker
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RequestForRepairDaily.idWorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.idWorkerColumn] = value;
                }
            }

            // Token: 0x17000655 RID: 1621
            // (get) Token: 0x060018F3 RID: 6387 RVA: 0x0009AD00 File Offset: 0x00098F00
            // (set) Token: 0x060018F4 RID: 6388 RVA: 0x0009AD44 File Offset: 0x00098F44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string workerCreate
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.workerCreateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'workerCreate' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.workerCreateColumn] = value;
                }
            }

            // Token: 0x17000656 RID: 1622
            // (get) Token: 0x060018F5 RID: 6389 RVA: 0x0009AD58 File Offset: 0x00098F58
            // (set) Token: 0x060018F6 RID: 6390 RVA: 0x0009AD70 File Offset: 0x00098F70
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string reguestFiled
            {
                get
                {
                    return (string)base[this.tablevJ_RequestForRepairDaily.reguestFiledColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.reguestFiledColumn] = value;
                }
            }

            // Token: 0x17000657 RID: 1623
            // (get) Token: 0x060018F7 RID: 6391 RVA: 0x0009AD84 File Offset: 0x00098F84
            // (set) Token: 0x060018F8 RID: 6392 RVA: 0x0009AD9C File Offset: 0x00098F9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSR
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepairDaily.idSRColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.idSRColumn] = value;
                }
            }

            // Token: 0x17000658 RID: 1624
            // (get) Token: 0x060018F9 RID: 6393 RVA: 0x0009ADB8 File Offset: 0x00098FB8
            // (set) Token: 0x060018FA RID: 6394 RVA: 0x0009ADFC File Offset: 0x00098FFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string SR
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.SRColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SR' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.SRColumn] = value;
                }
            }

            // Token: 0x17000659 RID: 1625
            // (get) Token: 0x060018FB RID: 6395 RVA: 0x0009AE10 File Offset: 0x00099010
            // (set) Token: 0x060018FC RID: 6396 RVA: 0x0009AE28 File Offset: 0x00099028
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string schmObj
            {
                get
                {
                    return (string)base[this.tablevJ_RequestForRepairDaily.schmObjColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.schmObjColumn] = value;
                }
            }

            // Token: 0x1700065A RID: 1626
            // (get) Token: 0x060018FD RID: 6397 RVA: 0x0009AE3C File Offset: 0x0009903C
            // (set) Token: 0x060018FE RID: 6398 RVA: 0x0009AE54 File Offset: 0x00099054
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Purpose
            {
                get
                {
                    return (string)base[this.tablevJ_RequestForRepairDaily.PurposeColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.PurposeColumn] = value;
                }
            }

            // Token: 0x1700065B RID: 1627
            // (get) Token: 0x060018FF RID: 6399 RVA: 0x0009AE68 File Offset: 0x00099068
            // (set) Token: 0x06001900 RID: 6400 RVA: 0x0009AE80 File Offset: 0x00099080
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPlanned
            {
                get
                {
                    return (bool)base[this.tablevJ_RequestForRepairDaily.IsPlannedColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.IsPlannedColumn] = value;
                }
            }

            // Token: 0x1700065C RID: 1628
            // (get) Token: 0x06001901 RID: 6401 RVA: 0x0009AE9C File Offset: 0x0009909C
            // (set) Token: 0x06001902 RID: 6402 RVA: 0x0009AEE0 File Offset: 0x000990E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateTripBeg
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RequestForRepairDaily.dateTripBegColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'dateTripBeg' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.dateTripBegColumn] = value;
                }
            }

            // Token: 0x1700065D RID: 1629
            // (get) Token: 0x06001903 RID: 6403 RVA: 0x0009AEFC File Offset: 0x000990FC
            // (set) Token: 0x06001904 RID: 6404 RVA: 0x0009AF40 File Offset: 0x00099140
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateTripEnd
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RequestForRepairDaily.dateTripEndColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'dateTripEnd' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.dateTripEndColumn] = value;
                }
            }

            // Token: 0x1700065E RID: 1630
            // (get) Token: 0x06001905 RID: 6405 RVA: 0x0009AF5C File Offset: 0x0009915C
            // (set) Token: 0x06001906 RID: 6406 RVA: 0x0009AFA0 File Offset: 0x000991A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string AgreeWith
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.AgreeWithColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AgreeWith' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.AgreeWithColumn] = value;
                }
            }

            // Token: 0x1700065F RID: 1631
            // (get) Token: 0x06001907 RID: 6407 RVA: 0x0009AFB4 File Offset: 0x000991B4
            // (set) Token: 0x06001908 RID: 6408 RVA: 0x0009AFF8 File Offset: 0x000991F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.CommentColumn] = value;
                }
            }

            // Token: 0x17000660 RID: 1632
            // (get) Token: 0x06001909 RID: 6409 RVA: 0x0009B00C File Offset: 0x0009920C
            // (set) Token: 0x0600190A RID: 6410 RVA: 0x0009B050 File Offset: 0x00099250
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.AddressColumn] = value;
                }
            }

            // Token: 0x17000661 RID: 1633
            // (get) Token: 0x0600190B RID: 6411 RVA: 0x0009B064 File Offset: 0x00099264
            // (set) Token: 0x0600190C RID: 6412 RVA: 0x0009B07C File Offset: 0x0009927C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Agreed
            {
                get
                {
                    return (bool)base[this.tablevJ_RequestForRepairDaily.AgreedColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.AgreedColumn] = value;
                }
            }

            // Token: 0x17000662 RID: 1634
            // (get) Token: 0x0600190D RID: 6413 RVA: 0x0009B098 File Offset: 0x00099298
            // (set) Token: 0x0600190E RID: 6414 RVA: 0x0009B0DC File Offset: 0x000992DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateAgreed
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RequestForRepairDaily.DateAgreedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateAgreed' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.DateAgreedColumn] = value;
                }
            }

            // Token: 0x17000663 RID: 1635
            // (get) Token: 0x0600190F RID: 6415 RVA: 0x0009B0F8 File Offset: 0x000992F8
            // (set) Token: 0x06001910 RID: 6416 RVA: 0x0009B13C File Offset: 0x0009933C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int WorkerAgreed
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RequestForRepairDaily.WorkerAgreedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'WorkerAgreed' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.WorkerAgreedColumn] = value;
                }
            }

            // Token: 0x17000664 RID: 1636
            // (get) Token: 0x06001911 RID: 6417 RVA: 0x0009B158 File Offset: 0x00099358
            // (set) Token: 0x06001912 RID: 6418 RVA: 0x0009B19C File Offset: 0x0009939C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string FIO
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.FIOColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.FIOColumn] = value;
                }
            }

            // Token: 0x17000665 RID: 1637
            // (get) Token: 0x06001913 RID: 6419 RVA: 0x0009B1B0 File Offset: 0x000993B0
            // (set) Token: 0x06001914 RID: 6420 RVA: 0x0009B1C8 File Offset: 0x000993C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int iddivision
            {
                get
                {
                    return (int)base[this.tablevJ_RequestForRepairDaily.iddivisionColumn];
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.iddivisionColumn] = value;
                }
            }

            // Token: 0x17000666 RID: 1638
            // (get) Token: 0x06001915 RID: 6421 RVA: 0x0009B1E4 File Offset: 0x000993E4
            // (set) Token: 0x06001916 RID: 6422 RVA: 0x0009B228 File Offset: 0x00099428
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string division
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.divisionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'division' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.divisionColumn] = value;
                }
            }

            // Token: 0x17000667 RID: 1639
            // (get) Token: 0x06001917 RID: 6423 RVA: 0x0009B23C File Offset: 0x0009943C
            // (set) Token: 0x06001918 RID: 6424 RVA: 0x0009B280 File Offset: 0x00099480
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idUserCreate
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RequestForRepairDaily.idUserCreateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idUserCreate' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.idUserCreateColumn] = value;
                }
            }

            // Token: 0x17000668 RID: 1640
            // (get) Token: 0x06001919 RID: 6425 RVA: 0x0009B29C File Offset: 0x0009949C
            // (set) Token: 0x0600191A RID: 6426 RVA: 0x0009B2E0 File Offset: 0x000994E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string username
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.usernameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'username' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.usernameColumn] = value;
                }
            }

            // Token: 0x17000669 RID: 1641
            // (get) Token: 0x0600191B RID: 6427 RVA: 0x0009B2F4 File Offset: 0x000994F4
            // (set) Token: 0x0600191C RID: 6428 RVA: 0x0009B338 File Offset: 0x00099538
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_RequestForRepairDaily.deletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'deleted' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.deletedColumn] = value;
                }
            }

            // Token: 0x1700066A RID: 1642
            // (get) Token: 0x0600191D RID: 6429 RVA: 0x0009B354 File Offset: 0x00099554
            // (set) Token: 0x0600191E RID: 6430 RVA: 0x0009B398 File Offset: 0x00099598
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dateBeg
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.dateBegColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'dateBeg' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.dateBegColumn] = value;
                }
            }

            // Token: 0x1700066B RID: 1643
            // (get) Token: 0x0600191F RID: 6431 RVA: 0x0009B3AC File Offset: 0x000995AC
            // (set) Token: 0x06001920 RID: 6432 RVA: 0x0009B3F0 File Offset: 0x000995F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string timeBeg
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.timeBegColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'timeBeg' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.timeBegColumn] = value;
                }
            }

            // Token: 0x1700066C RID: 1644
            // (get) Token: 0x06001921 RID: 6433 RVA: 0x0009B404 File Offset: 0x00099604
            // (set) Token: 0x06001922 RID: 6434 RVA: 0x0009B448 File Offset: 0x00099648
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dateEnd
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.dateEndColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'dateEnd' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.dateEndColumn] = value;
                }
            }

            // Token: 0x1700066D RID: 1645
            // (get) Token: 0x06001923 RID: 6435 RVA: 0x0009B45C File Offset: 0x0009965C
            // (set) Token: 0x06001924 RID: 6436 RVA: 0x0009B4A0 File Offset: 0x000996A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string timeEnd
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RequestForRepairDaily.timeEndColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'timeEnd' in table 'vJ_RequestForRepairDaily' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RequestForRepairDaily.timeEndColumn] = value;
                }
            }

            // Token: 0x06001925 RID: 6437 RVA: 0x0009B4B4 File Offset: 0x000996B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidWorkerNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.idWorkerColumn);
            }

            // Token: 0x06001926 RID: 6438 RVA: 0x0009B4C7 File Offset: 0x000996C7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidWorkerNull()
            {
                base[this.tablevJ_RequestForRepairDaily.idWorkerColumn] = Convert.DBNull;
            }

            // Token: 0x06001927 RID: 6439 RVA: 0x0009B4DF File Offset: 0x000996DF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsworkerCreateNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.workerCreateColumn);
            }

            // Token: 0x06001928 RID: 6440 RVA: 0x0009B4F2 File Offset: 0x000996F2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetworkerCreateNull()
            {
                base[this.tablevJ_RequestForRepairDaily.workerCreateColumn] = Convert.DBNull;
            }

            // Token: 0x06001929 RID: 6441 RVA: 0x0009B50A File Offset: 0x0009970A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSRNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.SRColumn);
            }

            // Token: 0x0600192A RID: 6442 RVA: 0x0009B51D File Offset: 0x0009971D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSRNull()
            {
                base[this.tablevJ_RequestForRepairDaily.SRColumn] = Convert.DBNull;
            }

            // Token: 0x0600192B RID: 6443 RVA: 0x0009B535 File Offset: 0x00099735
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsdateTripBegNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.dateTripBegColumn);
            }

            // Token: 0x0600192C RID: 6444 RVA: 0x0009B548 File Offset: 0x00099748
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdateTripBegNull()
            {
                base[this.tablevJ_RequestForRepairDaily.dateTripBegColumn] = Convert.DBNull;
            }

            // Token: 0x0600192D RID: 6445 RVA: 0x0009B560 File Offset: 0x00099760
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateTripEndNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.dateTripEndColumn);
            }

            // Token: 0x0600192E RID: 6446 RVA: 0x0009B573 File Offset: 0x00099773
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateTripEndNull()
            {
                base[this.tablevJ_RequestForRepairDaily.dateTripEndColumn] = Convert.DBNull;
            }

            // Token: 0x0600192F RID: 6447 RVA: 0x0009B58B File Offset: 0x0009978B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAgreeWithNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.AgreeWithColumn);
            }

            // Token: 0x06001930 RID: 6448 RVA: 0x0009B59E File Offset: 0x0009979E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgreeWithNull()
            {
                base[this.tablevJ_RequestForRepairDaily.AgreeWithColumn] = Convert.DBNull;
            }

            // Token: 0x06001931 RID: 6449 RVA: 0x0009B5B6 File Offset: 0x000997B6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.CommentColumn);
            }

            // Token: 0x06001932 RID: 6450 RVA: 0x0009B5C9 File Offset: 0x000997C9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tablevJ_RequestForRepairDaily.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x06001933 RID: 6451 RVA: 0x0009B5E1 File Offset: 0x000997E1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.AddressColumn);
            }

            // Token: 0x06001934 RID: 6452 RVA: 0x0009B5F4 File Offset: 0x000997F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetAddressNull()
            {
                base[this.tablevJ_RequestForRepairDaily.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x06001935 RID: 6453 RVA: 0x0009B60C File Offset: 0x0009980C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateAgreedNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.DateAgreedColumn);
            }

            // Token: 0x06001936 RID: 6454 RVA: 0x0009B61F File Offset: 0x0009981F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateAgreedNull()
            {
                base[this.tablevJ_RequestForRepairDaily.DateAgreedColumn] = Convert.DBNull;
            }

            // Token: 0x06001937 RID: 6455 RVA: 0x0009B637 File Offset: 0x00099837
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsWorkerAgreedNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.WorkerAgreedColumn);
            }

            // Token: 0x06001938 RID: 6456 RVA: 0x0009B64A File Offset: 0x0009984A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWorkerAgreedNull()
            {
                base[this.tablevJ_RequestForRepairDaily.WorkerAgreedColumn] = Convert.DBNull;
            }

            // Token: 0x06001939 RID: 6457 RVA: 0x0009B662 File Offset: 0x00099862
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsFIONull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.FIOColumn);
            }

            // Token: 0x0600193A RID: 6458 RVA: 0x0009B675 File Offset: 0x00099875
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIONull()
            {
                base[this.tablevJ_RequestForRepairDaily.FIOColumn] = Convert.DBNull;
            }

            // Token: 0x0600193B RID: 6459 RVA: 0x0009B68D File Offset: 0x0009988D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsdivisionNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.divisionColumn);
            }

            // Token: 0x0600193C RID: 6460 RVA: 0x0009B6A0 File Offset: 0x000998A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdivisionNull()
            {
                base[this.tablevJ_RequestForRepairDaily.divisionColumn] = Convert.DBNull;
            }

            // Token: 0x0600193D RID: 6461 RVA: 0x0009B6B8 File Offset: 0x000998B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidUserCreateNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.idUserCreateColumn);
            }

            // Token: 0x0600193E RID: 6462 RVA: 0x0009B6CB File Offset: 0x000998CB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidUserCreateNull()
            {
                base[this.tablevJ_RequestForRepairDaily.idUserCreateColumn] = Convert.DBNull;
            }

            // Token: 0x0600193F RID: 6463 RVA: 0x0009B6E3 File Offset: 0x000998E3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsusernameNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.usernameColumn);
            }

            // Token: 0x06001940 RID: 6464 RVA: 0x0009B6F6 File Offset: 0x000998F6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetusernameNull()
            {
                base[this.tablevJ_RequestForRepairDaily.usernameColumn] = Convert.DBNull;
            }

            // Token: 0x06001941 RID: 6465 RVA: 0x0009B70E File Offset: 0x0009990E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeletedNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.deletedColumn);
            }

            // Token: 0x06001942 RID: 6466 RVA: 0x0009B721 File Offset: 0x00099921
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdeletedNull()
            {
                base[this.tablevJ_RequestForRepairDaily.deletedColumn] = Convert.DBNull;
            }

            // Token: 0x06001943 RID: 6467 RVA: 0x0009B739 File Offset: 0x00099939
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateBegNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.dateBegColumn);
            }

            // Token: 0x06001944 RID: 6468 RVA: 0x0009B74C File Offset: 0x0009994C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdateBegNull()
            {
                base[this.tablevJ_RequestForRepairDaily.dateBegColumn] = Convert.DBNull;
            }

            // Token: 0x06001945 RID: 6469 RVA: 0x0009B764 File Offset: 0x00099964
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstimeBegNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.timeBegColumn);
            }

            // Token: 0x06001946 RID: 6470 RVA: 0x0009B777 File Offset: 0x00099977
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SettimeBegNull()
            {
                base[this.tablevJ_RequestForRepairDaily.timeBegColumn] = Convert.DBNull;
            }

            // Token: 0x06001947 RID: 6471 RVA: 0x0009B78F File Offset: 0x0009998F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateEndNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.dateEndColumn);
            }

            // Token: 0x06001948 RID: 6472 RVA: 0x0009B7A2 File Offset: 0x000999A2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdateEndNull()
            {
                base[this.tablevJ_RequestForRepairDaily.dateEndColumn] = Convert.DBNull;
            }

            // Token: 0x06001949 RID: 6473 RVA: 0x0009B7BA File Offset: 0x000999BA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstimeEndNull()
            {
                return base.IsNull(this.tablevJ_RequestForRepairDaily.timeEndColumn);
            }

            // Token: 0x0600194A RID: 6474 RVA: 0x0009B7CD File Offset: 0x000999CD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SettimeEndNull()
            {
                base[this.tablevJ_RequestForRepairDaily.timeEndColumn] = Convert.DBNull;
            }

            // Token: 0x04000B8D RID: 2957
            private DataSetGES.vJ_RequestForRepairDailyDataTable tablevJ_RequestForRepairDaily;
        }

        // Token: 0x0200012E RID: 302
        public class tL_RequestForRepairSchmObjListRow : DataRow
        {
            // Token: 0x0600194B RID: 6475 RVA: 0x0009B7E5 File Offset: 0x000999E5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tL_RequestForRepairSchmObjListRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletL_RequestForRepairSchmObjList = (DataSetGES.tL_RequestForRepairSchmObjListDataTable)base.Table;
            }

            // Token: 0x1700066E RID: 1646
            // (get) Token: 0x0600194C RID: 6476 RVA: 0x0009B7FF File Offset: 0x000999FF
            // (set) Token: 0x0600194D RID: 6477 RVA: 0x0009B817 File Offset: 0x00099A17
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletL_RequestForRepairSchmObjList.idColumn];
                }
                set
                {
                    base[this.tabletL_RequestForRepairSchmObjList.idColumn] = value;
                }
            }

            // Token: 0x1700066F RID: 1647
            // (get) Token: 0x0600194E RID: 6478 RVA: 0x0009B830 File Offset: 0x00099A30
            // (set) Token: 0x0600194F RID: 6479 RVA: 0x0009B848 File Offset: 0x00099A48
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idRequest
            {
                get
                {
                    return (int)base[this.tabletL_RequestForRepairSchmObjList.idRequestColumn];
                }
                set
                {
                    base[this.tabletL_RequestForRepairSchmObjList.idRequestColumn] = value;
                }
            }

            // Token: 0x17000670 RID: 1648
            // (get) Token: 0x06001950 RID: 6480 RVA: 0x0009B861 File Offset: 0x00099A61
            // (set) Token: 0x06001951 RID: 6481 RVA: 0x0009B879 File Offset: 0x00099A79
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSchmObj
            {
                get
                {
                    return (int)base[this.tabletL_RequestForRepairSchmObjList.idSchmObjColumn];
                }
                set
                {
                    base[this.tabletL_RequestForRepairSchmObjList.idSchmObjColumn] = value;
                }
            }

            // Token: 0x17000671 RID: 1649
            // (get) Token: 0x06001952 RID: 6482 RVA: 0x0009B892 File Offset: 0x00099A92
            // (set) Token: 0x06001953 RID: 6483 RVA: 0x0009B8AA File Offset: 0x00099AAA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateBeg
            {
                get
                {
                    return (DateTime)base[this.tabletL_RequestForRepairSchmObjList.DateBegColumn];
                }
                set
                {
                    base[this.tabletL_RequestForRepairSchmObjList.DateBegColumn] = value;
                }
            }

            // Token: 0x17000672 RID: 1650
            // (get) Token: 0x06001954 RID: 6484 RVA: 0x0009B8C3 File Offset: 0x00099AC3
            // (set) Token: 0x06001955 RID: 6485 RVA: 0x0009B8DB File Offset: 0x00099ADB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DateEnd
            {
                get
                {
                    return (DateTime)base[this.tabletL_RequestForRepairSchmObjList.DateEndColumn];
                }
                set
                {
                    base[this.tabletL_RequestForRepairSchmObjList.DateEndColumn] = value;
                }
            }

            // Token: 0x17000673 RID: 1651
            // (get) Token: 0x06001956 RID: 6486 RVA: 0x0009B8F4 File Offset: 0x00099AF4
            // (set) Token: 0x06001957 RID: 6487 RVA: 0x0009B90C File Offset: 0x00099B0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Duration
            {
                get
                {
                    return (string)base[this.tabletL_RequestForRepairSchmObjList.DurationColumn];
                }
                set
                {
                    base[this.tabletL_RequestForRepairSchmObjList.DurationColumn] = value;
                }
            }

            // Token: 0x17000674 RID: 1652
            // (get) Token: 0x06001958 RID: 6488 RVA: 0x0009B920 File Offset: 0x00099B20
            // (set) Token: 0x06001959 RID: 6489 RVA: 0x0009B938 File Offset: 0x00099B38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public short Num
            {
                get
                {
                    return (short)base[this.tabletL_RequestForRepairSchmObjList.NumColumn];
                }
                set
                {
                    base[this.tabletL_RequestForRepairSchmObjList.NumColumn] = value;
                }
            }

            // Token: 0x04000B8E RID: 2958
            private DataSetGES.tL_RequestForRepairSchmObjListDataTable tabletL_RequestForRepairSchmObjList;
        }

        // Token: 0x0200012F RID: 303
        public class tJ_RequestForRepairDocRow : DataRow
        {
            // Token: 0x0600195A RID: 6490 RVA: 0x0009B951 File Offset: 0x00099B51
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_RequestForRepairDocRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_RequestForRepairDoc = (DataSetGES.tJ_RequestForRepairDocDataTable)base.Table;
            }

            // Token: 0x17000675 RID: 1653
            // (get) Token: 0x0600195B RID: 6491 RVA: 0x0009B96B File Offset: 0x00099B6B
            // (set) Token: 0x0600195C RID: 6492 RVA: 0x0009B983 File Offset: 0x00099B83
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepairDoc.idColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDoc.idColumn] = value;
                }
            }

            // Token: 0x17000676 RID: 1654
            // (get) Token: 0x0600195D RID: 6493 RVA: 0x0009B99C File Offset: 0x00099B9C
            // (set) Token: 0x0600195E RID: 6494 RVA: 0x0009B9B4 File Offset: 0x00099BB4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idRequest
            {
                get
                {
                    return (int)base[this.tabletJ_RequestForRepairDoc.idRequestColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDoc.idRequestColumn] = value;
                }
            }

            // Token: 0x17000677 RID: 1655
            // (get) Token: 0x0600195F RID: 6495 RVA: 0x0009B9CD File Offset: 0x00099BCD
            // (set) Token: 0x06001960 RID: 6496 RVA: 0x0009B9E5 File Offset: 0x00099BE5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Document
            {
                get
                {
                    return (byte[])base[this.tabletJ_RequestForRepairDoc.DocumentColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDoc.DocumentColumn] = value;
                }
            }

            // Token: 0x17000678 RID: 1656
            // (get) Token: 0x06001961 RID: 6497 RVA: 0x0009B9F9 File Offset: 0x00099BF9
            // (set) Token: 0x06001962 RID: 6498 RVA: 0x0009BA11 File Offset: 0x00099C11
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileName
            {
                get
                {
                    return (string)base[this.tabletJ_RequestForRepairDoc.FileNameColumn];
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDoc.FileNameColumn] = value;
                }
            }

            // Token: 0x17000679 RID: 1657
            // (get) Token: 0x06001963 RID: 6499 RVA: 0x0009BA28 File Offset: 0x00099C28
            // (set) Token: 0x06001964 RID: 6500 RVA: 0x0009BA6C File Offset: 0x00099C6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RequestForRepairDoc.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_RequestForRepairDoc' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RequestForRepairDoc.CommentColumn] = value;
                }
            }

            // Token: 0x06001965 RID: 6501 RVA: 0x0009BA80 File Offset: 0x00099C80
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tabletJ_RequestForRepairDoc.CommentColumn);
            }

            // Token: 0x06001966 RID: 6502 RVA: 0x0009BA93 File Offset: 0x00099C93
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tabletJ_RequestForRepairDoc.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x04000B8F RID: 2959
            private DataSetGES.tJ_RequestForRepairDocDataTable tabletJ_RequestForRepairDoc;
        }

        // Token: 0x02000130 RID: 304
        public class tJ_RelayProtectionAutomationRow : DataRow
        {
            // Token: 0x06001967 RID: 6503 RVA: 0x0009BAAB File Offset: 0x00099CAB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RelayProtectionAutomationRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_RelayProtectionAutomation = (DataSetGES.tJ_RelayProtectionAutomationDataTable)base.Table;
            }

            // Token: 0x1700067A RID: 1658
            // (get) Token: 0x06001968 RID: 6504 RVA: 0x0009BAC5 File Offset: 0x00099CC5
            // (set) Token: 0x06001969 RID: 6505 RVA: 0x0009BADD File Offset: 0x00099CDD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_RelayProtectionAutomation.idColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomation.idColumn] = value;
                }
            }

            // Token: 0x1700067B RID: 1659
            // (get) Token: 0x0600196A RID: 6506 RVA: 0x0009BAF6 File Offset: 0x00099CF6
            // (set) Token: 0x0600196B RID: 6507 RVA: 0x0009BB0E File Offset: 0x00099D0E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSchmObj
            {
                get
                {
                    return (int)base[this.tabletJ_RelayProtectionAutomation.idSchmObjColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomation.idSchmObjColumn] = value;
                }
            }

            // Token: 0x1700067C RID: 1660
            // (get) Token: 0x0600196C RID: 6508 RVA: 0x0009BB28 File Offset: 0x00099D28
            // (set) Token: 0x0600196D RID: 6509 RVA: 0x0009BB6C File Offset: 0x00099D6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RelayProtectionAutomation.nameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'name' in table 'tJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomation.nameColumn] = value;
                }
            }

            // Token: 0x1700067D RID: 1661
            // (get) Token: 0x0600196E RID: 6510 RVA: 0x0009BB80 File Offset: 0x00099D80
            // (set) Token: 0x0600196F RID: 6511 RVA: 0x0009BB98 File Offset: 0x00099D98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tabletJ_RelayProtectionAutomation.DeletedColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomation.DeletedColumn] = value;
                }
            }

            // Token: 0x06001970 RID: 6512 RVA: 0x0009BBB1 File Offset: 0x00099DB1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsnameNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomation.nameColumn);
            }

            // Token: 0x06001971 RID: 6513 RVA: 0x0009BBC4 File Offset: 0x00099DC4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameNull()
            {
                base[this.tabletJ_RelayProtectionAutomation.nameColumn] = Convert.DBNull;
            }

            // Token: 0x04000B90 RID: 2960
            private DataSetGES.tJ_RelayProtectionAutomationDataTable tabletJ_RelayProtectionAutomation;
        }

        // Token: 0x02000131 RID: 305
        public class tJ_RelayProtectionAutomationValueRow : DataRow
        {
            // Token: 0x06001972 RID: 6514 RVA: 0x0009BBDC File Offset: 0x00099DDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_RelayProtectionAutomationValueRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_RelayProtectionAutomationValue = (DataSetGES.tJ_RelayProtectionAutomationValueDataTable)base.Table;
            }

            // Token: 0x1700067E RID: 1662
            // (get) Token: 0x06001973 RID: 6515 RVA: 0x0009BBF6 File Offset: 0x00099DF6
            // (set) Token: 0x06001974 RID: 6516 RVA: 0x0009BC0E File Offset: 0x00099E0E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_RelayProtectionAutomationValue.idColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.idColumn] = value;
                }
            }

            // Token: 0x1700067F RID: 1663
            // (get) Token: 0x06001975 RID: 6517 RVA: 0x0009BC27 File Offset: 0x00099E27
            // (set) Token: 0x06001976 RID: 6518 RVA: 0x0009BC3F File Offset: 0x00099E3F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idRelay
            {
                get
                {
                    return (int)base[this.tabletJ_RelayProtectionAutomationValue.idRelayColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.idRelayColumn] = value;
                }
            }

            // Token: 0x17000680 RID: 1664
            // (get) Token: 0x06001977 RID: 6519 RVA: 0x0009BC58 File Offset: 0x00099E58
            // (set) Token: 0x06001978 RID: 6520 RVA: 0x0009BC9C File Offset: 0x00099E9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int amp_primary
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RelayProtectionAutomationValue.amp_primaryColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_primary' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.amp_primaryColumn] = value;
                }
            }

            // Token: 0x17000681 RID: 1665
            // (get) Token: 0x06001979 RID: 6521 RVA: 0x0009BCB8 File Offset: 0x00099EB8
            // (set) Token: 0x0600197A RID: 6522 RVA: 0x0009BCFC File Offset: 0x00099EFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int amp_secondary
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RelayProtectionAutomationValue.amp_secondaryColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_secondary' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.amp_secondaryColumn] = value;
                }
            }

            // Token: 0x17000682 RID: 1666
            // (get) Token: 0x0600197B RID: 6523 RVA: 0x0009BD18 File Offset: 0x00099F18
            // (set) Token: 0x0600197C RID: 6524 RVA: 0x0009BD5C File Offset: 0x00099F5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTypeTr
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RelayProtectionAutomationValue.idTypeTrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTypeTr' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.idTypeTrColumn] = value;
                }
            }

            // Token: 0x17000683 RID: 1667
            // (get) Token: 0x0600197D RID: 6525 RVA: 0x0009BD78 File Offset: 0x00099F78
            // (set) Token: 0x0600197E RID: 6526 RVA: 0x0009BDBC File Offset: 0x00099FBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int amp_mtz
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RelayProtectionAutomationValue.amp_mtzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_mtz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.amp_mtzColumn] = value;
                }
            }

            // Token: 0x17000684 RID: 1668
            // (get) Token: 0x0600197F RID: 6527 RVA: 0x0009BDD8 File Offset: 0x00099FD8
            // (set) Token: 0x06001980 RID: 6528 RVA: 0x0009BE1C File Offset: 0x0009A01C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double time_mtz
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_RelayProtectionAutomationValue.time_mtzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_mtz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.time_mtzColumn] = value;
                }
            }

            // Token: 0x17000685 RID: 1669
            // (get) Token: 0x06001981 RID: 6529 RVA: 0x0009BE38 File Offset: 0x0009A038
            // (set) Token: 0x06001982 RID: 6530 RVA: 0x0009BE7C File Offset: 0x0009A07C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int amp_to
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RelayProtectionAutomationValue.amp_toColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_to' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.amp_toColumn] = value;
                }
            }

            // Token: 0x17000686 RID: 1670
            // (get) Token: 0x06001983 RID: 6531 RVA: 0x0009BE98 File Offset: 0x0009A098
            // (set) Token: 0x06001984 RID: 6532 RVA: 0x0009BEDC File Offset: 0x0009A0DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double time_to
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_RelayProtectionAutomationValue.time_toColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_to' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.time_toColumn] = value;
                }
            }

            // Token: 0x17000687 RID: 1671
            // (get) Token: 0x06001985 RID: 6533 RVA: 0x0009BEF8 File Offset: 0x0009A0F8
            // (set) Token: 0x06001986 RID: 6534 RVA: 0x0009BF3C File Offset: 0x0009A13C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amp_ozz
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RelayProtectionAutomationValue.amp_ozzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_ozz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.amp_ozzColumn] = value;
                }
            }

            // Token: 0x17000688 RID: 1672
            // (get) Token: 0x06001987 RID: 6535 RVA: 0x0009BF58 File Offset: 0x0009A158
            // (set) Token: 0x06001988 RID: 6536 RVA: 0x0009BF9C File Offset: 0x0009A19C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double time_ozz
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_RelayProtectionAutomationValue.time_ozzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_ozz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.time_ozzColumn] = value;
                }
            }

            // Token: 0x17000689 RID: 1673
            // (get) Token: 0x06001989 RID: 6537 RVA: 0x0009BFB8 File Offset: 0x0009A1B8
            // (set) Token: 0x0600198A RID: 6538 RVA: 0x0009BFFC File Offset: 0x0009A1FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string act_ozz
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RelayProtectionAutomationValue.act_ozzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'act_ozz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.act_ozzColumn] = value;
                }
            }

            // Token: 0x1700068A RID: 1674
            // (get) Token: 0x0600198B RID: 6539 RVA: 0x0009C010 File Offset: 0x0009A210
            // (set) Token: 0x0600198C RID: 6540 RVA: 0x0009C054 File Offset: 0x0009A254
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double speed_mtz
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_RelayProtectionAutomationValue.speed_mtzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'speed_mtz' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.speed_mtzColumn] = value;
                }
            }

            // Token: 0x1700068B RID: 1675
            // (get) Token: 0x0600198D RID: 6541 RVA: 0x0009C070 File Offset: 0x0009A270
            // (set) Token: 0x0600198E RID: 6542 RVA: 0x0009C0B4 File Offset: 0x0009A2B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int amp_urov
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_RelayProtectionAutomationValue.amp_urovColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_urov' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.amp_urovColumn] = value;
                }
            }

            // Token: 0x1700068C RID: 1676
            // (get) Token: 0x0600198F RID: 6543 RVA: 0x0009C0D0 File Offset: 0x0009A2D0
            // (set) Token: 0x06001990 RID: 6544 RVA: 0x0009C114 File Offset: 0x0009A314
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double time_urov
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_RelayProtectionAutomationValue.time_urovColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_urov' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.time_urovColumn] = value;
                }
            }

            // Token: 0x1700068D RID: 1677
            // (get) Token: 0x06001991 RID: 6545 RVA: 0x0009C130 File Offset: 0x0009A330
            // (set) Token: 0x06001992 RID: 6546 RVA: 0x0009C174 File Offset: 0x0009A374
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool avr
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_RelayProtectionAutomationValue.avrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'avr' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.avrColumn] = value;
                }
            }

            // Token: 0x1700068E RID: 1678
            // (get) Token: 0x06001993 RID: 6547 RVA: 0x0009C190 File Offset: 0x0009A390
            // (set) Token: 0x06001994 RID: 6548 RVA: 0x0009C1D4 File Offset: 0x0009A3D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool lzsh
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_RelayProtectionAutomationValue.lzshColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'lzsh' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.lzshColumn] = value;
                }
            }

            // Token: 0x1700068F RID: 1679
            // (get) Token: 0x06001995 RID: 6549 RVA: 0x0009C1F0 File Offset: 0x0009A3F0
            // (set) Token: 0x06001996 RID: 6550 RVA: 0x0009C234 File Offset: 0x0009A434
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string type_relay
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RelayProtectionAutomationValue.type_relayColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'type_relay' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.type_relayColumn] = value;
                }
            }

            // Token: 0x17000690 RID: 1680
            // (get) Token: 0x06001997 RID: 6551 RVA: 0x0009C248 File Offset: 0x0009A448
            // (set) Token: 0x06001998 RID: 6552 RVA: 0x0009C28C File Offset: 0x0009A48C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string type_proc
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RelayProtectionAutomationValue.type_procColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'type_proc' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.type_procColumn] = value;
                }
            }

            // Token: 0x17000691 RID: 1681
            // (get) Token: 0x06001999 RID: 6553 RVA: 0x0009C2A0 File Offset: 0x0009A4A0
            // (set) Token: 0x0600199A RID: 6554 RVA: 0x0009C2E4 File Offset: 0x0009A4E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string cp
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RelayProtectionAutomationValue.cpColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'cp' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.cpColumn] = value;
                }
            }

            // Token: 0x17000692 RID: 1682
            // (get) Token: 0x0600199B RID: 6555 RVA: 0x0009C2F8 File Offset: 0x0009A4F8
            // (set) Token: 0x0600199C RID: 6556 RVA: 0x0009C33C File Offset: 0x0009A53C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cp_cell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RelayProtectionAutomationValue.cp_cellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'cp_cell' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.cp_cellColumn] = value;
                }
            }

            // Token: 0x17000693 RID: 1683
            // (get) Token: 0x0600199D RID: 6557 RVA: 0x0009C350 File Offset: 0x0009A550
            // (set) Token: 0x0600199E RID: 6558 RVA: 0x0009C394 File Offset: 0x0009A594
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_RelayProtectionAutomationValue.commentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'comment' in table 'tJ_RelayProtectionAutomationValue' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.commentColumn] = value;
                }
            }

            // Token: 0x17000694 RID: 1684
            // (get) Token: 0x0600199F RID: 6559 RVA: 0x0009C3A8 File Offset: 0x0009A5A8
            // (set) Token: 0x060019A0 RID: 6560 RVA: 0x0009C3C0 File Offset: 0x0009A5C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateCreate
            {
                get
                {
                    return (DateTime)base[this.tabletJ_RelayProtectionAutomationValue.dateCreateColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.dateCreateColumn] = value;
                }
            }

            // Token: 0x17000695 RID: 1685
            // (get) Token: 0x060019A1 RID: 6561 RVA: 0x0009C3D9 File Offset: 0x0009A5D9
            // (set) Token: 0x060019A2 RID: 6562 RVA: 0x0009C3F1 File Offset: 0x0009A5F1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateIn
            {
                get
                {
                    return (DateTime)base[this.tabletJ_RelayProtectionAutomationValue.dateInColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.dateInColumn] = value;
                }
            }

            // Token: 0x17000696 RID: 1686
            // (get) Token: 0x060019A3 RID: 6563 RVA: 0x0009C40A File Offset: 0x0009A60A
            // (set) Token: 0x060019A4 RID: 6564 RVA: 0x0009C422 File Offset: 0x0009A622
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool deleted
            {
                get
                {
                    return (bool)base[this.tabletJ_RelayProtectionAutomationValue.deletedColumn];
                }
                set
                {
                    base[this.tabletJ_RelayProtectionAutomationValue.deletedColumn] = value;
                }
            }

            // Token: 0x060019A5 RID: 6565 RVA: 0x0009C43B File Offset: 0x0009A63B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamp_primaryNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.amp_primaryColumn);
            }

            // Token: 0x060019A6 RID: 6566 RVA: 0x0009C44E File Offset: 0x0009A64E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setamp_primaryNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.amp_primaryColumn] = Convert.DBNull;
            }

            // Token: 0x060019A7 RID: 6567 RVA: 0x0009C466 File Offset: 0x0009A666
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Isamp_secondaryNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.amp_secondaryColumn);
            }

            // Token: 0x060019A8 RID: 6568 RVA: 0x0009C479 File Offset: 0x0009A679
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setamp_secondaryNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.amp_secondaryColumn] = Convert.DBNull;
            }

            // Token: 0x060019A9 RID: 6569 RVA: 0x0009C491 File Offset: 0x0009A691
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidTypeTrNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.idTypeTrColumn);
            }

            // Token: 0x060019AA RID: 6570 RVA: 0x0009C4A4 File Offset: 0x0009A6A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidTypeTrNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.idTypeTrColumn] = Convert.DBNull;
            }

            // Token: 0x060019AB RID: 6571 RVA: 0x0009C4BC File Offset: 0x0009A6BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamp_mtzNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.amp_mtzColumn);
            }

            // Token: 0x060019AC RID: 6572 RVA: 0x0009C4CF File Offset: 0x0009A6CF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_mtzNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.amp_mtzColumn] = Convert.DBNull;
            }

            // Token: 0x060019AD RID: 6573 RVA: 0x0009C4E7 File Offset: 0x0009A6E7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istime_mtzNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.time_mtzColumn);
            }

            // Token: 0x060019AE RID: 6574 RVA: 0x0009C4FA File Offset: 0x0009A6FA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settime_mtzNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.time_mtzColumn] = Convert.DBNull;
            }

            // Token: 0x060019AF RID: 6575 RVA: 0x0009C512 File Offset: 0x0009A712
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Isamp_toNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.amp_toColumn);
            }

            // Token: 0x060019B0 RID: 6576 RVA: 0x0009C525 File Offset: 0x0009A725
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_toNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.amp_toColumn] = Convert.DBNull;
            }

            // Token: 0x060019B1 RID: 6577 RVA: 0x0009C53D File Offset: 0x0009A73D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istime_toNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.time_toColumn);
            }

            // Token: 0x060019B2 RID: 6578 RVA: 0x0009C550 File Offset: 0x0009A750
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Settime_toNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.time_toColumn] = Convert.DBNull;
            }

            // Token: 0x060019B3 RID: 6579 RVA: 0x0009C568 File Offset: 0x0009A768
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Isamp_ozzNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.amp_ozzColumn);
            }

            // Token: 0x060019B4 RID: 6580 RVA: 0x0009C57B File Offset: 0x0009A77B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_ozzNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.amp_ozzColumn] = Convert.DBNull;
            }

            // Token: 0x060019B5 RID: 6581 RVA: 0x0009C593 File Offset: 0x0009A793
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istime_ozzNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.time_ozzColumn);
            }

            // Token: 0x060019B6 RID: 6582 RVA: 0x0009C5A6 File Offset: 0x0009A7A6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settime_ozzNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.time_ozzColumn] = Convert.DBNull;
            }

            // Token: 0x060019B7 RID: 6583 RVA: 0x0009C5BE File Offset: 0x0009A7BE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isact_ozzNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.act_ozzColumn);
            }

            // Token: 0x060019B8 RID: 6584 RVA: 0x0009C5D1 File Offset: 0x0009A7D1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setact_ozzNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.act_ozzColumn] = Convert.DBNull;
            }

            // Token: 0x060019B9 RID: 6585 RVA: 0x0009C5E9 File Offset: 0x0009A7E9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isspeed_mtzNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.speed_mtzColumn);
            }

            // Token: 0x060019BA RID: 6586 RVA: 0x0009C5FC File Offset: 0x0009A7FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setspeed_mtzNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.speed_mtzColumn] = Convert.DBNull;
            }

            // Token: 0x060019BB RID: 6587 RVA: 0x0009C614 File Offset: 0x0009A814
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamp_urovNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.amp_urovColumn);
            }

            // Token: 0x060019BC RID: 6588 RVA: 0x0009C627 File Offset: 0x0009A827
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setamp_urovNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.amp_urovColumn] = Convert.DBNull;
            }

            // Token: 0x060019BD RID: 6589 RVA: 0x0009C63F File Offset: 0x0009A83F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istime_urovNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.time_urovColumn);
            }

            // Token: 0x060019BE RID: 6590 RVA: 0x0009C652 File Offset: 0x0009A852
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Settime_urovNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.time_urovColumn] = Convert.DBNull;
            }

            // Token: 0x060019BF RID: 6591 RVA: 0x0009C66A File Offset: 0x0009A86A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsavrNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.avrColumn);
            }

            // Token: 0x060019C0 RID: 6592 RVA: 0x0009C67D File Offset: 0x0009A87D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetavrNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.avrColumn] = Convert.DBNull;
            }

            // Token: 0x060019C1 RID: 6593 RVA: 0x0009C695 File Offset: 0x0009A895
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IslzshNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.lzshColumn);
            }

            // Token: 0x060019C2 RID: 6594 RVA: 0x0009C6A8 File Offset: 0x0009A8A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlzshNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.lzshColumn] = Convert.DBNull;
            }

            // Token: 0x060019C3 RID: 6595 RVA: 0x0009C6C0 File Offset: 0x0009A8C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istype_relayNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.type_relayColumn);
            }

            // Token: 0x060019C4 RID: 6596 RVA: 0x0009C6D3 File Offset: 0x0009A8D3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Settype_relayNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.type_relayColumn] = Convert.DBNull;
            }

            // Token: 0x060019C5 RID: 6597 RVA: 0x0009C6EB File Offset: 0x0009A8EB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istype_procNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.type_procColumn);
            }

            // Token: 0x060019C6 RID: 6598 RVA: 0x0009C6FE File Offset: 0x0009A8FE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settype_procNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.type_procColumn] = Convert.DBNull;
            }

            // Token: 0x060019C7 RID: 6599 RVA: 0x0009C716 File Offset: 0x0009A916
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscpNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.cpColumn);
            }

            // Token: 0x060019C8 RID: 6600 RVA: 0x0009C729 File Offset: 0x0009A929
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetcpNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.cpColumn] = Convert.DBNull;
            }

            // Token: 0x060019C9 RID: 6601 RVA: 0x0009C741 File Offset: 0x0009A941
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Iscp_cellNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.cp_cellColumn);
            }

            // Token: 0x060019CA RID: 6602 RVA: 0x0009C754 File Offset: 0x0009A954
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setcp_cellNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.cp_cellColumn] = Convert.DBNull;
            }

            // Token: 0x060019CB RID: 6603 RVA: 0x0009C76C File Offset: 0x0009A96C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommentNull()
            {
                return base.IsNull(this.tabletJ_RelayProtectionAutomationValue.commentColumn);
            }

            // Token: 0x060019CC RID: 6604 RVA: 0x0009C77F File Offset: 0x0009A97F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetcommentNull()
            {
                base[this.tabletJ_RelayProtectionAutomationValue.commentColumn] = Convert.DBNull;
            }

            // Token: 0x04000B91 RID: 2961
            private DataSetGES.tJ_RelayProtectionAutomationValueDataTable tabletJ_RelayProtectionAutomationValue;
        }

        // Token: 0x02000132 RID: 306
        public class vJ_RelayProtectionAutomationRow : DataRow
        {
            // Token: 0x060019CD RID: 6605 RVA: 0x0009C797 File Offset: 0x0009A997
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_RelayProtectionAutomationRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_RelayProtectionAutomation = (DataSetGES.vJ_RelayProtectionAutomationDataTable)base.Table;
            }

            // Token: 0x17000697 RID: 1687
            // (get) Token: 0x060019CE RID: 6606 RVA: 0x0009C7B4 File Offset: 0x0009A9B4
            // (set) Token: 0x060019CF RID: 6607 RVA: 0x0009C7F8 File Offset: 0x0009A9F8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.idColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'id' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.idColumn] = value;
                }
            }

            // Token: 0x17000698 RID: 1688
            // (get) Token: 0x060019D0 RID: 6608 RVA: 0x0009C814 File Offset: 0x0009AA14
            // (set) Token: 0x060019D1 RID: 6609 RVA: 0x0009C858 File Offset: 0x0009AA58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int relayidValue
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.relayidValueColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'relayidValue' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.relayidValueColumn] = value;
                }
            }

            // Token: 0x17000699 RID: 1689
            // (get) Token: 0x060019D2 RID: 6610 RVA: 0x0009C874 File Offset: 0x0009AA74
            // (set) Token: 0x060019D3 RID: 6611 RVA: 0x0009C8B8 File Offset: 0x0009AAB8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int subId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.subIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'subId' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.subIdColumn] = value;
                }
            }

            // Token: 0x1700069A RID: 1690
            // (get) Token: 0x060019D4 RID: 6612 RVA: 0x0009C8D4 File Offset: 0x0009AAD4
            // (set) Token: 0x060019D5 RID: 6613 RVA: 0x0009C918 File Offset: 0x0009AB18
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sub_Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.sub_NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'sub_Name' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.sub_NameColumn] = value;
                }
            }

            // Token: 0x1700069B RID: 1691
            // (get) Token: 0x060019D6 RID: 6614 RVA: 0x0009C92C File Offset: 0x0009AB2C
            // (set) Token: 0x060019D7 RID: 6615 RVA: 0x0009C970 File Offset: 0x0009AB70
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int typeSub
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.typeSubColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'typeSub' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.typeSubColumn] = value;
                }
            }

            // Token: 0x1700069C RID: 1692
            // (get) Token: 0x060019D8 RID: 6616 RVA: 0x0009C98C File Offset: 0x0009AB8C
            // (set) Token: 0x060019D9 RID: 6617 RVA: 0x0009C9D0 File Offset: 0x0009ABD0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int busID
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.busIDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'busID' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.busIDColumn] = value;
                }
            }

            // Token: 0x1700069D RID: 1693
            // (get) Token: 0x060019DA RID: 6618 RVA: 0x0009C9EC File Offset: 0x0009ABEC
            // (set) Token: 0x060019DB RID: 6619 RVA: 0x0009CA30 File Offset: 0x0009AC30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string bus_name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.bus_nameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'bus_name' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.bus_nameColumn] = value;
                }
            }

            // Token: 0x1700069E RID: 1694
            // (get) Token: 0x060019DC RID: 6620 RVA: 0x0009CA44 File Offset: 0x0009AC44
            // (set) Token: 0x060019DD RID: 6621 RVA: 0x0009CA88 File Offset: 0x0009AC88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string cell_Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.cell_NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'cell_Name' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.cell_NameColumn] = value;
                }
            }

            // Token: 0x1700069F RID: 1695
            // (get) Token: 0x060019DE RID: 6622 RVA: 0x0009CA9C File Offset: 0x0009AC9C
            // (set) Token: 0x060019DF RID: 6623 RVA: 0x0009CAE0 File Offset: 0x0009ACE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int cellID
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.cellIDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'cellID' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.cellIDColumn] = value;
                }
            }

            // Token: 0x170006A0 RID: 1696
            // (get) Token: 0x060019E0 RID: 6624 RVA: 0x0009CAFC File Offset: 0x0009ACFC
            // (set) Token: 0x060019E1 RID: 6625 RVA: 0x0009CB40 File Offset: 0x0009AD40
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string relName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.relNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'relName' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.relNameColumn] = value;
                }
            }

            // Token: 0x170006A1 RID: 1697
            // (get) Token: 0x060019E2 RID: 6626 RVA: 0x0009CB54 File Offset: 0x0009AD54
            // (set) Token: 0x060019E3 RID: 6627 RVA: 0x0009CB98 File Offset: 0x0009AD98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amp_primary
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.amp_primaryColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_primary' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.amp_primaryColumn] = value;
                }
            }

            // Token: 0x170006A2 RID: 1698
            // (get) Token: 0x060019E4 RID: 6628 RVA: 0x0009CBB4 File Offset: 0x0009ADB4
            // (set) Token: 0x060019E5 RID: 6629 RVA: 0x0009CBF8 File Offset: 0x0009ADF8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amp_secondary
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.amp_secondaryColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_secondary' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.amp_secondaryColumn] = value;
                }
            }

            // Token: 0x170006A3 RID: 1699
            // (get) Token: 0x060019E6 RID: 6630 RVA: 0x0009CC14 File Offset: 0x0009AE14
            // (set) Token: 0x060019E7 RID: 6631 RVA: 0x0009CC58 File Offset: 0x0009AE58
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTypeTr
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.idTypeTrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTypeTr' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.idTypeTrColumn] = value;
                }
            }

            // Token: 0x170006A4 RID: 1700
            // (get) Token: 0x060019E8 RID: 6632 RVA: 0x0009CC74 File Offset: 0x0009AE74
            // (set) Token: 0x060019E9 RID: 6633 RVA: 0x0009CCB8 File Offset: 0x0009AEB8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Typetr
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.TypetrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Typetr' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.TypetrColumn] = value;
                }
            }

            // Token: 0x170006A5 RID: 1701
            // (get) Token: 0x060019EA RID: 6634 RVA: 0x0009CCCC File Offset: 0x0009AECC
            // (set) Token: 0x060019EB RID: 6635 RVA: 0x0009CD10 File Offset: 0x0009AF10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int amp_mtz
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.amp_mtzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_mtz' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.amp_mtzColumn] = value;
                }
            }

            // Token: 0x170006A6 RID: 1702
            // (get) Token: 0x060019EC RID: 6636 RVA: 0x0009CD2C File Offset: 0x0009AF2C
            // (set) Token: 0x060019ED RID: 6637 RVA: 0x0009CD70 File Offset: 0x0009AF70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double time_mtz
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_RelayProtectionAutomation.time_mtzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_mtz' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.time_mtzColumn] = value;
                }
            }

            // Token: 0x170006A7 RID: 1703
            // (get) Token: 0x060019EE RID: 6638 RVA: 0x0009CD8C File Offset: 0x0009AF8C
            // (set) Token: 0x060019EF RID: 6639 RVA: 0x0009CDD0 File Offset: 0x0009AFD0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amp_to
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.amp_toColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_to' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.amp_toColumn] = value;
                }
            }

            // Token: 0x170006A8 RID: 1704
            // (get) Token: 0x060019F0 RID: 6640 RVA: 0x0009CDEC File Offset: 0x0009AFEC
            // (set) Token: 0x060019F1 RID: 6641 RVA: 0x0009CE30 File Offset: 0x0009B030
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double time_to
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_RelayProtectionAutomation.time_toColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_to' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.time_toColumn] = value;
                }
            }

            // Token: 0x170006A9 RID: 1705
            // (get) Token: 0x060019F2 RID: 6642 RVA: 0x0009CE4C File Offset: 0x0009B04C
            // (set) Token: 0x060019F3 RID: 6643 RVA: 0x0009CE90 File Offset: 0x0009B090
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amp_ozz
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.amp_ozzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_ozz' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.amp_ozzColumn] = value;
                }
            }

            // Token: 0x170006AA RID: 1706
            // (get) Token: 0x060019F4 RID: 6644 RVA: 0x0009CEAC File Offset: 0x0009B0AC
            // (set) Token: 0x060019F5 RID: 6645 RVA: 0x0009CEF0 File Offset: 0x0009B0F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double time_ozz
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_RelayProtectionAutomation.time_ozzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_ozz' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.time_ozzColumn] = value;
                }
            }

            // Token: 0x170006AB RID: 1707
            // (get) Token: 0x060019F6 RID: 6646 RVA: 0x0009CF0C File Offset: 0x0009B10C
            // (set) Token: 0x060019F7 RID: 6647 RVA: 0x0009CF50 File Offset: 0x0009B150
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string act_ozz
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.act_ozzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'act_ozz' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.act_ozzColumn] = value;
                }
            }

            // Token: 0x170006AC RID: 1708
            // (get) Token: 0x060019F8 RID: 6648 RVA: 0x0009CF64 File Offset: 0x0009B164
            // (set) Token: 0x060019F9 RID: 6649 RVA: 0x0009CFA8 File Offset: 0x0009B1A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double speed_mtz
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_RelayProtectionAutomation.speed_mtzColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'speed_mtz' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.speed_mtzColumn] = value;
                }
            }

            // Token: 0x170006AD RID: 1709
            // (get) Token: 0x060019FA RID: 6650 RVA: 0x0009CFC4 File Offset: 0x0009B1C4
            // (set) Token: 0x060019FB RID: 6651 RVA: 0x0009D008 File Offset: 0x0009B208
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int amp_urov
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_RelayProtectionAutomation.amp_urovColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'amp_urov' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.amp_urovColumn] = value;
                }
            }

            // Token: 0x170006AE RID: 1710
            // (get) Token: 0x060019FC RID: 6652 RVA: 0x0009D024 File Offset: 0x0009B224
            // (set) Token: 0x060019FD RID: 6653 RVA: 0x0009D068 File Offset: 0x0009B268
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double time_urov
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_RelayProtectionAutomation.time_urovColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'time_urov' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.time_urovColumn] = value;
                }
            }

            // Token: 0x170006AF RID: 1711
            // (get) Token: 0x060019FE RID: 6654 RVA: 0x0009D084 File Offset: 0x0009B284
            // (set) Token: 0x060019FF RID: 6655 RVA: 0x0009D0C8 File Offset: 0x0009B2C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool avr
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_RelayProtectionAutomation.avrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'avr' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.avrColumn] = value;
                }
            }

            // Token: 0x170006B0 RID: 1712
            // (get) Token: 0x06001A00 RID: 6656 RVA: 0x0009D0E4 File Offset: 0x0009B2E4
            // (set) Token: 0x06001A01 RID: 6657 RVA: 0x0009D128 File Offset: 0x0009B328
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool lzsh
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_RelayProtectionAutomation.lzshColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'lzsh' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.lzshColumn] = value;
                }
            }

            // Token: 0x170006B1 RID: 1713
            // (get) Token: 0x06001A02 RID: 6658 RVA: 0x0009D144 File Offset: 0x0009B344
            // (set) Token: 0x06001A03 RID: 6659 RVA: 0x0009D188 File Offset: 0x0009B388
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string type_relay
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.type_relayColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'type_relay' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.type_relayColumn] = value;
                }
            }

            // Token: 0x170006B2 RID: 1714
            // (get) Token: 0x06001A04 RID: 6660 RVA: 0x0009D19C File Offset: 0x0009B39C
            // (set) Token: 0x06001A05 RID: 6661 RVA: 0x0009D1E0 File Offset: 0x0009B3E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string type_proc
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.type_procColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'type_proc' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.type_procColumn] = value;
                }
            }

            // Token: 0x170006B3 RID: 1715
            // (get) Token: 0x06001A06 RID: 6662 RVA: 0x0009D1F4 File Offset: 0x0009B3F4
            // (set) Token: 0x06001A07 RID: 6663 RVA: 0x0009D238 File Offset: 0x0009B438
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string cp
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.cpColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'cp' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.cpColumn] = value;
                }
            }

            // Token: 0x170006B4 RID: 1716
            // (get) Token: 0x06001A08 RID: 6664 RVA: 0x0009D24C File Offset: 0x0009B44C
            // (set) Token: 0x06001A09 RID: 6665 RVA: 0x0009D290 File Offset: 0x0009B490
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cp_cell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.cp_cellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'cp_cell' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.cp_cellColumn] = value;
                }
            }

            // Token: 0x170006B5 RID: 1717
            // (get) Token: 0x06001A0A RID: 6666 RVA: 0x0009D2A4 File Offset: 0x0009B4A4
            // (set) Token: 0x06001A0B RID: 6667 RVA: 0x0009D2E8 File Offset: 0x0009B4E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.commentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'comment' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.commentColumn] = value;
                }
            }

            // Token: 0x170006B6 RID: 1718
            // (get) Token: 0x06001A0C RID: 6668 RVA: 0x0009D2FC File Offset: 0x0009B4FC
            // (set) Token: 0x06001A0D RID: 6669 RVA: 0x0009D340 File Offset: 0x0009B540
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateCreate
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RelayProtectionAutomation.dateCreateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'dateCreate' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.dateCreateColumn] = value;
                }
            }

            // Token: 0x170006B7 RID: 1719
            // (get) Token: 0x06001A0E RID: 6670 RVA: 0x0009D35C File Offset: 0x0009B55C
            // (set) Token: 0x06001A0F RID: 6671 RVA: 0x0009D3A0 File Offset: 0x0009B5A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateIn
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_RelayProtectionAutomation.dateInColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'dateIn' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.dateInColumn] = value;
                }
            }

            // Token: 0x170006B8 RID: 1720
            // (get) Token: 0x06001A10 RID: 6672 RVA: 0x0009D3BC File Offset: 0x0009B5BC
            // (set) Token: 0x06001A11 RID: 6673 RVA: 0x0009D400 File Offset: 0x0009B600
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_RelayProtectionAutomation.deletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'deleted' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.deletedColumn] = value;
                }
            }

            // Token: 0x170006B9 RID: 1721
            // (get) Token: 0x06001A12 RID: 6674 RVA: 0x0009D41C File Offset: 0x0009B61C
            // (set) Token: 0x06001A13 RID: 6675 RVA: 0x0009D460 File Offset: 0x0009B660
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string coefTR
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_RelayProtectionAutomation.coefTRColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'coefTR' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.coefTRColumn] = value;
                }
            }

            // Token: 0x170006BA RID: 1722
            // (get) Token: 0x06001A14 RID: 6676 RVA: 0x0009D474 File Offset: 0x0009B674
            // (set) Token: 0x06001A15 RID: 6677 RVA: 0x0009D4B8 File Offset: 0x0009B6B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool deletedObj
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_RelayProtectionAutomation.deletedObjColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'deletedObj' in table 'vJ_RelayProtectionAutomation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_RelayProtectionAutomation.deletedObjColumn] = value;
                }
            }

            // Token: 0x06001A16 RID: 6678 RVA: 0x0009D4D1 File Offset: 0x0009B6D1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.idColumn);
            }

            // Token: 0x06001A17 RID: 6679 RVA: 0x0009D4E4 File Offset: 0x0009B6E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.idColumn] = Convert.DBNull;
            }

            // Token: 0x06001A18 RID: 6680 RVA: 0x0009D4FC File Offset: 0x0009B6FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrelayidValueNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.relayidValueColumn);
            }

            // Token: 0x06001A19 RID: 6681 RVA: 0x0009D50F File Offset: 0x0009B70F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrelayidValueNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.relayidValueColumn] = Convert.DBNull;
            }

            // Token: 0x06001A1A RID: 6682 RVA: 0x0009D527 File Offset: 0x0009B727
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IssubIdNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.subIdColumn);
            }

            // Token: 0x06001A1B RID: 6683 RVA: 0x0009D53A File Offset: 0x0009B73A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsubIdNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.subIdColumn] = Convert.DBNull;
            }

            // Token: 0x06001A1C RID: 6684 RVA: 0x0009D552 File Offset: 0x0009B752
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Issub_NameNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.sub_NameColumn);
            }

            // Token: 0x06001A1D RID: 6685 RVA: 0x0009D565 File Offset: 0x0009B765
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setsub_NameNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.sub_NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001A1E RID: 6686 RVA: 0x0009D57D File Offset: 0x0009B77D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IstypeSubNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.typeSubColumn);
            }

            // Token: 0x06001A1F RID: 6687 RVA: 0x0009D590 File Offset: 0x0009B790
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SettypeSubNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.typeSubColumn] = Convert.DBNull;
            }

            // Token: 0x06001A20 RID: 6688 RVA: 0x0009D5A8 File Offset: 0x0009B7A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsbusIDNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.busIDColumn);
            }

            // Token: 0x06001A21 RID: 6689 RVA: 0x0009D5BB File Offset: 0x0009B7BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetbusIDNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.busIDColumn] = Convert.DBNull;
            }

            // Token: 0x06001A22 RID: 6690 RVA: 0x0009D5D3 File Offset: 0x0009B7D3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbus_nameNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.bus_nameColumn);
            }

            // Token: 0x06001A23 RID: 6691 RVA: 0x0009D5E6 File Offset: 0x0009B7E6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setbus_nameNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.bus_nameColumn] = Convert.DBNull;
            }

            // Token: 0x06001A24 RID: 6692 RVA: 0x0009D5FE File Offset: 0x0009B7FE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscell_NameNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.cell_NameColumn);
            }

            // Token: 0x06001A25 RID: 6693 RVA: 0x0009D611 File Offset: 0x0009B811
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcell_NameNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.cell_NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001A26 RID: 6694 RVA: 0x0009D629 File Offset: 0x0009B829
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IscellIDNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.cellIDColumn);
            }

            // Token: 0x06001A27 RID: 6695 RVA: 0x0009D63C File Offset: 0x0009B83C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcellIDNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.cellIDColumn] = Convert.DBNull;
            }

            // Token: 0x06001A28 RID: 6696 RVA: 0x0009D654 File Offset: 0x0009B854
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsrelNameNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.relNameColumn);
            }

            // Token: 0x06001A29 RID: 6697 RVA: 0x0009D667 File Offset: 0x0009B867
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrelNameNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.relNameColumn] = Convert.DBNull;
            }

            // Token: 0x06001A2A RID: 6698 RVA: 0x0009D67F File Offset: 0x0009B87F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamp_primaryNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.amp_primaryColumn);
            }

            // Token: 0x06001A2B RID: 6699 RVA: 0x0009D692 File Offset: 0x0009B892
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_primaryNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.amp_primaryColumn] = Convert.DBNull;
            }

            // Token: 0x06001A2C RID: 6700 RVA: 0x0009D6AA File Offset: 0x0009B8AA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamp_secondaryNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.amp_secondaryColumn);
            }

            // Token: 0x06001A2D RID: 6701 RVA: 0x0009D6BD File Offset: 0x0009B8BD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setamp_secondaryNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.amp_secondaryColumn] = Convert.DBNull;
            }

            // Token: 0x06001A2E RID: 6702 RVA: 0x0009D6D5 File Offset: 0x0009B8D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidTypeTrNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.idTypeTrColumn);
            }

            // Token: 0x06001A2F RID: 6703 RVA: 0x0009D6E8 File Offset: 0x0009B8E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidTypeTrNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.idTypeTrColumn] = Convert.DBNull;
            }

            // Token: 0x06001A30 RID: 6704 RVA: 0x0009D700 File Offset: 0x0009B900
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypetrNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.TypetrColumn);
            }

            // Token: 0x06001A31 RID: 6705 RVA: 0x0009D713 File Offset: 0x0009B913
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypetrNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.TypetrColumn] = Convert.DBNull;
            }

            // Token: 0x06001A32 RID: 6706 RVA: 0x0009D72B File Offset: 0x0009B92B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamp_mtzNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.amp_mtzColumn);
            }

            // Token: 0x06001A33 RID: 6707 RVA: 0x0009D73E File Offset: 0x0009B93E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_mtzNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.amp_mtzColumn] = Convert.DBNull;
            }

            // Token: 0x06001A34 RID: 6708 RVA: 0x0009D756 File Offset: 0x0009B956
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istime_mtzNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.time_mtzColumn);
            }

            // Token: 0x06001A35 RID: 6709 RVA: 0x0009D769 File Offset: 0x0009B969
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Settime_mtzNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.time_mtzColumn] = Convert.DBNull;
            }

            // Token: 0x06001A36 RID: 6710 RVA: 0x0009D781 File Offset: 0x0009B981
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Isamp_toNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.amp_toColumn);
            }

            // Token: 0x06001A37 RID: 6711 RVA: 0x0009D794 File Offset: 0x0009B994
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_toNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.amp_toColumn] = Convert.DBNull;
            }

            // Token: 0x06001A38 RID: 6712 RVA: 0x0009D7AC File Offset: 0x0009B9AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istime_toNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.time_toColumn);
            }

            // Token: 0x06001A39 RID: 6713 RVA: 0x0009D7BF File Offset: 0x0009B9BF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Settime_toNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.time_toColumn] = Convert.DBNull;
            }

            // Token: 0x06001A3A RID: 6714 RVA: 0x0009D7D7 File Offset: 0x0009B9D7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isamp_ozzNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.amp_ozzColumn);
            }

            // Token: 0x06001A3B RID: 6715 RVA: 0x0009D7EA File Offset: 0x0009B9EA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_ozzNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.amp_ozzColumn] = Convert.DBNull;
            }

            // Token: 0x06001A3C RID: 6716 RVA: 0x0009D802 File Offset: 0x0009BA02
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istime_ozzNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.time_ozzColumn);
            }

            // Token: 0x06001A3D RID: 6717 RVA: 0x0009D815 File Offset: 0x0009BA15
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Settime_ozzNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.time_ozzColumn] = Convert.DBNull;
            }

            // Token: 0x06001A3E RID: 6718 RVA: 0x0009D82D File Offset: 0x0009BA2D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isact_ozzNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.act_ozzColumn);
            }

            // Token: 0x06001A3F RID: 6719 RVA: 0x0009D840 File Offset: 0x0009BA40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setact_ozzNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.act_ozzColumn] = Convert.DBNull;
            }

            // Token: 0x06001A40 RID: 6720 RVA: 0x0009D858 File Offset: 0x0009BA58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Isspeed_mtzNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.speed_mtzColumn);
            }

            // Token: 0x06001A41 RID: 6721 RVA: 0x0009D86B File Offset: 0x0009BA6B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Setspeed_mtzNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.speed_mtzColumn] = Convert.DBNull;
            }

            // Token: 0x06001A42 RID: 6722 RVA: 0x0009D883 File Offset: 0x0009BA83
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Isamp_urovNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.amp_urovColumn);
            }

            // Token: 0x06001A43 RID: 6723 RVA: 0x0009D896 File Offset: 0x0009BA96
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setamp_urovNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.amp_urovColumn] = Convert.DBNull;
            }

            // Token: 0x06001A44 RID: 6724 RVA: 0x0009D8AE File Offset: 0x0009BAAE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istime_urovNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.time_urovColumn);
            }

            // Token: 0x06001A45 RID: 6725 RVA: 0x0009D8C1 File Offset: 0x0009BAC1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void Settime_urovNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.time_urovColumn] = Convert.DBNull;
            }

            // Token: 0x06001A46 RID: 6726 RVA: 0x0009D8D9 File Offset: 0x0009BAD9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsavrNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.avrColumn);
            }

            // Token: 0x06001A47 RID: 6727 RVA: 0x0009D8EC File Offset: 0x0009BAEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetavrNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.avrColumn] = Convert.DBNull;
            }

            // Token: 0x06001A48 RID: 6728 RVA: 0x0009D904 File Offset: 0x0009BB04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslzshNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.lzshColumn);
            }

            // Token: 0x06001A49 RID: 6729 RVA: 0x0009D917 File Offset: 0x0009BB17
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetlzshNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.lzshColumn] = Convert.DBNull;
            }

            // Token: 0x06001A4A RID: 6730 RVA: 0x0009D92F File Offset: 0x0009BB2F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istype_relayNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.type_relayColumn);
            }

            // Token: 0x06001A4B RID: 6731 RVA: 0x0009D942 File Offset: 0x0009BB42
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settype_relayNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.type_relayColumn] = Convert.DBNull;
            }

            // Token: 0x06001A4C RID: 6732 RVA: 0x0009D95A File Offset: 0x0009BB5A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Istype_procNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.type_procColumn);
            }

            // Token: 0x06001A4D RID: 6733 RVA: 0x0009D96D File Offset: 0x0009BB6D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settype_procNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.type_procColumn] = Convert.DBNull;
            }

            // Token: 0x06001A4E RID: 6734 RVA: 0x0009D985 File Offset: 0x0009BB85
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IscpNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.cpColumn);
            }

            // Token: 0x06001A4F RID: 6735 RVA: 0x0009D998 File Offset: 0x0009BB98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcpNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.cpColumn] = Convert.DBNull;
            }

            // Token: 0x06001A50 RID: 6736 RVA: 0x0009D9B0 File Offset: 0x0009BBB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Iscp_cellNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.cp_cellColumn);
            }

            // Token: 0x06001A51 RID: 6737 RVA: 0x0009D9C3 File Offset: 0x0009BBC3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcp_cellNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.cp_cellColumn] = Convert.DBNull;
            }

            // Token: 0x06001A52 RID: 6738 RVA: 0x0009D9DB File Offset: 0x0009BBDB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IscommentNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.commentColumn);
            }

            // Token: 0x06001A53 RID: 6739 RVA: 0x0009D9EE File Offset: 0x0009BBEE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetcommentNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.commentColumn] = Convert.DBNull;
            }

            // Token: 0x06001A54 RID: 6740 RVA: 0x0009DA06 File Offset: 0x0009BC06
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsdateCreateNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.dateCreateColumn);
            }

            // Token: 0x06001A55 RID: 6741 RVA: 0x0009DA19 File Offset: 0x0009BC19
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateCreateNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.dateCreateColumn] = Convert.DBNull;
            }

            // Token: 0x06001A56 RID: 6742 RVA: 0x0009DA31 File Offset: 0x0009BC31
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsdateInNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.dateInColumn);
            }

            // Token: 0x06001A57 RID: 6743 RVA: 0x0009DA44 File Offset: 0x0009BC44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetdateInNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.dateInColumn] = Convert.DBNull;
            }

            // Token: 0x06001A58 RID: 6744 RVA: 0x0009DA5C File Offset: 0x0009BC5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsdeletedNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.deletedColumn);
            }

            // Token: 0x06001A59 RID: 6745 RVA: 0x0009DA6F File Offset: 0x0009BC6F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeletedNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.deletedColumn] = Convert.DBNull;
            }

            // Token: 0x06001A5A RID: 6746 RVA: 0x0009DA87 File Offset: 0x0009BC87
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IscoefTRNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.coefTRColumn);
            }

            // Token: 0x06001A5B RID: 6747 RVA: 0x0009DA9A File Offset: 0x0009BC9A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoefTRNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.coefTRColumn] = Convert.DBNull;
            }

            // Token: 0x06001A5C RID: 6748 RVA: 0x0009DAB2 File Offset: 0x0009BCB2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeletedObjNull()
            {
                return base.IsNull(this.tablevJ_RelayProtectionAutomation.deletedObjColumn);
            }

            // Token: 0x06001A5D RID: 6749 RVA: 0x0009DAC5 File Offset: 0x0009BCC5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeletedObjNull()
            {
                base[this.tablevJ_RelayProtectionAutomation.deletedObjColumn] = Convert.DBNull;
            }

            // Token: 0x04000B92 RID: 2962
            private DataSetGES.vJ_RelayProtectionAutomationDataTable tablevJ_RelayProtectionAutomation;
        }

        // Token: 0x02000133 RID: 307
        public class tJ_UpdateProgramRow : DataRow
        {
            // Token: 0x06001A5E RID: 6750 RVA: 0x0009DADD File Offset: 0x0009BCDD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_UpdateProgramRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_UpdateProgram = (DataSetGES.tJ_UpdateProgramDataTable)base.Table;
            }

            // Token: 0x170006BB RID: 1723
            // (get) Token: 0x06001A5F RID: 6751 RVA: 0x0009DAF7 File Offset: 0x0009BCF7
            // (set) Token: 0x06001A60 RID: 6752 RVA: 0x0009DB0F File Offset: 0x0009BD0F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_UpdateProgram.idColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgram.idColumn] = value;
                }
            }

            // Token: 0x170006BC RID: 1724
            // (get) Token: 0x06001A61 RID: 6753 RVA: 0x0009DB28 File Offset: 0x0009BD28
            // (set) Token: 0x06001A62 RID: 6754 RVA: 0x0009DB40 File Offset: 0x0009BD40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateUpdate
            {
                get
                {
                    return (DateTime)base[this.tabletJ_UpdateProgram.DateUpdateColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgram.DateUpdateColumn] = value;
                }
            }

            // Token: 0x170006BD RID: 1725
            // (get) Token: 0x06001A63 RID: 6755 RVA: 0x0009DB5C File Offset: 0x0009BD5C
            // (set) Token: 0x06001A64 RID: 6756 RVA: 0x0009DBA0 File Offset: 0x0009BDA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Modul
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_UpdateProgram.ModulColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Modul' in table 'tJ_UpdateProgram' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_UpdateProgram.ModulColumn] = value;
                }
            }

            // Token: 0x170006BE RID: 1726
            // (get) Token: 0x06001A65 RID: 6757 RVA: 0x0009DBBC File Offset: 0x0009BDBC
            // (set) Token: 0x06001A66 RID: 6758 RVA: 0x0009DC00 File Offset: 0x0009BE00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TextUpdate
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_UpdateProgram.TextUpdateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TextUpdate' in table 'tJ_UpdateProgram' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_UpdateProgram.TextUpdateColumn] = value;
                }
            }

            // Token: 0x170006BF RID: 1727
            // (get) Token: 0x06001A67 RID: 6759 RVA: 0x0009DC14 File Offset: 0x0009BE14
            // (set) Token: 0x06001A68 RID: 6760 RVA: 0x0009DC58 File Offset: 0x0009BE58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Description
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_UpdateProgram.DescriptionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Description' in table 'tJ_UpdateProgram' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_UpdateProgram.DescriptionColumn] = value;
                }
            }

            // Token: 0x06001A69 RID: 6761 RVA: 0x0009DC6C File Offset: 0x0009BE6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsModulNull()
            {
                return base.IsNull(this.tabletJ_UpdateProgram.ModulColumn);
            }

            // Token: 0x06001A6A RID: 6762 RVA: 0x0009DC7F File Offset: 0x0009BE7F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetModulNull()
            {
                base[this.tabletJ_UpdateProgram.ModulColumn] = Convert.DBNull;
            }

            // Token: 0x06001A6B RID: 6763 RVA: 0x0009DC97 File Offset: 0x0009BE97
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTextUpdateNull()
            {
                return base.IsNull(this.tabletJ_UpdateProgram.TextUpdateColumn);
            }

            // Token: 0x06001A6C RID: 6764 RVA: 0x0009DCAA File Offset: 0x0009BEAA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTextUpdateNull()
            {
                base[this.tabletJ_UpdateProgram.TextUpdateColumn] = Convert.DBNull;
            }

            // Token: 0x06001A6D RID: 6765 RVA: 0x0009DCC2 File Offset: 0x0009BEC2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDescriptionNull()
            {
                return base.IsNull(this.tabletJ_UpdateProgram.DescriptionColumn);
            }

            // Token: 0x06001A6E RID: 6766 RVA: 0x0009DCD5 File Offset: 0x0009BED5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull()
            {
                base[this.tabletJ_UpdateProgram.DescriptionColumn] = Convert.DBNull;
            }

            // Token: 0x04000B93 RID: 2963
            private DataSetGES.tJ_UpdateProgramDataTable tabletJ_UpdateProgram;
        }

        // Token: 0x02000134 RID: 308
        public class tJ_UpdateProgramDocRow : DataRow
        {
            // Token: 0x06001A6F RID: 6767 RVA: 0x0009DCED File Offset: 0x0009BEED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_UpdateProgramDocRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_UpdateProgramDoc = (DataSetGES.tJ_UpdateProgramDocDataTable)base.Table;
            }

            // Token: 0x170006C0 RID: 1728
            // (get) Token: 0x06001A70 RID: 6768 RVA: 0x0009DD07 File Offset: 0x0009BF07
            // (set) Token: 0x06001A71 RID: 6769 RVA: 0x0009DD1F File Offset: 0x0009BF1F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_UpdateProgramDoc.idColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgramDoc.idColumn] = value;
                }
            }

            // Token: 0x170006C1 RID: 1729
            // (get) Token: 0x06001A72 RID: 6770 RVA: 0x0009DD38 File Offset: 0x0009BF38
            // (set) Token: 0x06001A73 RID: 6771 RVA: 0x0009DD50 File Offset: 0x0009BF50
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idUpdate
            {
                get
                {
                    return (int)base[this.tabletJ_UpdateProgramDoc.idUpdateColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgramDoc.idUpdateColumn] = value;
                }
            }

            // Token: 0x170006C2 RID: 1730
            // (get) Token: 0x06001A74 RID: 6772 RVA: 0x0009DD69 File Offset: 0x0009BF69
            // (set) Token: 0x06001A75 RID: 6773 RVA: 0x0009DD81 File Offset: 0x0009BF81
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public byte[] Document
            {
                get
                {
                    return (byte[])base[this.tabletJ_UpdateProgramDoc.DocumentColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgramDoc.DocumentColumn] = value;
                }
            }

            // Token: 0x170006C3 RID: 1731
            // (get) Token: 0x06001A76 RID: 6774 RVA: 0x0009DD95 File Offset: 0x0009BF95
            // (set) Token: 0x06001A77 RID: 6775 RVA: 0x0009DDAD File Offset: 0x0009BFAD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileName
            {
                get
                {
                    return (string)base[this.tabletJ_UpdateProgramDoc.FileNameColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgramDoc.FileNameColumn] = value;
                }
            }

            // Token: 0x04000B94 RID: 2964
            private DataSetGES.tJ_UpdateProgramDocDataTable tabletJ_UpdateProgramDoc;
        }

        // Token: 0x02000135 RID: 309
        public class vJ_UpdateProgramRow : DataRow
        {
            // Token: 0x06001A78 RID: 6776 RVA: 0x0009DDC1 File Offset: 0x0009BFC1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_UpdateProgramRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_UpdateProgram = (DataSetGES.vJ_UpdateProgramDataTable)base.Table;
            }

            // Token: 0x170006C4 RID: 1732
            // (get) Token: 0x06001A79 RID: 6777 RVA: 0x0009DDDB File Offset: 0x0009BFDB
            // (set) Token: 0x06001A7A RID: 6778 RVA: 0x0009DDF3 File Offset: 0x0009BFF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_UpdateProgram.idColumn];
                }
                set
                {
                    base[this.tablevJ_UpdateProgram.idColumn] = value;
                }
            }

            // Token: 0x170006C5 RID: 1733
            // (get) Token: 0x06001A7B RID: 6779 RVA: 0x0009DE0C File Offset: 0x0009C00C
            // (set) Token: 0x06001A7C RID: 6780 RVA: 0x0009DE24 File Offset: 0x0009C024
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateUpdate
            {
                get
                {
                    return (DateTime)base[this.tablevJ_UpdateProgram.DateUpdateColumn];
                }
                set
                {
                    base[this.tablevJ_UpdateProgram.DateUpdateColumn] = value;
                }
            }

            // Token: 0x170006C6 RID: 1734
            // (get) Token: 0x06001A7D RID: 6781 RVA: 0x0009DE40 File Offset: 0x0009C040
            // (set) Token: 0x06001A7E RID: 6782 RVA: 0x0009DE84 File Offset: 0x0009C084
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Modul
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_UpdateProgram.ModulColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Modul' in table 'vJ_UpdateProgram' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_UpdateProgram.ModulColumn] = value;
                }
            }

            // Token: 0x170006C7 RID: 1735
            // (get) Token: 0x06001A7F RID: 6783 RVA: 0x0009DE9D File Offset: 0x0009C09D
            // (set) Token: 0x06001A80 RID: 6784 RVA: 0x0009DEB5 File Offset: 0x0009C0B5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string modulname
            {
                get
                {
                    return (string)base[this.tablevJ_UpdateProgram.modulnameColumn];
                }
                set
                {
                    base[this.tablevJ_UpdateProgram.modulnameColumn] = value;
                }
            }

            // Token: 0x170006C8 RID: 1736
            // (get) Token: 0x06001A81 RID: 6785 RVA: 0x0009DECC File Offset: 0x0009C0CC
            // (set) Token: 0x06001A82 RID: 6786 RVA: 0x0009DF10 File Offset: 0x0009C110
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_UpdateProgram.DescriptionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Description' in table 'vJ_UpdateProgram' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_UpdateProgram.DescriptionColumn] = value;
                }
            }

            // Token: 0x170006C9 RID: 1737
            // (get) Token: 0x06001A83 RID: 6787 RVA: 0x0009DF24 File Offset: 0x0009C124
            // (set) Token: 0x06001A84 RID: 6788 RVA: 0x0009DF68 File Offset: 0x0009C168
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string TextUpdate
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_UpdateProgram.TextUpdateColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TextUpdate' in table 'vJ_UpdateProgram' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_UpdateProgram.TextUpdateColumn] = value;
                }
            }

            // Token: 0x06001A85 RID: 6789 RVA: 0x0009DF7C File Offset: 0x0009C17C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsModulNull()
            {
                return base.IsNull(this.tablevJ_UpdateProgram.ModulColumn);
            }

            // Token: 0x06001A86 RID: 6790 RVA: 0x0009DF8F File Offset: 0x0009C18F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModulNull()
            {
                base[this.tablevJ_UpdateProgram.ModulColumn] = Convert.DBNull;
            }

            // Token: 0x06001A87 RID: 6791 RVA: 0x0009DFA7 File Offset: 0x0009C1A7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDescriptionNull()
            {
                return base.IsNull(this.tablevJ_UpdateProgram.DescriptionColumn);
            }

            // Token: 0x06001A88 RID: 6792 RVA: 0x0009DFBA File Offset: 0x0009C1BA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull()
            {
                base[this.tablevJ_UpdateProgram.DescriptionColumn] = Convert.DBNull;
            }

            // Token: 0x06001A89 RID: 6793 RVA: 0x0009DFD2 File Offset: 0x0009C1D2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTextUpdateNull()
            {
                return base.IsNull(this.tablevJ_UpdateProgram.TextUpdateColumn);
            }

            // Token: 0x06001A8A RID: 6794 RVA: 0x0009DFE5 File Offset: 0x0009C1E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTextUpdateNull()
            {
                base[this.tablevJ_UpdateProgram.TextUpdateColumn] = Convert.DBNull;
            }

            // Token: 0x04000B95 RID: 2965
            private DataSetGES.vJ_UpdateProgramDataTable tablevJ_UpdateProgram;
        }

        // Token: 0x02000136 RID: 310
        public class tJ_UpdateProgramUserCheckRow : DataRow
        {
            // Token: 0x06001A8B RID: 6795 RVA: 0x0009DFFD File Offset: 0x0009C1FD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_UpdateProgramUserCheckRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_UpdateProgramUserCheck = (DataSetGES.tJ_UpdateProgramUserCheckDataTable)base.Table;
            }

            // Token: 0x170006CA RID: 1738
            // (get) Token: 0x06001A8C RID: 6796 RVA: 0x0009E017 File Offset: 0x0009C217
            // (set) Token: 0x06001A8D RID: 6797 RVA: 0x0009E02F File Offset: 0x0009C22F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string login
            {
                get
                {
                    return (string)base[this.tabletJ_UpdateProgramUserCheck.loginColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgramUserCheck.loginColumn] = value;
                }
            }

            // Token: 0x170006CB RID: 1739
            // (get) Token: 0x06001A8E RID: 6798 RVA: 0x0009E043 File Offset: 0x0009C243
            // (set) Token: 0x06001A8F RID: 6799 RVA: 0x0009E05B File Offset: 0x0009C25B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime dateCheck
            {
                get
                {
                    return (DateTime)base[this.tabletJ_UpdateProgramUserCheck.dateCheckColumn];
                }
                set
                {
                    base[this.tabletJ_UpdateProgramUserCheck.dateCheckColumn] = value;
                }
            }

            // Token: 0x04000B96 RID: 2966
            private DataSetGES.tJ_UpdateProgramUserCheckDataTable tabletJ_UpdateProgramUserCheck;
        }

        // Token: 0x02000137 RID: 311
        public class tMeas_MeasurementRow : DataRow
        {
            // Token: 0x06001A90 RID: 6800 RVA: 0x0009E074 File Offset: 0x0009C274
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tMeas_MeasurementRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletMeas_Measurement = (DataSetGES.tMeas_MeasurementDataTable)base.Table;
            }

            // Token: 0x170006CC RID: 1740
            // (get) Token: 0x06001A91 RID: 6801 RVA: 0x0009E08E File Offset: 0x0009C28E
            // (set) Token: 0x06001A92 RID: 6802 RVA: 0x0009E0A6 File Offset: 0x0009C2A6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletMeas_Measurement.idColumn];
                }
                set
                {
                    base[this.tabletMeas_Measurement.idColumn] = value;
                }
            }

            // Token: 0x170006CD RID: 1741
            // (get) Token: 0x06001A93 RID: 6803 RVA: 0x0009E0C0 File Offset: 0x0009C2C0
            // (set) Token: 0x06001A94 RID: 6804 RVA: 0x0009E104 File Offset: 0x0009C304
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int tpObj
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Measurement.tpObjColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'tpObj' in table 'tMeas_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Measurement.tpObjColumn] = value;
                }
            }

            // Token: 0x170006CE RID: 1742
            // (get) Token: 0x06001A95 RID: 6805 RVA: 0x0009E120 File Offset: 0x0009C320
            // (set) Token: 0x06001A96 RID: 6806 RVA: 0x0009E164 File Offset: 0x0009C364
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DTDayMetering
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tabletMeas_Measurement.DTDayMeteringColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DTDayMetering' in table 'tMeas_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Measurement.DTDayMeteringColumn] = value;
                }
            }

            // Token: 0x170006CF RID: 1743
            // (get) Token: 0x06001A97 RID: 6807 RVA: 0x0009E180 File Offset: 0x0009C380
            // (set) Token: 0x06001A98 RID: 6808 RVA: 0x0009E1C4 File Offset: 0x0009C3C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime DTEveningMetering
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tabletMeas_Measurement.DTEveningMeteringColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DTEveningMetering' in table 'tMeas_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Measurement.DTEveningMeteringColumn] = value;
                }
            }

            // Token: 0x170006D0 RID: 1744
            // (get) Token: 0x06001A99 RID: 6809 RVA: 0x0009E1E0 File Offset: 0x0009C3E0
            // (set) Token: 0x06001A9A RID: 6810 RVA: 0x0009E224 File Offset: 0x0009C424
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int tDay
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Measurement.tDayColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'tDay' in table 'tMeas_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Measurement.tDayColumn] = value;
                }
            }

            // Token: 0x170006D1 RID: 1745
            // (get) Token: 0x06001A9B RID: 6811 RVA: 0x0009E240 File Offset: 0x0009C440
            // (set) Token: 0x06001A9C RID: 6812 RVA: 0x0009E284 File Offset: 0x0009C484
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int tEvening
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Measurement.tEveningColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'tEvening' in table 'tMeas_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Measurement.tEveningColumn] = value;
                }
            }

            // Token: 0x170006D2 RID: 1746
            // (get) Token: 0x06001A9D RID: 6813 RVA: 0x0009E2A0 File Offset: 0x0009C4A0
            // (set) Token: 0x06001A9E RID: 6814 RVA: 0x0009E2E4 File Offset: 0x0009C4E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Worker
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Measurement.WorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Worker' in table 'tMeas_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Measurement.WorkerColumn] = value;
                }
            }

            // Token: 0x170006D3 RID: 1747
            // (get) Token: 0x06001A9F RID: 6815 RVA: 0x0009E300 File Offset: 0x0009C500
            // (set) Token: 0x06001AA0 RID: 6816 RVA: 0x0009E344 File Offset: 0x0009C544
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int MeasurementYear
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Measurement.MeasurementYearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'MeasurementYear' in table 'tMeas_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Measurement.MeasurementYearColumn] = value;
                }
            }

            // Token: 0x06001AA1 RID: 6817 RVA: 0x0009E35D File Offset: 0x0009C55D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstpObjNull()
            {
                return base.IsNull(this.tabletMeas_Measurement.tpObjColumn);
            }

            // Token: 0x06001AA2 RID: 6818 RVA: 0x0009E370 File Offset: 0x0009C570
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettpObjNull()
            {
                base[this.tabletMeas_Measurement.tpObjColumn] = Convert.DBNull;
            }

            // Token: 0x06001AA3 RID: 6819 RVA: 0x0009E388 File Offset: 0x0009C588
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDTDayMeteringNull()
            {
                return base.IsNull(this.tabletMeas_Measurement.DTDayMeteringColumn);
            }

            // Token: 0x06001AA4 RID: 6820 RVA: 0x0009E39B File Offset: 0x0009C59B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDTDayMeteringNull()
            {
                base[this.tabletMeas_Measurement.DTDayMeteringColumn] = Convert.DBNull;
            }

            // Token: 0x06001AA5 RID: 6821 RVA: 0x0009E3B3 File Offset: 0x0009C5B3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDTEveningMeteringNull()
            {
                return base.IsNull(this.tabletMeas_Measurement.DTEveningMeteringColumn);
            }

            // Token: 0x06001AA6 RID: 6822 RVA: 0x0009E3C6 File Offset: 0x0009C5C6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDTEveningMeteringNull()
            {
                base[this.tabletMeas_Measurement.DTEveningMeteringColumn] = Convert.DBNull;
            }

            // Token: 0x06001AA7 RID: 6823 RVA: 0x0009E3DE File Offset: 0x0009C5DE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IstDayNull()
            {
                return base.IsNull(this.tabletMeas_Measurement.tDayColumn);
            }

            // Token: 0x06001AA8 RID: 6824 RVA: 0x0009E3F1 File Offset: 0x0009C5F1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettDayNull()
            {
                base[this.tabletMeas_Measurement.tDayColumn] = Convert.DBNull;
            }

            // Token: 0x06001AA9 RID: 6825 RVA: 0x0009E409 File Offset: 0x0009C609
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IstEveningNull()
            {
                return base.IsNull(this.tabletMeas_Measurement.tEveningColumn);
            }

            // Token: 0x06001AAA RID: 6826 RVA: 0x0009E41C File Offset: 0x0009C61C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettEveningNull()
            {
                base[this.tabletMeas_Measurement.tEveningColumn] = Convert.DBNull;
            }

            // Token: 0x06001AAB RID: 6827 RVA: 0x0009E434 File Offset: 0x0009C634
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkerNull()
            {
                return base.IsNull(this.tabletMeas_Measurement.WorkerColumn);
            }

            // Token: 0x06001AAC RID: 6828 RVA: 0x0009E447 File Offset: 0x0009C647
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetWorkerNull()
            {
                base[this.tabletMeas_Measurement.WorkerColumn] = Convert.DBNull;
            }

            // Token: 0x06001AAD RID: 6829 RVA: 0x0009E45F File Offset: 0x0009C65F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeasurementYearNull()
            {
                return base.IsNull(this.tabletMeas_Measurement.MeasurementYearColumn);
            }

            // Token: 0x06001AAE RID: 6830 RVA: 0x0009E472 File Offset: 0x0009C672
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetMeasurementYearNull()
            {
                base[this.tabletMeas_Measurement.MeasurementYearColumn] = Convert.DBNull;
            }

            // Token: 0x04000B97 RID: 2967
            private DataSetGES.tMeas_MeasurementDataTable tabletMeas_Measurement;
        }

        // Token: 0x02000138 RID: 312
        public class tMeas_TransRow : DataRow
        {
            // Token: 0x06001AAF RID: 6831 RVA: 0x0009E48A File Offset: 0x0009C68A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tMeas_TransRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletMeas_Trans = (DataSetGES.tMeas_TransDataTable)base.Table;
            }

            // Token: 0x170006D4 RID: 1748
            // (get) Token: 0x06001AB0 RID: 6832 RVA: 0x0009E4A4 File Offset: 0x0009C6A4
            // (set) Token: 0x06001AB1 RID: 6833 RVA: 0x0009E4BC File Offset: 0x0009C6BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletMeas_Trans.idColumn];
                }
                set
                {
                    base[this.tabletMeas_Trans.idColumn] = value;
                }
            }

            // Token: 0x170006D5 RID: 1749
            // (get) Token: 0x06001AB2 RID: 6834 RVA: 0x0009E4D8 File Offset: 0x0009C6D8
            // (set) Token: 0x06001AB3 RID: 6835 RVA: 0x0009E51C File Offset: 0x0009C71C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeas
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.idMeasColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idMeas' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.idMeasColumn] = value;
                }
            }

            // Token: 0x170006D6 RID: 1750
            // (get) Token: 0x06001AB4 RID: 6836 RVA: 0x0009E538 File Offset: 0x0009C738
            // (set) Token: 0x06001AB5 RID: 6837 RVA: 0x0009E57C File Offset: 0x0009C77C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int transObj
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.transObjColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'transObj' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.transObjColumn] = value;
                }
            }

            // Token: 0x170006D7 RID: 1751
            // (get) Token: 0x06001AB6 RID: 6838 RVA: 0x0009E598 File Offset: 0x0009C798
            // (set) Token: 0x06001AB7 RID: 6839 RVA: 0x0009E5DC File Offset: 0x0009C7DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UabD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UabDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UabD' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UabDColumn] = value;
                }
            }

            // Token: 0x170006D8 RID: 1752
            // (get) Token: 0x06001AB8 RID: 6840 RVA: 0x0009E5F8 File Offset: 0x0009C7F8
            // (set) Token: 0x06001AB9 RID: 6841 RVA: 0x0009E63C File Offset: 0x0009C83C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UbcD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UbcDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UbcD' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UbcDColumn] = value;
                }
            }

            // Token: 0x170006D9 RID: 1753
            // (get) Token: 0x06001ABA RID: 6842 RVA: 0x0009E658 File Offset: 0x0009C858
            // (set) Token: 0x06001ABB RID: 6843 RVA: 0x0009E69C File Offset: 0x0009C89C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UcaD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UcaDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UcaD' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UcaDColumn] = value;
                }
            }

            // Token: 0x170006DA RID: 1754
            // (get) Token: 0x06001ABC RID: 6844 RVA: 0x0009E6B8 File Offset: 0x0009C8B8
            // (set) Token: 0x06001ABD RID: 6845 RVA: 0x0009E6FC File Offset: 0x0009C8FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UabE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UabEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UabE' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UabEColumn] = value;
                }
            }

            // Token: 0x170006DB RID: 1755
            // (get) Token: 0x06001ABE RID: 6846 RVA: 0x0009E718 File Offset: 0x0009C918
            // (set) Token: 0x06001ABF RID: 6847 RVA: 0x0009E75C File Offset: 0x0009C95C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UbcE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UbcEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UbcE' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UbcEColumn] = value;
                }
            }

            // Token: 0x170006DC RID: 1756
            // (get) Token: 0x06001AC0 RID: 6848 RVA: 0x0009E778 File Offset: 0x0009C978
            // (set) Token: 0x06001AC1 RID: 6849 RVA: 0x0009E7BC File Offset: 0x0009C9BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UcaE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UcaEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UcaE' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UcaEColumn] = value;
                }
            }

            // Token: 0x170006DD RID: 1757
            // (get) Token: 0x06001AC2 RID: 6850 RVA: 0x0009E7D8 File Offset: 0x0009C9D8
            // (set) Token: 0x06001AC3 RID: 6851 RVA: 0x0009E81C File Offset: 0x0009CA1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UaD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UaDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UaD' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UaDColumn] = value;
                }
            }

            // Token: 0x170006DE RID: 1758
            // (get) Token: 0x06001AC4 RID: 6852 RVA: 0x0009E838 File Offset: 0x0009CA38
            // (set) Token: 0x06001AC5 RID: 6853 RVA: 0x0009E87C File Offset: 0x0009CA7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UbD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UbDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UbD' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UbDColumn] = value;
                }
            }

            // Token: 0x170006DF RID: 1759
            // (get) Token: 0x06001AC6 RID: 6854 RVA: 0x0009E898 File Offset: 0x0009CA98
            // (set) Token: 0x06001AC7 RID: 6855 RVA: 0x0009E8DC File Offset: 0x0009CADC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UcD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UcDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UcD' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UcDColumn] = value;
                }
            }

            // Token: 0x170006E0 RID: 1760
            // (get) Token: 0x06001AC8 RID: 6856 RVA: 0x0009E8F8 File Offset: 0x0009CAF8
            // (set) Token: 0x06001AC9 RID: 6857 RVA: 0x0009E93C File Offset: 0x0009CB3C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UaE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UaEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UaE' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UaEColumn] = value;
                }
            }

            // Token: 0x170006E1 RID: 1761
            // (get) Token: 0x06001ACA RID: 6858 RVA: 0x0009E958 File Offset: 0x0009CB58
            // (set) Token: 0x06001ACB RID: 6859 RVA: 0x0009E99C File Offset: 0x0009CB9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UbE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UbEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UbE' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UbEColumn] = value;
                }
            }

            // Token: 0x170006E2 RID: 1762
            // (get) Token: 0x06001ACC RID: 6860 RVA: 0x0009E9B8 File Offset: 0x0009CBB8
            // (set) Token: 0x06001ACD RID: 6861 RVA: 0x0009E9FC File Offset: 0x0009CBFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int UcE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.UcEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'UcE' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.UcEColumn] = value;
                }
            }

            // Token: 0x170006E3 RID: 1763
            // (get) Token: 0x06001ACE RID: 6862 RVA: 0x0009EA18 File Offset: 0x0009CC18
            // (set) Token: 0x06001ACF RID: 6863 RVA: 0x0009EA5C File Offset: 0x0009CC5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int StateSwitch
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Trans.StateSwitchColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'StateSwitch' in table 'tMeas_Trans' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Trans.StateSwitchColumn] = value;
                }
            }

            // Token: 0x06001AD0 RID: 6864 RVA: 0x0009EA75 File Offset: 0x0009CC75
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidMeasNull()
            {
                return base.IsNull(this.tabletMeas_Trans.idMeasColumn);
            }

            // Token: 0x06001AD1 RID: 6865 RVA: 0x0009EA88 File Offset: 0x0009CC88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidMeasNull()
            {
                base[this.tabletMeas_Trans.idMeasColumn] = Convert.DBNull;
            }

            // Token: 0x06001AD2 RID: 6866 RVA: 0x0009EAA0 File Offset: 0x0009CCA0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstransObjNull()
            {
                return base.IsNull(this.tabletMeas_Trans.transObjColumn);
            }

            // Token: 0x06001AD3 RID: 6867 RVA: 0x0009EAB3 File Offset: 0x0009CCB3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettransObjNull()
            {
                base[this.tabletMeas_Trans.transObjColumn] = Convert.DBNull;
            }

            // Token: 0x06001AD4 RID: 6868 RVA: 0x0009EACB File Offset: 0x0009CCCB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUabDNull()
            {
                return base.IsNull(this.tabletMeas_Trans.UabDColumn);
            }

            // Token: 0x06001AD5 RID: 6869 RVA: 0x0009EADE File Offset: 0x0009CCDE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUabDNull()
            {
                base[this.tabletMeas_Trans.UabDColumn] = Convert.DBNull;
            }

            // Token: 0x06001AD6 RID: 6870 RVA: 0x0009EAF6 File Offset: 0x0009CCF6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUbcDNull()
            {
                return base.IsNull(this.tabletMeas_Trans.UbcDColumn);
            }

            // Token: 0x06001AD7 RID: 6871 RVA: 0x0009EB09 File Offset: 0x0009CD09
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUbcDNull()
            {
                base[this.tabletMeas_Trans.UbcDColumn] = Convert.DBNull;
            }

            // Token: 0x06001AD8 RID: 6872 RVA: 0x0009EB21 File Offset: 0x0009CD21
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUcaDNull()
            {
                return base.IsNull(this.tabletMeas_Trans.UcaDColumn);
            }

            // Token: 0x06001AD9 RID: 6873 RVA: 0x0009EB34 File Offset: 0x0009CD34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUcaDNull()
            {
                base[this.tabletMeas_Trans.UcaDColumn] = Convert.DBNull;
            }

            // Token: 0x06001ADA RID: 6874 RVA: 0x0009EB4C File Offset: 0x0009CD4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUabENull()
            {
                return base.IsNull(this.tabletMeas_Trans.UabEColumn);
            }

            // Token: 0x06001ADB RID: 6875 RVA: 0x0009EB5F File Offset: 0x0009CD5F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUabENull()
            {
                base[this.tabletMeas_Trans.UabEColumn] = Convert.DBNull;
            }

            // Token: 0x06001ADC RID: 6876 RVA: 0x0009EB77 File Offset: 0x0009CD77
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUbcENull()
            {
                return base.IsNull(this.tabletMeas_Trans.UbcEColumn);
            }

            // Token: 0x06001ADD RID: 6877 RVA: 0x0009EB8A File Offset: 0x0009CD8A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUbcENull()
            {
                base[this.tabletMeas_Trans.UbcEColumn] = Convert.DBNull;
            }

            // Token: 0x06001ADE RID: 6878 RVA: 0x0009EBA2 File Offset: 0x0009CDA2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUcaENull()
            {
                return base.IsNull(this.tabletMeas_Trans.UcaEColumn);
            }

            // Token: 0x06001ADF RID: 6879 RVA: 0x0009EBB5 File Offset: 0x0009CDB5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUcaENull()
            {
                base[this.tabletMeas_Trans.UcaEColumn] = Convert.DBNull;
            }

            // Token: 0x06001AE0 RID: 6880 RVA: 0x0009EBCD File Offset: 0x0009CDCD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUaDNull()
            {
                return base.IsNull(this.tabletMeas_Trans.UaDColumn);
            }

            // Token: 0x06001AE1 RID: 6881 RVA: 0x0009EBE0 File Offset: 0x0009CDE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUaDNull()
            {
                base[this.tabletMeas_Trans.UaDColumn] = Convert.DBNull;
            }

            // Token: 0x06001AE2 RID: 6882 RVA: 0x0009EBF8 File Offset: 0x0009CDF8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUbDNull()
            {
                return base.IsNull(this.tabletMeas_Trans.UbDColumn);
            }

            // Token: 0x06001AE3 RID: 6883 RVA: 0x0009EC0B File Offset: 0x0009CE0B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUbDNull()
            {
                base[this.tabletMeas_Trans.UbDColumn] = Convert.DBNull;
            }

            // Token: 0x06001AE4 RID: 6884 RVA: 0x0009EC23 File Offset: 0x0009CE23
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUcDNull()
            {
                return base.IsNull(this.tabletMeas_Trans.UcDColumn);
            }

            // Token: 0x06001AE5 RID: 6885 RVA: 0x0009EC36 File Offset: 0x0009CE36
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUcDNull()
            {
                base[this.tabletMeas_Trans.UcDColumn] = Convert.DBNull;
            }

            // Token: 0x06001AE6 RID: 6886 RVA: 0x0009EC4E File Offset: 0x0009CE4E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUaENull()
            {
                return base.IsNull(this.tabletMeas_Trans.UaEColumn);
            }

            // Token: 0x06001AE7 RID: 6887 RVA: 0x0009EC61 File Offset: 0x0009CE61
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUaENull()
            {
                base[this.tabletMeas_Trans.UaEColumn] = Convert.DBNull;
            }

            // Token: 0x06001AE8 RID: 6888 RVA: 0x0009EC79 File Offset: 0x0009CE79
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUbENull()
            {
                return base.IsNull(this.tabletMeas_Trans.UbEColumn);
            }

            // Token: 0x06001AE9 RID: 6889 RVA: 0x0009EC8C File Offset: 0x0009CE8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUbENull()
            {
                base[this.tabletMeas_Trans.UbEColumn] = Convert.DBNull;
            }

            // Token: 0x06001AEA RID: 6890 RVA: 0x0009ECA4 File Offset: 0x0009CEA4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUcENull()
            {
                return base.IsNull(this.tabletMeas_Trans.UcEColumn);
            }

            // Token: 0x06001AEB RID: 6891 RVA: 0x0009ECB7 File Offset: 0x0009CEB7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUcENull()
            {
                base[this.tabletMeas_Trans.UcEColumn] = Convert.DBNull;
            }

            // Token: 0x06001AEC RID: 6892 RVA: 0x0009ECCF File Offset: 0x0009CECF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsStateSwitchNull()
            {
                return base.IsNull(this.tabletMeas_Trans.StateSwitchColumn);
            }

            // Token: 0x06001AED RID: 6893 RVA: 0x0009ECE2 File Offset: 0x0009CEE2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetStateSwitchNull()
            {
                base[this.tabletMeas_Trans.StateSwitchColumn] = Convert.DBNull;
            }

            // Token: 0x04000B98 RID: 2968
            private DataSetGES.tMeas_TransDataTable tabletMeas_Trans;
        }

        // Token: 0x02000139 RID: 313
        public class tMeas_CabRow : DataRow
        {
            // Token: 0x06001AEE RID: 6894 RVA: 0x0009ECFA File Offset: 0x0009CEFA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tMeas_CabRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletMeas_Cab = (DataSetGES.tMeas_CabDataTable)base.Table;
            }

            // Token: 0x170006E4 RID: 1764
            // (get) Token: 0x06001AEF RID: 6895 RVA: 0x0009ED14 File Offset: 0x0009CF14
            // (set) Token: 0x06001AF0 RID: 6896 RVA: 0x0009ED2C File Offset: 0x0009CF2C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletMeas_Cab.idColumn];
                }
                set
                {
                    base[this.tabletMeas_Cab.idColumn] = value;
                }
            }

            // Token: 0x170006E5 RID: 1765
            // (get) Token: 0x06001AF1 RID: 6897 RVA: 0x0009ED48 File Offset: 0x0009CF48
            // (set) Token: 0x06001AF2 RID: 6898 RVA: 0x0009ED8C File Offset: 0x0009CF8C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTrans
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.idTransColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTrans' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.idTransColumn] = value;
                }
            }

            // Token: 0x170006E6 RID: 1766
            // (get) Token: 0x06001AF3 RID: 6899 RVA: 0x0009EDA8 File Offset: 0x0009CFA8
            // (set) Token: 0x06001AF4 RID: 6900 RVA: 0x0009EDEC File Offset: 0x0009CFEC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int obj
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.objColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'obj' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.objColumn] = value;
                }
            }

            // Token: 0x170006E7 RID: 1767
            // (get) Token: 0x06001AF5 RID: 6901 RVA: 0x0009EE08 File Offset: 0x0009D008
            // (set) Token: 0x06001AF6 RID: 6902 RVA: 0x0009EE4C File Offset: 0x0009D04C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IaD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IaDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IaD' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IaDColumn] = value;
                }
            }

            // Token: 0x170006E8 RID: 1768
            // (get) Token: 0x06001AF7 RID: 6903 RVA: 0x0009EE68 File Offset: 0x0009D068
            // (set) Token: 0x06001AF8 RID: 6904 RVA: 0x0009EEAC File Offset: 0x0009D0AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IbD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IbDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IbD' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IbDColumn] = value;
                }
            }

            // Token: 0x170006E9 RID: 1769
            // (get) Token: 0x06001AF9 RID: 6905 RVA: 0x0009EEC8 File Offset: 0x0009D0C8
            // (set) Token: 0x06001AFA RID: 6906 RVA: 0x0009EF0C File Offset: 0x0009D10C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IcD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IcDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IcD' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IcDColumn] = value;
                }
            }

            // Token: 0x170006EA RID: 1770
            // (get) Token: 0x06001AFB RID: 6907 RVA: 0x0009EF28 File Offset: 0x0009D128
            // (set) Token: 0x06001AFC RID: 6908 RVA: 0x0009EF6C File Offset: 0x0009D16C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IoD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IoDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IoD' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IoDColumn] = value;
                }
            }

            // Token: 0x170006EB RID: 1771
            // (get) Token: 0x06001AFD RID: 6909 RVA: 0x0009EF88 File Offset: 0x0009D188
            // (set) Token: 0x06001AFE RID: 6910 RVA: 0x0009EFCC File Offset: 0x0009D1CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IaE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IaEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IaE' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IaEColumn] = value;
                }
            }

            // Token: 0x170006EC RID: 1772
            // (get) Token: 0x06001AFF RID: 6911 RVA: 0x0009EFE8 File Offset: 0x0009D1E8
            // (set) Token: 0x06001B00 RID: 6912 RVA: 0x0009F02C File Offset: 0x0009D22C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IbE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IbEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IbE' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IbEColumn] = value;
                }
            }

            // Token: 0x170006ED RID: 1773
            // (get) Token: 0x06001B01 RID: 6913 RVA: 0x0009F048 File Offset: 0x0009D248
            // (set) Token: 0x06001B02 RID: 6914 RVA: 0x0009F08C File Offset: 0x0009D28C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IcE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IcEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IcE' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IcEColumn] = value;
                }
            }

            // Token: 0x170006EE RID: 1774
            // (get) Token: 0x06001B03 RID: 6915 RVA: 0x0009F0A8 File Offset: 0x0009D2A8
            // (set) Token: 0x06001B04 RID: 6916 RVA: 0x0009F0EC File Offset: 0x0009D2EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IoE
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletMeas_Cab.IoEColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IoE' in table 'tMeas_Cab' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletMeas_Cab.IoEColumn] = value;
                }
            }

            // Token: 0x06001B05 RID: 6917 RVA: 0x0009F105 File Offset: 0x0009D305
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidTransNull()
            {
                return base.IsNull(this.tabletMeas_Cab.idTransColumn);
            }

            // Token: 0x06001B06 RID: 6918 RVA: 0x0009F118 File Offset: 0x0009D318
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidTransNull()
            {
                base[this.tabletMeas_Cab.idTransColumn] = Convert.DBNull;
            }

            // Token: 0x06001B07 RID: 6919 RVA: 0x0009F130 File Offset: 0x0009D330
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsobjNull()
            {
                return base.IsNull(this.tabletMeas_Cab.objColumn);
            }

            // Token: 0x06001B08 RID: 6920 RVA: 0x0009F143 File Offset: 0x0009D343
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetobjNull()
            {
                base[this.tabletMeas_Cab.objColumn] = Convert.DBNull;
            }

            // Token: 0x06001B09 RID: 6921 RVA: 0x0009F15B File Offset: 0x0009D35B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIaDNull()
            {
                return base.IsNull(this.tabletMeas_Cab.IaDColumn);
            }

            // Token: 0x06001B0A RID: 6922 RVA: 0x0009F16E File Offset: 0x0009D36E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIaDNull()
            {
                base[this.tabletMeas_Cab.IaDColumn] = Convert.DBNull;
            }

            // Token: 0x06001B0B RID: 6923 RVA: 0x0009F186 File Offset: 0x0009D386
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbDNull()
            {
                return base.IsNull(this.tabletMeas_Cab.IbDColumn);
            }

            // Token: 0x06001B0C RID: 6924 RVA: 0x0009F199 File Offset: 0x0009D399
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbDNull()
            {
                base[this.tabletMeas_Cab.IbDColumn] = Convert.DBNull;
            }

            // Token: 0x06001B0D RID: 6925 RVA: 0x0009F1B1 File Offset: 0x0009D3B1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcDNull()
            {
                return base.IsNull(this.tabletMeas_Cab.IcDColumn);
            }

            // Token: 0x06001B0E RID: 6926 RVA: 0x0009F1C4 File Offset: 0x0009D3C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcDNull()
            {
                base[this.tabletMeas_Cab.IcDColumn] = Convert.DBNull;
            }

            // Token: 0x06001B0F RID: 6927 RVA: 0x0009F1DC File Offset: 0x0009D3DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIoDNull()
            {
                return base.IsNull(this.tabletMeas_Cab.IoDColumn);
            }

            // Token: 0x06001B10 RID: 6928 RVA: 0x0009F1EF File Offset: 0x0009D3EF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIoDNull()
            {
                base[this.tabletMeas_Cab.IoDColumn] = Convert.DBNull;
            }

            // Token: 0x06001B11 RID: 6929 RVA: 0x0009F207 File Offset: 0x0009D407
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIaENull()
            {
                return base.IsNull(this.tabletMeas_Cab.IaEColumn);
            }

            // Token: 0x06001B12 RID: 6930 RVA: 0x0009F21A File Offset: 0x0009D41A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIaENull()
            {
                base[this.tabletMeas_Cab.IaEColumn] = Convert.DBNull;
            }

            // Token: 0x06001B13 RID: 6931 RVA: 0x0009F232 File Offset: 0x0009D432
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbENull()
            {
                return base.IsNull(this.tabletMeas_Cab.IbEColumn);
            }

            // Token: 0x06001B14 RID: 6932 RVA: 0x0009F245 File Offset: 0x0009D445
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbENull()
            {
                base[this.tabletMeas_Cab.IbEColumn] = Convert.DBNull;
            }

            // Token: 0x06001B15 RID: 6933 RVA: 0x0009F25D File Offset: 0x0009D45D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcENull()
            {
                return base.IsNull(this.tabletMeas_Cab.IcEColumn);
            }

            // Token: 0x06001B16 RID: 6934 RVA: 0x0009F270 File Offset: 0x0009D470
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcENull()
            {
                base[this.tabletMeas_Cab.IcEColumn] = Convert.DBNull;
            }

            // Token: 0x06001B17 RID: 6935 RVA: 0x0009F288 File Offset: 0x0009D488
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIoENull()
            {
                return base.IsNull(this.tabletMeas_Cab.IoEColumn);
            }

            // Token: 0x06001B18 RID: 6936 RVA: 0x0009F29B File Offset: 0x0009D49B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIoENull()
            {
                base[this.tabletMeas_Cab.IoEColumn] = Convert.DBNull;
            }

            // Token: 0x04000B99 RID: 2969
            private DataSetGES.tMeas_CabDataTable tabletMeas_Cab;
        }

        // Token: 0x0200013A RID: 314
        public class tSchm_ObjListRow : DataRow
        {
            // Token: 0x06001B19 RID: 6937 RVA: 0x0009F2B3 File Offset: 0x0009D4B3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tSchm_ObjListRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletSchm_ObjList = (DataSetGES.tSchm_ObjListDataTable)base.Table;
            }

            // Token: 0x170006EF RID: 1775
            // (get) Token: 0x06001B1A RID: 6938 RVA: 0x0009F2CD File Offset: 0x0009D4CD
            // (set) Token: 0x06001B1B RID: 6939 RVA: 0x0009F2E5 File Offset: 0x0009D4E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int)base[this.tabletSchm_ObjList.IdColumn];
                }
                set
                {
                    base[this.tabletSchm_ObjList.IdColumn] = value;
                }
            }

            // Token: 0x170006F0 RID: 1776
            // (get) Token: 0x06001B1C RID: 6940 RVA: 0x0009F300 File Offset: 0x0009D500
            // (set) Token: 0x06001B1D RID: 6941 RVA: 0x0009F344 File Offset: 0x0009D544
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletSchm_ObjList.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList.NameColumn] = value;
                }
            }

            // Token: 0x06001B1E RID: 6942 RVA: 0x0009F358 File Offset: 0x0009D558
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tabletSchm_ObjList.NameColumn);
            }

            // Token: 0x06001B1F RID: 6943 RVA: 0x0009F36B File Offset: 0x0009D56B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tabletSchm_ObjList.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000B9A RID: 2970
            private DataSetGES.tSchm_ObjListDataTable tabletSchm_ObjList;
        }

        // Token: 0x0200013B RID: 315
        public class vP_WorkerRow : DataRow
        {
            // Token: 0x06001B20 RID: 6944 RVA: 0x0009F383 File Offset: 0x0009D583
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vP_WorkerRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevP_Worker = (DataSetGES.vP_WorkerDataTable)base.Table;
            }

            // Token: 0x170006F1 RID: 1777
            // (get) Token: 0x06001B21 RID: 6945 RVA: 0x0009F39D File Offset: 0x0009D59D
            // (set) Token: 0x06001B22 RID: 6946 RVA: 0x0009F3B5 File Offset: 0x0009D5B5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int)base[this.tablevP_Worker.IdColumn];
                }
                set
                {
                    base[this.tablevP_Worker.IdColumn] = value;
                }
            }

            // Token: 0x170006F2 RID: 1778
            // (get) Token: 0x06001B23 RID: 6947 RVA: 0x0009F3CE File Offset: 0x0009D5CE
            // (set) Token: 0x06001B24 RID: 6948 RVA: 0x0009F3E6 File Offset: 0x0009D5E6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F
            {
                get
                {
                    return (string)base[this.tablevP_Worker.FColumn];
                }
                set
                {
                    base[this.tablevP_Worker.FColumn] = value;
                }
            }

            // Token: 0x170006F3 RID: 1779
            // (get) Token: 0x06001B25 RID: 6949 RVA: 0x0009F3FC File Offset: 0x0009D5FC
            // (set) Token: 0x06001B26 RID: 6950 RVA: 0x0009F440 File Offset: 0x0009D640
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string I
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_Worker.IColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'I' in table 'vP_Worker' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_Worker.IColumn] = value;
                }
            }

            // Token: 0x170006F4 RID: 1780
            // (get) Token: 0x06001B27 RID: 6951 RVA: 0x0009F454 File Offset: 0x0009D654
            // (set) Token: 0x06001B28 RID: 6952 RVA: 0x0009F498 File Offset: 0x0009D698
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string O
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_Worker.OColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'O' in table 'vP_Worker' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_Worker.OColumn] = value;
                }
            }

            // Token: 0x170006F5 RID: 1781
            // (get) Token: 0x06001B29 RID: 6953 RVA: 0x0009F4AC File Offset: 0x0009D6AC
            // (set) Token: 0x06001B2A RID: 6954 RVA: 0x0009F4F0 File Offset: 0x0009D6F0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_Worker.FIOColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vP_Worker' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_Worker.FIOColumn] = value;
                }
            }

            // Token: 0x170006F6 RID: 1782
            // (get) Token: 0x06001B2B RID: 6955 RVA: 0x0009F504 File Offset: 0x0009D704
            // (set) Token: 0x06001B2C RID: 6956 RVA: 0x0009F548 File Offset: 0x0009D748
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateBegin
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevP_Worker.DateBeginColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateBegin' in table 'vP_Worker' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_Worker.DateBeginColumn] = value;
                }
            }

            // Token: 0x170006F7 RID: 1783
            // (get) Token: 0x06001B2D RID: 6957 RVA: 0x0009F564 File Offset: 0x0009D764
            // (set) Token: 0x06001B2E RID: 6958 RVA: 0x0009F5A8 File Offset: 0x0009D7A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateEnd
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevP_Worker.DateEndColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateEnd' in table 'vP_Worker' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_Worker.DateEndColumn] = value;
                }
            }

            // Token: 0x170006F8 RID: 1784
            // (get) Token: 0x06001B2F RID: 6959 RVA: 0x0009F5C1 File Offset: 0x0009D7C1
            // (set) Token: 0x06001B30 RID: 6960 RVA: 0x0009F5D9 File Offset: 0x0009D7D9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idGroup
            {
                get
                {
                    return (int)base[this.tablevP_Worker.idGroupColumn];
                }
                set
                {
                    base[this.tablevP_Worker.idGroupColumn] = value;
                }
            }

            // Token: 0x170006F9 RID: 1785
            // (get) Token: 0x06001B31 RID: 6961 RVA: 0x0009F5F4 File Offset: 0x0009D7F4
            // (set) Token: 0x06001B32 RID: 6962 RVA: 0x0009F638 File Offset: 0x0009D838
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ParentKey
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_Worker.ParentKeyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'vP_Worker' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_Worker.ParentKeyColumn] = value;
                }
            }

            // Token: 0x170006FA RID: 1786
            // (get) Token: 0x06001B33 RID: 6963 RVA: 0x0009F64C File Offset: 0x0009D84C
            // (set) Token: 0x06001B34 RID: 6964 RVA: 0x0009F664 File Offset: 0x0009D864
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool isGroup
            {
                get
                {
                    return (bool)base[this.tablevP_Worker.isGroupColumn];
                }
                set
                {
                    base[this.tablevP_Worker.isGroupColumn] = value;
                }
            }

            // Token: 0x06001B35 RID: 6965 RVA: 0x0009F67D File Offset: 0x0009D87D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINull()
            {
                return base.IsNull(this.tablevP_Worker.IColumn);
            }

            // Token: 0x06001B36 RID: 6966 RVA: 0x0009F690 File Offset: 0x0009D890
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINull()
            {
                base[this.tablevP_Worker.IColumn] = Convert.DBNull;
            }

            // Token: 0x06001B37 RID: 6967 RVA: 0x0009F6A8 File Offset: 0x0009D8A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsONull()
            {
                return base.IsNull(this.tablevP_Worker.OColumn);
            }

            // Token: 0x06001B38 RID: 6968 RVA: 0x0009F6BB File Offset: 0x0009D8BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetONull()
            {
                base[this.tablevP_Worker.OColumn] = Convert.DBNull;
            }

            // Token: 0x06001B39 RID: 6969 RVA: 0x0009F6D3 File Offset: 0x0009D8D3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIONull()
            {
                return base.IsNull(this.tablevP_Worker.FIOColumn);
            }

            // Token: 0x06001B3A RID: 6970 RVA: 0x0009F6E6 File Offset: 0x0009D8E6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIONull()
            {
                base[this.tablevP_Worker.FIOColumn] = Convert.DBNull;
            }

            // Token: 0x06001B3B RID: 6971 RVA: 0x0009F6FE File Offset: 0x0009D8FE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateBeginNull()
            {
                return base.IsNull(this.tablevP_Worker.DateBeginColumn);
            }

            // Token: 0x06001B3C RID: 6972 RVA: 0x0009F711 File Offset: 0x0009D911
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDateBeginNull()
            {
                base[this.tablevP_Worker.DateBeginColumn] = Convert.DBNull;
            }

            // Token: 0x06001B3D RID: 6973 RVA: 0x0009F729 File Offset: 0x0009D929
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDateEndNull()
            {
                return base.IsNull(this.tablevP_Worker.DateEndColumn);
            }

            // Token: 0x06001B3E RID: 6974 RVA: 0x0009F73C File Offset: 0x0009D93C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDateEndNull()
            {
                base[this.tablevP_Worker.DateEndColumn] = Convert.DBNull;
            }

            // Token: 0x06001B3F RID: 6975 RVA: 0x0009F754 File Offset: 0x0009D954
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsParentKeyNull()
            {
                return base.IsNull(this.tablevP_Worker.ParentKeyColumn);
            }

            // Token: 0x06001B40 RID: 6976 RVA: 0x0009F767 File Offset: 0x0009D967
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetParentKeyNull()
            {
                base[this.tablevP_Worker.ParentKeyColumn] = Convert.DBNull;
            }

            // Token: 0x04000B9B RID: 2971
            private DataSetGES.vP_WorkerDataTable tablevP_Worker;
        }

        // Token: 0x0200013C RID: 316
        public class tP_ValueListsRow : DataRow
        {
            // Token: 0x06001B41 RID: 6977 RVA: 0x0009F77F File Offset: 0x0009D97F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tP_ValueListsRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletP_ValueLists = (DataSetGES.tP_ValueListsDataTable)base.Table;
            }

            // Token: 0x170006FB RID: 1787
            // (get) Token: 0x06001B42 RID: 6978 RVA: 0x0009F799 File Offset: 0x0009D999
            // (set) Token: 0x06001B43 RID: 6979 RVA: 0x0009F7B1 File Offset: 0x0009D9B1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletP_ValueLists.idColumn];
                }
                set
                {
                    base[this.tabletP_ValueLists.idColumn] = value;
                }
            }

            // Token: 0x170006FC RID: 1788
            // (get) Token: 0x06001B44 RID: 6980 RVA: 0x0009F7CC File Offset: 0x0009D9CC
            // (set) Token: 0x06001B45 RID: 6981 RVA: 0x0009F810 File Offset: 0x0009DA10
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int ParentId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletP_ValueLists.ParentIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ParentId' in table 'tP_ValueLists' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletP_ValueLists.ParentIdColumn] = value;
                }
            }

            // Token: 0x170006FD RID: 1789
            // (get) Token: 0x06001B46 RID: 6982 RVA: 0x0009F82C File Offset: 0x0009DA2C
            // (set) Token: 0x06001B47 RID: 6983 RVA: 0x0009F870 File Offset: 0x0009DA70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentKey
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletP_ValueLists.ParentKeyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'tP_ValueLists' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletP_ValueLists.ParentKeyColumn] = value;
                }
            }

            // Token: 0x170006FE RID: 1790
            // (get) Token: 0x06001B48 RID: 6984 RVA: 0x0009F884 File Offset: 0x0009DA84
            // (set) Token: 0x06001B49 RID: 6985 RVA: 0x0009F89C File Offset: 0x0009DA9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    return (string)base[this.tabletP_ValueLists.NameColumn];
                }
                set
                {
                    base[this.tabletP_ValueLists.NameColumn] = value;
                }
            }

            // Token: 0x170006FF RID: 1791
            // (get) Token: 0x06001B4A RID: 6986 RVA: 0x0009F8B0 File Offset: 0x0009DAB0
            // (set) Token: 0x06001B4B RID: 6987 RVA: 0x0009F8F4 File Offset: 0x0009DAF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool isGroup
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletP_ValueLists.isGroupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'isGroup' in table 'tP_ValueLists' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletP_ValueLists.isGroupColumn] = value;
                }
            }

            // Token: 0x17000700 RID: 1792
            // (get) Token: 0x06001B4C RID: 6988 RVA: 0x0009F910 File Offset: 0x0009DB10
            // (set) Token: 0x06001B4D RID: 6989 RVA: 0x0009F954 File Offset: 0x0009DB54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletP_ValueLists.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tP_ValueLists' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletP_ValueLists.DeletedColumn] = value;
                }
            }

            // Token: 0x06001B4E RID: 6990 RVA: 0x0009F96D File Offset: 0x0009DB6D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsParentIdNull()
            {
                return base.IsNull(this.tabletP_ValueLists.ParentIdColumn);
            }

            // Token: 0x06001B4F RID: 6991 RVA: 0x0009F980 File Offset: 0x0009DB80
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetParentIdNull()
            {
                base[this.tabletP_ValueLists.ParentIdColumn] = Convert.DBNull;
            }

            // Token: 0x06001B50 RID: 6992 RVA: 0x0009F998 File Offset: 0x0009DB98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentKeyNull()
            {
                return base.IsNull(this.tabletP_ValueLists.ParentKeyColumn);
            }

            // Token: 0x06001B51 RID: 6993 RVA: 0x0009F9AB File Offset: 0x0009DBAB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentKeyNull()
            {
                base[this.tabletP_ValueLists.ParentKeyColumn] = Convert.DBNull;
            }

            // Token: 0x06001B52 RID: 6994 RVA: 0x0009F9C3 File Offset: 0x0009DBC3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsisGroupNull()
            {
                return base.IsNull(this.tabletP_ValueLists.isGroupColumn);
            }

            // Token: 0x06001B53 RID: 6995 RVA: 0x0009F9D6 File Offset: 0x0009DBD6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisGroupNull()
            {
                base[this.tabletP_ValueLists.isGroupColumn] = Convert.DBNull;
            }

            // Token: 0x06001B54 RID: 6996 RVA: 0x0009F9EE File Offset: 0x0009DBEE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tabletP_ValueLists.DeletedColumn);
            }

            // Token: 0x06001B55 RID: 6997 RVA: 0x0009FA01 File Offset: 0x0009DC01
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDeletedNull()
            {
                base[this.tabletP_ValueLists.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000B9C RID: 2972
            private DataSetGES.tP_ValueListsDataTable tabletP_ValueLists;
        }

        // Token: 0x0200013D RID: 317
        public class vJ_CableMakeupRow : DataRow
        {
            // Token: 0x06001B56 RID: 6998 RVA: 0x0009FA19 File Offset: 0x0009DC19
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableMakeupRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_CableMakeup = (DataSetGES.vJ_CableMakeupDataTable)base.Table;
            }

            // Token: 0x17000701 RID: 1793
            // (get) Token: 0x06001B57 RID: 6999 RVA: 0x0009FA33 File Offset: 0x0009DC33
            // (set) Token: 0x06001B58 RID: 7000 RVA: 0x0009FA4B File Offset: 0x0009DC4B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int)base[this.tablevJ_CableMakeup.IdColumn];
                }
                set
                {
                    base[this.tablevJ_CableMakeup.IdColumn] = value;
                }
            }

            // Token: 0x17000702 RID: 1794
            // (get) Token: 0x06001B59 RID: 7001 RVA: 0x0009FA64 File Offset: 0x0009DC64
            // (set) Token: 0x06001B5A RID: 7002 RVA: 0x0009FAA8 File Offset: 0x0009DCA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Makeup
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CableMakeup.MakeupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_CableMakeup' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableMakeup.MakeupColumn] = value;
                }
            }

            // Token: 0x06001B5B RID: 7003 RVA: 0x0009FABC File Offset: 0x0009DCBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMakeupNull()
            {
                return base.IsNull(this.tablevJ_CableMakeup.MakeupColumn);
            }

            // Token: 0x06001B5C RID: 7004 RVA: 0x0009FACF File Offset: 0x0009DCCF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetMakeupNull()
            {
                base[this.tablevJ_CableMakeup.MakeupColumn] = Convert.DBNull;
            }

            // Token: 0x04000B9D RID: 2973
            private DataSetGES.vJ_CableMakeupDataTable tablevJ_CableMakeup;
        }

        // Token: 0x0200013E RID: 318
        public class vJ_MeasPeriodBySubstationRow : DataRow
        {
            // Token: 0x06001B5D RID: 7005 RVA: 0x0009FAE7 File Offset: 0x0009DCE7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasPeriodBySubstationRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasPeriodBySubstation = (DataSetGES.vJ_MeasPeriodBySubstationDataTable)base.Table;
            }

            // Token: 0x17000703 RID: 1795
            // (get) Token: 0x06001B5E RID: 7006 RVA: 0x0009FB01 File Offset: 0x0009DD01
            // (set) Token: 0x06001B5F RID: 7007 RVA: 0x0009FB19 File Offset: 0x0009DD19
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasPeriodBySubstation.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasPeriodBySubstation.idColumn] = value;
                }
            }

            // Token: 0x17000704 RID: 1796
            // (get) Token: 0x06001B60 RID: 7008 RVA: 0x0009FB32 File Offset: 0x0009DD32
            // (set) Token: 0x06001B61 RID: 7009 RVA: 0x0009FB4A File Offset: 0x0009DD4A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idObjList
            {
                get
                {
                    return (int)base[this.tablevJ_MeasPeriodBySubstation.idObjListColumn];
                }
                set
                {
                    base[this.tablevJ_MeasPeriodBySubstation.idObjListColumn] = value;
                }
            }

            // Token: 0x17000705 RID: 1797
            // (get) Token: 0x06001B62 RID: 7010 RVA: 0x0009FB64 File Offset: 0x0009DD64
            // (set) Token: 0x06001B63 RID: 7011 RVA: 0x0009FBA8 File Offset: 0x0009DDA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int MeasYear
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasPeriodBySubstation.MeasYearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'MeasYear' in table 'vJ_MeasPeriodBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasPeriodBySubstation.MeasYearColumn] = value;
                }
            }

            // Token: 0x06001B64 RID: 7012 RVA: 0x0009FBC1 File Offset: 0x0009DDC1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsMeasYearNull()
            {
                return base.IsNull(this.tablevJ_MeasPeriodBySubstation.MeasYearColumn);
            }

            // Token: 0x06001B65 RID: 7013 RVA: 0x0009FBD4 File Offset: 0x0009DDD4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeasYearNull()
            {
                base[this.tablevJ_MeasPeriodBySubstation.MeasYearColumn] = Convert.DBNull;
            }

            // Token: 0x04000B9E RID: 2974
            private DataSetGES.vJ_MeasPeriodBySubstationDataTable tablevJ_MeasPeriodBySubstation;
        }

        // Token: 0x0200013F RID: 319
        public class fn_J_GetCellCableLVByTransfRow : DataRow
        {
            // Token: 0x06001B66 RID: 7014 RVA: 0x0009FBEC File Offset: 0x0009DDEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetCellCableLVByTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_GetCellCableLVByTransf = (DataSetGES.fn_J_GetCellCableLVByTransfDataTable)base.Table;
            }

            // Token: 0x17000706 RID: 1798
            // (get) Token: 0x06001B67 RID: 7015 RVA: 0x0009FC08 File Offset: 0x0009DE08
            // (set) Token: 0x06001B68 RID: 7016 RVA: 0x0009FC4C File Offset: 0x0009DE4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellCableLVByTransf.IdCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdCell' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellCableLVByTransf.IdCellColumn] = value;
                }
            }

            // Token: 0x17000707 RID: 1799
            // (get) Token: 0x06001B69 RID: 7017 RVA: 0x0009FC68 File Offset: 0x0009DE68
            // (set) Token: 0x06001B6A RID: 7018 RVA: 0x0009FCAC File Offset: 0x0009DEAC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellCableLVByTransf.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellCableLVByTransf.NameCellColumn] = value;
                }
            }

            // Token: 0x17000708 RID: 1800
            // (get) Token: 0x06001B6B RID: 7019 RVA: 0x0009FCC0 File Offset: 0x0009DEC0
            // (set) Token: 0x06001B6C RID: 7020 RVA: 0x0009FD04 File Offset: 0x0009DF04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellCableLVByTransf.IdCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdCable' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellCableLVByTransf.IdCableColumn] = value;
                }
            }

            // Token: 0x17000709 RID: 1801
            // (get) Token: 0x06001B6D RID: 7021 RVA: 0x0009FD20 File Offset: 0x0009DF20
            // (set) Token: 0x06001B6E RID: 7022 RVA: 0x0009FD64 File Offset: 0x0009DF64
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCable
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellCableLVByTransf.NameCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCable' in table 'fn_J_GetCellCableLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellCableLVByTransf.NameCableColumn] = value;
                }
            }

            // Token: 0x06001B6F RID: 7023 RVA: 0x0009FD78 File Offset: 0x0009DF78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdCellNull()
            {
                return base.IsNull(this.tablefn_J_GetCellCableLVByTransf.IdCellColumn);
            }

            // Token: 0x06001B70 RID: 7024 RVA: 0x0009FD8B File Offset: 0x0009DF8B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdCellNull()
            {
                base[this.tablefn_J_GetCellCableLVByTransf.IdCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001B71 RID: 7025 RVA: 0x0009FDA3 File Offset: 0x0009DFA3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tablefn_J_GetCellCableLVByTransf.NameCellColumn);
            }

            // Token: 0x06001B72 RID: 7026 RVA: 0x0009FDB6 File Offset: 0x0009DFB6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameCellNull()
            {
                base[this.tablefn_J_GetCellCableLVByTransf.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001B73 RID: 7027 RVA: 0x0009FDCE File Offset: 0x0009DFCE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdCableNull()
            {
                return base.IsNull(this.tablefn_J_GetCellCableLVByTransf.IdCableColumn);
            }

            // Token: 0x06001B74 RID: 7028 RVA: 0x0009FDE1 File Offset: 0x0009DFE1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdCableNull()
            {
                base[this.tablefn_J_GetCellCableLVByTransf.IdCableColumn] = Convert.DBNull;
            }

            // Token: 0x06001B75 RID: 7029 RVA: 0x0009FDF9 File Offset: 0x0009DFF9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameCableNull()
            {
                return base.IsNull(this.tablefn_J_GetCellCableLVByTransf.NameCableColumn);
            }

            // Token: 0x06001B76 RID: 7030 RVA: 0x0009FE0C File Offset: 0x0009E00C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameCableNull()
            {
                base[this.tablefn_J_GetCellCableLVByTransf.NameCableColumn] = Convert.DBNull;
            }

            // Token: 0x04000B9F RID: 2975
            private DataSetGES.fn_J_GetCellCableLVByTransfDataTable tablefn_J_GetCellCableLVByTransf;
        }

        // Token: 0x02000140 RID: 320
        public class tL_SchmAbnRow : DataRow
        {
            // Token: 0x06001B77 RID: 7031 RVA: 0x0009FE24 File Offset: 0x0009E024
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tL_SchmAbnRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletL_SchmAbn = (DataSetGES.tL_SchmAbnDataTable)base.Table;
            }

            // Token: 0x1700070A RID: 1802
            // (get) Token: 0x06001B78 RID: 7032 RVA: 0x0009FE3E File Offset: 0x0009E03E
            // (set) Token: 0x06001B79 RID: 7033 RVA: 0x0009FE56 File Offset: 0x0009E056
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletL_SchmAbn.idColumn];
                }
                set
                {
                    base[this.tabletL_SchmAbn.idColumn] = value;
                }
            }

            // Token: 0x1700070B RID: 1803
            // (get) Token: 0x06001B7A RID: 7034 RVA: 0x0009FE6F File Offset: 0x0009E06F
            // (set) Token: 0x06001B7B RID: 7035 RVA: 0x0009FE87 File Offset: 0x0009E087
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSchmObj
            {
                get
                {
                    return (int)base[this.tabletL_SchmAbn.idSchmObjColumn];
                }
                set
                {
                    base[this.tabletL_SchmAbn.idSchmObjColumn] = value;
                }
            }

            // Token: 0x1700070C RID: 1804
            // (get) Token: 0x06001B7C RID: 7036 RVA: 0x0009FEA0 File Offset: 0x0009E0A0
            // (set) Token: 0x06001B7D RID: 7037 RVA: 0x0009FEE4 File Offset: 0x0009E0E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idAbn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletL_SchmAbn.idAbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idAbn' in table 'tL_SchmAbn' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletL_SchmAbn.idAbnColumn] = value;
                }
            }

            // Token: 0x1700070D RID: 1805
            // (get) Token: 0x06001B7E RID: 7038 RVA: 0x0009FF00 File Offset: 0x0009E100
            // (set) Token: 0x06001B7F RID: 7039 RVA: 0x0009FF44 File Offset: 0x0009E144
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idAbnObj
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletL_SchmAbn.idAbnObjColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idAbnObj' in table 'tL_SchmAbn' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletL_SchmAbn.idAbnObjColumn] = value;
                }
            }

            // Token: 0x1700070E RID: 1806
            // (get) Token: 0x06001B80 RID: 7040 RVA: 0x0009FF60 File Offset: 0x0009E160
            // (set) Token: 0x06001B81 RID: 7041 RVA: 0x0009FFA4 File Offset: 0x0009E1A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idPoint
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletL_SchmAbn.idPointColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idPoint' in table 'tL_SchmAbn' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletL_SchmAbn.idPointColumn] = value;
                }
            }

            // Token: 0x1700070F RID: 1807
            // (get) Token: 0x06001B82 RID: 7042 RVA: 0x0009FFC0 File Offset: 0x0009E1C0
            // (set) Token: 0x06001B83 RID: 7043 RVA: 0x000A0004 File Offset: 0x0009E204
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idDoc
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletL_SchmAbn.idDocColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idDoc' in table 'tL_SchmAbn' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletL_SchmAbn.idDocColumn] = value;
                }
            }

            // Token: 0x17000710 RID: 1808
            // (get) Token: 0x06001B84 RID: 7044 RVA: 0x000A0020 File Offset: 0x0009E220
            // (set) Token: 0x06001B85 RID: 7045 RVA: 0x000A0064 File Offset: 0x0009E264
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeDoc
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletL_SchmAbn.TypeDocColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeDoc' in table 'tL_SchmAbn' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletL_SchmAbn.TypeDocColumn] = value;
                }
            }

            // Token: 0x06001B86 RID: 7046 RVA: 0x000A007D File Offset: 0x0009E27D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidAbnNull()
            {
                return base.IsNull(this.tabletL_SchmAbn.idAbnColumn);
            }

            // Token: 0x06001B87 RID: 7047 RVA: 0x000A0090 File Offset: 0x0009E290
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidAbnNull()
            {
                base[this.tabletL_SchmAbn.idAbnColumn] = Convert.DBNull;
            }

            // Token: 0x06001B88 RID: 7048 RVA: 0x000A00A8 File Offset: 0x0009E2A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidAbnObjNull()
            {
                return base.IsNull(this.tabletL_SchmAbn.idAbnObjColumn);
            }

            // Token: 0x06001B89 RID: 7049 RVA: 0x000A00BB File Offset: 0x0009E2BB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidAbnObjNull()
            {
                base[this.tabletL_SchmAbn.idAbnObjColumn] = Convert.DBNull;
            }

            // Token: 0x06001B8A RID: 7050 RVA: 0x000A00D3 File Offset: 0x0009E2D3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidPointNull()
            {
                return base.IsNull(this.tabletL_SchmAbn.idPointColumn);
            }

            // Token: 0x06001B8B RID: 7051 RVA: 0x000A00E6 File Offset: 0x0009E2E6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidPointNull()
            {
                base[this.tabletL_SchmAbn.idPointColumn] = Convert.DBNull;
            }

            // Token: 0x06001B8C RID: 7052 RVA: 0x000A00FE File Offset: 0x0009E2FE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidDocNull()
            {
                return base.IsNull(this.tabletL_SchmAbn.idDocColumn);
            }

            // Token: 0x06001B8D RID: 7053 RVA: 0x000A0111 File Offset: 0x0009E311
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidDocNull()
            {
                base[this.tabletL_SchmAbn.idDocColumn] = Convert.DBNull;
            }

            // Token: 0x06001B8E RID: 7054 RVA: 0x000A0129 File Offset: 0x0009E329
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTypeDocNull()
            {
                return base.IsNull(this.tabletL_SchmAbn.TypeDocColumn);
            }

            // Token: 0x06001B8F RID: 7055 RVA: 0x000A013C File Offset: 0x0009E33C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTypeDocNull()
            {
                base[this.tabletL_SchmAbn.TypeDocColumn] = Convert.DBNull;
            }

            // Token: 0x04000BA0 RID: 2976
            private DataSetGES.tL_SchmAbnDataTable tabletL_SchmAbn;
        }

        // Token: 0x02000141 RID: 321
        public class vJ_MeasAbnObjRow : DataRow
        {
            // Token: 0x06001B90 RID: 7056 RVA: 0x000A0154 File Offset: 0x0009E354
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasAbnObjRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasAbnObj = (DataSetGES.vJ_MeasAbnObjDataTable)base.Table;
            }

            // Token: 0x17000711 RID: 1809
            // (get) Token: 0x06001B91 RID: 7057 RVA: 0x000A016E File Offset: 0x0009E36E
            // (set) Token: 0x06001B92 RID: 7058 RVA: 0x000A0186 File Offset: 0x0009E386
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSchmObj
            {
                get
                {
                    return (int)base[this.tablevJ_MeasAbnObj.idSchmObjColumn];
                }
                set
                {
                    base[this.tablevJ_MeasAbnObj.idSchmObjColumn] = value;
                }
            }

            // Token: 0x17000712 RID: 1810
            // (get) Token: 0x06001B93 RID: 7059 RVA: 0x000A01A0 File Offset: 0x0009E3A0
            // (set) Token: 0x06001B94 RID: 7060 RVA: 0x000A01E4 File Offset: 0x0009E3E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeDoc
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasAbnObj.TypeDocColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeDoc' in table 'vJ_MeasAbnObj' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasAbnObj.TypeDocColumn] = value;
                }
            }

            // Token: 0x17000713 RID: 1811
            // (get) Token: 0x06001B95 RID: 7061 RVA: 0x000A0200 File Offset: 0x0009E400
            // (set) Token: 0x06001B96 RID: 7062 RVA: 0x000A0244 File Offset: 0x0009E444
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Street
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasAbnObj.StreetColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Street' in table 'vJ_MeasAbnObj' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasAbnObj.StreetColumn] = value;
                }
            }

            // Token: 0x17000714 RID: 1812
            // (get) Token: 0x06001B97 RID: 7063 RVA: 0x000A0258 File Offset: 0x0009E458
            // (set) Token: 0x06001B98 RID: 7064 RVA: 0x000A029C File Offset: 0x0009E49C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string House
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasAbnObj.HouseColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'House' in table 'vJ_MeasAbnObj' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasAbnObj.HouseColumn] = value;
                }
            }

            // Token: 0x17000715 RID: 1813
            // (get) Token: 0x06001B99 RID: 7065 RVA: 0x000A02B0 File Offset: 0x0009E4B0
            // (set) Token: 0x06001B9A RID: 7066 RVA: 0x000A02F4 File Offset: 0x0009E4F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasAbnObj.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_MeasAbnObj' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasAbnObj.NameColumn] = value;
                }
            }

            // Token: 0x17000716 RID: 1814
            // (get) Token: 0x06001B9B RID: 7067 RVA: 0x000A0308 File Offset: 0x0009E508
            // (set) Token: 0x06001B9C RID: 7068 RVA: 0x000A034C File Offset: 0x0009E54C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int codeAbonent
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasAbnObj.codeAbonentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'codeAbonent' in table 'vJ_MeasAbnObj' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasAbnObj.codeAbonentColumn] = value;
                }
            }

            // Token: 0x17000717 RID: 1815
            // (get) Token: 0x06001B9D RID: 7069 RVA: 0x000A0368 File Offset: 0x0009E568
            // (set) Token: 0x06001B9E RID: 7070 RVA: 0x000A03AC File Offset: 0x0009E5AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string ids
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasAbnObj.idsColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ids' in table 'vJ_MeasAbnObj' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasAbnObj.idsColumn] = value;
                }
            }

            // Token: 0x06001B9F RID: 7071 RVA: 0x000A03C0 File Offset: 0x0009E5C0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeDocNull()
            {
                return base.IsNull(this.tablevJ_MeasAbnObj.TypeDocColumn);
            }

            // Token: 0x06001BA0 RID: 7072 RVA: 0x000A03D3 File Offset: 0x0009E5D3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTypeDocNull()
            {
                base[this.tablevJ_MeasAbnObj.TypeDocColumn] = Convert.DBNull;
            }

            // Token: 0x06001BA1 RID: 7073 RVA: 0x000A03EB File Offset: 0x0009E5EB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStreetNull()
            {
                return base.IsNull(this.tablevJ_MeasAbnObj.StreetColumn);
            }

            // Token: 0x06001BA2 RID: 7074 RVA: 0x000A03FE File Offset: 0x0009E5FE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStreetNull()
            {
                base[this.tablevJ_MeasAbnObj.StreetColumn] = Convert.DBNull;
            }

            // Token: 0x06001BA3 RID: 7075 RVA: 0x000A0416 File Offset: 0x0009E616
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHouseNull()
            {
                return base.IsNull(this.tablevJ_MeasAbnObj.HouseColumn);
            }

            // Token: 0x06001BA4 RID: 7076 RVA: 0x000A0429 File Offset: 0x0009E629
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHouseNull()
            {
                base[this.tablevJ_MeasAbnObj.HouseColumn] = Convert.DBNull;
            }

            // Token: 0x06001BA5 RID: 7077 RVA: 0x000A0441 File Offset: 0x0009E641
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevJ_MeasAbnObj.NameColumn);
            }

            // Token: 0x06001BA6 RID: 7078 RVA: 0x000A0454 File Offset: 0x0009E654
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablevJ_MeasAbnObj.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001BA7 RID: 7079 RVA: 0x000A046C File Offset: 0x0009E66C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscodeAbonentNull()
            {
                return base.IsNull(this.tablevJ_MeasAbnObj.codeAbonentColumn);
            }

            // Token: 0x06001BA8 RID: 7080 RVA: 0x000A047F File Offset: 0x0009E67F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetcodeAbonentNull()
            {
                base[this.tablevJ_MeasAbnObj.codeAbonentColumn] = Convert.DBNull;
            }

            // Token: 0x06001BA9 RID: 7081 RVA: 0x000A0497 File Offset: 0x0009E697
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidsNull()
            {
                return base.IsNull(this.tablevJ_MeasAbnObj.idsColumn);
            }

            // Token: 0x06001BAA RID: 7082 RVA: 0x000A04AA File Offset: 0x0009E6AA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidsNull()
            {
                base[this.tablevJ_MeasAbnObj.idsColumn] = Convert.DBNull;
            }

            // Token: 0x04000BA1 RID: 2977
            private DataSetGES.vJ_MeasAbnObjDataTable tablevJ_MeasAbnObj;
        }

        // Token: 0x02000142 RID: 322
        public class vJ_GetMeasYearsRow : DataRow
        {
            // Token: 0x06001BAB RID: 7083 RVA: 0x000A04C2 File Offset: 0x0009E6C2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_GetMeasYearsRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_GetMeasYears = (DataSetGES.vJ_GetMeasYearsDataTable)base.Table;
            }

            // Token: 0x17000718 RID: 1816
            // (get) Token: 0x06001BAC RID: 7084 RVA: 0x000A04DC File Offset: 0x0009E6DC
            // (set) Token: 0x06001BAD RID: 7085 RVA: 0x000A0520 File Offset: 0x0009E720
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Year
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_GetMeasYears.YearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_GetMeasYears' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_GetMeasYears.YearColumn] = value;
                }
            }

            // Token: 0x17000719 RID: 1817
            // (get) Token: 0x06001BAE RID: 7086 RVA: 0x000A0539 File Offset: 0x0009E739
            // (set) Token: 0x06001BAF RID: 7087 RVA: 0x000A0551 File Offset: 0x0009E751
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idObjList
            {
                get
                {
                    return (int)base[this.tablevJ_GetMeasYears.idObjListColumn];
                }
                set
                {
                    base[this.tablevJ_GetMeasYears.idObjListColumn] = value;
                }
            }

            // Token: 0x1700071A RID: 1818
            // (get) Token: 0x06001BB0 RID: 7088 RVA: 0x000A056A File Offset: 0x0009E76A
            // (set) Token: 0x06001BB1 RID: 7089 RVA: 0x000A0582 File Offset: 0x0009E782
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeDoc
            {
                get
                {
                    return (int)base[this.tablevJ_GetMeasYears.TypeDocColumn];
                }
                set
                {
                    base[this.tablevJ_GetMeasYears.TypeDocColumn] = value;
                }
            }

            // Token: 0x06001BB2 RID: 7090 RVA: 0x000A059B File Offset: 0x0009E79B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearNull()
            {
                return base.IsNull(this.tablevJ_GetMeasYears.YearColumn);
            }

            // Token: 0x06001BB3 RID: 7091 RVA: 0x000A05AE File Offset: 0x0009E7AE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNull()
            {
                base[this.tablevJ_GetMeasYears.YearColumn] = Convert.DBNull;
            }

            // Token: 0x04000BA2 RID: 2978
            private DataSetGES.vJ_GetMeasYearsDataTable tablevJ_GetMeasYears;
        }

        // Token: 0x02000143 RID: 323
        public class fn_J_GetCellLVByTransfRow : DataRow
        {
            // Token: 0x06001BB4 RID: 7092 RVA: 0x000A05C6 File Offset: 0x0009E7C6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetCellLVByTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_GetCellLVByTransf = (DataSetGES.fn_J_GetCellLVByTransfDataTable)base.Table;
            }

            // Token: 0x1700071B RID: 1819
            // (get) Token: 0x06001BB5 RID: 7093 RVA: 0x000A05E0 File Offset: 0x0009E7E0
            // (set) Token: 0x06001BB6 RID: 7094 RVA: 0x000A0624 File Offset: 0x0009E824
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellLVByTransf.IdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetCellLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellLVByTransf.IdColumn] = value;
                }
            }

            // Token: 0x1700071C RID: 1820
            // (get) Token: 0x06001BB7 RID: 7095 RVA: 0x000A0640 File Offset: 0x0009E840
            // (set) Token: 0x06001BB8 RID: 7096 RVA: 0x000A0684 File Offset: 0x0009E884
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellLVByTransf.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetCellLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellLVByTransf.NameColumn] = value;
                }
            }

            // Token: 0x06001BB9 RID: 7097 RVA: 0x000A0698 File Offset: 0x0009E898
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdNull()
            {
                return base.IsNull(this.tablefn_J_GetCellLVByTransf.IdColumn);
            }

            // Token: 0x06001BBA RID: 7098 RVA: 0x000A06AB File Offset: 0x0009E8AB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdNull()
            {
                base[this.tablefn_J_GetCellLVByTransf.IdColumn] = Convert.DBNull;
            }

            // Token: 0x06001BBB RID: 7099 RVA: 0x000A06C3 File Offset: 0x0009E8C3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablefn_J_GetCellLVByTransf.NameColumn);
            }

            // Token: 0x06001BBC RID: 7100 RVA: 0x000A06D6 File Offset: 0x0009E8D6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tablefn_J_GetCellLVByTransf.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000BA3 RID: 2979
            private DataSetGES.fn_J_GetCellLVByTransfDataTable tablefn_J_GetCellLVByTransf;
        }

        // Token: 0x02000144 RID: 324
        public class fn_J_MeasCableCalcResultsRow : DataRow
        {
            // Token: 0x06001BBD RID: 7101 RVA: 0x000A06EE File Offset: 0x0009E8EE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_MeasCableCalcResultsRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_MeasCableCalcResults = (DataSetGES.fn_J_MeasCableCalcResultsDataTable)base.Table;
            }

            // Token: 0x1700071D RID: 1821
            // (get) Token: 0x06001BBE RID: 7102 RVA: 0x000A0708 File Offset: 0x0009E908
            // (set) Token: 0x06001BBF RID: 7103 RVA: 0x000A074C File Offset: 0x0009E94C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIad' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIadColumn] = value;
                }
            }

            // Token: 0x1700071E RID: 1822
            // (get) Token: 0x06001BC0 RID: 7104 RVA: 0x000A0768 File Offset: 0x0009E968
            // (set) Token: 0x06001BC1 RID: 7105 RVA: 0x000A07AC File Offset: 0x0009E9AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIan
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIan' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIanColumn] = value;
                }
            }

            // Token: 0x1700071F RID: 1823
            // (get) Token: 0x06001BC2 RID: 7106 RVA: 0x000A07C8 File Offset: 0x0009E9C8
            // (set) Token: 0x06001BC3 RID: 7107 RVA: 0x000A080C File Offset: 0x0009EA0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIbd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIbd' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIbdColumn] = value;
                }
            }

            // Token: 0x17000720 RID: 1824
            // (get) Token: 0x06001BC4 RID: 7108 RVA: 0x000A0828 File Offset: 0x0009EA28
            // (set) Token: 0x06001BC5 RID: 7109 RVA: 0x000A086C File Offset: 0x0009EA6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIbn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIbn' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIbnColumn] = value;
                }
            }

            // Token: 0x17000721 RID: 1825
            // (get) Token: 0x06001BC6 RID: 7110 RVA: 0x000A0888 File Offset: 0x0009EA88
            // (set) Token: 0x06001BC7 RID: 7111 RVA: 0x000A08CC File Offset: 0x0009EACC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIcd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIcd' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIcdColumn] = value;
                }
            }

            // Token: 0x17000722 RID: 1826
            // (get) Token: 0x06001BC8 RID: 7112 RVA: 0x000A08E8 File Offset: 0x0009EAE8
            // (set) Token: 0x06001BC9 RID: 7113 RVA: 0x000A092C File Offset: 0x0009EB2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIcn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIcn' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIcnColumn] = value;
                }
            }

            // Token: 0x17000723 RID: 1827
            // (get) Token: 0x06001BCA RID: 7114 RVA: 0x000A0948 File Offset: 0x0009EB48
            // (set) Token: 0x06001BCB RID: 7115 RVA: 0x000A098C File Offset: 0x0009EB8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIod' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIodColumn] = value;
                }
            }

            // Token: 0x17000724 RID: 1828
            // (get) Token: 0x06001BCC RID: 7116 RVA: 0x000A09A8 File Offset: 0x0009EBA8
            // (set) Token: 0x06001BCD RID: 7117 RVA: 0x000A09EC File Offset: 0x0009EBEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.SumIonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIon' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.SumIonColumn] = value;
                }
            }

            // Token: 0x17000725 RID: 1829
            // (get) Token: 0x06001BCE RID: 7118 RVA: 0x000A0A08 File Offset: 0x0009EC08
            // (set) Token: 0x06001BCF RID: 7119 RVA: 0x000A0A4C File Offset: 0x0009EC4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AvgId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.AvgIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AvgId' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.AvgIdColumn] = value;
                }
            }

            // Token: 0x17000726 RID: 1830
            // (get) Token: 0x06001BD0 RID: 7120 RVA: 0x000A0A68 File Offset: 0x0009EC68
            // (set) Token: 0x06001BD1 RID: 7121 RVA: 0x000A0AAC File Offset: 0x0009ECAC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int AvgIn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.AvgInColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AvgIn' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.AvgInColumn] = value;
                }
            }

            // Token: 0x17000727 RID: 1831
            // (get) Token: 0x06001BD2 RID: 7122 RVA: 0x000A0AC8 File Offset: 0x0009ECC8
            // (set) Token: 0x06001BD3 RID: 7123 RVA: 0x000A0B0C File Offset: 0x0009ED0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KNTd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.KNTdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'KNTd' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.KNTdColumn] = value;
                }
            }

            // Token: 0x17000728 RID: 1832
            // (get) Token: 0x06001BD4 RID: 7124 RVA: 0x000A0B28 File Offset: 0x0009ED28
            // (set) Token: 0x06001BD5 RID: 7125 RVA: 0x000A0B6C File Offset: 0x0009ED6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int KNTn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.KNTnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'KNTn' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.KNTnColumn] = value;
                }
            }

            // Token: 0x17000729 RID: 1833
            // (get) Token: 0x06001BD6 RID: 7126 RVA: 0x000A0B88 File Offset: 0x0009ED88
            // (set) Token: 0x06001BD7 RID: 7127 RVA: 0x000A0BCC File Offset: 0x0009EDCC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KNFd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.KNFdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'KNFd' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.KNFdColumn] = value;
                }
            }

            // Token: 0x1700072A RID: 1834
            // (get) Token: 0x06001BD8 RID: 7128 RVA: 0x000A0BE8 File Offset: 0x0009EDE8
            // (set) Token: 0x06001BD9 RID: 7129 RVA: 0x000A0C2C File Offset: 0x0009EE2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KNFn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasCableCalcResults.KNFnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'KNFn' in table 'fn_J_MeasCableCalcResults' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasCableCalcResults.KNFnColumn] = value;
                }
            }

            // Token: 0x06001BDA RID: 7130 RVA: 0x000A0C45 File Offset: 0x0009EE45
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIadNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIadColumn);
            }

            // Token: 0x06001BDB RID: 7131 RVA: 0x000A0C58 File Offset: 0x0009EE58
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumIadNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIadColumn] = Convert.DBNull;
            }

            // Token: 0x06001BDC RID: 7132 RVA: 0x000A0C70 File Offset: 0x0009EE70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIanNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIanColumn);
            }

            // Token: 0x06001BDD RID: 7133 RVA: 0x000A0C83 File Offset: 0x0009EE83
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIanNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIanColumn] = Convert.DBNull;
            }

            // Token: 0x06001BDE RID: 7134 RVA: 0x000A0C9B File Offset: 0x0009EE9B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIbdNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIbdColumn);
            }

            // Token: 0x06001BDF RID: 7135 RVA: 0x000A0CAE File Offset: 0x0009EEAE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIbdNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIbdColumn] = Convert.DBNull;
            }

            // Token: 0x06001BE0 RID: 7136 RVA: 0x000A0CC6 File Offset: 0x0009EEC6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIbnNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIbnColumn);
            }

            // Token: 0x06001BE1 RID: 7137 RVA: 0x000A0CD9 File Offset: 0x0009EED9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIbnNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIbnColumn] = Convert.DBNull;
            }

            // Token: 0x06001BE2 RID: 7138 RVA: 0x000A0CF1 File Offset: 0x0009EEF1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIcdNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIcdColumn);
            }

            // Token: 0x06001BE3 RID: 7139 RVA: 0x000A0D04 File Offset: 0x0009EF04
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIcdNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIcdColumn] = Convert.DBNull;
            }

            // Token: 0x06001BE4 RID: 7140 RVA: 0x000A0D1C File Offset: 0x0009EF1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIcnNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIcnColumn);
            }

            // Token: 0x06001BE5 RID: 7141 RVA: 0x000A0D2F File Offset: 0x0009EF2F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumIcnNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIcnColumn] = Convert.DBNull;
            }

            // Token: 0x06001BE6 RID: 7142 RVA: 0x000A0D47 File Offset: 0x0009EF47
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIodNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIodColumn);
            }

            // Token: 0x06001BE7 RID: 7143 RVA: 0x000A0D5A File Offset: 0x0009EF5A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIodNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIodColumn] = Convert.DBNull;
            }

            // Token: 0x06001BE8 RID: 7144 RVA: 0x000A0D72 File Offset: 0x0009EF72
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIonNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.SumIonColumn);
            }

            // Token: 0x06001BE9 RID: 7145 RVA: 0x000A0D85 File Offset: 0x0009EF85
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIonNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.SumIonColumn] = Convert.DBNull;
            }

            // Token: 0x06001BEA RID: 7146 RVA: 0x000A0D9D File Offset: 0x0009EF9D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAvgIdNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.AvgIdColumn);
            }

            // Token: 0x06001BEB RID: 7147 RVA: 0x000A0DB0 File Offset: 0x0009EFB0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAvgIdNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.AvgIdColumn] = Convert.DBNull;
            }

            // Token: 0x06001BEC RID: 7148 RVA: 0x000A0DC8 File Offset: 0x0009EFC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAvgInNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.AvgInColumn);
            }

            // Token: 0x06001BED RID: 7149 RVA: 0x000A0DDB File Offset: 0x0009EFDB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAvgInNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.AvgInColumn] = Convert.DBNull;
            }

            // Token: 0x06001BEE RID: 7150 RVA: 0x000A0DF3 File Offset: 0x0009EFF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKNTdNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.KNTdColumn);
            }

            // Token: 0x06001BEF RID: 7151 RVA: 0x000A0E06 File Offset: 0x0009F006
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKNTdNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.KNTdColumn] = Convert.DBNull;
            }

            // Token: 0x06001BF0 RID: 7152 RVA: 0x000A0E1E File Offset: 0x0009F01E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKNTnNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.KNTnColumn);
            }

            // Token: 0x06001BF1 RID: 7153 RVA: 0x000A0E31 File Offset: 0x0009F031
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKNTnNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.KNTnColumn] = Convert.DBNull;
            }

            // Token: 0x06001BF2 RID: 7154 RVA: 0x000A0E49 File Offset: 0x0009F049
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKNFdNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.KNFdColumn);
            }

            // Token: 0x06001BF3 RID: 7155 RVA: 0x000A0E5C File Offset: 0x0009F05C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKNFdNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.KNFdColumn] = Convert.DBNull;
            }

            // Token: 0x06001BF4 RID: 7156 RVA: 0x000A0E74 File Offset: 0x0009F074
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKNFnNull()
            {
                return base.IsNull(this.tablefn_J_MeasCableCalcResults.KNFnColumn);
            }

            // Token: 0x06001BF5 RID: 7157 RVA: 0x000A0E87 File Offset: 0x0009F087
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKNFnNull()
            {
                base[this.tablefn_J_MeasCableCalcResults.KNFnColumn] = Convert.DBNull;
            }

            // Token: 0x04000BA4 RID: 2980
            private DataSetGES.fn_J_MeasCableCalcResultsDataTable tablefn_J_MeasCableCalcResults;
        }

        // Token: 0x02000145 RID: 325
        public class tR_CableMakeupRow : DataRow
        {
            // Token: 0x06001BF6 RID: 7158 RVA: 0x000A0E9F File Offset: 0x0009F09F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_CableMakeupRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletR_CableMakeup = (DataSetGES.tR_CableMakeupDataTable)base.Table;
            }

            // Token: 0x1700072B RID: 1835
            // (get) Token: 0x06001BF7 RID: 7159 RVA: 0x000A0EB9 File Offset: 0x0009F0B9
            // (set) Token: 0x06001BF8 RID: 7160 RVA: 0x000A0ED1 File Offset: 0x0009F0D1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string CableMakeup
            {
                get
                {
                    return (string)base[this.tabletR_CableMakeup.CableMakeupColumn];
                }
                set
                {
                    base[this.tabletR_CableMakeup.CableMakeupColumn] = value;
                }
            }

            // Token: 0x04000BA5 RID: 2981
            private DataSetGES.tR_CableMakeupDataTable tabletR_CableMakeup;
        }

        // Token: 0x02000146 RID: 326
        public class tR_CrossSectionRow : DataRow
        {
            // Token: 0x06001BF9 RID: 7161 RVA: 0x000A0EE5 File Offset: 0x0009F0E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tR_CrossSectionRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletR_CrossSection = (DataSetGES.tR_CrossSectionDataTable)base.Table;
            }

            // Token: 0x1700072C RID: 1836
            // (get) Token: 0x06001BFA RID: 7162 RVA: 0x000A0EFF File Offset: 0x0009F0FF
            // (set) Token: 0x06001BFB RID: 7163 RVA: 0x000A0F17 File Offset: 0x0009F117
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    return (double)base[this.tabletR_CrossSection.CrossSectionColumn];
                }
                set
                {
                    base[this.tabletR_CrossSection.CrossSectionColumn] = value;
                }
            }

            // Token: 0x04000BA6 RID: 2982
            private DataSetGES.tR_CrossSectionDataTable tabletR_CrossSection;
        }

        // Token: 0x02000147 RID: 327
        public class tR_CableVoltageRow : DataRow
        {
            // Token: 0x06001BFC RID: 7164 RVA: 0x000A0F30 File Offset: 0x0009F130
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_CableVoltageRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletR_CableVoltage = (DataSetGES.tR_CableVoltageDataTable)base.Table;
            }

            // Token: 0x1700072D RID: 1837
            // (get) Token: 0x06001BFD RID: 7165 RVA: 0x000A0F4A File Offset: 0x0009F14A
            // (set) Token: 0x06001BFE RID: 7166 RVA: 0x000A0F62 File Offset: 0x0009F162
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int)base[this.tabletR_CableVoltage.IdColumn];
                }
                set
                {
                    base[this.tabletR_CableVoltage.IdColumn] = value;
                }
            }

            // Token: 0x1700072E RID: 1838
            // (get) Token: 0x06001BFF RID: 7167 RVA: 0x000A0F7B File Offset: 0x0009F17B
            // (set) Token: 0x06001C00 RID: 7168 RVA: 0x000A0F93 File Offset: 0x0009F193
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    return (string)base[this.tabletR_CableVoltage.NameColumn];
                }
                set
                {
                    base[this.tabletR_CableVoltage.NameColumn] = value;
                }
            }

            // Token: 0x04000BA7 RID: 2983
            private DataSetGES.tR_CableVoltageDataTable tabletR_CableVoltage;
        }

        // Token: 0x02000148 RID: 328
        public class tR_CableAmperageRow : DataRow
        {
            // Token: 0x06001C01 RID: 7169 RVA: 0x000A0FA7 File Offset: 0x0009F1A7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_CableAmperageRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletR_CableAmperage = (DataSetGES.tR_CableAmperageDataTable)base.Table;
            }

            // Token: 0x1700072F RID: 1839
            // (get) Token: 0x06001C02 RID: 7170 RVA: 0x000A0FC4 File Offset: 0x0009F1C4
            // (set) Token: 0x06001C03 RID: 7171 RVA: 0x000A1008 File Offset: 0x0009F208
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double Amperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletR_CableAmperage.AmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Amperage' in table 'tR_CableAmperage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_CableAmperage.AmperageColumn] = value;
                }
            }

            // Token: 0x06001C04 RID: 7172 RVA: 0x000A1021 File Offset: 0x0009F221
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAmperageNull()
            {
                return base.IsNull(this.tabletR_CableAmperage.AmperageColumn);
            }

            // Token: 0x06001C05 RID: 7173 RVA: 0x000A1034 File Offset: 0x0009F234
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetAmperageNull()
            {
                base[this.tabletR_CableAmperage.AmperageColumn] = Convert.DBNull;
            }

            // Token: 0x04000BA8 RID: 2984
            private DataSetGES.tR_CableAmperageDataTable tabletR_CableAmperage;
        }

        // Token: 0x02000149 RID: 329
        public class tR_CableWiresRow : DataRow
        {
            // Token: 0x06001C06 RID: 7174 RVA: 0x000A104C File Offset: 0x0009F24C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_CableWiresRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletR_CableWires = (DataSetGES.tR_CableWiresDataTable)base.Table;
            }

            // Token: 0x17000730 RID: 1840
            // (get) Token: 0x06001C07 RID: 7175 RVA: 0x000A1066 File Offset: 0x0009F266
            // (set) Token: 0x06001C08 RID: 7176 RVA: 0x000A107E File Offset: 0x0009F27E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Wires
            {
                get
                {
                    return (int)base[this.tabletR_CableWires.WiresColumn];
                }
                set
                {
                    base[this.tabletR_CableWires.WiresColumn] = value;
                }
            }

            // Token: 0x04000BA9 RID: 2985
            private DataSetGES.tR_CableWiresDataTable tabletR_CableWires;
        }

        // Token: 0x0200014A RID: 330
        public class vJ_CableReferenceRow : DataRow
        {
            // Token: 0x06001C09 RID: 7177 RVA: 0x000A1097 File Offset: 0x0009F297
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableReferenceRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_CableReference = (DataSetGES.vJ_CableReferenceDataTable)base.Table;
            }

            // Token: 0x17000731 RID: 1841
            // (get) Token: 0x06001C0A RID: 7178 RVA: 0x000A10B1 File Offset: 0x0009F2B1
            // (set) Token: 0x06001C0B RID: 7179 RVA: 0x000A10C9 File Offset: 0x0009F2C9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_CableReference.idColumn];
                }
                set
                {
                    base[this.tablevJ_CableReference.idColumn] = value;
                }
            }

            // Token: 0x17000732 RID: 1842
            // (get) Token: 0x06001C0C RID: 7180 RVA: 0x000A10E2 File Offset: 0x0009F2E2
            // (set) Token: 0x06001C0D RID: 7181 RVA: 0x000A10FA File Offset: 0x0009F2FA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string CableMakeup
            {
                get
                {
                    return (string)base[this.tablevJ_CableReference.CableMakeupColumn];
                }
                set
                {
                    base[this.tablevJ_CableReference.CableMakeupColumn] = value;
                }
            }

            // Token: 0x17000733 RID: 1843
            // (get) Token: 0x06001C0E RID: 7182 RVA: 0x000A110E File Offset: 0x0009F30E
            // (set) Token: 0x06001C0F RID: 7183 RVA: 0x000A1126 File Offset: 0x0009F326
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Wires
            {
                get
                {
                    return (int)base[this.tablevJ_CableReference.WiresColumn];
                }
                set
                {
                    base[this.tablevJ_CableReference.WiresColumn] = value;
                }
            }

            // Token: 0x17000734 RID: 1844
            // (get) Token: 0x06001C10 RID: 7184 RVA: 0x000A113F File Offset: 0x0009F33F
            // (set) Token: 0x06001C11 RID: 7185 RVA: 0x000A1157 File Offset: 0x0009F357
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSection
            {
                get
                {
                    return (double)base[this.tablevJ_CableReference.CrossSectionColumn];
                }
                set
                {
                    base[this.tablevJ_CableReference.CrossSectionColumn] = value;
                }
            }

            // Token: 0x17000735 RID: 1845
            // (get) Token: 0x06001C12 RID: 7186 RVA: 0x000A1170 File Offset: 0x0009F370
            // (set) Token: 0x06001C13 RID: 7187 RVA: 0x000A11B4 File Offset: 0x0009F3B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WiresAddl
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableReference.WiresAddlColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'WiresAddl' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.WiresAddlColumn] = value;
                }
            }

            // Token: 0x17000736 RID: 1846
            // (get) Token: 0x06001C14 RID: 7188 RVA: 0x000A11D0 File Offset: 0x0009F3D0
            // (set) Token: 0x06001C15 RID: 7189 RVA: 0x000A1214 File Offset: 0x0009F414
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSectionAddl
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_CableReference.CrossSectionAddlColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CrossSectionAddl' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.CrossSectionAddlColumn] = value;
                }
            }

            // Token: 0x17000737 RID: 1847
            // (get) Token: 0x06001C16 RID: 7190 RVA: 0x000A1230 File Offset: 0x0009F430
            // (set) Token: 0x06001C17 RID: 7191 RVA: 0x000A1274 File Offset: 0x0009F474
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Resistance
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_CableReference.ResistanceColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Resistance' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.ResistanceColumn] = value;
                }
            }

            // Token: 0x17000738 RID: 1848
            // (get) Token: 0x06001C18 RID: 7192 RVA: 0x000A1290 File Offset: 0x0009F490
            // (set) Token: 0x06001C19 RID: 7193 RVA: 0x000A12D4 File Offset: 0x0009F4D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ResistanceAddl
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_CableReference.ResistanceAddlColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ResistanceAddl' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.ResistanceAddlColumn] = value;
                }
            }

            // Token: 0x17000739 RID: 1849
            // (get) Token: 0x06001C1A RID: 7194 RVA: 0x000A12F0 File Offset: 0x0009F4F0
            // (set) Token: 0x06001C1B RID: 7195 RVA: 0x000A1334 File Offset: 0x0009F534
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idVoltage
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableReference.idVoltageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idVoltage' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.idVoltageColumn] = value;
                }
            }

            // Token: 0x1700073A RID: 1850
            // (get) Token: 0x06001C1C RID: 7196 RVA: 0x000A1350 File Offset: 0x0009F550
            // (set) Token: 0x06001C1D RID: 7197 RVA: 0x000A1394 File Offset: 0x0009F594
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Voltage
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tablevJ_CableReference.VoltageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.VoltageColumn] = value;
                }
            }

            // Token: 0x1700073B RID: 1851
            // (get) Token: 0x06001C1E RID: 7198 RVA: 0x000A13B0 File Offset: 0x0009F5B0
            // (set) Token: 0x06001C1F RID: 7199 RVA: 0x000A13F4 File Offset: 0x0009F5F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AmperageType
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CableReference.AmperageTypeColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AmperageType' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.AmperageTypeColumn] = value;
                }
            }

            // Token: 0x1700073C RID: 1852
            // (get) Token: 0x06001C20 RID: 7200 RVA: 0x000A1408 File Offset: 0x0009F608
            // (set) Token: 0x06001C21 RID: 7201 RVA: 0x000A144C File Offset: 0x0009F64C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double AmperageValue
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_CableReference.AmperageValueColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AmperageValue' in table 'vJ_CableReference' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableReference.AmperageValueColumn] = value;
                }
            }

            // Token: 0x06001C22 RID: 7202 RVA: 0x000A1465 File Offset: 0x0009F665
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWiresAddlNull()
            {
                return base.IsNull(this.tablevJ_CableReference.WiresAddlColumn);
            }

            // Token: 0x06001C23 RID: 7203 RVA: 0x000A1478 File Offset: 0x0009F678
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWiresAddlNull()
            {
                base[this.tablevJ_CableReference.WiresAddlColumn] = Convert.DBNull;
            }

            // Token: 0x06001C24 RID: 7204 RVA: 0x000A1490 File Offset: 0x0009F690
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCrossSectionAddlNull()
            {
                return base.IsNull(this.tablevJ_CableReference.CrossSectionAddlColumn);
            }

            // Token: 0x06001C25 RID: 7205 RVA: 0x000A14A3 File Offset: 0x0009F6A3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCrossSectionAddlNull()
            {
                base[this.tablevJ_CableReference.CrossSectionAddlColumn] = Convert.DBNull;
            }

            // Token: 0x06001C26 RID: 7206 RVA: 0x000A14BB File Offset: 0x0009F6BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsResistanceNull()
            {
                return base.IsNull(this.tablevJ_CableReference.ResistanceColumn);
            }

            // Token: 0x06001C27 RID: 7207 RVA: 0x000A14CE File Offset: 0x0009F6CE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResistanceNull()
            {
                base[this.tablevJ_CableReference.ResistanceColumn] = Convert.DBNull;
            }

            // Token: 0x06001C28 RID: 7208 RVA: 0x000A14E6 File Offset: 0x0009F6E6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsResistanceAddlNull()
            {
                return base.IsNull(this.tablevJ_CableReference.ResistanceAddlColumn);
            }

            // Token: 0x06001C29 RID: 7209 RVA: 0x000A14F9 File Offset: 0x0009F6F9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResistanceAddlNull()
            {
                base[this.tablevJ_CableReference.ResistanceAddlColumn] = Convert.DBNull;
            }

            // Token: 0x06001C2A RID: 7210 RVA: 0x000A1511 File Offset: 0x0009F711
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidVoltageNull()
            {
                return base.IsNull(this.tablevJ_CableReference.idVoltageColumn);
            }

            // Token: 0x06001C2B RID: 7211 RVA: 0x000A1524 File Offset: 0x0009F724
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidVoltageNull()
            {
                base[this.tablevJ_CableReference.idVoltageColumn] = Convert.DBNull;
            }

            // Token: 0x06001C2C RID: 7212 RVA: 0x000A153C File Offset: 0x0009F73C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsVoltageNull()
            {
                return base.IsNull(this.tablevJ_CableReference.VoltageColumn);
            }

            // Token: 0x06001C2D RID: 7213 RVA: 0x000A154F File Offset: 0x0009F74F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltageNull()
            {
                base[this.tablevJ_CableReference.VoltageColumn] = Convert.DBNull;
            }

            // Token: 0x06001C2E RID: 7214 RVA: 0x000A1567 File Offset: 0x0009F767
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmperageTypeNull()
            {
                return base.IsNull(this.tablevJ_CableReference.AmperageTypeColumn);
            }

            // Token: 0x06001C2F RID: 7215 RVA: 0x000A157A File Offset: 0x0009F77A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmperageTypeNull()
            {
                base[this.tablevJ_CableReference.AmperageTypeColumn] = Convert.DBNull;
            }

            // Token: 0x06001C30 RID: 7216 RVA: 0x000A1592 File Offset: 0x0009F792
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAmperageValueNull()
            {
                return base.IsNull(this.tablevJ_CableReference.AmperageValueColumn);
            }

            // Token: 0x06001C31 RID: 7217 RVA: 0x000A15A5 File Offset: 0x0009F7A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmperageValueNull()
            {
                base[this.tablevJ_CableReference.AmperageValueColumn] = Convert.DBNull;
            }

            // Token: 0x04000BAA RID: 2986
            private DataSetGES.vJ_CableReferenceDataTable tablevJ_CableReference;
        }

        // Token: 0x0200014B RID: 331
        public class vJ_TransfsRow : DataRow
        {
            // Token: 0x06001C32 RID: 7218 RVA: 0x000A15BD File Offset: 0x0009F7BD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_TransfsRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_Transfs = (DataSetGES.vJ_TransfsDataTable)base.Table;
            }

            // Token: 0x1700073D RID: 1853
            // (get) Token: 0x06001C33 RID: 7219 RVA: 0x000A15D7 File Offset: 0x0009F7D7
            // (set) Token: 0x06001C34 RID: 7220 RVA: 0x000A15EF File Offset: 0x0009F7EF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSubstation
            {
                get
                {
                    return (int)base[this.tablevJ_Transfs.idSubstationColumn];
                }
                set
                {
                    base[this.tablevJ_Transfs.idSubstationColumn] = value;
                }
            }

            // Token: 0x1700073E RID: 1854
            // (get) Token: 0x06001C35 RID: 7221 RVA: 0x000A1608 File Offset: 0x0009F808
            // (set) Token: 0x06001C36 RID: 7222 RVA: 0x000A1620 File Offset: 0x0009F820
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeDoc
            {
                get
                {
                    return (int)base[this.tablevJ_Transfs.TypeDocColumn];
                }
                set
                {
                    base[this.tablevJ_Transfs.TypeDocColumn] = value;
                }
            }

            // Token: 0x1700073F RID: 1855
            // (get) Token: 0x06001C37 RID: 7223 RVA: 0x000A1639 File Offset: 0x0009F839
            // (set) Token: 0x06001C38 RID: 7224 RVA: 0x000A1651 File Offset: 0x0009F851
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_Transfs.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_Transfs.idTransfColumn] = value;
                }
            }

            // Token: 0x17000740 RID: 1856
            // (get) Token: 0x06001C39 RID: 7225 RVA: 0x000A166A File Offset: 0x0009F86A
            // (set) Token: 0x06001C3A RID: 7226 RVA: 0x000A1682 File Offset: 0x0009F882
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    return (string)base[this.tablevJ_Transfs.NameColumn];
                }
                set
                {
                    base[this.tablevJ_Transfs.NameColumn] = value;
                }
            }

            // Token: 0x04000BAB RID: 2987
            private DataSetGES.vJ_TransfsDataTable tablevJ_Transfs;
        }

        // Token: 0x0200014C RID: 332
        public class dtMeasCableRatioRow : DataRow
        {
            // Token: 0x06001C3B RID: 7227 RVA: 0x000A1696 File Offset: 0x0009F896
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtMeasCableRatioRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtMeasCableRatio = (DataSetGES.dtMeasCableRatioDataTable)base.Table;
            }

            // Token: 0x17000741 RID: 1857
            // (get) Token: 0x06001C3C RID: 7228 RVA: 0x000A16B0 File Offset: 0x0009F8B0
            // (set) Token: 0x06001C3D RID: 7229 RVA: 0x000A16F4 File Offset: 0x0009F8F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameSubstation
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtMeasCableRatio.NameSubstationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameSubstation' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.NameSubstationColumn] = value;
                }
            }

            // Token: 0x17000742 RID: 1858
            // (get) Token: 0x06001C3E RID: 7230 RVA: 0x000A1708 File Offset: 0x0009F908
            // (set) Token: 0x06001C3F RID: 7231 RVA: 0x000A174C File Offset: 0x0009F94C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtMeasCableRatio.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.NameTransfColumn] = value;
                }
            }

            // Token: 0x17000743 RID: 1859
            // (get) Token: 0x06001C40 RID: 7232 RVA: 0x000A1760 File Offset: 0x0009F960
            // (set) Token: 0x06001C41 RID: 7233 RVA: 0x000A17A4 File Offset: 0x0009F9A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtMeasCableRatio.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.NameBusColumn] = value;
                }
            }

            // Token: 0x17000744 RID: 1860
            // (get) Token: 0x06001C42 RID: 7234 RVA: 0x000A17B8 File Offset: 0x0009F9B8
            // (set) Token: 0x06001C43 RID: 7235 RVA: 0x000A17FC File Offset: 0x0009F9FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Worker
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtMeasCableRatio.WorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Worker' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.WorkerColumn] = value;
                }
            }

            // Token: 0x17000745 RID: 1861
            // (get) Token: 0x06001C44 RID: 7236 RVA: 0x000A1810 File Offset: 0x0009FA10
            // (set) Token: 0x06001C45 RID: 7237 RVA: 0x000A1854 File Offset: 0x0009FA54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IadSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IadSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IadSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IadSumColumn] = value;
                }
            }

            // Token: 0x17000746 RID: 1862
            // (get) Token: 0x06001C46 RID: 7238 RVA: 0x000A1870 File Offset: 0x0009FA70
            // (set) Token: 0x06001C47 RID: 7239 RVA: 0x000A18B4 File Offset: 0x0009FAB4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IanSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IanSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IanSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IanSumColumn] = value;
                }
            }

            // Token: 0x17000747 RID: 1863
            // (get) Token: 0x06001C48 RID: 7240 RVA: 0x000A18D0 File Offset: 0x0009FAD0
            // (set) Token: 0x06001C49 RID: 7241 RVA: 0x000A1914 File Offset: 0x0009FB14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IbdSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IbdSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IbdSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IbdSumColumn] = value;
                }
            }

            // Token: 0x17000748 RID: 1864
            // (get) Token: 0x06001C4A RID: 7242 RVA: 0x000A1930 File Offset: 0x0009FB30
            // (set) Token: 0x06001C4B RID: 7243 RVA: 0x000A1974 File Offset: 0x0009FB74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IbnSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IbnSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IbnSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IbnSumColumn] = value;
                }
            }

            // Token: 0x17000749 RID: 1865
            // (get) Token: 0x06001C4C RID: 7244 RVA: 0x000A1990 File Offset: 0x0009FB90
            // (set) Token: 0x06001C4D RID: 7245 RVA: 0x000A19D4 File Offset: 0x0009FBD4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IcdSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IcdSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IcdSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IcdSumColumn] = value;
                }
            }

            // Token: 0x1700074A RID: 1866
            // (get) Token: 0x06001C4E RID: 7246 RVA: 0x000A19F0 File Offset: 0x0009FBF0
            // (set) Token: 0x06001C4F RID: 7247 RVA: 0x000A1A34 File Offset: 0x0009FC34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IcnSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IcnSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IcnSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IcnSumColumn] = value;
                }
            }

            // Token: 0x1700074B RID: 1867
            // (get) Token: 0x06001C50 RID: 7248 RVA: 0x000A1A50 File Offset: 0x0009FC50
            // (set) Token: 0x06001C51 RID: 7249 RVA: 0x000A1A94 File Offset: 0x0009FC94
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IodSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IodSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IodSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IodSumColumn] = value;
                }
            }

            // Token: 0x1700074C RID: 1868
            // (get) Token: 0x06001C52 RID: 7250 RVA: 0x000A1AB0 File Offset: 0x0009FCB0
            // (set) Token: 0x06001C53 RID: 7251 RVA: 0x000A1AF4 File Offset: 0x0009FCF4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IonSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IonSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IonSum' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IonSumColumn] = value;
                }
            }

            // Token: 0x1700074D RID: 1869
            // (get) Token: 0x06001C54 RID: 7252 RVA: 0x000A1B10 File Offset: 0x0009FD10
            // (set) Token: 0x06001C55 RID: 7253 RVA: 0x000A1B54 File Offset: 0x0009FD54
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Isrd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IsrdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Isrd' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IsrdColumn] = value;
                }
            }

            // Token: 0x1700074E RID: 1870
            // (get) Token: 0x06001C56 RID: 7254 RVA: 0x000A1B70 File Offset: 0x0009FD70
            // (set) Token: 0x06001C57 RID: 7255 RVA: 0x000A1BB4 File Offset: 0x0009FDB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Isrn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.IsrnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Isrn' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.IsrnColumn] = value;
                }
            }

            // Token: 0x1700074F RID: 1871
            // (get) Token: 0x06001C58 RID: 7256 RVA: 0x000A1BD0 File Offset: 0x0009FDD0
            // (set) Token: 0x06001C59 RID: 7257 RVA: 0x000A1C14 File Offset: 0x0009FE14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kntd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.KntdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntd' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.KntdColumn] = value;
                }
            }

            // Token: 0x17000750 RID: 1872
            // (get) Token: 0x06001C5A RID: 7258 RVA: 0x000A1C30 File Offset: 0x0009FE30
            // (set) Token: 0x06001C5B RID: 7259 RVA: 0x000A1C74 File Offset: 0x0009FE74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Kntn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.KntnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntn' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.KntnColumn] = value;
                }
            }

            // Token: 0x17000751 RID: 1873
            // (get) Token: 0x06001C5C RID: 7260 RVA: 0x000A1C90 File Offset: 0x0009FE90
            // (set) Token: 0x06001C5D RID: 7261 RVA: 0x000A1CD4 File Offset: 0x0009FED4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kpfd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.KpfdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kpfd' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.KpfdColumn] = value;
                }
            }

            // Token: 0x17000752 RID: 1874
            // (get) Token: 0x06001C5E RID: 7262 RVA: 0x000A1CF0 File Offset: 0x0009FEF0
            // (set) Token: 0x06001C5F RID: 7263 RVA: 0x000A1D34 File Offset: 0x0009FF34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kpfn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCableRatio.KpfnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kpfn' in table 'dtMeasCableRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCableRatio.KpfnColumn] = value;
                }
            }

            // Token: 0x06001C60 RID: 7264 RVA: 0x000A1D4D File Offset: 0x0009FF4D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameSubstationNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.NameSubstationColumn);
            }

            // Token: 0x06001C61 RID: 7265 RVA: 0x000A1D60 File Offset: 0x0009FF60
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameSubstationNull()
            {
                base[this.tabledtMeasCableRatio.NameSubstationColumn] = Convert.DBNull;
            }

            // Token: 0x06001C62 RID: 7266 RVA: 0x000A1D78 File Offset: 0x0009FF78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.NameTransfColumn);
            }

            // Token: 0x06001C63 RID: 7267 RVA: 0x000A1D8B File Offset: 0x0009FF8B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tabledtMeasCableRatio.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06001C64 RID: 7268 RVA: 0x000A1DA3 File Offset: 0x0009FFA3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.NameBusColumn);
            }

            // Token: 0x06001C65 RID: 7269 RVA: 0x000A1DB6 File Offset: 0x0009FFB6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tabledtMeasCableRatio.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001C66 RID: 7270 RVA: 0x000A1DCE File Offset: 0x0009FFCE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWorkerNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.WorkerColumn);
            }

            // Token: 0x06001C67 RID: 7271 RVA: 0x000A1DE1 File Offset: 0x0009FFE1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetWorkerNull()
            {
                base[this.tabledtMeasCableRatio.WorkerColumn] = Convert.DBNull;
            }

            // Token: 0x06001C68 RID: 7272 RVA: 0x000A1DF9 File Offset: 0x0009FFF9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIadSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IadSumColumn);
            }

            // Token: 0x06001C69 RID: 7273 RVA: 0x000A1E0C File Offset: 0x000A000C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIadSumNull()
            {
                base[this.tabledtMeasCableRatio.IadSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C6A RID: 7274 RVA: 0x000A1E24 File Offset: 0x000A0024
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIanSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IanSumColumn);
            }

            // Token: 0x06001C6B RID: 7275 RVA: 0x000A1E37 File Offset: 0x000A0037
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIanSumNull()
            {
                base[this.tabledtMeasCableRatio.IanSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C6C RID: 7276 RVA: 0x000A1E4F File Offset: 0x000A004F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbdSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IbdSumColumn);
            }

            // Token: 0x06001C6D RID: 7277 RVA: 0x000A1E62 File Offset: 0x000A0062
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbdSumNull()
            {
                base[this.tabledtMeasCableRatio.IbdSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C6E RID: 7278 RVA: 0x000A1E7A File Offset: 0x000A007A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbnSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IbnSumColumn);
            }

            // Token: 0x06001C6F RID: 7279 RVA: 0x000A1E8D File Offset: 0x000A008D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbnSumNull()
            {
                base[this.tabledtMeasCableRatio.IbnSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C70 RID: 7280 RVA: 0x000A1EA5 File Offset: 0x000A00A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcdSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IcdSumColumn);
            }

            // Token: 0x06001C71 RID: 7281 RVA: 0x000A1EB8 File Offset: 0x000A00B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcdSumNull()
            {
                base[this.tabledtMeasCableRatio.IcdSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C72 RID: 7282 RVA: 0x000A1ED0 File Offset: 0x000A00D0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcnSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IcnSumColumn);
            }

            // Token: 0x06001C73 RID: 7283 RVA: 0x000A1EE3 File Offset: 0x000A00E3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcnSumNull()
            {
                base[this.tabledtMeasCableRatio.IcnSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C74 RID: 7284 RVA: 0x000A1EFB File Offset: 0x000A00FB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIodSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IodSumColumn);
            }

            // Token: 0x06001C75 RID: 7285 RVA: 0x000A1F0E File Offset: 0x000A010E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIodSumNull()
            {
                base[this.tabledtMeasCableRatio.IodSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C76 RID: 7286 RVA: 0x000A1F26 File Offset: 0x000A0126
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIonSumNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IonSumColumn);
            }

            // Token: 0x06001C77 RID: 7287 RVA: 0x000A1F39 File Offset: 0x000A0139
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIonSumNull()
            {
                base[this.tabledtMeasCableRatio.IonSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001C78 RID: 7288 RVA: 0x000A1F51 File Offset: 0x000A0151
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIsrdNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IsrdColumn);
            }

            // Token: 0x06001C79 RID: 7289 RVA: 0x000A1F64 File Offset: 0x000A0164
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIsrdNull()
            {
                base[this.tabledtMeasCableRatio.IsrdColumn] = Convert.DBNull;
            }

            // Token: 0x06001C7A RID: 7290 RVA: 0x000A1F7C File Offset: 0x000A017C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsrnNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.IsrnColumn);
            }

            // Token: 0x06001C7B RID: 7291 RVA: 0x000A1F8F File Offset: 0x000A018F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsrnNull()
            {
                base[this.tabledtMeasCableRatio.IsrnColumn] = Convert.DBNull;
            }

            // Token: 0x06001C7C RID: 7292 RVA: 0x000A1FA7 File Offset: 0x000A01A7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntdNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.KntdColumn);
            }

            // Token: 0x06001C7D RID: 7293 RVA: 0x000A1FBA File Offset: 0x000A01BA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKntdNull()
            {
                base[this.tabledtMeasCableRatio.KntdColumn] = Convert.DBNull;
            }

            // Token: 0x06001C7E RID: 7294 RVA: 0x000A1FD2 File Offset: 0x000A01D2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntnNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.KntnColumn);
            }

            // Token: 0x06001C7F RID: 7295 RVA: 0x000A1FE5 File Offset: 0x000A01E5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKntnNull()
            {
                base[this.tabledtMeasCableRatio.KntnColumn] = Convert.DBNull;
            }

            // Token: 0x06001C80 RID: 7296 RVA: 0x000A1FFD File Offset: 0x000A01FD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKpfdNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.KpfdColumn);
            }

            // Token: 0x06001C81 RID: 7297 RVA: 0x000A2010 File Offset: 0x000A0210
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKpfdNull()
            {
                base[this.tabledtMeasCableRatio.KpfdColumn] = Convert.DBNull;
            }

            // Token: 0x06001C82 RID: 7298 RVA: 0x000A2028 File Offset: 0x000A0228
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKpfnNull()
            {
                return base.IsNull(this.tabledtMeasCableRatio.KpfnColumn);
            }

            // Token: 0x06001C83 RID: 7299 RVA: 0x000A203B File Offset: 0x000A023B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKpfnNull()
            {
                base[this.tabledtMeasCableRatio.KpfnColumn] = Convert.DBNull;
            }

            // Token: 0x04000BAC RID: 2988
            private DataSetGES.dtMeasCableRatioDataTable tabledtMeasCableRatio;
        }

        // Token: 0x0200014D RID: 333
        public class fn_J_GetBusLVByTransfRow : DataRow
        {
            // Token: 0x06001C84 RID: 7300 RVA: 0x000A2053 File Offset: 0x000A0253
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetBusLVByTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_GetBusLVByTransf = (DataSetGES.fn_J_GetBusLVByTransfDataTable)base.Table;
            }

            // Token: 0x17000753 RID: 1875
            // (get) Token: 0x06001C85 RID: 7301 RVA: 0x000A2070 File Offset: 0x000A0270
            // (set) Token: 0x06001C86 RID: 7302 RVA: 0x000A20B4 File Offset: 0x000A02B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetBusLVByTransf.IdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetBusLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetBusLVByTransf.IdColumn] = value;
                }
            }

            // Token: 0x17000754 RID: 1876
            // (get) Token: 0x06001C87 RID: 7303 RVA: 0x000A20D0 File Offset: 0x000A02D0
            // (set) Token: 0x06001C88 RID: 7304 RVA: 0x000A2114 File Offset: 0x000A0314
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetBusLVByTransf.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetBusLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetBusLVByTransf.NameColumn] = value;
                }
            }

            // Token: 0x17000755 RID: 1877
            // (get) Token: 0x06001C89 RID: 7305 RVA: 0x000A2128 File Offset: 0x000A0328
            // (set) Token: 0x06001C8A RID: 7306 RVA: 0x000A216C File Offset: 0x000A036C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetBusLVByTransf.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'fn_J_GetBusLVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetBusLVByTransf.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x06001C8B RID: 7307 RVA: 0x000A2185 File Offset: 0x000A0385
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdNull()
            {
                return base.IsNull(this.tablefn_J_GetBusLVByTransf.IdColumn);
            }

            // Token: 0x06001C8C RID: 7308 RVA: 0x000A2198 File Offset: 0x000A0398
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdNull()
            {
                base[this.tablefn_J_GetBusLVByTransf.IdColumn] = Convert.DBNull;
            }

            // Token: 0x06001C8D RID: 7309 RVA: 0x000A21B0 File Offset: 0x000A03B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablefn_J_GetBusLVByTransf.NameColumn);
            }

            // Token: 0x06001C8E RID: 7310 RVA: 0x000A21C3 File Offset: 0x000A03C3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablefn_J_GetBusLVByTransf.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001C8F RID: 7311 RVA: 0x000A21DB File Offset: 0x000A03DB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tablefn_J_GetBusLVByTransf.TypeCodeIdColumn);
            }

            // Token: 0x06001C90 RID: 7312 RVA: 0x000A21EE File Offset: 0x000A03EE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdNull()
            {
                base[this.tablefn_J_GetBusLVByTransf.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x04000BAD RID: 2989
            private DataSetGES.fn_J_GetBusLVByTransfDataTable tablefn_J_GetBusLVByTransf;
        }

        // Token: 0x0200014E RID: 334
        public class vJ_MeasurementReportRow : DataRow
        {
            // Token: 0x06001C91 RID: 7313 RVA: 0x000A2206 File Offset: 0x000A0406
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasurementReportRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasurementReport = (DataSetGES.vJ_MeasurementReportDataTable)base.Table;
            }

            // Token: 0x17000756 RID: 1878
            // (get) Token: 0x06001C92 RID: 7314 RVA: 0x000A2220 File Offset: 0x000A0420
            // (set) Token: 0x06001C93 RID: 7315 RVA: 0x000A2238 File Offset: 0x000A0438
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasurementReport.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.idColumn] = value;
                }
            }

            // Token: 0x17000757 RID: 1879
            // (get) Token: 0x06001C94 RID: 7316 RVA: 0x000A2251 File Offset: 0x000A0451
            // (set) Token: 0x06001C95 RID: 7317 RVA: 0x000A2269 File Offset: 0x000A0469
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idObjList
            {
                get
                {
                    return (int)base[this.tablevJ_MeasurementReport.idObjListColumn];
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.idObjListColumn] = value;
                }
            }

            // Token: 0x17000758 RID: 1880
            // (get) Token: 0x06001C96 RID: 7318 RVA: 0x000A2284 File Offset: 0x000A0484
            // (set) Token: 0x06001C97 RID: 7319 RVA: 0x000A22C8 File Offset: 0x000A04C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasurementReport.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.NameColumn] = value;
                }
            }

            // Token: 0x17000759 RID: 1881
            // (get) Token: 0x06001C98 RID: 7320 RVA: 0x000A22DC File Offset: 0x000A04DC
            // (set) Token: 0x06001C99 RID: 7321 RVA: 0x000A22F4 File Offset: 0x000A04F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeDoc
            {
                get
                {
                    return (int)base[this.tablevJ_MeasurementReport.TypeDocColumn];
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.TypeDocColumn] = value;
                }
            }

            // Token: 0x1700075A RID: 1882
            // (get) Token: 0x06001C9A RID: 7322 RVA: 0x000A2310 File Offset: 0x000A0510
            // (set) Token: 0x06001C9B RID: 7323 RVA: 0x000A2354 File Offset: 0x000A0554
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateD
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_MeasurementReport.DateDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateD' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.DateDColumn] = value;
                }
            }

            // Token: 0x1700075B RID: 1883
            // (get) Token: 0x06001C9C RID: 7324 RVA: 0x000A2370 File Offset: 0x000A0570
            // (set) Token: 0x06001C9D RID: 7325 RVA: 0x000A23B4 File Offset: 0x000A05B4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TemperatureD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasurementReport.TemperatureDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureD' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.TemperatureDColumn] = value;
                }
            }

            // Token: 0x1700075C RID: 1884
            // (get) Token: 0x06001C9E RID: 7326 RVA: 0x000A23D0 File Offset: 0x000A05D0
            // (set) Token: 0x06001C9F RID: 7327 RVA: 0x000A2414 File Offset: 0x000A0614
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateN
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tablevJ_MeasurementReport.DateNColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateN' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.DateNColumn] = value;
                }
            }

            // Token: 0x1700075D RID: 1885
            // (get) Token: 0x06001CA0 RID: 7328 RVA: 0x000A2430 File Offset: 0x000A0630
            // (set) Token: 0x06001CA1 RID: 7329 RVA: 0x000A2474 File Offset: 0x000A0674
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemperatureN
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasurementReport.TemperatureNColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureN' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.TemperatureNColumn] = value;
                }
            }

            // Token: 0x1700075E RID: 1886
            // (get) Token: 0x06001CA2 RID: 7330 RVA: 0x000A2490 File Offset: 0x000A0690
            // (set) Token: 0x06001CA3 RID: 7331 RVA: 0x000A24D4 File Offset: 0x000A06D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorker
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasurementReport.idWorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.idWorkerColumn] = value;
                }
            }

            // Token: 0x1700075F RID: 1887
            // (get) Token: 0x06001CA4 RID: 7332 RVA: 0x000A24F0 File Offset: 0x000A06F0
            // (set) Token: 0x06001CA5 RID: 7333 RVA: 0x000A2534 File Offset: 0x000A0734
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FIO
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasurementReport.FIOColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'FIO' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.FIOColumn] = value;
                }
            }

            // Token: 0x17000760 RID: 1888
            // (get) Token: 0x06001CA6 RID: 7334 RVA: 0x000A2548 File Offset: 0x000A0748
            // (set) Token: 0x06001CA7 RID: 7335 RVA: 0x000A258C File Offset: 0x000A078C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_MeasurementReport.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'vJ_MeasurementReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasurementReport.DeletedColumn] = value;
                }
            }

            // Token: 0x06001CA8 RID: 7336 RVA: 0x000A25A5 File Offset: 0x000A07A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.NameColumn);
            }

            // Token: 0x06001CA9 RID: 7337 RVA: 0x000A25B8 File Offset: 0x000A07B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablevJ_MeasurementReport.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001CAA RID: 7338 RVA: 0x000A25D0 File Offset: 0x000A07D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDateDNull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.DateDColumn);
            }

            // Token: 0x06001CAB RID: 7339 RVA: 0x000A25E3 File Offset: 0x000A07E3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateDNull()
            {
                base[this.tablevJ_MeasurementReport.DateDColumn] = Convert.DBNull;
            }

            // Token: 0x06001CAC RID: 7340 RVA: 0x000A25FB File Offset: 0x000A07FB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemperatureDNull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.TemperatureDColumn);
            }

            // Token: 0x06001CAD RID: 7341 RVA: 0x000A260E File Offset: 0x000A080E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureDNull()
            {
                base[this.tablevJ_MeasurementReport.TemperatureDColumn] = Convert.DBNull;
            }

            // Token: 0x06001CAE RID: 7342 RVA: 0x000A2626 File Offset: 0x000A0826
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDateNNull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.DateNColumn);
            }

            // Token: 0x06001CAF RID: 7343 RVA: 0x000A2639 File Offset: 0x000A0839
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateNNull()
            {
                base[this.tablevJ_MeasurementReport.DateNColumn] = Convert.DBNull;
            }

            // Token: 0x06001CB0 RID: 7344 RVA: 0x000A2651 File Offset: 0x000A0851
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemperatureNNull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.TemperatureNColumn);
            }

            // Token: 0x06001CB1 RID: 7345 RVA: 0x000A2664 File Offset: 0x000A0864
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTemperatureNNull()
            {
                base[this.tablevJ_MeasurementReport.TemperatureNColumn] = Convert.DBNull;
            }

            // Token: 0x06001CB2 RID: 7346 RVA: 0x000A267C File Offset: 0x000A087C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidWorkerNull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.idWorkerColumn);
            }

            // Token: 0x06001CB3 RID: 7347 RVA: 0x000A268F File Offset: 0x000A088F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidWorkerNull()
            {
                base[this.tablevJ_MeasurementReport.idWorkerColumn] = Convert.DBNull;
            }

            // Token: 0x06001CB4 RID: 7348 RVA: 0x000A26A7 File Offset: 0x000A08A7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIONull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.FIOColumn);
            }

            // Token: 0x06001CB5 RID: 7349 RVA: 0x000A26BA File Offset: 0x000A08BA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetFIONull()
            {
                base[this.tablevJ_MeasurementReport.FIOColumn] = Convert.DBNull;
            }

            // Token: 0x06001CB6 RID: 7350 RVA: 0x000A26D2 File Offset: 0x000A08D2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tablevJ_MeasurementReport.DeletedColumn);
            }

            // Token: 0x06001CB7 RID: 7351 RVA: 0x000A26E5 File Offset: 0x000A08E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDeletedNull()
            {
                base[this.tablevJ_MeasurementReport.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BAE RID: 2990
            private DataSetGES.vJ_MeasurementReportDataTable tablevJ_MeasurementReport;
        }

        // Token: 0x0200014F RID: 335
        public class dtMeasTransfAmperageDopDataReportRow : DataRow
        {
            // Token: 0x06001CB8 RID: 7352 RVA: 0x000A26FD File Offset: 0x000A08FD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtMeasTransfAmperageDopDataReportRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtMeasTransfAmperageDopDataReport = (DataSetGES.dtMeasTransfAmperageDopDataReportDataTable)base.Table;
            }

            // Token: 0x17000761 RID: 1889
            // (get) Token: 0x06001CB9 RID: 7353 RVA: 0x000A2718 File Offset: 0x000A0918
            // (set) Token: 0x06001CBA RID: 7354 RVA: 0x000A275C File Offset: 0x000A095C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtMeasTransfAmperageDopDataReport.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'dtMeasTransfAmperageDopDataReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasTransfAmperageDopDataReport.NameBusColumn] = value;
                }
            }

            // Token: 0x06001CBB RID: 7355 RVA: 0x000A2770 File Offset: 0x000A0970
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tabledtMeasTransfAmperageDopDataReport.NameBusColumn);
            }

            // Token: 0x06001CBC RID: 7356 RVA: 0x000A2783 File Offset: 0x000A0983
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tabledtMeasTransfAmperageDopDataReport.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x04000BAF RID: 2991
            private DataSetGES.dtMeasTransfAmperageDopDataReportDataTable tabledtMeasTransfAmperageDopDataReport;
        }

        // Token: 0x02000150 RID: 336
        public class fn_J_ExcelessLoadReportRow : DataRow
        {
            // Token: 0x06001CBD RID: 7357 RVA: 0x000A279B File Offset: 0x000A099B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_ExcelessLoadReportRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_ExcelessLoadReport = (DataSetGES.fn_J_ExcelessLoadReportDataTable)base.Table;
            }

            // Token: 0x17000762 RID: 1890
            // (get) Token: 0x06001CBE RID: 7358 RVA: 0x000A27B8 File Offset: 0x000A09B8
            // (set) Token: 0x06001CBF RID: 7359 RVA: 0x000A27FC File Offset: 0x000A09FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NetRegion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_ExcelessLoadReport.NetRegionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NetRegion' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.NetRegionColumn] = value;
                }
            }

            // Token: 0x17000763 RID: 1891
            // (get) Token: 0x06001CC0 RID: 7360 RVA: 0x000A2818 File Offset: 0x000A0A18
            // (set) Token: 0x06001CC1 RID: 7361 RVA: 0x000A285C File Offset: 0x000A0A5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string SSSocrName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_ExcelessLoadReport.SSSocrNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SSSocrName' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.SSSocrNameColumn] = value;
                }
            }

            // Token: 0x17000764 RID: 1892
            // (get) Token: 0x06001CC2 RID: 7362 RVA: 0x000A2870 File Offset: 0x000A0A70
            // (set) Token: 0x06001CC3 RID: 7363 RVA: 0x000A28B4 File Offset: 0x000A0AB4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Substation
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_ExcelessLoadReport.SubstationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Substation' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.SubstationColumn] = value;
                }
            }

            // Token: 0x17000765 RID: 1893
            // (get) Token: 0x06001CC4 RID: 7364 RVA: 0x000A28C8 File Offset: 0x000A0AC8
            // (set) Token: 0x06001CC5 RID: 7365 RVA: 0x000A290C File Offset: 0x000A0B0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Switch
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_ExcelessLoadReport.SwitchColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Switch' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.SwitchColumn] = value;
                }
            }

            // Token: 0x17000766 RID: 1894
            // (get) Token: 0x06001CC6 RID: 7366 RVA: 0x000A2920 File Offset: 0x000A0B20
            // (set) Token: 0x06001CC7 RID: 7367 RVA: 0x000A2964 File Offset: 0x000A0B64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablefn_J_ExcelessLoadReport.PermisAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.PermisAmperageColumn] = value;
                }
            }

            // Token: 0x17000767 RID: 1895
            // (get) Token: 0x06001CC8 RID: 7368 RVA: 0x000A2980 File Offset: 0x000A0B80
            // (set) Token: 0x06001CC9 RID: 7369 RVA: 0x000A29C4 File Offset: 0x000A0BC4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_ExcelessLoadReport.IadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.IadColumn] = value;
                }
            }

            // Token: 0x17000768 RID: 1896
            // (get) Token: 0x06001CCA RID: 7370 RVA: 0x000A29E0 File Offset: 0x000A0BE0
            // (set) Token: 0x06001CCB RID: 7371 RVA: 0x000A2A24 File Offset: 0x000A0C24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_ExcelessLoadReport.IbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.IbdColumn] = value;
                }
            }

            // Token: 0x17000769 RID: 1897
            // (get) Token: 0x06001CCC RID: 7372 RVA: 0x000A2A40 File Offset: 0x000A0C40
            // (set) Token: 0x06001CCD RID: 7373 RVA: 0x000A2A84 File Offset: 0x000A0C84
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_ExcelessLoadReport.IcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.IcdColumn] = value;
                }
            }

            // Token: 0x1700076A RID: 1898
            // (get) Token: 0x06001CCE RID: 7374 RVA: 0x000A2AA0 File Offset: 0x000A0CA0
            // (set) Token: 0x06001CCF RID: 7375 RVA: 0x000A2AE4 File Offset: 0x000A0CE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ian
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_ExcelessLoadReport.IanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.IanColumn] = value;
                }
            }

            // Token: 0x1700076B RID: 1899
            // (get) Token: 0x06001CD0 RID: 7376 RVA: 0x000A2B00 File Offset: 0x000A0D00
            // (set) Token: 0x06001CD1 RID: 7377 RVA: 0x000A2B44 File Offset: 0x000A0D44
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_ExcelessLoadReport.IbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.IbnColumn] = value;
                }
            }

            // Token: 0x1700076C RID: 1900
            // (get) Token: 0x06001CD2 RID: 7378 RVA: 0x000A2B60 File Offset: 0x000A0D60
            // (set) Token: 0x06001CD3 RID: 7379 RVA: 0x000A2BA4 File Offset: 0x000A0DA4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Icn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_ExcelessLoadReport.IcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.IcnColumn] = value;
                }
            }

            // Token: 0x1700076D RID: 1901
            // (get) Token: 0x06001CD4 RID: 7380 RVA: 0x000A2BC0 File Offset: 0x000A0DC0
            // (set) Token: 0x06001CD5 RID: 7381 RVA: 0x000A2C04 File Offset: 0x000A0E04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_ExcelessLoadReport.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'fn_J_ExcelessLoadReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_ExcelessLoadReport.AddressColumn] = value;
                }
            }

            // Token: 0x06001CD6 RID: 7382 RVA: 0x000A2C18 File Offset: 0x000A0E18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNetRegionNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.NetRegionColumn);
            }

            // Token: 0x06001CD7 RID: 7383 RVA: 0x000A2C2B File Offset: 0x000A0E2B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNetRegionNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.NetRegionColumn] = Convert.DBNull;
            }

            // Token: 0x06001CD8 RID: 7384 RVA: 0x000A2C43 File Offset: 0x000A0E43
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSSocrNameNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.SSSocrNameColumn);
            }

            // Token: 0x06001CD9 RID: 7385 RVA: 0x000A2C56 File Offset: 0x000A0E56
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSSSocrNameNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.SSSocrNameColumn] = Convert.DBNull;
            }

            // Token: 0x06001CDA RID: 7386 RVA: 0x000A2C6E File Offset: 0x000A0E6E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubstationNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.SubstationColumn);
            }

            // Token: 0x06001CDB RID: 7387 RVA: 0x000A2C81 File Offset: 0x000A0E81
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSubstationNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.SubstationColumn] = Convert.DBNull;
            }

            // Token: 0x06001CDC RID: 7388 RVA: 0x000A2C99 File Offset: 0x000A0E99
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSwitchNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.SwitchColumn);
            }

            // Token: 0x06001CDD RID: 7389 RVA: 0x000A2CAC File Offset: 0x000A0EAC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSwitchNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.SwitchColumn] = Convert.DBNull;
            }

            // Token: 0x06001CDE RID: 7390 RVA: 0x000A2CC4 File Offset: 0x000A0EC4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPermisAmperageNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.PermisAmperageColumn);
            }

            // Token: 0x06001CDF RID: 7391 RVA: 0x000A2CD7 File Offset: 0x000A0ED7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPermisAmperageNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.PermisAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x06001CE0 RID: 7392 RVA: 0x000A2CEF File Offset: 0x000A0EEF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIadNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.IadColumn);
            }

            // Token: 0x06001CE1 RID: 7393 RVA: 0x000A2D02 File Offset: 0x000A0F02
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIadNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.IadColumn] = Convert.DBNull;
            }

            // Token: 0x06001CE2 RID: 7394 RVA: 0x000A2D1A File Offset: 0x000A0F1A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbdNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.IbdColumn);
            }

            // Token: 0x06001CE3 RID: 7395 RVA: 0x000A2D2D File Offset: 0x000A0F2D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbdNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.IbdColumn] = Convert.DBNull;
            }

            // Token: 0x06001CE4 RID: 7396 RVA: 0x000A2D45 File Offset: 0x000A0F45
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIcdNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.IcdColumn);
            }

            // Token: 0x06001CE5 RID: 7397 RVA: 0x000A2D58 File Offset: 0x000A0F58
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcdNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.IcdColumn] = Convert.DBNull;
            }

            // Token: 0x06001CE6 RID: 7398 RVA: 0x000A2D70 File Offset: 0x000A0F70
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIanNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.IanColumn);
            }

            // Token: 0x06001CE7 RID: 7399 RVA: 0x000A2D83 File Offset: 0x000A0F83
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIanNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.IanColumn] = Convert.DBNull;
            }

            // Token: 0x06001CE8 RID: 7400 RVA: 0x000A2D9B File Offset: 0x000A0F9B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbnNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.IbnColumn);
            }

            // Token: 0x06001CE9 RID: 7401 RVA: 0x000A2DAE File Offset: 0x000A0FAE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbnNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.IbnColumn] = Convert.DBNull;
            }

            // Token: 0x06001CEA RID: 7402 RVA: 0x000A2DC6 File Offset: 0x000A0FC6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcnNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.IcnColumn);
            }

            // Token: 0x06001CEB RID: 7403 RVA: 0x000A2DD9 File Offset: 0x000A0FD9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcnNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.IcnColumn] = Convert.DBNull;
            }

            // Token: 0x06001CEC RID: 7404 RVA: 0x000A2DF1 File Offset: 0x000A0FF1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tablefn_J_ExcelessLoadReport.AddressColumn);
            }

            // Token: 0x06001CED RID: 7405 RVA: 0x000A2E04 File Offset: 0x000A1004
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetAddressNull()
            {
                base[this.tablefn_J_ExcelessLoadReport.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB0 RID: 2992
            private DataSetGES.fn_J_ExcelessLoadReportDataTable tablefn_J_ExcelessLoadReport;
        }

        // Token: 0x02000151 RID: 337
        public class dtExcelessLoadAddlReportRow : DataRow
        {
            // Token: 0x06001CEE RID: 7406 RVA: 0x000A2E1C File Offset: 0x000A101C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtExcelessLoadAddlReportRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtExcelessLoadAddlReport = (DataSetGES.dtExcelessLoadAddlReportDataTable)base.Table;
            }

            // Token: 0x1700076E RID: 1902
            // (get) Token: 0x06001CEF RID: 7407 RVA: 0x000A2E38 File Offset: 0x000A1038
            // (set) Token: 0x06001CF0 RID: 7408 RVA: 0x000A2E7C File Offset: 0x000A107C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtExcelessLoadAddlReport.YearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'dtExcelessLoadAddlReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtExcelessLoadAddlReport.YearColumn] = value;
                }
            }

            // Token: 0x1700076F RID: 1903
            // (get) Token: 0x06001CF1 RID: 7409 RVA: 0x000A2E98 File Offset: 0x000A1098
            // (set) Token: 0x06001CF2 RID: 7410 RVA: 0x000A2EDC File Offset: 0x000A10DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Coefficient
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tabledtExcelessLoadAddlReport.CoefficientColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Coefficient' in table 'dtExcelessLoadAddlReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtExcelessLoadAddlReport.CoefficientColumn] = value;
                }
            }

            // Token: 0x06001CF3 RID: 7411 RVA: 0x000A2EF5 File Offset: 0x000A10F5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsYearNull()
            {
                return base.IsNull(this.tabledtExcelessLoadAddlReport.YearColumn);
            }

            // Token: 0x06001CF4 RID: 7412 RVA: 0x000A2F08 File Offset: 0x000A1108
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetYearNull()
            {
                base[this.tabledtExcelessLoadAddlReport.YearColumn] = Convert.DBNull;
            }

            // Token: 0x06001CF5 RID: 7413 RVA: 0x000A2F20 File Offset: 0x000A1120
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoefficientNull()
            {
                return base.IsNull(this.tabledtExcelessLoadAddlReport.CoefficientColumn);
            }

            // Token: 0x06001CF6 RID: 7414 RVA: 0x000A2F33 File Offset: 0x000A1133
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCoefficientNull()
            {
                base[this.tabledtExcelessLoadAddlReport.CoefficientColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB1 RID: 2993
            private DataSetGES.dtExcelessLoadAddlReportDataTable tabledtExcelessLoadAddlReport;
        }

        // Token: 0x02000152 RID: 338
        public class vJ_CoefficientLoadingRow : DataRow
        {
            // Token: 0x06001CF7 RID: 7415 RVA: 0x000A2F4B File Offset: 0x000A114B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CoefficientLoadingRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_CoefficientLoading = (DataSetGES.vJ_CoefficientLoadingDataTable)base.Table;
            }

            // Token: 0x17000770 RID: 1904
            // (get) Token: 0x06001CF8 RID: 7416 RVA: 0x000A2F68 File Offset: 0x000A1168
            // (set) Token: 0x06001CF9 RID: 7417 RVA: 0x000A2FAC File Offset: 0x000A11AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NetRegion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientLoading.NetRegionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NetRegion' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.NetRegionColumn] = value;
                }
            }

            // Token: 0x17000771 RID: 1905
            // (get) Token: 0x06001CFA RID: 7418 RVA: 0x000A2FC8 File Offset: 0x000A11C8
            // (set) Token: 0x06001CFB RID: 7419 RVA: 0x000A300C File Offset: 0x000A120C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientLoading.YearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.YearColumn] = value;
                }
            }

            // Token: 0x17000772 RID: 1906
            // (get) Token: 0x06001CFC RID: 7420 RVA: 0x000A3028 File Offset: 0x000A1228
            // (set) Token: 0x06001CFD RID: 7421 RVA: 0x000A306C File Offset: 0x000A126C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SocrName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CoefficientLoading.SocrNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SocrName' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.SocrNameColumn] = value;
                }
            }

            // Token: 0x17000773 RID: 1907
            // (get) Token: 0x06001CFE RID: 7422 RVA: 0x000A3080 File Offset: 0x000A1280
            // (set) Token: 0x06001CFF RID: 7423 RVA: 0x000A30C4 File Offset: 0x000A12C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Substation
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CoefficientLoading.SubstationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Substation' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.SubstationColumn] = value;
                }
            }

            // Token: 0x17000774 RID: 1908
            // (get) Token: 0x06001D00 RID: 7424 RVA: 0x000A30D8 File Offset: 0x000A12D8
            // (set) Token: 0x06001D01 RID: 7425 RVA: 0x000A311C File Offset: 0x000A131C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Transformer
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CoefficientLoading.TransformerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Transformer' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.TransformerColumn] = value;
                }
            }

            // Token: 0x17000775 RID: 1909
            // (get) Token: 0x06001D02 RID: 7426 RVA: 0x000A3130 File Offset: 0x000A1330
            // (set) Token: 0x06001D03 RID: 7427 RVA: 0x000A3174 File Offset: 0x000A1374
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Power
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientLoading.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.PowerColumn] = value;
                }
            }

            // Token: 0x17000776 RID: 1910
            // (get) Token: 0x06001D04 RID: 7428 RVA: 0x000A3190 File Offset: 0x000A1390
            // (set) Token: 0x06001D05 RID: 7429 RVA: 0x000A31D4 File Offset: 0x000A13D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kntd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientLoading.KntdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntd' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.KntdColumn] = value;
                }
            }

            // Token: 0x17000777 RID: 1911
            // (get) Token: 0x06001D06 RID: 7430 RVA: 0x000A31F0 File Offset: 0x000A13F0
            // (set) Token: 0x06001D07 RID: 7431 RVA: 0x000A3234 File Offset: 0x000A1434
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Kntn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientLoading.KntnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntn' in table 'vJ_CoefficientLoading' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientLoading.KntnColumn] = value;
                }
            }

            // Token: 0x06001D08 RID: 7432 RVA: 0x000A324D File Offset: 0x000A144D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetRegionNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.NetRegionColumn);
            }

            // Token: 0x06001D09 RID: 7433 RVA: 0x000A3260 File Offset: 0x000A1460
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetRegionNull()
            {
                base[this.tablevJ_CoefficientLoading.NetRegionColumn] = Convert.DBNull;
            }

            // Token: 0x06001D0A RID: 7434 RVA: 0x000A3278 File Offset: 0x000A1478
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.YearColumn);
            }

            // Token: 0x06001D0B RID: 7435 RVA: 0x000A328B File Offset: 0x000A148B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetYearNull()
            {
                base[this.tablevJ_CoefficientLoading.YearColumn] = Convert.DBNull;
            }

            // Token: 0x06001D0C RID: 7436 RVA: 0x000A32A3 File Offset: 0x000A14A3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSocrNameNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.SocrNameColumn);
            }

            // Token: 0x06001D0D RID: 7437 RVA: 0x000A32B6 File Offset: 0x000A14B6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSocrNameNull()
            {
                base[this.tablevJ_CoefficientLoading.SocrNameColumn] = Convert.DBNull;
            }

            // Token: 0x06001D0E RID: 7438 RVA: 0x000A32CE File Offset: 0x000A14CE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubstationNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.SubstationColumn);
            }

            // Token: 0x06001D0F RID: 7439 RVA: 0x000A32E1 File Offset: 0x000A14E1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSubstationNull()
            {
                base[this.tablevJ_CoefficientLoading.SubstationColumn] = Convert.DBNull;
            }

            // Token: 0x06001D10 RID: 7440 RVA: 0x000A32F9 File Offset: 0x000A14F9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransformerNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.TransformerColumn);
            }

            // Token: 0x06001D11 RID: 7441 RVA: 0x000A330C File Offset: 0x000A150C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTransformerNull()
            {
                base[this.tablevJ_CoefficientLoading.TransformerColumn] = Convert.DBNull;
            }

            // Token: 0x06001D12 RID: 7442 RVA: 0x000A3324 File Offset: 0x000A1524
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.PowerColumn);
            }

            // Token: 0x06001D13 RID: 7443 RVA: 0x000A3337 File Offset: 0x000A1537
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerNull()
            {
                base[this.tablevJ_CoefficientLoading.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x06001D14 RID: 7444 RVA: 0x000A334F File Offset: 0x000A154F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntdNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.KntdColumn);
            }

            // Token: 0x06001D15 RID: 7445 RVA: 0x000A3362 File Offset: 0x000A1562
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKntdNull()
            {
                base[this.tablevJ_CoefficientLoading.KntdColumn] = Convert.DBNull;
            }

            // Token: 0x06001D16 RID: 7446 RVA: 0x000A337A File Offset: 0x000A157A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntnNull()
            {
                return base.IsNull(this.tablevJ_CoefficientLoading.KntnColumn);
            }

            // Token: 0x06001D17 RID: 7447 RVA: 0x000A338D File Offset: 0x000A158D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKntnNull()
            {
                base[this.tablevJ_CoefficientLoading.KntnColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB2 RID: 2994
            private DataSetGES.vJ_CoefficientLoadingDataTable tablevJ_CoefficientLoading;
        }

        // Token: 0x02000153 RID: 339
        public class dtCoefficientLoadingAddlRow : DataRow
        {
            // Token: 0x06001D18 RID: 7448 RVA: 0x000A33A5 File Offset: 0x000A15A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCoefficientLoadingAddlRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtCoefficientLoadingAddl = (DataSetGES.dtCoefficientLoadingAddlDataTable)base.Table;
            }

            // Token: 0x17000778 RID: 1912
            // (get) Token: 0x06001D19 RID: 7449 RVA: 0x000A33C0 File Offset: 0x000A15C0
            // (set) Token: 0x06001D1A RID: 7450 RVA: 0x000A3404 File Offset: 0x000A1604
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtCoefficientLoadingAddl.YearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'dtCoefficientLoadingAddl' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtCoefficientLoadingAddl.YearColumn] = value;
                }
            }

            // Token: 0x17000779 RID: 1913
            // (get) Token: 0x06001D1B RID: 7451 RVA: 0x000A3420 File Offset: 0x000A1620
            // (set) Token: 0x06001D1C RID: 7452 RVA: 0x000A3464 File Offset: 0x000A1664
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtCoefficientLoadingAddl.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'dtCoefficientLoadingAddl' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtCoefficientLoadingAddl.PowerColumn] = value;
                }
            }

            // Token: 0x1700077A RID: 1914
            // (get) Token: 0x06001D1D RID: 7453 RVA: 0x000A3478 File Offset: 0x000A1678
            // (set) Token: 0x06001D1E RID: 7454 RVA: 0x000A34BC File Offset: 0x000A16BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Kntd
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtCoefficientLoadingAddl.KntdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntd' in table 'dtCoefficientLoadingAddl' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtCoefficientLoadingAddl.KntdColumn] = value;
                }
            }

            // Token: 0x1700077B RID: 1915
            // (get) Token: 0x06001D1F RID: 7455 RVA: 0x000A34D0 File Offset: 0x000A16D0
            // (set) Token: 0x06001D20 RID: 7456 RVA: 0x000A3514 File Offset: 0x000A1714
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Kntn
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtCoefficientLoadingAddl.KntnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntn' in table 'dtCoefficientLoadingAddl' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtCoefficientLoadingAddl.KntnColumn] = value;
                }
            }

            // Token: 0x06001D21 RID: 7457 RVA: 0x000A3528 File Offset: 0x000A1728
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsYearNull()
            {
                return base.IsNull(this.tabledtCoefficientLoadingAddl.YearColumn);
            }

            // Token: 0x06001D22 RID: 7458 RVA: 0x000A353B File Offset: 0x000A173B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNull()
            {
                base[this.tabledtCoefficientLoadingAddl.YearColumn] = Convert.DBNull;
            }

            // Token: 0x06001D23 RID: 7459 RVA: 0x000A3553 File Offset: 0x000A1753
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tabledtCoefficientLoadingAddl.PowerColumn);
            }

            // Token: 0x06001D24 RID: 7460 RVA: 0x000A3566 File Offset: 0x000A1766
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPowerNull()
            {
                base[this.tabledtCoefficientLoadingAddl.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x06001D25 RID: 7461 RVA: 0x000A357E File Offset: 0x000A177E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntdNull()
            {
                return base.IsNull(this.tabledtCoefficientLoadingAddl.KntdColumn);
            }

            // Token: 0x06001D26 RID: 7462 RVA: 0x000A3591 File Offset: 0x000A1791
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKntdNull()
            {
                base[this.tabledtCoefficientLoadingAddl.KntdColumn] = Convert.DBNull;
            }

            // Token: 0x06001D27 RID: 7463 RVA: 0x000A35A9 File Offset: 0x000A17A9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntnNull()
            {
                return base.IsNull(this.tabledtCoefficientLoadingAddl.KntnColumn);
            }

            // Token: 0x06001D28 RID: 7464 RVA: 0x000A35BC File Offset: 0x000A17BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKntnNull()
            {
                base[this.tabledtCoefficientLoadingAddl.KntnColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB3 RID: 2995
            private DataSetGES.dtCoefficientLoadingAddlDataTable tabledtCoefficientLoadingAddl;
        }

        // Token: 0x02000154 RID: 340
        public class vJ_CoefficientIrregularityRow : DataRow
        {
            // Token: 0x06001D29 RID: 7465 RVA: 0x000A35D4 File Offset: 0x000A17D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_CoefficientIrregularityRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_CoefficientIrregularity = (DataSetGES.vJ_CoefficientIrregularityDataTable)base.Table;
            }

            // Token: 0x1700077C RID: 1916
            // (get) Token: 0x06001D2A RID: 7466 RVA: 0x000A35F0 File Offset: 0x000A17F0
            // (set) Token: 0x06001D2B RID: 7467 RVA: 0x000A3634 File Offset: 0x000A1834
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int NetRegion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientIrregularity.NetRegionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NetRegion' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.NetRegionColumn] = value;
                }
            }

            // Token: 0x1700077D RID: 1917
            // (get) Token: 0x06001D2C RID: 7468 RVA: 0x000A3650 File Offset: 0x000A1850
            // (set) Token: 0x06001D2D RID: 7469 RVA: 0x000A3694 File Offset: 0x000A1894
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string idNetRegion
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CoefficientIrregularity.idNetRegionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idNetRegion' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.idNetRegionColumn] = value;
                }
            }

            // Token: 0x1700077E RID: 1918
            // (get) Token: 0x06001D2E RID: 7470 RVA: 0x000A36A8 File Offset: 0x000A18A8
            // (set) Token: 0x06001D2F RID: 7471 RVA: 0x000A36EC File Offset: 0x000A18EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Year
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientIrregularity.YearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.YearColumn] = value;
                }
            }

            // Token: 0x1700077F RID: 1919
            // (get) Token: 0x06001D30 RID: 7472 RVA: 0x000A3708 File Offset: 0x000A1908
            // (set) Token: 0x06001D31 RID: 7473 RVA: 0x000A374C File Offset: 0x000A194C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSSocrName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CoefficientIrregularity.SSSocrNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SSSocrName' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.SSSocrNameColumn] = value;
                }
            }

            // Token: 0x17000780 RID: 1920
            // (get) Token: 0x06001D32 RID: 7474 RVA: 0x000A3760 File Offset: 0x000A1960
            // (set) Token: 0x06001D33 RID: 7475 RVA: 0x000A37A4 File Offset: 0x000A19A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Substation
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CoefficientIrregularity.SubstationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Substation' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.SubstationColumn] = value;
                }
            }

            // Token: 0x17000781 RID: 1921
            // (get) Token: 0x06001D34 RID: 7476 RVA: 0x000A37B8 File Offset: 0x000A19B8
            // (set) Token: 0x06001D35 RID: 7477 RVA: 0x000A37FC File Offset: 0x000A19FC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Transformer
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CoefficientIrregularity.TransformerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Transformer' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.TransformerColumn] = value;
                }
            }

            // Token: 0x17000782 RID: 1922
            // (get) Token: 0x06001D36 RID: 7478 RVA: 0x000A3810 File Offset: 0x000A1A10
            // (set) Token: 0x06001D37 RID: 7479 RVA: 0x000A3854 File Offset: 0x000A1A54
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Power
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientIrregularity.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.PowerColumn] = value;
                }
            }

            // Token: 0x17000783 RID: 1923
            // (get) Token: 0x06001D38 RID: 7480 RVA: 0x000A3870 File Offset: 0x000A1A70
            // (set) Token: 0x06001D39 RID: 7481 RVA: 0x000A38B4 File Offset: 0x000A1AB4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kpfd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientIrregularity.KpfdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kpfd' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.KpfdColumn] = value;
                }
            }

            // Token: 0x17000784 RID: 1924
            // (get) Token: 0x06001D3A RID: 7482 RVA: 0x000A38D0 File Offset: 0x000A1AD0
            // (set) Token: 0x06001D3B RID: 7483 RVA: 0x000A3914 File Offset: 0x000A1B14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kpfn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CoefficientIrregularity.KpfnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kpfn' in table 'vJ_CoefficientIrregularity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CoefficientIrregularity.KpfnColumn] = value;
                }
            }

            // Token: 0x06001D3C RID: 7484 RVA: 0x000A392D File Offset: 0x000A1B2D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetRegionNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.NetRegionColumn);
            }

            // Token: 0x06001D3D RID: 7485 RVA: 0x000A3940 File Offset: 0x000A1B40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetRegionNull()
            {
                base[this.tablevJ_CoefficientIrregularity.NetRegionColumn] = Convert.DBNull;
            }

            // Token: 0x06001D3E RID: 7486 RVA: 0x000A3958 File Offset: 0x000A1B58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidNetRegionNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.idNetRegionColumn);
            }

            // Token: 0x06001D3F RID: 7487 RVA: 0x000A396B File Offset: 0x000A1B6B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNetRegionNull()
            {
                base[this.tablevJ_CoefficientIrregularity.idNetRegionColumn] = Convert.DBNull;
            }

            // Token: 0x06001D40 RID: 7488 RVA: 0x000A3983 File Offset: 0x000A1B83
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsYearNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.YearColumn);
            }

            // Token: 0x06001D41 RID: 7489 RVA: 0x000A3996 File Offset: 0x000A1B96
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNull()
            {
                base[this.tablevJ_CoefficientIrregularity.YearColumn] = Convert.DBNull;
            }

            // Token: 0x06001D42 RID: 7490 RVA: 0x000A39AE File Offset: 0x000A1BAE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSSSocrNameNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.SSSocrNameColumn);
            }

            // Token: 0x06001D43 RID: 7491 RVA: 0x000A39C1 File Offset: 0x000A1BC1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSSocrNameNull()
            {
                base[this.tablevJ_CoefficientIrregularity.SSSocrNameColumn] = Convert.DBNull;
            }

            // Token: 0x06001D44 RID: 7492 RVA: 0x000A39D9 File Offset: 0x000A1BD9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSubstationNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.SubstationColumn);
            }

            // Token: 0x06001D45 RID: 7493 RVA: 0x000A39EC File Offset: 0x000A1BEC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubstationNull()
            {
                base[this.tablevJ_CoefficientIrregularity.SubstationColumn] = Convert.DBNull;
            }

            // Token: 0x06001D46 RID: 7494 RVA: 0x000A3A04 File Offset: 0x000A1C04
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransformerNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.TransformerColumn);
            }

            // Token: 0x06001D47 RID: 7495 RVA: 0x000A3A17 File Offset: 0x000A1C17
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransformerNull()
            {
                base[this.tablevJ_CoefficientIrregularity.TransformerColumn] = Convert.DBNull;
            }

            // Token: 0x06001D48 RID: 7496 RVA: 0x000A3A2F File Offset: 0x000A1C2F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.PowerColumn);
            }

            // Token: 0x06001D49 RID: 7497 RVA: 0x000A3A42 File Offset: 0x000A1C42
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPowerNull()
            {
                base[this.tablevJ_CoefficientIrregularity.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x06001D4A RID: 7498 RVA: 0x000A3A5A File Offset: 0x000A1C5A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKpfdNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.KpfdColumn);
            }

            // Token: 0x06001D4B RID: 7499 RVA: 0x000A3A6D File Offset: 0x000A1C6D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKpfdNull()
            {
                base[this.tablevJ_CoefficientIrregularity.KpfdColumn] = Convert.DBNull;
            }

            // Token: 0x06001D4C RID: 7500 RVA: 0x000A3A85 File Offset: 0x000A1C85
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKpfnNull()
            {
                return base.IsNull(this.tablevJ_CoefficientIrregularity.KpfnColumn);
            }

            // Token: 0x06001D4D RID: 7501 RVA: 0x000A3A98 File Offset: 0x000A1C98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKpfnNull()
            {
                base[this.tablevJ_CoefficientIrregularity.KpfnColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB4 RID: 2996
            private DataSetGES.vJ_CoefficientIrregularityDataTable tablevJ_CoefficientIrregularity;
        }

        // Token: 0x02000155 RID: 341
        public class vP_SubstationTransfRow : DataRow
        {
            // Token: 0x06001D4E RID: 7502 RVA: 0x000A3AB0 File Offset: 0x000A1CB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vP_SubstationTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevP_SubstationTransf = (DataSetGES.vP_SubstationTransfDataTable)base.Table;
            }

            // Token: 0x17000785 RID: 1925
            // (get) Token: 0x06001D4F RID: 7503 RVA: 0x000A3ACA File Offset: 0x000A1CCA
            // (set) Token: 0x06001D50 RID: 7504 RVA: 0x000A3AE2 File Offset: 0x000A1CE2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int)base[this.tablevP_SubstationTransf.IdColumn];
                }
                set
                {
                    base[this.tablevP_SubstationTransf.IdColumn] = value;
                }
            }

            // Token: 0x17000786 RID: 1926
            // (get) Token: 0x06001D51 RID: 7505 RVA: 0x000A3AFB File Offset: 0x000A1CFB
            // (set) Token: 0x06001D52 RID: 7506 RVA: 0x000A3B13 File Offset: 0x000A1D13
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdParent
            {
                get
                {
                    return (int)base[this.tablevP_SubstationTransf.IdParentColumn];
                }
                set
                {
                    base[this.tablevP_SubstationTransf.IdParentColumn] = value;
                }
            }

            // Token: 0x17000787 RID: 1927
            // (get) Token: 0x06001D53 RID: 7507 RVA: 0x000A3B2C File Offset: 0x000A1D2C
            // (set) Token: 0x06001D54 RID: 7508 RVA: 0x000A3B70 File Offset: 0x000A1D70
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevP_SubstationTransf.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vP_SubstationTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationTransf.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x17000788 RID: 1928
            // (get) Token: 0x06001D55 RID: 7509 RVA: 0x000A3B8C File Offset: 0x000A1D8C
            // (set) Token: 0x06001D56 RID: 7510 RVA: 0x000A3BD0 File Offset: 0x000A1DD0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentKey
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_SubstationTransf.ParentKeyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'ParentKey' in table 'vP_SubstationTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationTransf.ParentKeyColumn] = value;
                }
            }

            // Token: 0x17000789 RID: 1929
            // (get) Token: 0x06001D57 RID: 7511 RVA: 0x000A3BE4 File Offset: 0x000A1DE4
            // (set) Token: 0x06001D58 RID: 7512 RVA: 0x000A3C28 File Offset: 0x000A1E28
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Value
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tablevP_SubstationTransf.ValueColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Value' in table 'vP_SubstationTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationTransf.ValueColumn] = value;
                }
            }

            // Token: 0x1700078A RID: 1930
            // (get) Token: 0x06001D59 RID: 7513 RVA: 0x000A3C44 File Offset: 0x000A1E44
            // (set) Token: 0x06001D5A RID: 7514 RVA: 0x000A3C88 File Offset: 0x000A1E88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_SubstationTransf.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vP_SubstationTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationTransf.NameColumn] = value;
                }
            }

            // Token: 0x1700078B RID: 1931
            // (get) Token: 0x06001D5B RID: 7515 RVA: 0x000A3C9C File Offset: 0x000A1E9C
            // (set) Token: 0x06001D5C RID: 7516 RVA: 0x000A3CE0 File Offset: 0x000A1EE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_SubstationTransf.TextColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Text' in table 'vP_SubstationTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationTransf.TextColumn] = value;
                }
            }

            // Token: 0x1700078C RID: 1932
            // (get) Token: 0x06001D5D RID: 7517 RVA: 0x000A3CF4 File Offset: 0x000A1EF4
            // (set) Token: 0x06001D5E RID: 7518 RVA: 0x000A3D38 File Offset: 0x000A1F38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int CountChild
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevP_SubstationTransf.CountChildColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CountChild' in table 'vP_SubstationTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationTransf.CountChildColumn] = value;
                }
            }

            // Token: 0x06001D5F RID: 7519 RVA: 0x000A3D51 File Offset: 0x000A1F51
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tablevP_SubstationTransf.TypeCodeIdColumn);
            }

            // Token: 0x06001D60 RID: 7520 RVA: 0x000A3D64 File Offset: 0x000A1F64
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdNull()
            {
                base[this.tablevP_SubstationTransf.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x06001D61 RID: 7521 RVA: 0x000A3D7C File Offset: 0x000A1F7C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentKeyNull()
            {
                return base.IsNull(this.tablevP_SubstationTransf.ParentKeyColumn);
            }

            // Token: 0x06001D62 RID: 7522 RVA: 0x000A3D8F File Offset: 0x000A1F8F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentKeyNull()
            {
                base[this.tablevP_SubstationTransf.ParentKeyColumn] = Convert.DBNull;
            }

            // Token: 0x06001D63 RID: 7523 RVA: 0x000A3DA7 File Offset: 0x000A1FA7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsValueNull()
            {
                return base.IsNull(this.tablevP_SubstationTransf.ValueColumn);
            }

            // Token: 0x06001D64 RID: 7524 RVA: 0x000A3DBA File Offset: 0x000A1FBA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueNull()
            {
                base[this.tablevP_SubstationTransf.ValueColumn] = Convert.DBNull;
            }

            // Token: 0x06001D65 RID: 7525 RVA: 0x000A3DD2 File Offset: 0x000A1FD2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevP_SubstationTransf.NameColumn);
            }

            // Token: 0x06001D66 RID: 7526 RVA: 0x000A3DE5 File Offset: 0x000A1FE5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablevP_SubstationTransf.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001D67 RID: 7527 RVA: 0x000A3DFD File Offset: 0x000A1FFD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTextNull()
            {
                return base.IsNull(this.tablevP_SubstationTransf.TextColumn);
            }

            // Token: 0x06001D68 RID: 7528 RVA: 0x000A3E10 File Offset: 0x000A2010
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTextNull()
            {
                base[this.tablevP_SubstationTransf.TextColumn] = Convert.DBNull;
            }

            // Token: 0x06001D69 RID: 7529 RVA: 0x000A3E28 File Offset: 0x000A2028
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCountChildNull()
            {
                return base.IsNull(this.tablevP_SubstationTransf.CountChildColumn);
            }

            // Token: 0x06001D6A RID: 7530 RVA: 0x000A3E3B File Offset: 0x000A203B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCountChildNull()
            {
                base[this.tablevP_SubstationTransf.CountChildColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB5 RID: 2997
            private DataSetGES.vP_SubstationTransfDataTable tablevP_SubstationTransf;
        }

        // Token: 0x02000156 RID: 342
        public class tR_DocTemplateRow : DataRow
        {
            // Token: 0x06001D6B RID: 7531 RVA: 0x000A3E53 File Offset: 0x000A2053
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tR_DocTemplateRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletR_DocTemplate = (DataSetGES.tR_DocTemplateDataTable)base.Table;
            }

            // Token: 0x1700078D RID: 1933
            // (get) Token: 0x06001D6C RID: 7532 RVA: 0x000A3E6D File Offset: 0x000A206D
            // (set) Token: 0x06001D6D RID: 7533 RVA: 0x000A3E85 File Offset: 0x000A2085
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletR_DocTemplate.idColumn];
                }
                set
                {
                    base[this.tabletR_DocTemplate.idColumn] = value;
                }
            }

            // Token: 0x1700078E RID: 1934
            // (get) Token: 0x06001D6E RID: 7534 RVA: 0x000A3E9E File Offset: 0x000A209E
            // (set) Token: 0x06001D6F RID: 7535 RVA: 0x000A3EB6 File Offset: 0x000A20B6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTypeDoc
            {
                get
                {
                    return (int)base[this.tabletR_DocTemplate.idTypeDocColumn];
                }
                set
                {
                    base[this.tabletR_DocTemplate.idTypeDocColumn] = value;
                }
            }

            // Token: 0x1700078F RID: 1935
            // (get) Token: 0x06001D70 RID: 7536 RVA: 0x000A3ECF File Offset: 0x000A20CF
            // (set) Token: 0x06001D71 RID: 7537 RVA: 0x000A3EE7 File Offset: 0x000A20E7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileName
            {
                get
                {
                    return (string)base[this.tabletR_DocTemplate.FileNameColumn];
                }
                set
                {
                    base[this.tabletR_DocTemplate.FileNameColumn] = value;
                }
            }

            // Token: 0x17000790 RID: 1936
            // (get) Token: 0x06001D72 RID: 7538 RVA: 0x000A3EFB File Offset: 0x000A20FB
            // (set) Token: 0x06001D73 RID: 7539 RVA: 0x000A3F13 File Offset: 0x000A2113
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] FileData
            {
                get
                {
                    return (byte[])base[this.tabletR_DocTemplate.FileDataColumn];
                }
                set
                {
                    base[this.tabletR_DocTemplate.FileDataColumn] = value;
                }
            }

            // Token: 0x17000791 RID: 1937
            // (get) Token: 0x06001D74 RID: 7540 RVA: 0x000A3F27 File Offset: 0x000A2127
            // (set) Token: 0x06001D75 RID: 7541 RVA: 0x000A3F3F File Offset: 0x000A213F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double Size
            {
                get
                {
                    return (double)base[this.tabletR_DocTemplate.SizeColumn];
                }
                set
                {
                    base[this.tabletR_DocTemplate.SizeColumn] = value;
                }
            }

            // Token: 0x17000792 RID: 1938
            // (get) Token: 0x06001D76 RID: 7542 RVA: 0x000A3F58 File Offset: 0x000A2158
            // (set) Token: 0x06001D77 RID: 7543 RVA: 0x000A3F70 File Offset: 0x000A2170
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DateTime LastChange
            {
                get
                {
                    return (DateTime)base[this.tabletR_DocTemplate.LastChangeColumn];
                }
                set
                {
                    base[this.tabletR_DocTemplate.LastChangeColumn] = value;
                }
            }

            // Token: 0x17000793 RID: 1939
            // (get) Token: 0x06001D78 RID: 7544 RVA: 0x000A3F89 File Offset: 0x000A2189
            // (set) Token: 0x06001D79 RID: 7545 RVA: 0x000A3FA1 File Offset: 0x000A21A1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateIn
            {
                get
                {
                    return (DateTime)base[this.tabletR_DocTemplate.DateInColumn];
                }
                set
                {
                    base[this.tabletR_DocTemplate.DateInColumn] = value;
                }
            }

            // Token: 0x17000794 RID: 1940
            // (get) Token: 0x06001D7A RID: 7546 RVA: 0x000A3FBC File Offset: 0x000A21BC
            // (set) Token: 0x06001D7B RID: 7547 RVA: 0x000A4000 File Offset: 0x000A2200
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletR_DocTemplate.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tR_DocTemplate' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletR_DocTemplate.DeletedColumn] = value;
                }
            }

            // Token: 0x06001D7C RID: 7548 RVA: 0x000A4019 File Offset: 0x000A2219
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tabletR_DocTemplate.DeletedColumn);
            }

            // Token: 0x06001D7D RID: 7549 RVA: 0x000A402C File Offset: 0x000A222C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedNull()
            {
                base[this.tabletR_DocTemplate.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB6 RID: 2998
            private DataSetGES.tR_DocTemplateDataTable tabletR_DocTemplate;
        }

        // Token: 0x02000157 RID: 343
        public class fn_J_GetCellTransfByBusLVRow : DataRow
        {
            // Token: 0x06001D7E RID: 7550 RVA: 0x000A4044 File Offset: 0x000A2244
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetCellTransfByBusLVRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_GetCellTransfByBusLV = (DataSetGES.fn_J_GetCellTransfByBusLVDataTable)base.Table;
            }

            // Token: 0x17000795 RID: 1941
            // (get) Token: 0x06001D7F RID: 7551 RVA: 0x000A4060 File Offset: 0x000A2260
            // (set) Token: 0x06001D80 RID: 7552 RVA: 0x000A40A4 File Offset: 0x000A22A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellTransfByBusLV.IdBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdBus' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusLV.IdBusColumn] = value;
                }
            }

            // Token: 0x17000796 RID: 1942
            // (get) Token: 0x06001D81 RID: 7553 RVA: 0x000A40C0 File Offset: 0x000A22C0
            // (set) Token: 0x06001D82 RID: 7554 RVA: 0x000A4104 File Offset: 0x000A2304
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellTransfByBusLV.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusLV.NameBusColumn] = value;
                }
            }

            // Token: 0x17000797 RID: 1943
            // (get) Token: 0x06001D83 RID: 7555 RVA: 0x000A4118 File Offset: 0x000A2318
            // (set) Token: 0x06001D84 RID: 7556 RVA: 0x000A415C File Offset: 0x000A235C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellTransfByBusLV.IdCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdCell' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusLV.IdCellColumn] = value;
                }
            }

            // Token: 0x17000798 RID: 1944
            // (get) Token: 0x06001D85 RID: 7557 RVA: 0x000A4178 File Offset: 0x000A2378
            // (set) Token: 0x06001D86 RID: 7558 RVA: 0x000A41BC File Offset: 0x000A23BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellTransfByBusLV.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusLV.NameCellColumn] = value;
                }
            }

            // Token: 0x17000799 RID: 1945
            // (get) Token: 0x06001D87 RID: 7559 RVA: 0x000A41D0 File Offset: 0x000A23D0
            // (set) Token: 0x06001D88 RID: 7560 RVA: 0x000A4214 File Offset: 0x000A2414
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellTransfByBusLV.IdTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdTransf' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusLV.IdTransfColumn] = value;
                }
            }

            // Token: 0x1700079A RID: 1946
            // (get) Token: 0x06001D89 RID: 7561 RVA: 0x000A4230 File Offset: 0x000A2430
            // (set) Token: 0x06001D8A RID: 7562 RVA: 0x000A4274 File Offset: 0x000A2474
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellTransfByBusLV.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'fn_J_GetCellTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusLV.NameTransfColumn] = value;
                }
            }

            // Token: 0x06001D8B RID: 7563 RVA: 0x000A4288 File Offset: 0x000A2488
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdBusNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusLV.IdBusColumn);
            }

            // Token: 0x06001D8C RID: 7564 RVA: 0x000A429B File Offset: 0x000A249B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdBusNull()
            {
                base[this.tablefn_J_GetCellTransfByBusLV.IdBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001D8D RID: 7565 RVA: 0x000A42B3 File Offset: 0x000A24B3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusLV.NameBusColumn);
            }

            // Token: 0x06001D8E RID: 7566 RVA: 0x000A42C6 File Offset: 0x000A24C6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tablefn_J_GetCellTransfByBusLV.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001D8F RID: 7567 RVA: 0x000A42DE File Offset: 0x000A24DE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdCellNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusLV.IdCellColumn);
            }

            // Token: 0x06001D90 RID: 7568 RVA: 0x000A42F1 File Offset: 0x000A24F1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdCellNull()
            {
                base[this.tablefn_J_GetCellTransfByBusLV.IdCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001D91 RID: 7569 RVA: 0x000A4309 File Offset: 0x000A2509
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusLV.NameCellColumn);
            }

            // Token: 0x06001D92 RID: 7570 RVA: 0x000A431C File Offset: 0x000A251C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameCellNull()
            {
                base[this.tablefn_J_GetCellTransfByBusLV.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001D93 RID: 7571 RVA: 0x000A4334 File Offset: 0x000A2534
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdTransfNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusLV.IdTransfColumn);
            }

            // Token: 0x06001D94 RID: 7572 RVA: 0x000A4347 File Offset: 0x000A2547
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdTransfNull()
            {
                base[this.tablefn_J_GetCellTransfByBusLV.IdTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06001D95 RID: 7573 RVA: 0x000A435F File Offset: 0x000A255F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusLV.NameTransfColumn);
            }

            // Token: 0x06001D96 RID: 7574 RVA: 0x000A4372 File Offset: 0x000A2572
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tablefn_J_GetCellTransfByBusLV.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB7 RID: 2999
            private DataSetGES.fn_J_GetCellTransfByBusLVDataTable tablefn_J_GetCellTransfByBusLV;
        }

        // Token: 0x02000158 RID: 344
        public class dtBusesRow : DataRow
        {
            // Token: 0x06001D97 RID: 7575 RVA: 0x000A438A File Offset: 0x000A258A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtBusesRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtBuses = (DataSetGES.dtBusesDataTable)base.Table;
            }

            // Token: 0x1700079B RID: 1947
            // (get) Token: 0x06001D98 RID: 7576 RVA: 0x000A43A4 File Offset: 0x000A25A4
            // (set) Token: 0x06001D99 RID: 7577 RVA: 0x000A43E8 File Offset: 0x000A25E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtBuses.idColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'id' in table 'dtBuses' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtBuses.idColumn] = value;
                }
            }

            // Token: 0x1700079C RID: 1948
            // (get) Token: 0x06001D9A RID: 7578 RVA: 0x000A4404 File Offset: 0x000A2604
            // (set) Token: 0x06001D9B RID: 7579 RVA: 0x000A4448 File Offset: 0x000A2648
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtBuses.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'dtBuses' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtBuses.NameColumn] = value;
                }
            }

            // Token: 0x06001D9C RID: 7580 RVA: 0x000A445C File Offset: 0x000A265C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidNull()
            {
                return base.IsNull(this.tabledtBuses.idColumn);
            }

            // Token: 0x06001D9D RID: 7581 RVA: 0x000A446F File Offset: 0x000A266F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNull()
            {
                base[this.tabledtBuses.idColumn] = Convert.DBNull;
            }

            // Token: 0x06001D9E RID: 7582 RVA: 0x000A4487 File Offset: 0x000A2687
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tabledtBuses.NameColumn);
            }

            // Token: 0x06001D9F RID: 7583 RVA: 0x000A449A File Offset: 0x000A269A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tabledtBuses.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB8 RID: 3000
            private DataSetGES.dtBusesDataTable tabledtBuses;
        }

        // Token: 0x02000159 RID: 345
        public class dtCellsRow : DataRow
        {
            // Token: 0x06001DA0 RID: 7584 RVA: 0x000A44B2 File Offset: 0x000A26B2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCellsRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtCells = (DataSetGES.dtCellsDataTable)base.Table;
            }

            // Token: 0x1700079D RID: 1949
            // (get) Token: 0x06001DA1 RID: 7585 RVA: 0x000A44CC File Offset: 0x000A26CC
            // (set) Token: 0x06001DA2 RID: 7586 RVA: 0x000A4510 File Offset: 0x000A2710
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtCells.idColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'id' in table 'dtCells' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtCells.idColumn] = value;
                }
            }

            // Token: 0x1700079E RID: 1950
            // (get) Token: 0x06001DA3 RID: 7587 RVA: 0x000A452C File Offset: 0x000A272C
            // (set) Token: 0x06001DA4 RID: 7588 RVA: 0x000A4570 File Offset: 0x000A2770
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtCells.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'dtCells' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtCells.NameColumn] = value;
                }
            }

            // Token: 0x06001DA5 RID: 7589 RVA: 0x000A4584 File Offset: 0x000A2784
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidNull()
            {
                return base.IsNull(this.tabledtCells.idColumn);
            }

            // Token: 0x06001DA6 RID: 7590 RVA: 0x000A4597 File Offset: 0x000A2797
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidNull()
            {
                base[this.tabledtCells.idColumn] = Convert.DBNull;
            }

            // Token: 0x06001DA7 RID: 7591 RVA: 0x000A45AF File Offset: 0x000A27AF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tabledtCells.NameColumn);
            }

            // Token: 0x06001DA8 RID: 7592 RVA: 0x000A45C2 File Offset: 0x000A27C2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tabledtCells.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000BB9 RID: 3001
            private DataSetGES.dtCellsDataTable tabledtCells;
        }

        // Token: 0x0200015A RID: 346
        public class tJ_MeasurementRow : DataRow
        {
            // Token: 0x06001DA9 RID: 7593 RVA: 0x000A45DA File Offset: 0x000A27DA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasurementRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_Measurement = (DataSetGES.tJ_MeasurementDataTable)base.Table;
            }

            // Token: 0x1700079F RID: 1951
            // (get) Token: 0x06001DAA RID: 7594 RVA: 0x000A45F4 File Offset: 0x000A27F4
            // (set) Token: 0x06001DAB RID: 7595 RVA: 0x000A460C File Offset: 0x000A280C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_Measurement.idColumn];
                }
                set
                {
                    base[this.tabletJ_Measurement.idColumn] = value;
                }
            }

            // Token: 0x170007A0 RID: 1952
            // (get) Token: 0x06001DAC RID: 7596 RVA: 0x000A4625 File Offset: 0x000A2825
            // (set) Token: 0x06001DAD RID: 7597 RVA: 0x000A463D File Offset: 0x000A283D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idObjList
            {
                get
                {
                    return (int)base[this.tabletJ_Measurement.idObjListColumn];
                }
                set
                {
                    base[this.tabletJ_Measurement.idObjListColumn] = value;
                }
            }

            // Token: 0x170007A1 RID: 1953
            // (get) Token: 0x06001DAE RID: 7598 RVA: 0x000A4656 File Offset: 0x000A2856
            // (set) Token: 0x06001DAF RID: 7599 RVA: 0x000A466E File Offset: 0x000A286E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeDoc
            {
                get
                {
                    return (int)base[this.tabletJ_Measurement.TypeDocColumn];
                }
                set
                {
                    base[this.tabletJ_Measurement.TypeDocColumn] = value;
                }
            }

            // Token: 0x170007A2 RID: 1954
            // (get) Token: 0x06001DB0 RID: 7600 RVA: 0x000A4688 File Offset: 0x000A2888
            // (set) Token: 0x06001DB1 RID: 7601 RVA: 0x000A46CC File Offset: 0x000A28CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Measurement.YearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.YearColumn] = value;
                }
            }

            // Token: 0x170007A3 RID: 1955
            // (get) Token: 0x06001DB2 RID: 7602 RVA: 0x000A46E8 File Offset: 0x000A28E8
            // (set) Token: 0x06001DB3 RID: 7603 RVA: 0x000A472C File Offset: 0x000A292C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateD
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tabletJ_Measurement.DateDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateD' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.DateDColumn] = value;
                }
            }

            // Token: 0x170007A4 RID: 1956
            // (get) Token: 0x06001DB4 RID: 7604 RVA: 0x000A4748 File Offset: 0x000A2948
            // (set) Token: 0x06001DB5 RID: 7605 RVA: 0x000A478C File Offset: 0x000A298C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TemperatureD
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Measurement.TemperatureDColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureD' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.TemperatureDColumn] = value;
                }
            }

            // Token: 0x170007A5 RID: 1957
            // (get) Token: 0x06001DB6 RID: 7606 RVA: 0x000A47A8 File Offset: 0x000A29A8
            // (set) Token: 0x06001DB7 RID: 7607 RVA: 0x000A47EC File Offset: 0x000A29EC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DateTime DateN
            {
                get
                {
                    DateTime result;
                    try
                    {
                        result = (DateTime)base[this.tabletJ_Measurement.DateNColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'DateN' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.DateNColumn] = value;
                }
            }

            // Token: 0x170007A6 RID: 1958
            // (get) Token: 0x06001DB8 RID: 7608 RVA: 0x000A4808 File Offset: 0x000A2A08
            // (set) Token: 0x06001DB9 RID: 7609 RVA: 0x000A484C File Offset: 0x000A2A4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TemperatureN
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Measurement.TemperatureNColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TemperatureN' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.TemperatureNColumn] = value;
                }
            }

            // Token: 0x170007A7 RID: 1959
            // (get) Token: 0x06001DBA RID: 7610 RVA: 0x000A4868 File Offset: 0x000A2A68
            // (set) Token: 0x06001DBB RID: 7611 RVA: 0x000A48AC File Offset: 0x000A2AAC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idWorker
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Measurement.idWorkerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idWorker' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.idWorkerColumn] = value;
                }
            }

            // Token: 0x170007A8 RID: 1960
            // (get) Token: 0x06001DBC RID: 7612 RVA: 0x000A48C8 File Offset: 0x000A2AC8
            // (set) Token: 0x06001DBD RID: 7613 RVA: 0x000A490C File Offset: 0x000A2B0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idWorkerCheck
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Measurement.idWorkerCheckColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idWorkerCheck' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.idWorkerCheckColumn] = value;
                }
            }

            // Token: 0x170007A9 RID: 1961
            // (get) Token: 0x06001DBE RID: 7614 RVA: 0x000A4928 File Offset: 0x000A2B28
            // (set) Token: 0x06001DBF RID: 7615 RVA: 0x000A496C File Offset: 0x000A2B6C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_Measurement.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.CommentColumn] = value;
                }
            }

            // Token: 0x170007AA RID: 1962
            // (get) Token: 0x06001DC0 RID: 7616 RVA: 0x000A4980 File Offset: 0x000A2B80
            // (set) Token: 0x06001DC1 RID: 7617 RVA: 0x000A49C4 File Offset: 0x000A2BC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idOldMeasurement
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_Measurement.idOldMeasurementColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idOldMeasurement' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.idOldMeasurementColumn] = value;
                }
            }

            // Token: 0x170007AB RID: 1963
            // (get) Token: 0x06001DC2 RID: 7618 RVA: 0x000A49E0 File Offset: 0x000A2BE0
            // (set) Token: 0x06001DC3 RID: 7619 RVA: 0x000A4A24 File Offset: 0x000A2C24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_Measurement.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_Measurement' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_Measurement.DeletedColumn] = value;
                }
            }

            // Token: 0x06001DC4 RID: 7620 RVA: 0x000A4A3D File Offset: 0x000A2C3D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsYearNull()
            {
                return base.IsNull(this.tabletJ_Measurement.YearColumn);
            }

            // Token: 0x06001DC5 RID: 7621 RVA: 0x000A4A50 File Offset: 0x000A2C50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetYearNull()
            {
                base[this.tabletJ_Measurement.YearColumn] = Convert.DBNull;
            }

            // Token: 0x06001DC6 RID: 7622 RVA: 0x000A4A68 File Offset: 0x000A2C68
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateDNull()
            {
                return base.IsNull(this.tabletJ_Measurement.DateDColumn);
            }

            // Token: 0x06001DC7 RID: 7623 RVA: 0x000A4A7B File Offset: 0x000A2C7B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDateDNull()
            {
                base[this.tabletJ_Measurement.DateDColumn] = Convert.DBNull;
            }

            // Token: 0x06001DC8 RID: 7624 RVA: 0x000A4A93 File Offset: 0x000A2C93
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTemperatureDNull()
            {
                return base.IsNull(this.tabletJ_Measurement.TemperatureDColumn);
            }

            // Token: 0x06001DC9 RID: 7625 RVA: 0x000A4AA6 File Offset: 0x000A2CA6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureDNull()
            {
                base[this.tabletJ_Measurement.TemperatureDColumn] = Convert.DBNull;
            }

            // Token: 0x06001DCA RID: 7626 RVA: 0x000A4ABE File Offset: 0x000A2CBE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDateNNull()
            {
                return base.IsNull(this.tabletJ_Measurement.DateNColumn);
            }

            // Token: 0x06001DCB RID: 7627 RVA: 0x000A4AD1 File Offset: 0x000A2CD1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateNNull()
            {
                base[this.tabletJ_Measurement.DateNColumn] = Convert.DBNull;
            }

            // Token: 0x06001DCC RID: 7628 RVA: 0x000A4AE9 File Offset: 0x000A2CE9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTemperatureNNull()
            {
                return base.IsNull(this.tabletJ_Measurement.TemperatureNColumn);
            }

            // Token: 0x06001DCD RID: 7629 RVA: 0x000A4AFC File Offset: 0x000A2CFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureNNull()
            {
                base[this.tabletJ_Measurement.TemperatureNColumn] = Convert.DBNull;
            }

            // Token: 0x06001DCE RID: 7630 RVA: 0x000A4B14 File Offset: 0x000A2D14
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidWorkerNull()
            {
                return base.IsNull(this.tabletJ_Measurement.idWorkerColumn);
            }

            // Token: 0x06001DCF RID: 7631 RVA: 0x000A4B27 File Offset: 0x000A2D27
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidWorkerNull()
            {
                base[this.tabletJ_Measurement.idWorkerColumn] = Convert.DBNull;
            }

            // Token: 0x06001DD0 RID: 7632 RVA: 0x000A4B3F File Offset: 0x000A2D3F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidWorkerCheckNull()
            {
                return base.IsNull(this.tabletJ_Measurement.idWorkerCheckColumn);
            }

            // Token: 0x06001DD1 RID: 7633 RVA: 0x000A4B52 File Offset: 0x000A2D52
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidWorkerCheckNull()
            {
                base[this.tabletJ_Measurement.idWorkerCheckColumn] = Convert.DBNull;
            }

            // Token: 0x06001DD2 RID: 7634 RVA: 0x000A4B6A File Offset: 0x000A2D6A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tabletJ_Measurement.CommentColumn);
            }

            // Token: 0x06001DD3 RID: 7635 RVA: 0x000A4B7D File Offset: 0x000A2D7D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull()
            {
                base[this.tabletJ_Measurement.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x06001DD4 RID: 7636 RVA: 0x000A4B95 File Offset: 0x000A2D95
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidOldMeasurementNull()
            {
                return base.IsNull(this.tabletJ_Measurement.idOldMeasurementColumn);
            }

            // Token: 0x06001DD5 RID: 7637 RVA: 0x000A4BA8 File Offset: 0x000A2DA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidOldMeasurementNull()
            {
                base[this.tabletJ_Measurement.idOldMeasurementColumn] = Convert.DBNull;
            }

            // Token: 0x06001DD6 RID: 7638 RVA: 0x000A4BC0 File Offset: 0x000A2DC0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tabletJ_Measurement.DeletedColumn);
            }

            // Token: 0x06001DD7 RID: 7639 RVA: 0x000A4BD3 File Offset: 0x000A2DD3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDeletedNull()
            {
                base[this.tabletJ_Measurement.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BBA RID: 3002
            private DataSetGES.tJ_MeasurementDataTable tabletJ_Measurement;
        }

        // Token: 0x0200015B RID: 347
        public class vJ_MeasTransfPassportRow : DataRow
        {
            // Token: 0x06001DD8 RID: 7640 RVA: 0x000A4BEB File Offset: 0x000A2DEB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasTransfPassportRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasTransfPassport = (DataSetGES.vJ_MeasTransfPassportDataTable)base.Table;
            }

            // Token: 0x170007AC RID: 1964
            // (get) Token: 0x06001DD9 RID: 7641 RVA: 0x000A4C05 File Offset: 0x000A2E05
            // (set) Token: 0x06001DDA RID: 7642 RVA: 0x000A4C1D File Offset: 0x000A2E1D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasTransfPassport.IdColumn];
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.IdColumn] = value;
                }
            }

            // Token: 0x170007AD RID: 1965
            // (get) Token: 0x06001DDB RID: 7643 RVA: 0x000A4C38 File Offset: 0x000A2E38
            // (set) Token: 0x06001DDC RID: 7644 RVA: 0x000A4C7C File Offset: 0x000A2E7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdPassport
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfPassport.IdPassportColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdPassport' in table 'vJ_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.IdPassportColumn] = value;
                }
            }

            // Token: 0x170007AE RID: 1966
            // (get) Token: 0x06001DDD RID: 7645 RVA: 0x000A4C98 File Offset: 0x000A2E98
            // (set) Token: 0x06001DDE RID: 7646 RVA: 0x000A4CDC File Offset: 0x000A2EDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string TransfName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasTransfPassport.TransfNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TransfName' in table 'vJ_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.TransfNameColumn] = value;
                }
            }

            // Token: 0x170007AF RID: 1967
            // (get) Token: 0x06001DDF RID: 7647 RVA: 0x000A4CF0 File Offset: 0x000A2EF0
            // (set) Token: 0x06001DE0 RID: 7648 RVA: 0x000A4D34 File Offset: 0x000A2F34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasTransfPassport.TypeColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Type' in table 'vJ_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.TypeColumn] = value;
                }
            }

            // Token: 0x170007B0 RID: 1968
            // (get) Token: 0x06001DE1 RID: 7649 RVA: 0x000A4D48 File Offset: 0x000A2F48
            // (set) Token: 0x06001DE2 RID: 7650 RVA: 0x000A4D8C File Offset: 0x000A2F8C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasTransfPassport.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.PowerColumn] = value;
                }
            }

            // Token: 0x170007B1 RID: 1969
            // (get) Token: 0x06001DE3 RID: 7651 RVA: 0x000A4DA0 File Offset: 0x000A2FA0
            // (set) Token: 0x06001DE4 RID: 7652 RVA: 0x000A4DE4 File Offset: 0x000A2FE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvNumber
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasTransfPassport.InvNumberColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'InvNumber' in table 'vJ_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.InvNumberColumn] = value;
                }
            }

            // Token: 0x170007B2 RID: 1970
            // (get) Token: 0x06001DE5 RID: 7653 RVA: 0x000A4DF8 File Offset: 0x000A2FF8
            // (set) Token: 0x06001DE6 RID: 7654 RVA: 0x000A4E3C File Offset: 0x000A303C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Unom
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasTransfPassport.UnomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Unom' in table 'vJ_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.UnomColumn] = value;
                }
            }

            // Token: 0x170007B3 RID: 1971
            // (get) Token: 0x06001DE7 RID: 7655 RVA: 0x000A4E50 File Offset: 0x000A3050
            // (set) Token: 0x06001DE8 RID: 7656 RVA: 0x000A4E94 File Offset: 0x000A3094
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Inom
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasTransfPassport.InomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Inom' in table 'vJ_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfPassport.InomColumn] = value;
                }
            }

            // Token: 0x06001DE9 RID: 7657 RVA: 0x000A4EA8 File Offset: 0x000A30A8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdPassportNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfPassport.IdPassportColumn);
            }

            // Token: 0x06001DEA RID: 7658 RVA: 0x000A4EBB File Offset: 0x000A30BB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdPassportNull()
            {
                base[this.tablevJ_MeasTransfPassport.IdPassportColumn] = Convert.DBNull;
            }

            // Token: 0x06001DEB RID: 7659 RVA: 0x000A4ED3 File Offset: 0x000A30D3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransfNameNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfPassport.TransfNameColumn);
            }

            // Token: 0x06001DEC RID: 7660 RVA: 0x000A4EE6 File Offset: 0x000A30E6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTransfNameNull()
            {
                base[this.tablevJ_MeasTransfPassport.TransfNameColumn] = Convert.DBNull;
            }

            // Token: 0x06001DED RID: 7661 RVA: 0x000A4EFE File Offset: 0x000A30FE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfPassport.TypeColumn);
            }

            // Token: 0x06001DEE RID: 7662 RVA: 0x000A4F11 File Offset: 0x000A3111
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTypeNull()
            {
                base[this.tablevJ_MeasTransfPassport.TypeColumn] = Convert.DBNull;
            }

            // Token: 0x06001DEF RID: 7663 RVA: 0x000A4F29 File Offset: 0x000A3129
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfPassport.PowerColumn);
            }

            // Token: 0x06001DF0 RID: 7664 RVA: 0x000A4F3C File Offset: 0x000A313C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPowerNull()
            {
                base[this.tablevJ_MeasTransfPassport.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x06001DF1 RID: 7665 RVA: 0x000A4F54 File Offset: 0x000A3154
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvNumberNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfPassport.InvNumberColumn);
            }

            // Token: 0x06001DF2 RID: 7666 RVA: 0x000A4F67 File Offset: 0x000A3167
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvNumberNull()
            {
                base[this.tablevJ_MeasTransfPassport.InvNumberColumn] = Convert.DBNull;
            }

            // Token: 0x06001DF3 RID: 7667 RVA: 0x000A4F7F File Offset: 0x000A317F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnomNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfPassport.UnomColumn);
            }

            // Token: 0x06001DF4 RID: 7668 RVA: 0x000A4F92 File Offset: 0x000A3192
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUnomNull()
            {
                base[this.tablevJ_MeasTransfPassport.UnomColumn] = Convert.DBNull;
            }

            // Token: 0x06001DF5 RID: 7669 RVA: 0x000A4FAA File Offset: 0x000A31AA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsInomNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfPassport.InomColumn);
            }

            // Token: 0x06001DF6 RID: 7670 RVA: 0x000A4FBD File Offset: 0x000A31BD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInomNull()
            {
                base[this.tablevJ_MeasTransfPassport.InomColumn] = Convert.DBNull;
            }

            // Token: 0x04000BBB RID: 3003
            private DataSetGES.vJ_MeasTransfPassportDataTable tablevJ_MeasTransfPassport;
        }

        // Token: 0x0200015C RID: 348
        public class fn_J_MeasTransfPassportRow : DataRow
        {
            // Token: 0x06001DF7 RID: 7671 RVA: 0x000A4FD5 File Offset: 0x000A31D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_MeasTransfPassportRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_MeasTransfPassport = (DataSetGES.fn_J_MeasTransfPassportDataTable)base.Table;
            }

            // Token: 0x170007B4 RID: 1972
            // (get) Token: 0x06001DF8 RID: 7672 RVA: 0x000A4FF0 File Offset: 0x000A31F0
            // (set) Token: 0x06001DF9 RID: 7673 RVA: 0x000A5034 File Offset: 0x000A3234
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasTransfPassport.IdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.IdColumn] = value;
                }
            }

            // Token: 0x170007B5 RID: 1973
            // (get) Token: 0x06001DFA RID: 7674 RVA: 0x000A5050 File Offset: 0x000A3250
            // (set) Token: 0x06001DFB RID: 7675 RVA: 0x000A5094 File Offset: 0x000A3294
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdPassport
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasTransfPassport.IdPassportColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdPassport' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.IdPassportColumn] = value;
                }
            }

            // Token: 0x170007B6 RID: 1974
            // (get) Token: 0x06001DFC RID: 7676 RVA: 0x000A50B0 File Offset: 0x000A32B0
            // (set) Token: 0x06001DFD RID: 7677 RVA: 0x000A50F4 File Offset: 0x000A32F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_MeasTransfPassport.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.NameColumn] = value;
                }
            }

            // Token: 0x170007B7 RID: 1975
            // (get) Token: 0x06001DFE RID: 7678 RVA: 0x000A5108 File Offset: 0x000A3308
            // (set) Token: 0x06001DFF RID: 7679 RVA: 0x000A514C File Offset: 0x000A334C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_MeasTransfPassport.TypeColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Type' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.TypeColumn] = value;
                }
            }

            // Token: 0x170007B8 RID: 1976
            // (get) Token: 0x06001E00 RID: 7680 RVA: 0x000A5160 File Offset: 0x000A3360
            // (set) Token: 0x06001E01 RID: 7681 RVA: 0x000A51A4 File Offset: 0x000A33A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Power
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_MeasTransfPassport.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.PowerColumn] = value;
                }
            }

            // Token: 0x170007B9 RID: 1977
            // (get) Token: 0x06001E02 RID: 7682 RVA: 0x000A51C0 File Offset: 0x000A33C0
            // (set) Token: 0x06001E03 RID: 7683 RVA: 0x000A5204 File Offset: 0x000A3404
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvNumber
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_MeasTransfPassport.InvNumberColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'InvNumber' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.InvNumberColumn] = value;
                }
            }

            // Token: 0x170007BA RID: 1978
            // (get) Token: 0x06001E04 RID: 7684 RVA: 0x000A5218 File Offset: 0x000A3418
            // (set) Token: 0x06001E05 RID: 7685 RVA: 0x000A525C File Offset: 0x000A345C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal Unom
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tablefn_J_MeasTransfPassport.UnomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Unom' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.UnomColumn] = value;
                }
            }

            // Token: 0x170007BB RID: 1979
            // (get) Token: 0x06001E06 RID: 7686 RVA: 0x000A5278 File Offset: 0x000A3478
            // (set) Token: 0x06001E07 RID: 7687 RVA: 0x000A52BC File Offset: 0x000A34BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Inom
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tablefn_J_MeasTransfPassport.InomColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Inom' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.InomColumn] = value;
                }
            }

            // Token: 0x170007BC RID: 1980
            // (get) Token: 0x06001E08 RID: 7688 RVA: 0x000A52D8 File Offset: 0x000A34D8
            // (set) Token: 0x06001E09 RID: 7689 RVA: 0x000A531C File Offset: 0x000A351C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public decimal InomHV
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tablefn_J_MeasTransfPassport.InomHVColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'InomHV' in table 'fn_J_MeasTransfPassport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_MeasTransfPassport.InomHVColumn] = value;
                }
            }

            // Token: 0x06001E0A RID: 7690 RVA: 0x000A5335 File Offset: 0x000A3535
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.IdColumn);
            }

            // Token: 0x06001E0B RID: 7691 RVA: 0x000A5348 File Offset: 0x000A3548
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdNull()
            {
                base[this.tablefn_J_MeasTransfPassport.IdColumn] = Convert.DBNull;
            }

            // Token: 0x06001E0C RID: 7692 RVA: 0x000A5360 File Offset: 0x000A3560
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdPassportNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.IdPassportColumn);
            }

            // Token: 0x06001E0D RID: 7693 RVA: 0x000A5373 File Offset: 0x000A3573
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdPassportNull()
            {
                base[this.tablefn_J_MeasTransfPassport.IdPassportColumn] = Convert.DBNull;
            }

            // Token: 0x06001E0E RID: 7694 RVA: 0x000A538B File Offset: 0x000A358B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.NameColumn);
            }

            // Token: 0x06001E0F RID: 7695 RVA: 0x000A539E File Offset: 0x000A359E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tablefn_J_MeasTransfPassport.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001E10 RID: 7696 RVA: 0x000A53B6 File Offset: 0x000A35B6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTypeNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.TypeColumn);
            }

            // Token: 0x06001E11 RID: 7697 RVA: 0x000A53C9 File Offset: 0x000A35C9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull()
            {
                base[this.tablefn_J_MeasTransfPassport.TypeColumn] = Convert.DBNull;
            }

            // Token: 0x06001E12 RID: 7698 RVA: 0x000A53E1 File Offset: 0x000A35E1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.PowerColumn);
            }

            // Token: 0x06001E13 RID: 7699 RVA: 0x000A53F4 File Offset: 0x000A35F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPowerNull()
            {
                base[this.tablefn_J_MeasTransfPassport.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x06001E14 RID: 7700 RVA: 0x000A540C File Offset: 0x000A360C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvNumberNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.InvNumberColumn);
            }

            // Token: 0x06001E15 RID: 7701 RVA: 0x000A541F File Offset: 0x000A361F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetInvNumberNull()
            {
                base[this.tablefn_J_MeasTransfPassport.InvNumberColumn] = Convert.DBNull;
            }

            // Token: 0x06001E16 RID: 7702 RVA: 0x000A5437 File Offset: 0x000A3637
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnomNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.UnomColumn);
            }

            // Token: 0x06001E17 RID: 7703 RVA: 0x000A544A File Offset: 0x000A364A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUnomNull()
            {
                base[this.tablefn_J_MeasTransfPassport.UnomColumn] = Convert.DBNull;
            }

            // Token: 0x06001E18 RID: 7704 RVA: 0x000A5462 File Offset: 0x000A3662
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInomNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.InomColumn);
            }

            // Token: 0x06001E19 RID: 7705 RVA: 0x000A5475 File Offset: 0x000A3675
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetInomNull()
            {
                base[this.tablefn_J_MeasTransfPassport.InomColumn] = Convert.DBNull;
            }

            // Token: 0x06001E1A RID: 7706 RVA: 0x000A548D File Offset: 0x000A368D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsInomHVNull()
            {
                return base.IsNull(this.tablefn_J_MeasTransfPassport.InomHVColumn);
            }

            // Token: 0x06001E1B RID: 7707 RVA: 0x000A54A0 File Offset: 0x000A36A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetInomHVNull()
            {
                base[this.tablefn_J_MeasTransfPassport.InomHVColumn] = Convert.DBNull;
            }

            // Token: 0x04000BBC RID: 3004
            private DataSetGES.fn_J_MeasTransfPassportDataTable tablefn_J_MeasTransfPassport;
        }

        // Token: 0x0200015D RID: 349
        public class vJ_MeasCableRow : DataRow
        {
            // Token: 0x06001E1C RID: 7708 RVA: 0x000A54B8 File Offset: 0x000A36B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasCableRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasCable = (DataSetGES.vJ_MeasCableDataTable)base.Table;
            }

            // Token: 0x170007BD RID: 1981
            // (get) Token: 0x06001E1D RID: 7709 RVA: 0x000A54D2 File Offset: 0x000A36D2
            // (set) Token: 0x06001E1E RID: 7710 RVA: 0x000A54EA File Offset: 0x000A36EA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCable.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCable.idColumn] = value;
                }
            }

            // Token: 0x170007BE RID: 1982
            // (get) Token: 0x06001E1F RID: 7711 RVA: 0x000A5503 File Offset: 0x000A3703
            // (set) Token: 0x06001E20 RID: 7712 RVA: 0x000A551B File Offset: 0x000A371B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCable.idMeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCable.idMeasurementColumn] = value;
                }
            }

            // Token: 0x170007BF RID: 1983
            // (get) Token: 0x06001E21 RID: 7713 RVA: 0x000A5534 File Offset: 0x000A3734
            // (set) Token: 0x06001E22 RID: 7714 RVA: 0x000A5578 File Offset: 0x000A3778
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.idBusColumn] = value;
                }
            }

            // Token: 0x170007C0 RID: 1984
            // (get) Token: 0x06001E23 RID: 7715 RVA: 0x000A5591 File Offset: 0x000A3791
            // (set) Token: 0x06001E24 RID: 7716 RVA: 0x000A55A9 File Offset: 0x000A37A9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCable.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCable.idTransfColumn] = value;
                }
            }

            // Token: 0x170007C1 RID: 1985
            // (get) Token: 0x06001E25 RID: 7717 RVA: 0x000A55C4 File Offset: 0x000A37C4
            // (set) Token: 0x06001E26 RID: 7718 RVA: 0x000A5608 File Offset: 0x000A3808
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.idCellColumn] = value;
                }
            }

            // Token: 0x170007C2 RID: 1986
            // (get) Token: 0x06001E27 RID: 7719 RVA: 0x000A5624 File Offset: 0x000A3824
            // (set) Token: 0x06001E28 RID: 7720 RVA: 0x000A5668 File Offset: 0x000A3868
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OldCell
            {
                get
                {
                    short result;
                    try
                    {
                        result = (short)base[this.tablevJ_MeasCable.OldCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'OldCell' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.OldCellColumn] = value;
                }
            }

            // Token: 0x170007C3 RID: 1987
            // (get) Token: 0x06001E29 RID: 7721 RVA: 0x000A5684 File Offset: 0x000A3884
            // (set) Token: 0x06001E2A RID: 7722 RVA: 0x000A56C8 File Offset: 0x000A38C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCable.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.NameCellColumn] = value;
                }
            }

            // Token: 0x170007C4 RID: 1988
            // (get) Token: 0x06001E2B RID: 7723 RVA: 0x000A56DC File Offset: 0x000A38DC
            // (set) Token: 0x06001E2C RID: 7724 RVA: 0x000A5720 File Offset: 0x000A3920
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCable
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCable.NameCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCable' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.NameCableColumn] = value;
                }
            }

            // Token: 0x170007C5 RID: 1989
            // (get) Token: 0x06001E2D RID: 7725 RVA: 0x000A5734 File Offset: 0x000A3934
            // (set) Token: 0x06001E2E RID: 7726 RVA: 0x000A5778 File Offset: 0x000A3978
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCable.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.AddressColumn] = value;
                }
            }

            // Token: 0x170007C6 RID: 1990
            // (get) Token: 0x06001E2F RID: 7727 RVA: 0x000A578C File Offset: 0x000A398C
            // (set) Token: 0x06001E30 RID: 7728 RVA: 0x000A57D0 File Offset: 0x000A39D0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCable.CompanyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.CompanyColumn] = value;
                }
            }

            // Token: 0x170007C7 RID: 1991
            // (get) Token: 0x06001E31 RID: 7729 RVA: 0x000A57E4 File Offset: 0x000A39E4
            // (set) Token: 0x06001E32 RID: 7730 RVA: 0x000A5828 File Offset: 0x000A3A28
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.idCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.idCableColumn] = value;
                }
            }

            // Token: 0x170007C8 RID: 1992
            // (get) Token: 0x06001E33 RID: 7731 RVA: 0x000A5844 File Offset: 0x000A3A44
            // (set) Token: 0x06001E34 RID: 7732 RVA: 0x000A5888 File Offset: 0x000A3A88
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSchmAbn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.idSchmAbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idSchmAbn' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.idSchmAbnColumn] = value;
                }
            }

            // Token: 0x170007C9 RID: 1993
            // (get) Token: 0x06001E35 RID: 7733 RVA: 0x000A58A4 File Offset: 0x000A3AA4
            // (set) Token: 0x06001E36 RID: 7734 RVA: 0x000A58E8 File Offset: 0x000A3AE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Makeup
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCable.MakeupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.MakeupColumn] = value;
                }
            }

            // Token: 0x170007CA RID: 1994
            // (get) Token: 0x06001E37 RID: 7735 RVA: 0x000A58FC File Offset: 0x000A3AFC
            // (set) Token: 0x06001E38 RID: 7736 RVA: 0x000A5940 File Offset: 0x000A3B40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Voltage
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.VoltageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.VoltageColumn] = value;
                }
            }

            // Token: 0x170007CB RID: 1995
            // (get) Token: 0x06001E39 RID: 7737 RVA: 0x000A595C File Offset: 0x000A3B5C
            // (set) Token: 0x06001E3A RID: 7738 RVA: 0x000A59A0 File Offset: 0x000A3BA0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Wires
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.WiresColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.WiresColumn] = value;
                }
            }

            // Token: 0x170007CC RID: 1996
            // (get) Token: 0x06001E3B RID: 7739 RVA: 0x000A59BC File Offset: 0x000A3BBC
            // (set) Token: 0x06001E3C RID: 7740 RVA: 0x000A5A00 File Offset: 0x000A3C00
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSection
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_MeasCable.CrossSectionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.CrossSectionColumn] = value;
                }
            }

            // Token: 0x170007CD RID: 1997
            // (get) Token: 0x06001E3D RID: 7741 RVA: 0x000A5A1C File Offset: 0x000A3C1C
            // (set) Token: 0x06001E3E RID: 7742 RVA: 0x000A5A60 File Offset: 0x000A3C60
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_MeasCable.PermisAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.PermisAmperageColumn] = value;
                }
            }

            // Token: 0x170007CE RID: 1998
            // (get) Token: 0x06001E3F RID: 7743 RVA: 0x000A5A7C File Offset: 0x000A3C7C
            // (set) Token: 0x06001E40 RID: 7744 RVA: 0x000A5AC0 File Offset: 0x000A3CC0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Iad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IadColumn] = value;
                }
            }

            // Token: 0x170007CF RID: 1999
            // (get) Token: 0x06001E41 RID: 7745 RVA: 0x000A5ADC File Offset: 0x000A3CDC
            // (set) Token: 0x06001E42 RID: 7746 RVA: 0x000A5B20 File Offset: 0x000A3D20
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ian
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IanColumn] = value;
                }
            }

            // Token: 0x170007D0 RID: 2000
            // (get) Token: 0x06001E43 RID: 7747 RVA: 0x000A5B3C File Offset: 0x000A3D3C
            // (set) Token: 0x06001E44 RID: 7748 RVA: 0x000A5B80 File Offset: 0x000A3D80
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IbdColumn] = value;
                }
            }

            // Token: 0x170007D1 RID: 2001
            // (get) Token: 0x06001E45 RID: 7749 RVA: 0x000A5B9C File Offset: 0x000A3D9C
            // (set) Token: 0x06001E46 RID: 7750 RVA: 0x000A5BE0 File Offset: 0x000A3DE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IbnColumn] = value;
                }
            }

            // Token: 0x170007D2 RID: 2002
            // (get) Token: 0x06001E47 RID: 7751 RVA: 0x000A5BFC File Offset: 0x000A3DFC
            // (set) Token: 0x06001E48 RID: 7752 RVA: 0x000A5C40 File Offset: 0x000A3E40
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IcdColumn] = value;
                }
            }

            // Token: 0x170007D3 RID: 2003
            // (get) Token: 0x06001E49 RID: 7753 RVA: 0x000A5C5C File Offset: 0x000A3E5C
            // (set) Token: 0x06001E4A RID: 7754 RVA: 0x000A5CA0 File Offset: 0x000A3EA0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IcnColumn] = value;
                }
            }

            // Token: 0x170007D4 RID: 2004
            // (get) Token: 0x06001E4B RID: 7755 RVA: 0x000A5CBC File Offset: 0x000A3EBC
            // (set) Token: 0x06001E4C RID: 7756 RVA: 0x000A5D00 File Offset: 0x000A3F00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iod' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IodColumn] = value;
                }
            }

            // Token: 0x170007D5 RID: 2005
            // (get) Token: 0x06001E4D RID: 7757 RVA: 0x000A5D1C File Offset: 0x000A3F1C
            // (set) Token: 0x06001E4E RID: 7758 RVA: 0x000A5D60 File Offset: 0x000A3F60
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCable.IonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ion' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.IonColumn] = value;
                }
            }

            // Token: 0x170007D6 RID: 2006
            // (get) Token: 0x06001E4F RID: 7759 RVA: 0x000A5D7C File Offset: 0x000A3F7C
            // (set) Token: 0x06001E50 RID: 7760 RVA: 0x000A5DC0 File Offset: 0x000A3FC0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCable.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.CommentColumn] = value;
                }
            }

            // Token: 0x170007D7 RID: 2007
            // (get) Token: 0x06001E51 RID: 7761 RVA: 0x000A5DD4 File Offset: 0x000A3FD4
            // (set) Token: 0x06001E52 RID: 7762 RVA: 0x000A5E18 File Offset: 0x000A4018
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_MeasCable.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'vJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCable.DeletedColumn] = value;
                }
            }

            // Token: 0x06001E53 RID: 7763 RVA: 0x000A5E31 File Offset: 0x000A4031
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.idBusColumn);
            }

            // Token: 0x06001E54 RID: 7764 RVA: 0x000A5E44 File Offset: 0x000A4044
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidBusNull()
            {
                base[this.tablevJ_MeasCable.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001E55 RID: 7765 RVA: 0x000A5E5C File Offset: 0x000A405C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.idCellColumn);
            }

            // Token: 0x06001E56 RID: 7766 RVA: 0x000A5E6F File Offset: 0x000A406F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidCellNull()
            {
                base[this.tablevJ_MeasCable.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001E57 RID: 7767 RVA: 0x000A5E87 File Offset: 0x000A4087
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOldCellNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.OldCellColumn);
            }

            // Token: 0x06001E58 RID: 7768 RVA: 0x000A5E9A File Offset: 0x000A409A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOldCellNull()
            {
                base[this.tablevJ_MeasCable.OldCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001E59 RID: 7769 RVA: 0x000A5EB2 File Offset: 0x000A40B2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.NameCellColumn);
            }

            // Token: 0x06001E5A RID: 7770 RVA: 0x000A5EC5 File Offset: 0x000A40C5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameCellNull()
            {
                base[this.tablevJ_MeasCable.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001E5B RID: 7771 RVA: 0x000A5EDD File Offset: 0x000A40DD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameCableNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.NameCableColumn);
            }

            // Token: 0x06001E5C RID: 7772 RVA: 0x000A5EF0 File Offset: 0x000A40F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameCableNull()
            {
                base[this.tablevJ_MeasCable.NameCableColumn] = Convert.DBNull;
            }

            // Token: 0x06001E5D RID: 7773 RVA: 0x000A5F08 File Offset: 0x000A4108
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.AddressColumn);
            }

            // Token: 0x06001E5E RID: 7774 RVA: 0x000A5F1B File Offset: 0x000A411B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull()
            {
                base[this.tablevJ_MeasCable.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x06001E5F RID: 7775 RVA: 0x000A5F33 File Offset: 0x000A4133
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCompanyNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.CompanyColumn);
            }

            // Token: 0x06001E60 RID: 7776 RVA: 0x000A5F46 File Offset: 0x000A4146
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCompanyNull()
            {
                base[this.tablevJ_MeasCable.CompanyColumn] = Convert.DBNull;
            }

            // Token: 0x06001E61 RID: 7777 RVA: 0x000A5F5E File Offset: 0x000A415E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidCableNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.idCableColumn);
            }

            // Token: 0x06001E62 RID: 7778 RVA: 0x000A5F71 File Offset: 0x000A4171
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidCableNull()
            {
                base[this.tablevJ_MeasCable.idCableColumn] = Convert.DBNull;
            }

            // Token: 0x06001E63 RID: 7779 RVA: 0x000A5F89 File Offset: 0x000A4189
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidSchmAbnNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.idSchmAbnColumn);
            }

            // Token: 0x06001E64 RID: 7780 RVA: 0x000A5F9C File Offset: 0x000A419C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidSchmAbnNull()
            {
                base[this.tablevJ_MeasCable.idSchmAbnColumn] = Convert.DBNull;
            }

            // Token: 0x06001E65 RID: 7781 RVA: 0x000A5FB4 File Offset: 0x000A41B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMakeupNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.MakeupColumn);
            }

            // Token: 0x06001E66 RID: 7782 RVA: 0x000A5FC7 File Offset: 0x000A41C7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMakeupNull()
            {
                base[this.tablevJ_MeasCable.MakeupColumn] = Convert.DBNull;
            }

            // Token: 0x06001E67 RID: 7783 RVA: 0x000A5FDF File Offset: 0x000A41DF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsVoltageNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.VoltageColumn);
            }

            // Token: 0x06001E68 RID: 7784 RVA: 0x000A5FF2 File Offset: 0x000A41F2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltageNull()
            {
                base[this.tablevJ_MeasCable.VoltageColumn] = Convert.DBNull;
            }

            // Token: 0x06001E69 RID: 7785 RVA: 0x000A600A File Offset: 0x000A420A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWiresNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.WiresColumn);
            }

            // Token: 0x06001E6A RID: 7786 RVA: 0x000A601D File Offset: 0x000A421D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetWiresNull()
            {
                base[this.tablevJ_MeasCable.WiresColumn] = Convert.DBNull;
            }

            // Token: 0x06001E6B RID: 7787 RVA: 0x000A6035 File Offset: 0x000A4235
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCrossSectionNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.CrossSectionColumn);
            }

            // Token: 0x06001E6C RID: 7788 RVA: 0x000A6048 File Offset: 0x000A4248
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCrossSectionNull()
            {
                base[this.tablevJ_MeasCable.CrossSectionColumn] = Convert.DBNull;
            }

            // Token: 0x06001E6D RID: 7789 RVA: 0x000A6060 File Offset: 0x000A4260
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPermisAmperageNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.PermisAmperageColumn);
            }

            // Token: 0x06001E6E RID: 7790 RVA: 0x000A6073 File Offset: 0x000A4273
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPermisAmperageNull()
            {
                base[this.tablevJ_MeasCable.PermisAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x06001E6F RID: 7791 RVA: 0x000A608B File Offset: 0x000A428B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIadNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IadColumn);
            }

            // Token: 0x06001E70 RID: 7792 RVA: 0x000A609E File Offset: 0x000A429E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIadNull()
            {
                base[this.tablevJ_MeasCable.IadColumn] = Convert.DBNull;
            }

            // Token: 0x06001E71 RID: 7793 RVA: 0x000A60B6 File Offset: 0x000A42B6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIanNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IanColumn);
            }

            // Token: 0x06001E72 RID: 7794 RVA: 0x000A60C9 File Offset: 0x000A42C9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIanNull()
            {
                base[this.tablevJ_MeasCable.IanColumn] = Convert.DBNull;
            }

            // Token: 0x06001E73 RID: 7795 RVA: 0x000A60E1 File Offset: 0x000A42E1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbdNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IbdColumn);
            }

            // Token: 0x06001E74 RID: 7796 RVA: 0x000A60F4 File Offset: 0x000A42F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbdNull()
            {
                base[this.tablevJ_MeasCable.IbdColumn] = Convert.DBNull;
            }

            // Token: 0x06001E75 RID: 7797 RVA: 0x000A610C File Offset: 0x000A430C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbnNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IbnColumn);
            }

            // Token: 0x06001E76 RID: 7798 RVA: 0x000A611F File Offset: 0x000A431F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbnNull()
            {
                base[this.tablevJ_MeasCable.IbnColumn] = Convert.DBNull;
            }

            // Token: 0x06001E77 RID: 7799 RVA: 0x000A6137 File Offset: 0x000A4337
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcdNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IcdColumn);
            }

            // Token: 0x06001E78 RID: 7800 RVA: 0x000A614A File Offset: 0x000A434A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcdNull()
            {
                base[this.tablevJ_MeasCable.IcdColumn] = Convert.DBNull;
            }

            // Token: 0x06001E79 RID: 7801 RVA: 0x000A6162 File Offset: 0x000A4362
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcnNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IcnColumn);
            }

            // Token: 0x06001E7A RID: 7802 RVA: 0x000A6175 File Offset: 0x000A4375
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcnNull()
            {
                base[this.tablevJ_MeasCable.IcnColumn] = Convert.DBNull;
            }

            // Token: 0x06001E7B RID: 7803 RVA: 0x000A618D File Offset: 0x000A438D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIodNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IodColumn);
            }

            // Token: 0x06001E7C RID: 7804 RVA: 0x000A61A0 File Offset: 0x000A43A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIodNull()
            {
                base[this.tablevJ_MeasCable.IodColumn] = Convert.DBNull;
            }

            // Token: 0x06001E7D RID: 7805 RVA: 0x000A61B8 File Offset: 0x000A43B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIonNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.IonColumn);
            }

            // Token: 0x06001E7E RID: 7806 RVA: 0x000A61CB File Offset: 0x000A43CB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIonNull()
            {
                base[this.tablevJ_MeasCable.IonColumn] = Convert.DBNull;
            }

            // Token: 0x06001E7F RID: 7807 RVA: 0x000A61E3 File Offset: 0x000A43E3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.CommentColumn);
            }

            // Token: 0x06001E80 RID: 7808 RVA: 0x000A61F6 File Offset: 0x000A43F6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tablevJ_MeasCable.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x06001E81 RID: 7809 RVA: 0x000A620E File Offset: 0x000A440E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tablevJ_MeasCable.DeletedColumn);
            }

            // Token: 0x06001E82 RID: 7810 RVA: 0x000A6221 File Offset: 0x000A4421
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedNull()
            {
                base[this.tablevJ_MeasCable.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BBD RID: 3005
            private DataSetGES.vJ_MeasCableDataTable tablevJ_MeasCable;
        }

        // Token: 0x0200015E RID: 350
        public class dtMeasCellRatioRow : DataRow
        {
            // Token: 0x06001E83 RID: 7811 RVA: 0x000A6239 File Offset: 0x000A4439
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtMeasCellRatioRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtMeasCellRatio = (DataSetGES.dtMeasCellRatioDataTable)base.Table;
            }

            // Token: 0x170007D8 RID: 2008
            // (get) Token: 0x06001E84 RID: 7812 RVA: 0x000A6254 File Offset: 0x000A4454
            // (set) Token: 0x06001E85 RID: 7813 RVA: 0x000A6298 File Offset: 0x000A4498
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IadSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCellRatio.IadSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IadSum' in table 'dtMeasCellRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCellRatio.IadSumColumn] = value;
                }
            }

            // Token: 0x170007D9 RID: 2009
            // (get) Token: 0x06001E86 RID: 7814 RVA: 0x000A62B4 File Offset: 0x000A44B4
            // (set) Token: 0x06001E87 RID: 7815 RVA: 0x000A62F8 File Offset: 0x000A44F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IanSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCellRatio.IanSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IanSum' in table 'dtMeasCellRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCellRatio.IanSumColumn] = value;
                }
            }

            // Token: 0x170007DA RID: 2010
            // (get) Token: 0x06001E88 RID: 7816 RVA: 0x000A6314 File Offset: 0x000A4514
            // (set) Token: 0x06001E89 RID: 7817 RVA: 0x000A6358 File Offset: 0x000A4558
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IbdSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCellRatio.IbdSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IbdSum' in table 'dtMeasCellRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCellRatio.IbdSumColumn] = value;
                }
            }

            // Token: 0x170007DB RID: 2011
            // (get) Token: 0x06001E8A RID: 7818 RVA: 0x000A6374 File Offset: 0x000A4574
            // (set) Token: 0x06001E8B RID: 7819 RVA: 0x000A63B8 File Offset: 0x000A45B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IbnSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCellRatio.IbnSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IbnSum' in table 'dtMeasCellRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCellRatio.IbnSumColumn] = value;
                }
            }

            // Token: 0x170007DC RID: 2012
            // (get) Token: 0x06001E8C RID: 7820 RVA: 0x000A63D4 File Offset: 0x000A45D4
            // (set) Token: 0x06001E8D RID: 7821 RVA: 0x000A6418 File Offset: 0x000A4618
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IcdSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCellRatio.IcdSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IcdSum' in table 'dtMeasCellRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCellRatio.IcdSumColumn] = value;
                }
            }

            // Token: 0x170007DD RID: 2013
            // (get) Token: 0x06001E8E RID: 7822 RVA: 0x000A6434 File Offset: 0x000A4634
            // (set) Token: 0x06001E8F RID: 7823 RVA: 0x000A6478 File Offset: 0x000A4678
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IcnSum
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtMeasCellRatio.IcnSumColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IcnSum' in table 'dtMeasCellRatio' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtMeasCellRatio.IcnSumColumn] = value;
                }
            }

            // Token: 0x06001E90 RID: 7824 RVA: 0x000A6491 File Offset: 0x000A4691
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIadSumNull()
            {
                return base.IsNull(this.tabledtMeasCellRatio.IadSumColumn);
            }

            // Token: 0x06001E91 RID: 7825 RVA: 0x000A64A4 File Offset: 0x000A46A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIadSumNull()
            {
                base[this.tabledtMeasCellRatio.IadSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001E92 RID: 7826 RVA: 0x000A64BC File Offset: 0x000A46BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIanSumNull()
            {
                return base.IsNull(this.tabledtMeasCellRatio.IanSumColumn);
            }

            // Token: 0x06001E93 RID: 7827 RVA: 0x000A64CF File Offset: 0x000A46CF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIanSumNull()
            {
                base[this.tabledtMeasCellRatio.IanSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001E94 RID: 7828 RVA: 0x000A64E7 File Offset: 0x000A46E7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbdSumNull()
            {
                return base.IsNull(this.tabledtMeasCellRatio.IbdSumColumn);
            }

            // Token: 0x06001E95 RID: 7829 RVA: 0x000A64FA File Offset: 0x000A46FA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbdSumNull()
            {
                base[this.tabledtMeasCellRatio.IbdSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001E96 RID: 7830 RVA: 0x000A6512 File Offset: 0x000A4712
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbnSumNull()
            {
                return base.IsNull(this.tabledtMeasCellRatio.IbnSumColumn);
            }

            // Token: 0x06001E97 RID: 7831 RVA: 0x000A6525 File Offset: 0x000A4725
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbnSumNull()
            {
                base[this.tabledtMeasCellRatio.IbnSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001E98 RID: 7832 RVA: 0x000A653D File Offset: 0x000A473D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcdSumNull()
            {
                return base.IsNull(this.tabledtMeasCellRatio.IcdSumColumn);
            }

            // Token: 0x06001E99 RID: 7833 RVA: 0x000A6550 File Offset: 0x000A4750
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcdSumNull()
            {
                base[this.tabledtMeasCellRatio.IcdSumColumn] = Convert.DBNull;
            }

            // Token: 0x06001E9A RID: 7834 RVA: 0x000A6568 File Offset: 0x000A4768
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIcnSumNull()
            {
                return base.IsNull(this.tabledtMeasCellRatio.IcnSumColumn);
            }

            // Token: 0x06001E9B RID: 7835 RVA: 0x000A657B File Offset: 0x000A477B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcnSumNull()
            {
                base[this.tabledtMeasCellRatio.IcnSumColumn] = Convert.DBNull;
            }

            // Token: 0x04000BBE RID: 3006
            private DataSetGES.dtMeasCellRatioDataTable tabledtMeasCellRatio;
        }

        // Token: 0x0200015F RID: 351
        public class tSchm_ObjList1Row : DataRow
        {
            // Token: 0x06001E9C RID: 7836 RVA: 0x000A6593 File Offset: 0x000A4793
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tSchm_ObjList1Row(DataRowBuilder rb) : base(rb)
            {
                this.tabletSchm_ObjList1 = (DataSetGES.tSchm_ObjList1DataTable)base.Table;
            }

            // Token: 0x170007DE RID: 2014
            // (get) Token: 0x06001E9D RID: 7837 RVA: 0x000A65AD File Offset: 0x000A47AD
            // (set) Token: 0x06001E9E RID: 7838 RVA: 0x000A65C5 File Offset: 0x000A47C5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    return (int)base[this.tabletSchm_ObjList1.IdColumn];
                }
                set
                {
                    base[this.tabletSchm_ObjList1.IdColumn] = value;
                }
            }

            // Token: 0x170007DF RID: 2015
            // (get) Token: 0x06001E9F RID: 7839 RVA: 0x000A65E0 File Offset: 0x000A47E0
            // (set) Token: 0x06001EA0 RID: 7840 RVA: 0x000A6624 File Offset: 0x000A4824
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletSchm_ObjList1.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.NameColumn] = value;
                }
            }

            // Token: 0x170007E0 RID: 2016
            // (get) Token: 0x06001EA1 RID: 7841 RVA: 0x000A6638 File Offset: 0x000A4838
            // (set) Token: 0x06001EA2 RID: 7842 RVA: 0x000A667C File Offset: 0x000A487C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList1.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x170007E1 RID: 2017
            // (get) Token: 0x06001EA3 RID: 7843 RVA: 0x000A6698 File Offset: 0x000A4898
            // (set) Token: 0x06001EA4 RID: 7844 RVA: 0x000A66DC File Offset: 0x000A48DC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdParent
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList1.IdParentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.IdParentColumn] = value;
                }
            }

            // Token: 0x170007E2 RID: 2018
            // (get) Token: 0x06001EA5 RID: 7845 RVA: 0x000A66F8 File Offset: 0x000A48F8
            // (set) Token: 0x06001EA6 RID: 7846 RVA: 0x000A673C File Offset: 0x000A493C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool OnOff
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletSchm_ObjList1.OnOffColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'OnOff' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.OnOffColumn] = value;
                }
            }

            // Token: 0x170007E3 RID: 2019
            // (get) Token: 0x06001EA7 RID: 7847 RVA: 0x000A6758 File Offset: 0x000A4958
            // (set) Token: 0x06001EA8 RID: 7848 RVA: 0x000A679C File Offset: 0x000A499C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Location
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList1.LocationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Location' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.LocationColumn] = value;
                }
            }

            // Token: 0x170007E4 RID: 2020
            // (get) Token: 0x06001EA9 RID: 7849 RVA: 0x000A67B5 File Offset: 0x000A49B5
            // (set) Token: 0x06001EAA RID: 7850 RVA: 0x000A67CD File Offset: 0x000A49CD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tabletSchm_ObjList1.DeletedColumn];
                }
                set
                {
                    base[this.tabletSchm_ObjList1.DeletedColumn] = value;
                }
            }

            // Token: 0x170007E5 RID: 2021
            // (get) Token: 0x06001EAB RID: 7851 RVA: 0x000A67E8 File Offset: 0x000A49E8
            // (set) Token: 0x06001EAC RID: 7852 RVA: 0x000A682C File Offset: 0x000A4A2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NameP
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList1.NamePColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameP' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.NamePColumn] = value;
                }
            }

            // Token: 0x170007E6 RID: 2022
            // (get) Token: 0x06001EAD RID: 7853 RVA: 0x000A6848 File Offset: 0x000A4A48
            // (set) Token: 0x06001EAE RID: 7854 RVA: 0x000A688C File Offset: 0x000A4A8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idParentAddl
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList1.idParentAddlColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.idParentAddlColumn] = value;
                }
            }

            // Token: 0x170007E7 RID: 2023
            // (get) Token: 0x06001EAF RID: 7855 RVA: 0x000A68A8 File Offset: 0x000A4AA8
            // (set) Token: 0x06001EB0 RID: 7856 RVA: 0x000A68EC File Offset: 0x000A4AEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idGroup
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList1.idGroupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idGroup' in table 'tSchm_ObjList1' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList1.idGroupColumn] = value;
                }
            }

            // Token: 0x06001EB1 RID: 7857 RVA: 0x000A6905 File Offset: 0x000A4B05
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.NameColumn);
            }

            // Token: 0x06001EB2 RID: 7858 RVA: 0x000A6918 File Offset: 0x000A4B18
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tabletSchm_ObjList1.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001EB3 RID: 7859 RVA: 0x000A6930 File Offset: 0x000A4B30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.TypeCodeIdColumn);
            }

            // Token: 0x06001EB4 RID: 7860 RVA: 0x000A6943 File Offset: 0x000A4B43
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdNull()
            {
                base[this.tabletSchm_ObjList1.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x06001EB5 RID: 7861 RVA: 0x000A695B File Offset: 0x000A4B5B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdParentNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.IdParentColumn);
            }

            // Token: 0x06001EB6 RID: 7862 RVA: 0x000A696E File Offset: 0x000A4B6E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdParentNull()
            {
                base[this.tabletSchm_ObjList1.IdParentColumn] = Convert.DBNull;
            }

            // Token: 0x06001EB7 RID: 7863 RVA: 0x000A6986 File Offset: 0x000A4B86
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnOffNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.OnOffColumn);
            }

            // Token: 0x06001EB8 RID: 7864 RVA: 0x000A6999 File Offset: 0x000A4B99
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOnOffNull()
            {
                base[this.tabletSchm_ObjList1.OnOffColumn] = Convert.DBNull;
            }

            // Token: 0x06001EB9 RID: 7865 RVA: 0x000A69B1 File Offset: 0x000A4BB1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsLocationNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.LocationColumn);
            }

            // Token: 0x06001EBA RID: 7866 RVA: 0x000A69C4 File Offset: 0x000A4BC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetLocationNull()
            {
                base[this.tabletSchm_ObjList1.LocationColumn] = Convert.DBNull;
            }

            // Token: 0x06001EBB RID: 7867 RVA: 0x000A69DC File Offset: 0x000A4BDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNamePNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.NamePColumn);
            }

            // Token: 0x06001EBC RID: 7868 RVA: 0x000A69EF File Offset: 0x000A4BEF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNamePNull()
            {
                base[this.tabletSchm_ObjList1.NamePColumn] = Convert.DBNull;
            }

            // Token: 0x06001EBD RID: 7869 RVA: 0x000A6A07 File Offset: 0x000A4C07
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidParentAddlNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.idParentAddlColumn);
            }

            // Token: 0x06001EBE RID: 7870 RVA: 0x000A6A1A File Offset: 0x000A4C1A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidParentAddlNull()
            {
                base[this.tabletSchm_ObjList1.idParentAddlColumn] = Convert.DBNull;
            }

            // Token: 0x06001EBF RID: 7871 RVA: 0x000A6A32 File Offset: 0x000A4C32
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidGroupNull()
            {
                return base.IsNull(this.tabletSchm_ObjList1.idGroupColumn);
            }

            // Token: 0x06001EC0 RID: 7872 RVA: 0x000A6A45 File Offset: 0x000A4C45
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidGroupNull()
            {
                base[this.tabletSchm_ObjList1.idGroupColumn] = Convert.DBNull;
            }

            // Token: 0x04000BBF RID: 3007
            private DataSetGES.tSchm_ObjList1DataTable tabletSchm_ObjList1;
        }

        // Token: 0x02000160 RID: 352
        public class vJ_TransfBySubstationRow : DataRow
        {
            // Token: 0x06001EC1 RID: 7873 RVA: 0x000A6A5D File Offset: 0x000A4C5D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_TransfBySubstationRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_TransfBySubstation = (DataSetGES.vJ_TransfBySubstationDataTable)base.Table;
            }

            // Token: 0x170007E8 RID: 2024
            // (get) Token: 0x06001EC2 RID: 7874 RVA: 0x000A6A78 File Offset: 0x000A4C78
            // (set) Token: 0x06001EC3 RID: 7875 RVA: 0x000A6ABC File Offset: 0x000A4CBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameSS
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_TransfBySubstation.NameSSColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameSS' in table 'vJ_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.NameSSColumn] = value;
                }
            }

            // Token: 0x170007E9 RID: 2025
            // (get) Token: 0x06001EC4 RID: 7876 RVA: 0x000A6AD0 File Offset: 0x000A4CD0
            // (set) Token: 0x06001EC5 RID: 7877 RVA: 0x000A6B14 File Offset: 0x000A4D14
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_TransfBySubstation.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'vJ_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.NameBusColumn] = value;
                }
            }

            // Token: 0x170007EA RID: 2026
            // (get) Token: 0x06001EC6 RID: 7878 RVA: 0x000A6B28 File Offset: 0x000A4D28
            // (set) Token: 0x06001EC7 RID: 7879 RVA: 0x000A6B6C File Offset: 0x000A4D6C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_TransfBySubstation.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.NameCellColumn] = value;
                }
            }

            // Token: 0x170007EB RID: 2027
            // (get) Token: 0x06001EC8 RID: 7880 RVA: 0x000A6B80 File Offset: 0x000A4D80
            // (set) Token: 0x06001EC9 RID: 7881 RVA: 0x000A6BC4 File Offset: 0x000A4DC4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_TransfBySubstation.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.NameTransfColumn] = value;
                }
            }

            // Token: 0x170007EC RID: 2028
            // (get) Token: 0x06001ECA RID: 7882 RVA: 0x000A6BD8 File Offset: 0x000A4DD8
            // (set) Token: 0x06001ECB RID: 7883 RVA: 0x000A6BF0 File Offset: 0x000A4DF0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSS
            {
                get
                {
                    return (int)base[this.tablevJ_TransfBySubstation.idSSColumn];
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.idSSColumn] = value;
                }
            }

            // Token: 0x170007ED RID: 2029
            // (get) Token: 0x06001ECC RID: 7884 RVA: 0x000A6C09 File Offset: 0x000A4E09
            // (set) Token: 0x06001ECD RID: 7885 RVA: 0x000A6C21 File Offset: 0x000A4E21
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    return (int)base[this.tablevJ_TransfBySubstation.idBusColumn];
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.idBusColumn] = value;
                }
            }

            // Token: 0x170007EE RID: 2030
            // (get) Token: 0x06001ECE RID: 7886 RVA: 0x000A6C3A File Offset: 0x000A4E3A
            // (set) Token: 0x06001ECF RID: 7887 RVA: 0x000A6C52 File Offset: 0x000A4E52
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    return (int)base[this.tablevJ_TransfBySubstation.idCellColumn];
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.idCellColumn] = value;
                }
            }

            // Token: 0x170007EF RID: 2031
            // (get) Token: 0x06001ED0 RID: 7888 RVA: 0x000A6C6C File Offset: 0x000A4E6C
            // (set) Token: 0x06001ED1 RID: 7889 RVA: 0x000A6CB0 File Offset: 0x000A4EB0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_TransfBySubstation.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfBySubstation.idTransfColumn] = value;
                }
            }

            // Token: 0x06001ED2 RID: 7890 RVA: 0x000A6CC9 File Offset: 0x000A4EC9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameSSNull()
            {
                return base.IsNull(this.tablevJ_TransfBySubstation.NameSSColumn);
            }

            // Token: 0x06001ED3 RID: 7891 RVA: 0x000A6CDC File Offset: 0x000A4EDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameSSNull()
            {
                base[this.tablevJ_TransfBySubstation.NameSSColumn] = Convert.DBNull;
            }

            // Token: 0x06001ED4 RID: 7892 RVA: 0x000A6CF4 File Offset: 0x000A4EF4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tablevJ_TransfBySubstation.NameBusColumn);
            }

            // Token: 0x06001ED5 RID: 7893 RVA: 0x000A6D07 File Offset: 0x000A4F07
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameBusNull()
            {
                base[this.tablevJ_TransfBySubstation.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001ED6 RID: 7894 RVA: 0x000A6D1F File Offset: 0x000A4F1F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tablevJ_TransfBySubstation.NameCellColumn);
            }

            // Token: 0x06001ED7 RID: 7895 RVA: 0x000A6D32 File Offset: 0x000A4F32
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameCellNull()
            {
                base[this.tablevJ_TransfBySubstation.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001ED8 RID: 7896 RVA: 0x000A6D4A File Offset: 0x000A4F4A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablevJ_TransfBySubstation.NameTransfColumn);
            }

            // Token: 0x06001ED9 RID: 7897 RVA: 0x000A6D5D File Offset: 0x000A4F5D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tablevJ_TransfBySubstation.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06001EDA RID: 7898 RVA: 0x000A6D75 File Offset: 0x000A4F75
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tablevJ_TransfBySubstation.idTransfColumn);
            }

            // Token: 0x06001EDB RID: 7899 RVA: 0x000A6D88 File Offset: 0x000A4F88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidTransfNull()
            {
                base[this.tablevJ_TransfBySubstation.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC0 RID: 3008
            private DataSetGES.vJ_TransfBySubstationDataTable tablevJ_TransfBySubstation;
        }

        // Token: 0x02000161 RID: 353
        public class vJ_PowerISR_TransfRow : DataRow
        {
            // Token: 0x06001EDC RID: 7900 RVA: 0x000A6DA0 File Offset: 0x000A4FA0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_PowerISR_TransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_PowerISR_Transf = (DataSetGES.vJ_PowerISR_TransfDataTable)base.Table;
            }

            // Token: 0x170007F0 RID: 2032
            // (get) Token: 0x06001EDD RID: 7901 RVA: 0x000A6DBA File Offset: 0x000A4FBA
            // (set) Token: 0x06001EDE RID: 7902 RVA: 0x000A6DD2 File Offset: 0x000A4FD2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_PowerISR_Transf.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_PowerISR_Transf.idTransfColumn] = value;
                }
            }

            // Token: 0x170007F1 RID: 2033
            // (get) Token: 0x06001EDF RID: 7903 RVA: 0x000A6DEC File Offset: 0x000A4FEC
            // (set) Token: 0x06001EE0 RID: 7904 RVA: 0x000A6E30 File Offset: 0x000A5030
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Power
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_PowerISR_Transf.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_PowerISR_Transf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_Transf.PowerColumn] = value;
                }
            }

            // Token: 0x170007F2 RID: 2034
            // (get) Token: 0x06001EE1 RID: 7905 RVA: 0x000A6E4C File Offset: 0x000A504C
            // (set) Token: 0x06001EE2 RID: 7906 RVA: 0x000A6E90 File Offset: 0x000A5090
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Isr
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_PowerISR_Transf.IsrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Isr' in table 'vJ_PowerISR_Transf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_Transf.IsrColumn] = value;
                }
            }

            // Token: 0x06001EE3 RID: 7907 RVA: 0x000A6EA9 File Offset: 0x000A50A9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_Transf.PowerColumn);
            }

            // Token: 0x06001EE4 RID: 7908 RVA: 0x000A6EBC File Offset: 0x000A50BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPowerNull()
            {
                base[this.tablevJ_PowerISR_Transf.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x06001EE5 RID: 7909 RVA: 0x000A6ED4 File Offset: 0x000A50D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsrNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_Transf.IsrColumn);
            }

            // Token: 0x06001EE6 RID: 7910 RVA: 0x000A6EE7 File Offset: 0x000A50E7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIsrNull()
            {
                base[this.tablevJ_PowerISR_Transf.IsrColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC1 RID: 3009
            private DataSetGES.vJ_PowerISR_TransfDataTable tablevJ_PowerISR_Transf;
        }

        // Token: 0x02000162 RID: 354
        public class vJ_PowerISR_SSTransfRow : DataRow
        {
            // Token: 0x06001EE7 RID: 7911 RVA: 0x000A6EFF File Offset: 0x000A50FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_PowerISR_SSTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_PowerISR_SSTransf = (DataSetGES.vJ_PowerISR_SSTransfDataTable)base.Table;
            }

            // Token: 0x170007F3 RID: 2035
            // (get) Token: 0x06001EE8 RID: 7912 RVA: 0x000A6F19 File Offset: 0x000A5119
            // (set) Token: 0x06001EE9 RID: 7913 RVA: 0x000A6F31 File Offset: 0x000A5131
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSub
            {
                get
                {
                    return (int)base[this.tablevJ_PowerISR_SSTransf.idSubColumn];
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSTransf.idSubColumn] = value;
                }
            }

            // Token: 0x170007F4 RID: 2036
            // (get) Token: 0x06001EEA RID: 7914 RVA: 0x000A6F4C File Offset: 0x000A514C
            // (set) Token: 0x06001EEB RID: 7915 RVA: 0x000A6F90 File Offset: 0x000A5190
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameSub
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_PowerISR_SSTransf.NameSubColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameSub' in table 'vJ_PowerISR_SSTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSTransf.NameSubColumn] = value;
                }
            }

            // Token: 0x170007F5 RID: 2037
            // (get) Token: 0x06001EEC RID: 7916 RVA: 0x000A6FA4 File Offset: 0x000A51A4
            // (set) Token: 0x06001EED RID: 7917 RVA: 0x000A6FE8 File Offset: 0x000A51E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_PowerISR_SSTransf.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_PowerISR_SSTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSTransf.idTransfColumn] = value;
                }
            }

            // Token: 0x170007F6 RID: 2038
            // (get) Token: 0x06001EEE RID: 7918 RVA: 0x000A7004 File Offset: 0x000A5204
            // (set) Token: 0x06001EEF RID: 7919 RVA: 0x000A7048 File Offset: 0x000A5248
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_PowerISR_SSTransf.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_PowerISR_SSTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSTransf.NameTransfColumn] = value;
                }
            }

            // Token: 0x170007F7 RID: 2039
            // (get) Token: 0x06001EF0 RID: 7920 RVA: 0x000A705C File Offset: 0x000A525C
            // (set) Token: 0x06001EF1 RID: 7921 RVA: 0x000A70A0 File Offset: 0x000A52A0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Power
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_PowerISR_SSTransf.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_PowerISR_SSTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSTransf.PowerColumn] = value;
                }
            }

            // Token: 0x170007F8 RID: 2040
            // (get) Token: 0x06001EF2 RID: 7922 RVA: 0x000A70BC File Offset: 0x000A52BC
            // (set) Token: 0x06001EF3 RID: 7923 RVA: 0x000A7100 File Offset: 0x000A5300
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Isr
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_PowerISR_SSTransf.IsrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Isr' in table 'vJ_PowerISR_SSTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSTransf.IsrColumn] = value;
                }
            }

            // Token: 0x06001EF4 RID: 7924 RVA: 0x000A7119 File Offset: 0x000A5319
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameSubNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSTransf.NameSubColumn);
            }

            // Token: 0x06001EF5 RID: 7925 RVA: 0x000A712C File Offset: 0x000A532C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameSubNull()
            {
                base[this.tablevJ_PowerISR_SSTransf.NameSubColumn] = Convert.DBNull;
            }

            // Token: 0x06001EF6 RID: 7926 RVA: 0x000A7144 File Offset: 0x000A5344
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSTransf.idTransfColumn);
            }

            // Token: 0x06001EF7 RID: 7927 RVA: 0x000A7157 File Offset: 0x000A5357
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidTransfNull()
            {
                base[this.tablevJ_PowerISR_SSTransf.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06001EF8 RID: 7928 RVA: 0x000A716F File Offset: 0x000A536F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSTransf.NameTransfColumn);
            }

            // Token: 0x06001EF9 RID: 7929 RVA: 0x000A7182 File Offset: 0x000A5382
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tablevJ_PowerISR_SSTransf.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06001EFA RID: 7930 RVA: 0x000A719A File Offset: 0x000A539A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSTransf.PowerColumn);
            }

            // Token: 0x06001EFB RID: 7931 RVA: 0x000A71AD File Offset: 0x000A53AD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPowerNull()
            {
                base[this.tablevJ_PowerISR_SSTransf.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x06001EFC RID: 7932 RVA: 0x000A71C5 File Offset: 0x000A53C5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIsrNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSTransf.IsrColumn);
            }

            // Token: 0x06001EFD RID: 7933 RVA: 0x000A71D8 File Offset: 0x000A53D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsrNull()
            {
                base[this.tablevJ_PowerISR_SSTransf.IsrColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC2 RID: 3010
            private DataSetGES.vJ_PowerISR_SSTransfDataTable tablevJ_PowerISR_SSTransf;
        }

        // Token: 0x02000163 RID: 355
        public class dtAmountFreeCapasityRow : DataRow
        {
            // Token: 0x06001EFE RID: 7934 RVA: 0x000A71F0 File Offset: 0x000A53F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtAmountFreeCapasityRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtAmountFreeCapasity = (DataSetGES.dtAmountFreeCapasityDataTable)base.Table;
            }

            // Token: 0x170007F9 RID: 2041
            // (get) Token: 0x06001EFF RID: 7935 RVA: 0x000A720C File Offset: 0x000A540C
            // (set) Token: 0x06001F00 RID: 7936 RVA: 0x000A7250 File Offset: 0x000A5450
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameSubstation
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtAmountFreeCapasity.NameSubstationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameSubstation' in table 'dtAmountFreeCapasity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtAmountFreeCapasity.NameSubstationColumn] = value;
                }
            }

            // Token: 0x170007FA RID: 2042
            // (get) Token: 0x06001F01 RID: 7937 RVA: 0x000A7264 File Offset: 0x000A5464
            // (set) Token: 0x06001F02 RID: 7938 RVA: 0x000A72A8 File Offset: 0x000A54A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtAmountFreeCapasity.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'dtAmountFreeCapasity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtAmountFreeCapasity.NameBusColumn] = value;
                }
            }

            // Token: 0x170007FB RID: 2043
            // (get) Token: 0x06001F03 RID: 7939 RVA: 0x000A72BC File Offset: 0x000A54BC
            // (set) Token: 0x06001F04 RID: 7940 RVA: 0x000A7300 File Offset: 0x000A5500
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string AmountFreeCapasity
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtAmountFreeCapasity.AmountFreeCapasityColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'AmountFreeCapasity' in table 'dtAmountFreeCapasity' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtAmountFreeCapasity.AmountFreeCapasityColumn] = value;
                }
            }

            // Token: 0x06001F05 RID: 7941 RVA: 0x000A7314 File Offset: 0x000A5514
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameSubstationNull()
            {
                return base.IsNull(this.tabledtAmountFreeCapasity.NameSubstationColumn);
            }

            // Token: 0x06001F06 RID: 7942 RVA: 0x000A7327 File Offset: 0x000A5527
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameSubstationNull()
            {
                base[this.tabledtAmountFreeCapasity.NameSubstationColumn] = Convert.DBNull;
            }

            // Token: 0x06001F07 RID: 7943 RVA: 0x000A733F File Offset: 0x000A553F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tabledtAmountFreeCapasity.NameBusColumn);
            }

            // Token: 0x06001F08 RID: 7944 RVA: 0x000A7352 File Offset: 0x000A5552
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tabledtAmountFreeCapasity.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001F09 RID: 7945 RVA: 0x000A736A File Offset: 0x000A556A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAmountFreeCapasityNull()
            {
                return base.IsNull(this.tabledtAmountFreeCapasity.AmountFreeCapasityColumn);
            }

            // Token: 0x06001F0A RID: 7946 RVA: 0x000A737D File Offset: 0x000A557D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetAmountFreeCapasityNull()
            {
                base[this.tabledtAmountFreeCapasity.AmountFreeCapasityColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC3 RID: 3011
            private DataSetGES.dtAmountFreeCapasityDataTable tabledtAmountFreeCapasity;
        }

        // Token: 0x02000164 RID: 356
        public class fn_J_GetCellTransfByBusHVRow : DataRow
        {
            // Token: 0x06001F0B RID: 7947 RVA: 0x000A7395 File Offset: 0x000A5595
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetCellTransfByBusHVRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_GetCellTransfByBusHV = (DataSetGES.fn_J_GetCellTransfByBusHVDataTable)base.Table;
            }

            // Token: 0x170007FC RID: 2044
            // (get) Token: 0x06001F0C RID: 7948 RVA: 0x000A73B0 File Offset: 0x000A55B0
            // (set) Token: 0x06001F0D RID: 7949 RVA: 0x000A73F4 File Offset: 0x000A55F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellTransfByBusHV.IdBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdBus' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusHV.IdBusColumn] = value;
                }
            }

            // Token: 0x170007FD RID: 2045
            // (get) Token: 0x06001F0E RID: 7950 RVA: 0x000A7410 File Offset: 0x000A5610
            // (set) Token: 0x06001F0F RID: 7951 RVA: 0x000A7454 File Offset: 0x000A5654
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellTransfByBusHV.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusHV.NameBusColumn] = value;
                }
            }

            // Token: 0x170007FE RID: 2046
            // (get) Token: 0x06001F10 RID: 7952 RVA: 0x000A7468 File Offset: 0x000A5668
            // (set) Token: 0x06001F11 RID: 7953 RVA: 0x000A74AC File Offset: 0x000A56AC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellTransfByBusHV.IdCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdCell' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusHV.IdCellColumn] = value;
                }
            }

            // Token: 0x170007FF RID: 2047
            // (get) Token: 0x06001F12 RID: 7954 RVA: 0x000A74C8 File Offset: 0x000A56C8
            // (set) Token: 0x06001F13 RID: 7955 RVA: 0x000A750C File Offset: 0x000A570C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellTransfByBusHV.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusHV.NameCellColumn] = value;
                }
            }

            // Token: 0x17000800 RID: 2048
            // (get) Token: 0x06001F14 RID: 7956 RVA: 0x000A7520 File Offset: 0x000A5720
            // (set) Token: 0x06001F15 RID: 7957 RVA: 0x000A7564 File Offset: 0x000A5764
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetCellTransfByBusHV.IdTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdTransf' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusHV.IdTransfColumn] = value;
                }
            }

            // Token: 0x17000801 RID: 2049
            // (get) Token: 0x06001F16 RID: 7958 RVA: 0x000A7580 File Offset: 0x000A5780
            // (set) Token: 0x06001F17 RID: 7959 RVA: 0x000A75C4 File Offset: 0x000A57C4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetCellTransfByBusHV.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'fn_J_GetCellTransfByBusHV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetCellTransfByBusHV.NameTransfColumn] = value;
                }
            }

            // Token: 0x06001F18 RID: 7960 RVA: 0x000A75D8 File Offset: 0x000A57D8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdBusNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusHV.IdBusColumn);
            }

            // Token: 0x06001F19 RID: 7961 RVA: 0x000A75EB File Offset: 0x000A57EB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdBusNull()
            {
                base[this.tablefn_J_GetCellTransfByBusHV.IdBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001F1A RID: 7962 RVA: 0x000A7603 File Offset: 0x000A5803
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusHV.NameBusColumn);
            }

            // Token: 0x06001F1B RID: 7963 RVA: 0x000A7616 File Offset: 0x000A5816
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tablefn_J_GetCellTransfByBusHV.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001F1C RID: 7964 RVA: 0x000A762E File Offset: 0x000A582E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdCellNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusHV.IdCellColumn);
            }

            // Token: 0x06001F1D RID: 7965 RVA: 0x000A7641 File Offset: 0x000A5841
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdCellNull()
            {
                base[this.tablefn_J_GetCellTransfByBusHV.IdCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001F1E RID: 7966 RVA: 0x000A7659 File Offset: 0x000A5859
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusHV.NameCellColumn);
            }

            // Token: 0x06001F1F RID: 7967 RVA: 0x000A766C File Offset: 0x000A586C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameCellNull()
            {
                base[this.tablefn_J_GetCellTransfByBusHV.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001F20 RID: 7968 RVA: 0x000A7684 File Offset: 0x000A5884
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdTransfNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusHV.IdTransfColumn);
            }

            // Token: 0x06001F21 RID: 7969 RVA: 0x000A7697 File Offset: 0x000A5897
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdTransfNull()
            {
                base[this.tablefn_J_GetCellTransfByBusHV.IdTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06001F22 RID: 7970 RVA: 0x000A76AF File Offset: 0x000A58AF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablefn_J_GetCellTransfByBusHV.NameTransfColumn);
            }

            // Token: 0x06001F23 RID: 7971 RVA: 0x000A76C2 File Offset: 0x000A58C2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tablefn_J_GetCellTransfByBusHV.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC4 RID: 3012
            private DataSetGES.fn_J_GetCellTransfByBusHVDataTable tablefn_J_GetCellTransfByBusHV;
        }

        // Token: 0x02000165 RID: 357
        public class tJ_MeasCableRow : DataRow
        {
            // Token: 0x06001F24 RID: 7972 RVA: 0x000A76DA File Offset: 0x000A58DA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_MeasCableRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_MeasCable = (DataSetGES.tJ_MeasCableDataTable)base.Table;
            }

            // Token: 0x17000802 RID: 2050
            // (get) Token: 0x06001F25 RID: 7973 RVA: 0x000A76F4 File Offset: 0x000A58F4
            // (set) Token: 0x06001F26 RID: 7974 RVA: 0x000A770C File Offset: 0x000A590C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_MeasCable.idColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCable.idColumn] = value;
                }
            }

            // Token: 0x17000803 RID: 2051
            // (get) Token: 0x06001F27 RID: 7975 RVA: 0x000A7725 File Offset: 0x000A5925
            // (set) Token: 0x06001F28 RID: 7976 RVA: 0x000A773D File Offset: 0x000A593D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tabletJ_MeasCable.idMeasurementColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCable.idMeasurementColumn] = value;
                }
            }

            // Token: 0x17000804 RID: 2052
            // (get) Token: 0x06001F29 RID: 7977 RVA: 0x000A7758 File Offset: 0x000A5958
            // (set) Token: 0x06001F2A RID: 7978 RVA: 0x000A779C File Offset: 0x000A599C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.idBusColumn] = value;
                }
            }

            // Token: 0x17000805 RID: 2053
            // (get) Token: 0x06001F2B RID: 7979 RVA: 0x000A77B5 File Offset: 0x000A59B5
            // (set) Token: 0x06001F2C RID: 7980 RVA: 0x000A77CD File Offset: 0x000A59CD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tabletJ_MeasCable.idTransfColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCable.idTransfColumn] = value;
                }
            }

            // Token: 0x17000806 RID: 2054
            // (get) Token: 0x06001F2D RID: 7981 RVA: 0x000A77E8 File Offset: 0x000A59E8
            // (set) Token: 0x06001F2E RID: 7982 RVA: 0x000A782C File Offset: 0x000A5A2C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.idCellColumn] = value;
                }
            }

            // Token: 0x17000807 RID: 2055
            // (get) Token: 0x06001F2F RID: 7983 RVA: 0x000A7848 File Offset: 0x000A5A48
            // (set) Token: 0x06001F30 RID: 7984 RVA: 0x000A788C File Offset: 0x000A5A8C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_MeasCable.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.NameCellColumn] = value;
                }
            }

            // Token: 0x17000808 RID: 2056
            // (get) Token: 0x06001F31 RID: 7985 RVA: 0x000A78A0 File Offset: 0x000A5AA0
            // (set) Token: 0x06001F32 RID: 7986 RVA: 0x000A78E4 File Offset: 0x000A5AE4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short OldCell
            {
                get
                {
                    short result;
                    try
                    {
                        result = (short)base[this.tabletJ_MeasCable.OldCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'OldCell' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.OldCellColumn] = value;
                }
            }

            // Token: 0x17000809 RID: 2057
            // (get) Token: 0x06001F33 RID: 7987 RVA: 0x000A7900 File Offset: 0x000A5B00
            // (set) Token: 0x06001F34 RID: 7988 RVA: 0x000A7944 File Offset: 0x000A5B44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.idCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.idCableColumn] = value;
                }
            }

            // Token: 0x1700080A RID: 2058
            // (get) Token: 0x06001F35 RID: 7989 RVA: 0x000A7960 File Offset: 0x000A5B60
            // (set) Token: 0x06001F36 RID: 7990 RVA: 0x000A79A4 File Offset: 0x000A5BA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCable
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_MeasCable.NameCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCable' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.NameCableColumn] = value;
                }
            }

            // Token: 0x1700080B RID: 2059
            // (get) Token: 0x06001F37 RID: 7991 RVA: 0x000A79B8 File Offset: 0x000A5BB8
            // (set) Token: 0x06001F38 RID: 7992 RVA: 0x000A79FC File Offset: 0x000A5BFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_MeasCable.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.AddressColumn] = value;
                }
            }

            // Token: 0x1700080C RID: 2060
            // (get) Token: 0x06001F39 RID: 7993 RVA: 0x000A7A10 File Offset: 0x000A5C10
            // (set) Token: 0x06001F3A RID: 7994 RVA: 0x000A7A54 File Offset: 0x000A5C54
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Company
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_MeasCable.CompanyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.CompanyColumn] = value;
                }
            }

            // Token: 0x1700080D RID: 2061
            // (get) Token: 0x06001F3B RID: 7995 RVA: 0x000A7A68 File Offset: 0x000A5C68
            // (set) Token: 0x06001F3C RID: 7996 RVA: 0x000A7AAC File Offset: 0x000A5CAC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSchmAbn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.idSchmAbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idSchmAbn' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.idSchmAbnColumn] = value;
                }
            }

            // Token: 0x1700080E RID: 2062
            // (get) Token: 0x06001F3D RID: 7997 RVA: 0x000A7AC8 File Offset: 0x000A5CC8
            // (set) Token: 0x06001F3E RID: 7998 RVA: 0x000A7B0C File Offset: 0x000A5D0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Makeup
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_MeasCable.MakeupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.MakeupColumn] = value;
                }
            }

            // Token: 0x1700080F RID: 2063
            // (get) Token: 0x06001F3F RID: 7999 RVA: 0x000A7B20 File Offset: 0x000A5D20
            // (set) Token: 0x06001F40 RID: 8000 RVA: 0x000A7B64 File Offset: 0x000A5D64
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Voltage
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.VoltageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.VoltageColumn] = value;
                }
            }

            // Token: 0x17000810 RID: 2064
            // (get) Token: 0x06001F41 RID: 8001 RVA: 0x000A7B80 File Offset: 0x000A5D80
            // (set) Token: 0x06001F42 RID: 8002 RVA: 0x000A7BC4 File Offset: 0x000A5DC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Wires
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.WiresColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.WiresColumn] = value;
                }
            }

            // Token: 0x17000811 RID: 2065
            // (get) Token: 0x06001F43 RID: 8003 RVA: 0x000A7BE0 File Offset: 0x000A5DE0
            // (set) Token: 0x06001F44 RID: 8004 RVA: 0x000A7C24 File Offset: 0x000A5E24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_MeasCable.CrossSectionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.CrossSectionColumn] = value;
                }
            }

            // Token: 0x17000812 RID: 2066
            // (get) Token: 0x06001F45 RID: 8005 RVA: 0x000A7C40 File Offset: 0x000A5E40
            // (set) Token: 0x06001F46 RID: 8006 RVA: 0x000A7C84 File Offset: 0x000A5E84
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PermisAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_MeasCable.PermisAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.PermisAmperageColumn] = value;
                }
            }

            // Token: 0x17000813 RID: 2067
            // (get) Token: 0x06001F47 RID: 8007 RVA: 0x000A7CA0 File Offset: 0x000A5EA0
            // (set) Token: 0x06001F48 RID: 8008 RVA: 0x000A7CE4 File Offset: 0x000A5EE4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Iad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IadColumn] = value;
                }
            }

            // Token: 0x17000814 RID: 2068
            // (get) Token: 0x06001F49 RID: 8009 RVA: 0x000A7D00 File Offset: 0x000A5F00
            // (set) Token: 0x06001F4A RID: 8010 RVA: 0x000A7D44 File Offset: 0x000A5F44
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ian
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IanColumn] = value;
                }
            }

            // Token: 0x17000815 RID: 2069
            // (get) Token: 0x06001F4B RID: 8011 RVA: 0x000A7D60 File Offset: 0x000A5F60
            // (set) Token: 0x06001F4C RID: 8012 RVA: 0x000A7DA4 File Offset: 0x000A5FA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IbdColumn] = value;
                }
            }

            // Token: 0x17000816 RID: 2070
            // (get) Token: 0x06001F4D RID: 8013 RVA: 0x000A7DC0 File Offset: 0x000A5FC0
            // (set) Token: 0x06001F4E RID: 8014 RVA: 0x000A7E04 File Offset: 0x000A6004
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IbnColumn] = value;
                }
            }

            // Token: 0x17000817 RID: 2071
            // (get) Token: 0x06001F4F RID: 8015 RVA: 0x000A7E20 File Offset: 0x000A6020
            // (set) Token: 0x06001F50 RID: 8016 RVA: 0x000A7E64 File Offset: 0x000A6064
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IcdColumn] = value;
                }
            }

            // Token: 0x17000818 RID: 2072
            // (get) Token: 0x06001F51 RID: 8017 RVA: 0x000A7E80 File Offset: 0x000A6080
            // (set) Token: 0x06001F52 RID: 8018 RVA: 0x000A7EC4 File Offset: 0x000A60C4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Icn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IcnColumn] = value;
                }
            }

            // Token: 0x17000819 RID: 2073
            // (get) Token: 0x06001F53 RID: 8019 RVA: 0x000A7EE0 File Offset: 0x000A60E0
            // (set) Token: 0x06001F54 RID: 8020 RVA: 0x000A7F24 File Offset: 0x000A6124
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Iod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iod' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IodColumn] = value;
                }
            }

            // Token: 0x1700081A RID: 2074
            // (get) Token: 0x06001F55 RID: 8021 RVA: 0x000A7F40 File Offset: 0x000A6140
            // (set) Token: 0x06001F56 RID: 8022 RVA: 0x000A7F84 File Offset: 0x000A6184
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.IonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ion' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.IonColumn] = value;
                }
            }

            // Token: 0x1700081B RID: 2075
            // (get) Token: 0x06001F57 RID: 8023 RVA: 0x000A7FA0 File Offset: 0x000A61A0
            // (set) Token: 0x06001F58 RID: 8024 RVA: 0x000A7FE4 File Offset: 0x000A61E4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_MeasCable.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.CommentColumn] = value;
                }
            }

            // Token: 0x1700081C RID: 2076
            // (get) Token: 0x06001F59 RID: 8025 RVA: 0x000A7FF8 File Offset: 0x000A61F8
            // (set) Token: 0x06001F5A RID: 8026 RVA: 0x000A803C File Offset: 0x000A623C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idOldMeasurementCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCable.idOldMeasurementCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idOldMeasurementCable' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.idOldMeasurementCableColumn] = value;
                }
            }

            // Token: 0x1700081D RID: 2077
            // (get) Token: 0x06001F5B RID: 8027 RVA: 0x000A8058 File Offset: 0x000A6258
            // (set) Token: 0x06001F5C RID: 8028 RVA: 0x000A809C File Offset: 0x000A629C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_MeasCable.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_MeasCable' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCable.DeletedColumn] = value;
                }
            }

            // Token: 0x06001F5D RID: 8029 RVA: 0x000A80B5 File Offset: 0x000A62B5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.idBusColumn);
            }

            // Token: 0x06001F5E RID: 8030 RVA: 0x000A80C8 File Offset: 0x000A62C8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidBusNull()
            {
                base[this.tabletJ_MeasCable.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001F5F RID: 8031 RVA: 0x000A80E0 File Offset: 0x000A62E0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.idCellColumn);
            }

            // Token: 0x06001F60 RID: 8032 RVA: 0x000A80F3 File Offset: 0x000A62F3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidCellNull()
            {
                base[this.tabletJ_MeasCable.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001F61 RID: 8033 RVA: 0x000A810B File Offset: 0x000A630B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.NameCellColumn);
            }

            // Token: 0x06001F62 RID: 8034 RVA: 0x000A811E File Offset: 0x000A631E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameCellNull()
            {
                base[this.tabletJ_MeasCable.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001F63 RID: 8035 RVA: 0x000A8136 File Offset: 0x000A6336
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOldCellNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.OldCellColumn);
            }

            // Token: 0x06001F64 RID: 8036 RVA: 0x000A8149 File Offset: 0x000A6349
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetOldCellNull()
            {
                base[this.tabletJ_MeasCable.OldCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001F65 RID: 8037 RVA: 0x000A8161 File Offset: 0x000A6361
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidCableNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.idCableColumn);
            }

            // Token: 0x06001F66 RID: 8038 RVA: 0x000A8174 File Offset: 0x000A6374
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidCableNull()
            {
                base[this.tabletJ_MeasCable.idCableColumn] = Convert.DBNull;
            }

            // Token: 0x06001F67 RID: 8039 RVA: 0x000A818C File Offset: 0x000A638C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameCableNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.NameCableColumn);
            }

            // Token: 0x06001F68 RID: 8040 RVA: 0x000A819F File Offset: 0x000A639F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameCableNull()
            {
                base[this.tabletJ_MeasCable.NameCableColumn] = Convert.DBNull;
            }

            // Token: 0x06001F69 RID: 8041 RVA: 0x000A81B7 File Offset: 0x000A63B7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.AddressColumn);
            }

            // Token: 0x06001F6A RID: 8042 RVA: 0x000A81CA File Offset: 0x000A63CA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull()
            {
                base[this.tabletJ_MeasCable.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x06001F6B RID: 8043 RVA: 0x000A81E2 File Offset: 0x000A63E2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCompanyNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.CompanyColumn);
            }

            // Token: 0x06001F6C RID: 8044 RVA: 0x000A81F5 File Offset: 0x000A63F5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyNull()
            {
                base[this.tabletJ_MeasCable.CompanyColumn] = Convert.DBNull;
            }

            // Token: 0x06001F6D RID: 8045 RVA: 0x000A820D File Offset: 0x000A640D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidSchmAbnNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.idSchmAbnColumn);
            }

            // Token: 0x06001F6E RID: 8046 RVA: 0x000A8220 File Offset: 0x000A6420
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidSchmAbnNull()
            {
                base[this.tabletJ_MeasCable.idSchmAbnColumn] = Convert.DBNull;
            }

            // Token: 0x06001F6F RID: 8047 RVA: 0x000A8238 File Offset: 0x000A6438
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsMakeupNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.MakeupColumn);
            }

            // Token: 0x06001F70 RID: 8048 RVA: 0x000A824B File Offset: 0x000A644B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetMakeupNull()
            {
                base[this.tabletJ_MeasCable.MakeupColumn] = Convert.DBNull;
            }

            // Token: 0x06001F71 RID: 8049 RVA: 0x000A8263 File Offset: 0x000A6463
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltageNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.VoltageColumn);
            }

            // Token: 0x06001F72 RID: 8050 RVA: 0x000A8276 File Offset: 0x000A6476
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetVoltageNull()
            {
                base[this.tabletJ_MeasCable.VoltageColumn] = Convert.DBNull;
            }

            // Token: 0x06001F73 RID: 8051 RVA: 0x000A828E File Offset: 0x000A648E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsWiresNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.WiresColumn);
            }

            // Token: 0x06001F74 RID: 8052 RVA: 0x000A82A1 File Offset: 0x000A64A1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWiresNull()
            {
                base[this.tabletJ_MeasCable.WiresColumn] = Convert.DBNull;
            }

            // Token: 0x06001F75 RID: 8053 RVA: 0x000A82B9 File Offset: 0x000A64B9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCrossSectionNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.CrossSectionColumn);
            }

            // Token: 0x06001F76 RID: 8054 RVA: 0x000A82CC File Offset: 0x000A64CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCrossSectionNull()
            {
                base[this.tabletJ_MeasCable.CrossSectionColumn] = Convert.DBNull;
            }

            // Token: 0x06001F77 RID: 8055 RVA: 0x000A82E4 File Offset: 0x000A64E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPermisAmperageNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.PermisAmperageColumn);
            }

            // Token: 0x06001F78 RID: 8056 RVA: 0x000A82F7 File Offset: 0x000A64F7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPermisAmperageNull()
            {
                base[this.tabletJ_MeasCable.PermisAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x06001F79 RID: 8057 RVA: 0x000A830F File Offset: 0x000A650F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIadNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IadColumn);
            }

            // Token: 0x06001F7A RID: 8058 RVA: 0x000A8322 File Offset: 0x000A6522
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIadNull()
            {
                base[this.tabletJ_MeasCable.IadColumn] = Convert.DBNull;
            }

            // Token: 0x06001F7B RID: 8059 RVA: 0x000A833A File Offset: 0x000A653A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIanNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IanColumn);
            }

            // Token: 0x06001F7C RID: 8060 RVA: 0x000A834D File Offset: 0x000A654D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIanNull()
            {
                base[this.tabletJ_MeasCable.IanColumn] = Convert.DBNull;
            }

            // Token: 0x06001F7D RID: 8061 RVA: 0x000A8365 File Offset: 0x000A6565
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbdNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IbdColumn);
            }

            // Token: 0x06001F7E RID: 8062 RVA: 0x000A8378 File Offset: 0x000A6578
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbdNull()
            {
                base[this.tabletJ_MeasCable.IbdColumn] = Convert.DBNull;
            }

            // Token: 0x06001F7F RID: 8063 RVA: 0x000A8390 File Offset: 0x000A6590
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbnNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IbnColumn);
            }

            // Token: 0x06001F80 RID: 8064 RVA: 0x000A83A3 File Offset: 0x000A65A3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbnNull()
            {
                base[this.tabletJ_MeasCable.IbnColumn] = Convert.DBNull;
            }

            // Token: 0x06001F81 RID: 8065 RVA: 0x000A83BB File Offset: 0x000A65BB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcdNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IcdColumn);
            }

            // Token: 0x06001F82 RID: 8066 RVA: 0x000A83CE File Offset: 0x000A65CE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcdNull()
            {
                base[this.tabletJ_MeasCable.IcdColumn] = Convert.DBNull;
            }

            // Token: 0x06001F83 RID: 8067 RVA: 0x000A83E6 File Offset: 0x000A65E6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcnNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IcnColumn);
            }

            // Token: 0x06001F84 RID: 8068 RVA: 0x000A83F9 File Offset: 0x000A65F9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcnNull()
            {
                base[this.tabletJ_MeasCable.IcnColumn] = Convert.DBNull;
            }

            // Token: 0x06001F85 RID: 8069 RVA: 0x000A8411 File Offset: 0x000A6611
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIodNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IodColumn);
            }

            // Token: 0x06001F86 RID: 8070 RVA: 0x000A8424 File Offset: 0x000A6624
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIodNull()
            {
                base[this.tabletJ_MeasCable.IodColumn] = Convert.DBNull;
            }

            // Token: 0x06001F87 RID: 8071 RVA: 0x000A843C File Offset: 0x000A663C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIonNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.IonColumn);
            }

            // Token: 0x06001F88 RID: 8072 RVA: 0x000A844F File Offset: 0x000A664F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIonNull()
            {
                base[this.tabletJ_MeasCable.IonColumn] = Convert.DBNull;
            }

            // Token: 0x06001F89 RID: 8073 RVA: 0x000A8467 File Offset: 0x000A6667
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.CommentColumn);
            }

            // Token: 0x06001F8A RID: 8074 RVA: 0x000A847A File Offset: 0x000A667A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull()
            {
                base[this.tabletJ_MeasCable.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x06001F8B RID: 8075 RVA: 0x000A8492 File Offset: 0x000A6692
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidOldMeasurementCableNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.idOldMeasurementCableColumn);
            }

            // Token: 0x06001F8C RID: 8076 RVA: 0x000A84A5 File Offset: 0x000A66A5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidOldMeasurementCableNull()
            {
                base[this.tabletJ_MeasCable.idOldMeasurementCableColumn] = Convert.DBNull;
            }

            // Token: 0x06001F8D RID: 8077 RVA: 0x000A84BD File Offset: 0x000A66BD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tabletJ_MeasCable.DeletedColumn);
            }

            // Token: 0x06001F8E RID: 8078 RVA: 0x000A84D0 File Offset: 0x000A66D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDeletedNull()
            {
                base[this.tabletJ_MeasCable.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC5 RID: 3013
            private DataSetGES.tJ_MeasCableDataTable tabletJ_MeasCable;
        }

        // Token: 0x02000166 RID: 358
        public class vJ_LastCableInfoRow : DataRow
        {
            // Token: 0x06001F8F RID: 8079 RVA: 0x000A84E8 File Offset: 0x000A66E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_LastCableInfoRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_LastCableInfo = (DataSetGES.vJ_LastCableInfoDataTable)base.Table;
            }

            // Token: 0x1700081E RID: 2078
            // (get) Token: 0x06001F90 RID: 8080 RVA: 0x000A8504 File Offset: 0x000A6704
            // (set) Token: 0x06001F91 RID: 8081 RVA: 0x000A8548 File Offset: 0x000A6748
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Year
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_LastCableInfo.YearColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Year' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.YearColumn] = value;
                }
            }

            // Token: 0x1700081F RID: 2079
            // (get) Token: 0x06001F92 RID: 8082 RVA: 0x000A8564 File Offset: 0x000A6764
            // (set) Token: 0x06001F93 RID: 8083 RVA: 0x000A85A8 File Offset: 0x000A67A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSubstation
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_LastCableInfo.idSubstationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idSubstation' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.idSubstationColumn] = value;
                }
            }

            // Token: 0x17000820 RID: 2080
            // (get) Token: 0x06001F94 RID: 8084 RVA: 0x000A85C1 File Offset: 0x000A67C1
            // (set) Token: 0x06001F95 RID: 8085 RVA: 0x000A85D9 File Offset: 0x000A67D9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_LastCableInfo.idMeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.idMeasurementColumn] = value;
                }
            }

            // Token: 0x17000821 RID: 2081
            // (get) Token: 0x06001F96 RID: 8086 RVA: 0x000A85F4 File Offset: 0x000A67F4
            // (set) Token: 0x06001F97 RID: 8087 RVA: 0x000A8638 File Offset: 0x000A6838
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_LastCableInfo.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.idCellColumn] = value;
                }
            }

            // Token: 0x17000822 RID: 2082
            // (get) Token: 0x06001F98 RID: 8088 RVA: 0x000A8654 File Offset: 0x000A6854
            // (set) Token: 0x06001F99 RID: 8089 RVA: 0x000A8698 File Offset: 0x000A6898
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_LastCableInfo.idCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.idCableColumn] = value;
                }
            }

            // Token: 0x17000823 RID: 2083
            // (get) Token: 0x06001F9A RID: 8090 RVA: 0x000A86B4 File Offset: 0x000A68B4
            // (set) Token: 0x06001F9B RID: 8091 RVA: 0x000A86F8 File Offset: 0x000A68F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_LastCableInfo.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.AddressColumn] = value;
                }
            }

            // Token: 0x17000824 RID: 2084
            // (get) Token: 0x06001F9C RID: 8092 RVA: 0x000A870C File Offset: 0x000A690C
            // (set) Token: 0x06001F9D RID: 8093 RVA: 0x000A8750 File Offset: 0x000A6950
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Company
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_LastCableInfo.CompanyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.CompanyColumn] = value;
                }
            }

            // Token: 0x17000825 RID: 2085
            // (get) Token: 0x06001F9E RID: 8094 RVA: 0x000A8764 File Offset: 0x000A6964
            // (set) Token: 0x06001F9F RID: 8095 RVA: 0x000A87A8 File Offset: 0x000A69A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Makeup
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_LastCableInfo.MakeupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.MakeupColumn] = value;
                }
            }

            // Token: 0x17000826 RID: 2086
            // (get) Token: 0x06001FA0 RID: 8096 RVA: 0x000A87BC File Offset: 0x000A69BC
            // (set) Token: 0x06001FA1 RID: 8097 RVA: 0x000A8800 File Offset: 0x000A6A00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Voltage
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_LastCableInfo.VoltageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.VoltageColumn] = value;
                }
            }

            // Token: 0x17000827 RID: 2087
            // (get) Token: 0x06001FA2 RID: 8098 RVA: 0x000A881C File Offset: 0x000A6A1C
            // (set) Token: 0x06001FA3 RID: 8099 RVA: 0x000A8860 File Offset: 0x000A6A60
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Wires
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_LastCableInfo.WiresColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.WiresColumn] = value;
                }
            }

            // Token: 0x17000828 RID: 2088
            // (get) Token: 0x06001FA4 RID: 8100 RVA: 0x000A887C File Offset: 0x000A6A7C
            // (set) Token: 0x06001FA5 RID: 8101 RVA: 0x000A88C0 File Offset: 0x000A6AC0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CrossSection
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_LastCableInfo.CrossSectionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.CrossSectionColumn] = value;
                }
            }

            // Token: 0x17000829 RID: 2089
            // (get) Token: 0x06001FA6 RID: 8102 RVA: 0x000A88DC File Offset: 0x000A6ADC
            // (set) Token: 0x06001FA7 RID: 8103 RVA: 0x000A8920 File Offset: 0x000A6B20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_LastCableInfo.PermisAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_LastCableInfo' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_LastCableInfo.PermisAmperageColumn] = value;
                }
            }

            // Token: 0x06001FA8 RID: 8104 RVA: 0x000A8939 File Offset: 0x000A6B39
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsYearNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.YearColumn);
            }

            // Token: 0x06001FA9 RID: 8105 RVA: 0x000A894C File Offset: 0x000A6B4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNull()
            {
                base[this.tablevJ_LastCableInfo.YearColumn] = Convert.DBNull;
            }

            // Token: 0x06001FAA RID: 8106 RVA: 0x000A8964 File Offset: 0x000A6B64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidSubstationNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.idSubstationColumn);
            }

            // Token: 0x06001FAB RID: 8107 RVA: 0x000A8977 File Offset: 0x000A6B77
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidSubstationNull()
            {
                base[this.tablevJ_LastCableInfo.idSubstationColumn] = Convert.DBNull;
            }

            // Token: 0x06001FAC RID: 8108 RVA: 0x000A898F File Offset: 0x000A6B8F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.idCellColumn);
            }

            // Token: 0x06001FAD RID: 8109 RVA: 0x000A89A2 File Offset: 0x000A6BA2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidCellNull()
            {
                base[this.tablevJ_LastCableInfo.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001FAE RID: 8110 RVA: 0x000A89BA File Offset: 0x000A6BBA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidCableNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.idCableColumn);
            }

            // Token: 0x06001FAF RID: 8111 RVA: 0x000A89CD File Offset: 0x000A6BCD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidCableNull()
            {
                base[this.tablevJ_LastCableInfo.idCableColumn] = Convert.DBNull;
            }

            // Token: 0x06001FB0 RID: 8112 RVA: 0x000A89E5 File Offset: 0x000A6BE5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.AddressColumn);
            }

            // Token: 0x06001FB1 RID: 8113 RVA: 0x000A89F8 File Offset: 0x000A6BF8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull()
            {
                base[this.tablevJ_LastCableInfo.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x06001FB2 RID: 8114 RVA: 0x000A8A10 File Offset: 0x000A6C10
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.CompanyColumn);
            }

            // Token: 0x06001FB3 RID: 8115 RVA: 0x000A8A23 File Offset: 0x000A6C23
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCompanyNull()
            {
                base[this.tablevJ_LastCableInfo.CompanyColumn] = Convert.DBNull;
            }

            // Token: 0x06001FB4 RID: 8116 RVA: 0x000A8A3B File Offset: 0x000A6C3B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMakeupNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.MakeupColumn);
            }

            // Token: 0x06001FB5 RID: 8117 RVA: 0x000A8A4E File Offset: 0x000A6C4E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetMakeupNull()
            {
                base[this.tablevJ_LastCableInfo.MakeupColumn] = Convert.DBNull;
            }

            // Token: 0x06001FB6 RID: 8118 RVA: 0x000A8A66 File Offset: 0x000A6C66
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltageNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.VoltageColumn);
            }

            // Token: 0x06001FB7 RID: 8119 RVA: 0x000A8A79 File Offset: 0x000A6C79
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetVoltageNull()
            {
                base[this.tablevJ_LastCableInfo.VoltageColumn] = Convert.DBNull;
            }

            // Token: 0x06001FB8 RID: 8120 RVA: 0x000A8A91 File Offset: 0x000A6C91
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsWiresNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.WiresColumn);
            }

            // Token: 0x06001FB9 RID: 8121 RVA: 0x000A8AA4 File Offset: 0x000A6CA4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetWiresNull()
            {
                base[this.tablevJ_LastCableInfo.WiresColumn] = Convert.DBNull;
            }

            // Token: 0x06001FBA RID: 8122 RVA: 0x000A8ABC File Offset: 0x000A6CBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCrossSectionNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.CrossSectionColumn);
            }

            // Token: 0x06001FBB RID: 8123 RVA: 0x000A8ACF File Offset: 0x000A6CCF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCrossSectionNull()
            {
                base[this.tablevJ_LastCableInfo.CrossSectionColumn] = Convert.DBNull;
            }

            // Token: 0x06001FBC RID: 8124 RVA: 0x000A8AE7 File Offset: 0x000A6CE7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPermisAmperageNull()
            {
                return base.IsNull(this.tablevJ_LastCableInfo.PermisAmperageColumn);
            }

            // Token: 0x06001FBD RID: 8125 RVA: 0x000A8AFA File Offset: 0x000A6CFA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPermisAmperageNull()
            {
                base[this.tablevJ_LastCableInfo.PermisAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC6 RID: 3014
            private DataSetGES.vJ_LastCableInfoDataTable tablevJ_LastCableInfo;
        }

        // Token: 0x02000167 RID: 359
        public class vJ_TransfByCellRow : DataRow
        {
            // Token: 0x06001FBE RID: 8126 RVA: 0x000A8B12 File Offset: 0x000A6D12
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_TransfByCellRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_TransfByCell = (DataSetGES.vJ_TransfByCellDataTable)base.Table;
            }

            // Token: 0x1700082A RID: 2090
            // (get) Token: 0x06001FBF RID: 8127 RVA: 0x000A8B2C File Offset: 0x000A6D2C
            // (set) Token: 0x06001FC0 RID: 8128 RVA: 0x000A8B70 File Offset: 0x000A6D70
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_TransfByCell.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_TransfByCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfByCell.idCellColumn] = value;
                }
            }

            // Token: 0x1700082B RID: 2091
            // (get) Token: 0x06001FC1 RID: 8129 RVA: 0x000A8B89 File Offset: 0x000A6D89
            // (set) Token: 0x06001FC2 RID: 8130 RVA: 0x000A8BA1 File Offset: 0x000A6DA1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_TransfByCell.idColumn];
                }
                set
                {
                    base[this.tablevJ_TransfByCell.idColumn] = value;
                }
            }

            // Token: 0x1700082C RID: 2092
            // (get) Token: 0x06001FC3 RID: 8131 RVA: 0x000A8BBC File Offset: 0x000A6DBC
            // (set) Token: 0x06001FC4 RID: 8132 RVA: 0x000A8C00 File Offset: 0x000A6E00
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_TransfByCell.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_TransfByCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfByCell.NameColumn] = value;
                }
            }

            // Token: 0x1700082D RID: 2093
            // (get) Token: 0x06001FC5 RID: 8133 RVA: 0x000A8C14 File Offset: 0x000A6E14
            // (set) Token: 0x06001FC6 RID: 8134 RVA: 0x000A8C58 File Offset: 0x000A6E58
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idParentAddl
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_TransfByCell.idParentAddlColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'vJ_TransfByCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_TransfByCell.idParentAddlColumn] = value;
                }
            }

            // Token: 0x06001FC7 RID: 8135 RVA: 0x000A8C71 File Offset: 0x000A6E71
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tablevJ_TransfByCell.idCellColumn);
            }

            // Token: 0x06001FC8 RID: 8136 RVA: 0x000A8C84 File Offset: 0x000A6E84
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidCellNull()
            {
                base[this.tablevJ_TransfByCell.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001FC9 RID: 8137 RVA: 0x000A8C9C File Offset: 0x000A6E9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevJ_TransfByCell.NameColumn);
            }

            // Token: 0x06001FCA RID: 8138 RVA: 0x000A8CAF File Offset: 0x000A6EAF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablevJ_TransfByCell.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001FCB RID: 8139 RVA: 0x000A8CC7 File Offset: 0x000A6EC7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidParentAddlNull()
            {
                return base.IsNull(this.tablevJ_TransfByCell.idParentAddlColumn);
            }

            // Token: 0x06001FCC RID: 8140 RVA: 0x000A8CDA File Offset: 0x000A6EDA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidParentAddlNull()
            {
                base[this.tablevJ_TransfByCell.idParentAddlColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC7 RID: 3015
            private DataSetGES.vJ_TransfByCellDataTable tablevJ_TransfByCell;
        }

        // Token: 0x02000168 RID: 360
        public class vJ_CableByCellRow : DataRow
        {
            // Token: 0x06001FCD RID: 8141 RVA: 0x000A8CF2 File Offset: 0x000A6EF2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableByCellRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_CableByCell = (DataSetGES.vJ_CableByCellDataTable)base.Table;
            }

            // Token: 0x1700082E RID: 2094
            // (get) Token: 0x06001FCE RID: 8142 RVA: 0x000A8D0C File Offset: 0x000A6F0C
            // (set) Token: 0x06001FCF RID: 8143 RVA: 0x000A8D50 File Offset: 0x000A6F50
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableByCell.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_CableByCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCell.idCellColumn] = value;
                }
            }

            // Token: 0x1700082F RID: 2095
            // (get) Token: 0x06001FD0 RID: 8144 RVA: 0x000A8D69 File Offset: 0x000A6F69
            // (set) Token: 0x06001FD1 RID: 8145 RVA: 0x000A8D81 File Offset: 0x000A6F81
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_CableByCell.idColumn];
                }
                set
                {
                    base[this.tablevJ_CableByCell.idColumn] = value;
                }
            }

            // Token: 0x17000830 RID: 2096
            // (get) Token: 0x06001FD2 RID: 8146 RVA: 0x000A8D9C File Offset: 0x000A6F9C
            // (set) Token: 0x06001FD3 RID: 8147 RVA: 0x000A8DE0 File Offset: 0x000A6FE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CableByCell.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_CableByCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCell.NameColumn] = value;
                }
            }

            // Token: 0x06001FD4 RID: 8148 RVA: 0x000A8DF4 File Offset: 0x000A6FF4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tablevJ_CableByCell.idCellColumn);
            }

            // Token: 0x06001FD5 RID: 8149 RVA: 0x000A8E07 File Offset: 0x000A7007
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidCellNull()
            {
                base[this.tablevJ_CableByCell.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x06001FD6 RID: 8150 RVA: 0x000A8E1F File Offset: 0x000A701F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevJ_CableByCell.NameColumn);
            }

            // Token: 0x06001FD7 RID: 8151 RVA: 0x000A8E32 File Offset: 0x000A7032
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tablevJ_CableByCell.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC8 RID: 3016
            private DataSetGES.vJ_CableByCellDataTable tablevJ_CableByCell;
        }

        // Token: 0x02000169 RID: 361
        public class fn_J_GetBusMVByTransfRow : DataRow
        {
            // Token: 0x06001FD8 RID: 8152 RVA: 0x000A8E4A File Offset: 0x000A704A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal fn_J_GetBusMVByTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_GetBusMVByTransf = (DataSetGES.fn_J_GetBusMVByTransfDataTable)base.Table;
            }

            // Token: 0x17000831 RID: 2097
            // (get) Token: 0x06001FD9 RID: 8153 RVA: 0x000A8E64 File Offset: 0x000A7064
            // (set) Token: 0x06001FDA RID: 8154 RVA: 0x000A8EA8 File Offset: 0x000A70A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetBusMVByTransf.IdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetBusMVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetBusMVByTransf.IdColumn] = value;
                }
            }

            // Token: 0x17000832 RID: 2098
            // (get) Token: 0x06001FDB RID: 8155 RVA: 0x000A8EC4 File Offset: 0x000A70C4
            // (set) Token: 0x06001FDC RID: 8156 RVA: 0x000A8F08 File Offset: 0x000A7108
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetBusMVByTransf.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetBusMVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetBusMVByTransf.NameColumn] = value;
                }
            }

            // Token: 0x17000833 RID: 2099
            // (get) Token: 0x06001FDD RID: 8157 RVA: 0x000A8F1C File Offset: 0x000A711C
            // (set) Token: 0x06001FDE RID: 8158 RVA: 0x000A8F60 File Offset: 0x000A7160
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetBusMVByTransf.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'fn_J_GetBusMVByTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetBusMVByTransf.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x06001FDF RID: 8159 RVA: 0x000A8F79 File Offset: 0x000A7179
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdNull()
            {
                return base.IsNull(this.tablefn_J_GetBusMVByTransf.IdColumn);
            }

            // Token: 0x06001FE0 RID: 8160 RVA: 0x000A8F8C File Offset: 0x000A718C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdNull()
            {
                base[this.tablefn_J_GetBusMVByTransf.IdColumn] = Convert.DBNull;
            }

            // Token: 0x06001FE1 RID: 8161 RVA: 0x000A8FA4 File Offset: 0x000A71A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablefn_J_GetBusMVByTransf.NameColumn);
            }

            // Token: 0x06001FE2 RID: 8162 RVA: 0x000A8FB7 File Offset: 0x000A71B7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tablefn_J_GetBusMVByTransf.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06001FE3 RID: 8163 RVA: 0x000A8FCF File Offset: 0x000A71CF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tablefn_J_GetBusMVByTransf.TypeCodeIdColumn);
            }

            // Token: 0x06001FE4 RID: 8164 RVA: 0x000A8FE2 File Offset: 0x000A71E2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdNull()
            {
                base[this.tablefn_J_GetBusMVByTransf.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x04000BC9 RID: 3017
            private DataSetGES.fn_J_GetBusMVByTransfDataTable tablefn_J_GetBusMVByTransf;
        }

        // Token: 0x0200016A RID: 362
        public class tJ_MeasAmperageTransfRow : DataRow
        {
            // Token: 0x06001FE5 RID: 8165 RVA: 0x000A8FFA File Offset: 0x000A71FA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasAmperageTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_MeasAmperageTransf = (DataSetGES.tJ_MeasAmperageTransfDataTable)base.Table;
            }

            // Token: 0x17000834 RID: 2100
            // (get) Token: 0x06001FE6 RID: 8166 RVA: 0x000A9014 File Offset: 0x000A7214
            // (set) Token: 0x06001FE7 RID: 8167 RVA: 0x000A902C File Offset: 0x000A722C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_MeasAmperageTransf.idColumn];
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.idColumn] = value;
                }
            }

            // Token: 0x17000835 RID: 2101
            // (get) Token: 0x06001FE8 RID: 8168 RVA: 0x000A9045 File Offset: 0x000A7245
            // (set) Token: 0x06001FE9 RID: 8169 RVA: 0x000A905D File Offset: 0x000A725D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tabletJ_MeasAmperageTransf.idMeasurementColumn];
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.idMeasurementColumn] = value;
                }
            }

            // Token: 0x17000836 RID: 2102
            // (get) Token: 0x06001FEA RID: 8170 RVA: 0x000A9078 File Offset: 0x000A7278
            // (set) Token: 0x06001FEB RID: 8171 RVA: 0x000A90BC File Offset: 0x000A72BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasAmperageTransf.IdBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdBus' in table 'tJ_MeasAmperageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.IdBusColumn] = value;
                }
            }

            // Token: 0x17000837 RID: 2103
            // (get) Token: 0x06001FEC RID: 8172 RVA: 0x000A90D5 File Offset: 0x000A72D5
            // (set) Token: 0x06001FED RID: 8173 RVA: 0x000A90ED File Offset: 0x000A72ED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idObjList
            {
                get
                {
                    return (int)base[this.tabletJ_MeasAmperageTransf.idObjListColumn];
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.idObjListColumn] = value;
                }
            }

            // Token: 0x17000838 RID: 2104
            // (get) Token: 0x06001FEE RID: 8174 RVA: 0x000A9108 File Offset: 0x000A7308
            // (set) Token: 0x06001FEF RID: 8175 RVA: 0x000A914C File Offset: 0x000A734C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ia
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasAmperageTransf.IaColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ia' in table 'tJ_MeasAmperageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.IaColumn] = value;
                }
            }

            // Token: 0x17000839 RID: 2105
            // (get) Token: 0x06001FF0 RID: 8176 RVA: 0x000A9168 File Offset: 0x000A7368
            // (set) Token: 0x06001FF1 RID: 8177 RVA: 0x000A91AC File Offset: 0x000A73AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ib
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasAmperageTransf.IbColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ib' in table 'tJ_MeasAmperageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.IbColumn] = value;
                }
            }

            // Token: 0x1700083A RID: 2106
            // (get) Token: 0x06001FF2 RID: 8178 RVA: 0x000A91C8 File Offset: 0x000A73C8
            // (set) Token: 0x06001FF3 RID: 8179 RVA: 0x000A920C File Offset: 0x000A740C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ic
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasAmperageTransf.IcColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ic' in table 'tJ_MeasAmperageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.IcColumn] = value;
                }
            }

            // Token: 0x1700083B RID: 2107
            // (get) Token: 0x06001FF4 RID: 8180 RVA: 0x000A9228 File Offset: 0x000A7428
            // (set) Token: 0x06001FF5 RID: 8181 RVA: 0x000A926C File Offset: 0x000A746C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Io
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasAmperageTransf.IoColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Io' in table 'tJ_MeasAmperageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.IoColumn] = value;
                }
            }

            // Token: 0x1700083C RID: 2108
            // (get) Token: 0x06001FF6 RID: 8182 RVA: 0x000A9288 File Offset: 0x000A7488
            // (set) Token: 0x06001FF7 RID: 8183 RVA: 0x000A92CC File Offset: 0x000A74CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_MeasAmperageTransf.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_MeasAmperageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasAmperageTransf.DeletedColumn] = value;
                }
            }

            // Token: 0x06001FF8 RID: 8184 RVA: 0x000A92E5 File Offset: 0x000A74E5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdBusNull()
            {
                return base.IsNull(this.tabletJ_MeasAmperageTransf.IdBusColumn);
            }

            // Token: 0x06001FF9 RID: 8185 RVA: 0x000A92F8 File Offset: 0x000A74F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIdBusNull()
            {
                base[this.tabletJ_MeasAmperageTransf.IdBusColumn] = Convert.DBNull;
            }

            // Token: 0x06001FFA RID: 8186 RVA: 0x000A9310 File Offset: 0x000A7510
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIaNull()
            {
                return base.IsNull(this.tabletJ_MeasAmperageTransf.IaColumn);
            }

            // Token: 0x06001FFB RID: 8187 RVA: 0x000A9323 File Offset: 0x000A7523
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIaNull()
            {
                base[this.tabletJ_MeasAmperageTransf.IaColumn] = Convert.DBNull;
            }

            // Token: 0x06001FFC RID: 8188 RVA: 0x000A933B File Offset: 0x000A753B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbNull()
            {
                return base.IsNull(this.tabletJ_MeasAmperageTransf.IbColumn);
            }

            // Token: 0x06001FFD RID: 8189 RVA: 0x000A934E File Offset: 0x000A754E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbNull()
            {
                base[this.tabletJ_MeasAmperageTransf.IbColumn] = Convert.DBNull;
            }

            // Token: 0x06001FFE RID: 8190 RVA: 0x000A9366 File Offset: 0x000A7566
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIcNull()
            {
                return base.IsNull(this.tabletJ_MeasAmperageTransf.IcColumn);
            }

            // Token: 0x06001FFF RID: 8191 RVA: 0x000A9379 File Offset: 0x000A7579
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcNull()
            {
                base[this.tabletJ_MeasAmperageTransf.IcColumn] = Convert.DBNull;
            }

            // Token: 0x06002000 RID: 8192 RVA: 0x000A9391 File Offset: 0x000A7591
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIoNull()
            {
                return base.IsNull(this.tabletJ_MeasAmperageTransf.IoColumn);
            }

            // Token: 0x06002001 RID: 8193 RVA: 0x000A93A4 File Offset: 0x000A75A4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIoNull()
            {
                base[this.tabletJ_MeasAmperageTransf.IoColumn] = Convert.DBNull;
            }

            // Token: 0x06002002 RID: 8194 RVA: 0x000A93BC File Offset: 0x000A75BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tabletJ_MeasAmperageTransf.DeletedColumn);
            }

            // Token: 0x06002003 RID: 8195 RVA: 0x000A93CF File Offset: 0x000A75CF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDeletedNull()
            {
                base[this.tabletJ_MeasAmperageTransf.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BCA RID: 3018
            private DataSetGES.tJ_MeasAmperageTransfDataTable tabletJ_MeasAmperageTransf;
        }

        // Token: 0x0200016B RID: 363
        public class tSchm_ObjList2Row : DataRow
        {
            // Token: 0x06002004 RID: 8196 RVA: 0x000A93E7 File Offset: 0x000A75E7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tSchm_ObjList2Row(DataRowBuilder rb) : base(rb)
            {
                this.tabletSchm_ObjList2 = (DataSetGES.tSchm_ObjList2DataTable)base.Table;
            }

            // Token: 0x1700083D RID: 2109
            // (get) Token: 0x06002005 RID: 8197 RVA: 0x000A9401 File Offset: 0x000A7601
            // (set) Token: 0x06002006 RID: 8198 RVA: 0x000A9419 File Offset: 0x000A7619
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int)base[this.tabletSchm_ObjList2.IdColumn];
                }
                set
                {
                    base[this.tabletSchm_ObjList2.IdColumn] = value;
                }
            }

            // Token: 0x1700083E RID: 2110
            // (get) Token: 0x06002007 RID: 8199 RVA: 0x000A9434 File Offset: 0x000A7634
            // (set) Token: 0x06002008 RID: 8200 RVA: 0x000A9478 File Offset: 0x000A7678
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletSchm_ObjList2.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.NameColumn] = value;
                }
            }

            // Token: 0x1700083F RID: 2111
            // (get) Token: 0x06002009 RID: 8201 RVA: 0x000A948C File Offset: 0x000A768C
            // (set) Token: 0x0600200A RID: 8202 RVA: 0x000A94D0 File Offset: 0x000A76D0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList2.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x17000840 RID: 2112
            // (get) Token: 0x0600200B RID: 8203 RVA: 0x000A94EC File Offset: 0x000A76EC
            // (set) Token: 0x0600200C RID: 8204 RVA: 0x000A9530 File Offset: 0x000A7730
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdParent
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList2.IdParentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.IdParentColumn] = value;
                }
            }

            // Token: 0x17000841 RID: 2113
            // (get) Token: 0x0600200D RID: 8205 RVA: 0x000A954C File Offset: 0x000A774C
            // (set) Token: 0x0600200E RID: 8206 RVA: 0x000A9590 File Offset: 0x000A7790
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OnOff
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletSchm_ObjList2.OnOffColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'OnOff' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.OnOffColumn] = value;
                }
            }

            // Token: 0x17000842 RID: 2114
            // (get) Token: 0x0600200F RID: 8207 RVA: 0x000A95AC File Offset: 0x000A77AC
            // (set) Token: 0x06002010 RID: 8208 RVA: 0x000A95F0 File Offset: 0x000A77F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Location
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList2.LocationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Location' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.LocationColumn] = value;
                }
            }

            // Token: 0x17000843 RID: 2115
            // (get) Token: 0x06002011 RID: 8209 RVA: 0x000A9609 File Offset: 0x000A7809
            // (set) Token: 0x06002012 RID: 8210 RVA: 0x000A9621 File Offset: 0x000A7821
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tabletSchm_ObjList2.DeletedColumn];
                }
                set
                {
                    base[this.tabletSchm_ObjList2.DeletedColumn] = value;
                }
            }

            // Token: 0x17000844 RID: 2116
            // (get) Token: 0x06002013 RID: 8211 RVA: 0x000A963C File Offset: 0x000A783C
            // (set) Token: 0x06002014 RID: 8212 RVA: 0x000A9680 File Offset: 0x000A7880
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int NameP
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList2.NamePColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameP' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.NamePColumn] = value;
                }
            }

            // Token: 0x17000845 RID: 2117
            // (get) Token: 0x06002015 RID: 8213 RVA: 0x000A969C File Offset: 0x000A789C
            // (set) Token: 0x06002016 RID: 8214 RVA: 0x000A96E0 File Offset: 0x000A78E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idParentAddl
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList2.idParentAddlColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.idParentAddlColumn] = value;
                }
            }

            // Token: 0x17000846 RID: 2118
            // (get) Token: 0x06002017 RID: 8215 RVA: 0x000A96FC File Offset: 0x000A78FC
            // (set) Token: 0x06002018 RID: 8216 RVA: 0x000A9740 File Offset: 0x000A7940
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idGroup
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList2.idGroupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idGroup' in table 'tSchm_ObjList2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList2.idGroupColumn] = value;
                }
            }

            // Token: 0x06002019 RID: 8217 RVA: 0x000A9759 File Offset: 0x000A7959
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.NameColumn);
            }

            // Token: 0x0600201A RID: 8218 RVA: 0x000A976C File Offset: 0x000A796C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tabletSchm_ObjList2.NameColumn] = Convert.DBNull;
            }

            // Token: 0x0600201B RID: 8219 RVA: 0x000A9784 File Offset: 0x000A7984
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.TypeCodeIdColumn);
            }

            // Token: 0x0600201C RID: 8220 RVA: 0x000A9797 File Offset: 0x000A7997
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdNull()
            {
                base[this.tabletSchm_ObjList2.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x0600201D RID: 8221 RVA: 0x000A97AF File Offset: 0x000A79AF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdParentNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.IdParentColumn);
            }

            // Token: 0x0600201E RID: 8222 RVA: 0x000A97C2 File Offset: 0x000A79C2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdParentNull()
            {
                base[this.tabletSchm_ObjList2.IdParentColumn] = Convert.DBNull;
            }

            // Token: 0x0600201F RID: 8223 RVA: 0x000A97DA File Offset: 0x000A79DA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOnOffNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.OnOffColumn);
            }

            // Token: 0x06002020 RID: 8224 RVA: 0x000A97ED File Offset: 0x000A79ED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetOnOffNull()
            {
                base[this.tabletSchm_ObjList2.OnOffColumn] = Convert.DBNull;
            }

            // Token: 0x06002021 RID: 8225 RVA: 0x000A9805 File Offset: 0x000A7A05
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.LocationColumn);
            }

            // Token: 0x06002022 RID: 8226 RVA: 0x000A9818 File Offset: 0x000A7A18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetLocationNull()
            {
                base[this.tabletSchm_ObjList2.LocationColumn] = Convert.DBNull;
            }

            // Token: 0x06002023 RID: 8227 RVA: 0x000A9830 File Offset: 0x000A7A30
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNamePNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.NamePColumn);
            }

            // Token: 0x06002024 RID: 8228 RVA: 0x000A9843 File Offset: 0x000A7A43
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNamePNull()
            {
                base[this.tabletSchm_ObjList2.NamePColumn] = Convert.DBNull;
            }

            // Token: 0x06002025 RID: 8229 RVA: 0x000A985B File Offset: 0x000A7A5B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidParentAddlNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.idParentAddlColumn);
            }

            // Token: 0x06002026 RID: 8230 RVA: 0x000A986E File Offset: 0x000A7A6E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidParentAddlNull()
            {
                base[this.tabletSchm_ObjList2.idParentAddlColumn] = Convert.DBNull;
            }

            // Token: 0x06002027 RID: 8231 RVA: 0x000A9886 File Offset: 0x000A7A86
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidGroupNull()
            {
                return base.IsNull(this.tabletSchm_ObjList2.idGroupColumn);
            }

            // Token: 0x06002028 RID: 8232 RVA: 0x000A9899 File Offset: 0x000A7A99
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidGroupNull()
            {
                base[this.tabletSchm_ObjList2.idGroupColumn] = Convert.DBNull;
            }

            // Token: 0x04000BCB RID: 3019
            private DataSetGES.tSchm_ObjList2DataTable tabletSchm_ObjList2;
        }

        // Token: 0x0200016C RID: 364
        public class tSchm_ObjList3Row : DataRow
        {
            // Token: 0x06002029 RID: 8233 RVA: 0x000A98B1 File Offset: 0x000A7AB1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tSchm_ObjList3Row(DataRowBuilder rb) : base(rb)
            {
                this.tabletSchm_ObjList3 = (DataSetGES.tSchm_ObjList3DataTable)base.Table;
            }

            // Token: 0x17000847 RID: 2119
            // (get) Token: 0x0600202A RID: 8234 RVA: 0x000A98CB File Offset: 0x000A7ACB
            // (set) Token: 0x0600202B RID: 8235 RVA: 0x000A98E3 File Offset: 0x000A7AE3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int)base[this.tabletSchm_ObjList3.IdColumn];
                }
                set
                {
                    base[this.tabletSchm_ObjList3.IdColumn] = value;
                }
            }

            // Token: 0x17000848 RID: 2120
            // (get) Token: 0x0600202C RID: 8236 RVA: 0x000A98FC File Offset: 0x000A7AFC
            // (set) Token: 0x0600202D RID: 8237 RVA: 0x000A9940 File Offset: 0x000A7B40
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletSchm_ObjList3.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.NameColumn] = value;
                }
            }

            // Token: 0x17000849 RID: 2121
            // (get) Token: 0x0600202E RID: 8238 RVA: 0x000A9954 File Offset: 0x000A7B54
            // (set) Token: 0x0600202F RID: 8239 RVA: 0x000A9998 File Offset: 0x000A7B98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList3.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x1700084A RID: 2122
            // (get) Token: 0x06002030 RID: 8240 RVA: 0x000A99B4 File Offset: 0x000A7BB4
            // (set) Token: 0x06002031 RID: 8241 RVA: 0x000A99F8 File Offset: 0x000A7BF8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdParent
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList3.IdParentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.IdParentColumn] = value;
                }
            }

            // Token: 0x1700084B RID: 2123
            // (get) Token: 0x06002032 RID: 8242 RVA: 0x000A9A14 File Offset: 0x000A7C14
            // (set) Token: 0x06002033 RID: 8243 RVA: 0x000A9A58 File Offset: 0x000A7C58
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool OnOff
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletSchm_ObjList3.OnOffColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'OnOff' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.OnOffColumn] = value;
                }
            }

            // Token: 0x1700084C RID: 2124
            // (get) Token: 0x06002034 RID: 8244 RVA: 0x000A9A74 File Offset: 0x000A7C74
            // (set) Token: 0x06002035 RID: 8245 RVA: 0x000A9AB8 File Offset: 0x000A7CB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Location
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList3.LocationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Location' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.LocationColumn] = value;
                }
            }

            // Token: 0x1700084D RID: 2125
            // (get) Token: 0x06002036 RID: 8246 RVA: 0x000A9AD1 File Offset: 0x000A7CD1
            // (set) Token: 0x06002037 RID: 8247 RVA: 0x000A9AE9 File Offset: 0x000A7CE9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tabletSchm_ObjList3.DeletedColumn];
                }
                set
                {
                    base[this.tabletSchm_ObjList3.DeletedColumn] = value;
                }
            }

            // Token: 0x1700084E RID: 2126
            // (get) Token: 0x06002038 RID: 8248 RVA: 0x000A9B04 File Offset: 0x000A7D04
            // (set) Token: 0x06002039 RID: 8249 RVA: 0x000A9B48 File Offset: 0x000A7D48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int NameP
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList3.NamePColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameP' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.NamePColumn] = value;
                }
            }

            // Token: 0x1700084F RID: 2127
            // (get) Token: 0x0600203A RID: 8250 RVA: 0x000A9B64 File Offset: 0x000A7D64
            // (set) Token: 0x0600203B RID: 8251 RVA: 0x000A9BA8 File Offset: 0x000A7DA8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idParentAddl
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList3.idParentAddlColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idParentAddl' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.idParentAddlColumn] = value;
                }
            }

            // Token: 0x17000850 RID: 2128
            // (get) Token: 0x0600203C RID: 8252 RVA: 0x000A9BC4 File Offset: 0x000A7DC4
            // (set) Token: 0x0600203D RID: 8253 RVA: 0x000A9C08 File Offset: 0x000A7E08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idGroup
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletSchm_ObjList3.idGroupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idGroup' in table 'tSchm_ObjList3' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletSchm_ObjList3.idGroupColumn] = value;
                }
            }

            // Token: 0x0600203E RID: 8254 RVA: 0x000A9C21 File Offset: 0x000A7E21
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.NameColumn);
            }

            // Token: 0x0600203F RID: 8255 RVA: 0x000A9C34 File Offset: 0x000A7E34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tabletSchm_ObjList3.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06002040 RID: 8256 RVA: 0x000A9C4C File Offset: 0x000A7E4C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.TypeCodeIdColumn);
            }

            // Token: 0x06002041 RID: 8257 RVA: 0x000A9C5F File Offset: 0x000A7E5F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdNull()
            {
                base[this.tabletSchm_ObjList3.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x06002042 RID: 8258 RVA: 0x000A9C77 File Offset: 0x000A7E77
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdParentNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.IdParentColumn);
            }

            // Token: 0x06002043 RID: 8259 RVA: 0x000A9C8A File Offset: 0x000A7E8A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdParentNull()
            {
                base[this.tabletSchm_ObjList3.IdParentColumn] = Convert.DBNull;
            }

            // Token: 0x06002044 RID: 8260 RVA: 0x000A9CA2 File Offset: 0x000A7EA2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsOnOffNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.OnOffColumn);
            }

            // Token: 0x06002045 RID: 8261 RVA: 0x000A9CB5 File Offset: 0x000A7EB5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetOnOffNull()
            {
                base[this.tabletSchm_ObjList3.OnOffColumn] = Convert.DBNull;
            }

            // Token: 0x06002046 RID: 8262 RVA: 0x000A9CCD File Offset: 0x000A7ECD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsLocationNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.LocationColumn);
            }

            // Token: 0x06002047 RID: 8263 RVA: 0x000A9CE0 File Offset: 0x000A7EE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetLocationNull()
            {
                base[this.tabletSchm_ObjList3.LocationColumn] = Convert.DBNull;
            }

            // Token: 0x06002048 RID: 8264 RVA: 0x000A9CF8 File Offset: 0x000A7EF8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNamePNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.NamePColumn);
            }

            // Token: 0x06002049 RID: 8265 RVA: 0x000A9D0B File Offset: 0x000A7F0B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNamePNull()
            {
                base[this.tabletSchm_ObjList3.NamePColumn] = Convert.DBNull;
            }

            // Token: 0x0600204A RID: 8266 RVA: 0x000A9D23 File Offset: 0x000A7F23
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidParentAddlNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.idParentAddlColumn);
            }

            // Token: 0x0600204B RID: 8267 RVA: 0x000A9D36 File Offset: 0x000A7F36
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidParentAddlNull()
            {
                base[this.tabletSchm_ObjList3.idParentAddlColumn] = Convert.DBNull;
            }

            // Token: 0x0600204C RID: 8268 RVA: 0x000A9D4E File Offset: 0x000A7F4E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidGroupNull()
            {
                return base.IsNull(this.tabletSchm_ObjList3.idGroupColumn);
            }

            // Token: 0x0600204D RID: 8269 RVA: 0x000A9D61 File Offset: 0x000A7F61
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidGroupNull()
            {
                base[this.tabletSchm_ObjList3.idGroupColumn] = Convert.DBNull;
            }

            // Token: 0x04000BCC RID: 3020
            private DataSetGES.tSchm_ObjList3DataTable tabletSchm_ObjList3;
        }

        // Token: 0x0200016D RID: 365
        public class vP_TransfBySubstationRow : DataRow
        {
            // Token: 0x0600204E RID: 8270 RVA: 0x000A9D79 File Offset: 0x000A7F79
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vP_TransfBySubstationRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevP_TransfBySubstation = (DataSetGES.vP_TransfBySubstationDataTable)base.Table;
            }

            // Token: 0x17000851 RID: 2129
            // (get) Token: 0x0600204F RID: 8271 RVA: 0x000A9D93 File Offset: 0x000A7F93
            // (set) Token: 0x06002050 RID: 8272 RVA: 0x000A9DAB File Offset: 0x000A7FAB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSubstation
            {
                get
                {
                    return (int)base[this.tablevP_TransfBySubstation.idSubstationColumn];
                }
                set
                {
                    base[this.tablevP_TransfBySubstation.idSubstationColumn] = value;
                }
            }

            // Token: 0x17000852 RID: 2130
            // (get) Token: 0x06002051 RID: 8273 RVA: 0x000A9DC4 File Offset: 0x000A7FC4
            // (set) Token: 0x06002052 RID: 8274 RVA: 0x000A9E08 File Offset: 0x000A8008
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idNetRegion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevP_TransfBySubstation.idNetRegionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idNetRegion' in table 'vP_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_TransfBySubstation.idNetRegionColumn] = value;
                }
            }

            // Token: 0x17000853 RID: 2131
            // (get) Token: 0x06002053 RID: 8275 RVA: 0x000A9E24 File Offset: 0x000A8024
            // (set) Token: 0x06002054 RID: 8276 RVA: 0x000A9E68 File Offset: 0x000A8068
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetRegionValue
            {
                get
                {
                    decimal result;
                    try
                    {
                        result = (decimal)base[this.tablevP_TransfBySubstation.NetRegionValueColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NetRegionValue' in table 'vP_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_TransfBySubstation.NetRegionValueColumn] = value;
                }
            }

            // Token: 0x17000854 RID: 2132
            // (get) Token: 0x06002055 RID: 8277 RVA: 0x000A9E84 File Offset: 0x000A8084
            // (set) Token: 0x06002056 RID: 8278 RVA: 0x000A9EC8 File Offset: 0x000A80C8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameSubstation
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_TransfBySubstation.NameSubstationColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameSubstation' in table 'vP_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_TransfBySubstation.NameSubstationColumn] = value;
                }
            }

            // Token: 0x17000855 RID: 2133
            // (get) Token: 0x06002057 RID: 8279 RVA: 0x000A9EDC File Offset: 0x000A80DC
            // (set) Token: 0x06002058 RID: 8280 RVA: 0x000A9EF4 File Offset: 0x000A80F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevP_TransfBySubstation.idTransfColumn];
                }
                set
                {
                    base[this.tablevP_TransfBySubstation.idTransfColumn] = value;
                }
            }

            // Token: 0x17000856 RID: 2134
            // (get) Token: 0x06002059 RID: 8281 RVA: 0x000A9F10 File Offset: 0x000A8110
            // (set) Token: 0x0600205A RID: 8282 RVA: 0x000A9F54 File Offset: 0x000A8154
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransfName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_TransfBySubstation.NameTransfNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransfName' in table 'vP_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_TransfBySubstation.NameTransfNameColumn] = value;
                }
            }

            // Token: 0x17000857 RID: 2135
            // (get) Token: 0x0600205B RID: 8283 RVA: 0x000A9F68 File Offset: 0x000A8168
            // (set) Token: 0x0600205C RID: 8284 RVA: 0x000A9FAC File Offset: 0x000A81AC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idPassport
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevP_TransfBySubstation.idPassportColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idPassport' in table 'vP_TransfBySubstation' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_TransfBySubstation.idPassportColumn] = value;
                }
            }

            // Token: 0x0600205D RID: 8285 RVA: 0x000A9FC5 File Offset: 0x000A81C5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidNetRegionNull()
            {
                return base.IsNull(this.tablevP_TransfBySubstation.idNetRegionColumn);
            }

            // Token: 0x0600205E RID: 8286 RVA: 0x000A9FD8 File Offset: 0x000A81D8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNetRegionNull()
            {
                base[this.tablevP_TransfBySubstation.idNetRegionColumn] = Convert.DBNull;
            }

            // Token: 0x0600205F RID: 8287 RVA: 0x000A9FF0 File Offset: 0x000A81F0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetRegionValueNull()
            {
                return base.IsNull(this.tablevP_TransfBySubstation.NetRegionValueColumn);
            }

            // Token: 0x06002060 RID: 8288 RVA: 0x000AA003 File Offset: 0x000A8203
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetRegionValueNull()
            {
                base[this.tablevP_TransfBySubstation.NetRegionValueColumn] = Convert.DBNull;
            }

            // Token: 0x06002061 RID: 8289 RVA: 0x000AA01B File Offset: 0x000A821B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameSubstationNull()
            {
                return base.IsNull(this.tablevP_TransfBySubstation.NameSubstationColumn);
            }

            // Token: 0x06002062 RID: 8290 RVA: 0x000AA02E File Offset: 0x000A822E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameSubstationNull()
            {
                base[this.tablevP_TransfBySubstation.NameSubstationColumn] = Convert.DBNull;
            }

            // Token: 0x06002063 RID: 8291 RVA: 0x000AA046 File Offset: 0x000A8246
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTransfNameNull()
            {
                return base.IsNull(this.tablevP_TransfBySubstation.NameTransfNameColumn);
            }

            // Token: 0x06002064 RID: 8292 RVA: 0x000AA059 File Offset: 0x000A8259
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameTransfNameNull()
            {
                base[this.tablevP_TransfBySubstation.NameTransfNameColumn] = Convert.DBNull;
            }

            // Token: 0x06002065 RID: 8293 RVA: 0x000AA071 File Offset: 0x000A8271
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidPassportNull()
            {
                return base.IsNull(this.tablevP_TransfBySubstation.idPassportColumn);
            }

            // Token: 0x06002066 RID: 8294 RVA: 0x000AA084 File Offset: 0x000A8284
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidPassportNull()
            {
                base[this.tablevP_TransfBySubstation.idPassportColumn] = Convert.DBNull;
            }

            // Token: 0x04000BCD RID: 3021
            private DataSetGES.vP_TransfBySubstationDataTable tablevP_TransfBySubstation;
        }

        // Token: 0x0200016E RID: 366
        public class vJ_MeasAmpSubTransf_TEMPRow : DataRow
        {
            // Token: 0x06002067 RID: 8295 RVA: 0x000AA09C File Offset: 0x000A829C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasAmpSubTransf_TEMPRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasAmpSubTransf_TEMP = (DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable)base.Table;
            }

            // Token: 0x17000858 RID: 2136
            // (get) Token: 0x06002068 RID: 8296 RVA: 0x000AA0B6 File Offset: 0x000A82B6
            // (set) Token: 0x06002069 RID: 8297 RVA: 0x000AA0CE File Offset: 0x000A82CE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasAmpSubTransf_TEMP.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasAmpSubTransf_TEMP.idColumn] = value;
                }
            }

            // Token: 0x17000859 RID: 2137
            // (get) Token: 0x0600206A RID: 8298 RVA: 0x000AA0E7 File Offset: 0x000A82E7
            // (set) Token: 0x0600206B RID: 8299 RVA: 0x000AA0FF File Offset: 0x000A82FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSub
            {
                get
                {
                    return (int)base[this.tablevJ_MeasAmpSubTransf_TEMP.idSubColumn];
                }
                set
                {
                    base[this.tablevJ_MeasAmpSubTransf_TEMP.idSubColumn] = value;
                }
            }

            // Token: 0x1700085A RID: 2138
            // (get) Token: 0x0600206C RID: 8300 RVA: 0x000AA118 File Offset: 0x000A8318
            // (set) Token: 0x0600206D RID: 8301 RVA: 0x000AA130 File Offset: 0x000A8330
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_MeasAmpSubTransf_TEMP.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_MeasAmpSubTransf_TEMP.idTransfColumn] = value;
                }
            }

            // Token: 0x1700085B RID: 2139
            // (get) Token: 0x0600206E RID: 8302 RVA: 0x000AA14C File Offset: 0x000A834C
            // (set) Token: 0x0600206F RID: 8303 RVA: 0x000AA190 File Offset: 0x000A8390
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasAmpSubTransf_TEMP.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_MeasAmpSubTransf_TEMP' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasAmpSubTransf_TEMP.NameTransfColumn] = value;
                }
            }

            // Token: 0x06002070 RID: 8304 RVA: 0x000AA1A4 File Offset: 0x000A83A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablevJ_MeasAmpSubTransf_TEMP.NameTransfColumn);
            }

            // Token: 0x06002071 RID: 8305 RVA: 0x000AA1B7 File Offset: 0x000A83B7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tablevJ_MeasAmpSubTransf_TEMP.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x04000BCE RID: 3022
            private DataSetGES.vJ_MeasAmpSubTransf_TEMPDataTable tablevJ_MeasAmpSubTransf_TEMP;
        }

        // Token: 0x0200016F RID: 367
        public class vJ_MeasSubTransf_TEMPRow : DataRow
        {
            // Token: 0x06002072 RID: 8306 RVA: 0x000AA1CF File Offset: 0x000A83CF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasSubTransf_TEMPRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasSubTransf_TEMP = (DataSetGES.vJ_MeasSubTransf_TEMPDataTable)base.Table;
            }

            // Token: 0x1700085C RID: 2140
            // (get) Token: 0x06002073 RID: 8307 RVA: 0x000AA1E9 File Offset: 0x000A83E9
            // (set) Token: 0x06002074 RID: 8308 RVA: 0x000AA201 File Offset: 0x000A8401
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasSubTransf_TEMP.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasSubTransf_TEMP.idColumn] = value;
                }
            }

            // Token: 0x1700085D RID: 2141
            // (get) Token: 0x06002075 RID: 8309 RVA: 0x000AA21A File Offset: 0x000A841A
            // (set) Token: 0x06002076 RID: 8310 RVA: 0x000AA232 File Offset: 0x000A8432
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSub
            {
                get
                {
                    return (int)base[this.tablevJ_MeasSubTransf_TEMP.idSubColumn];
                }
                set
                {
                    base[this.tablevJ_MeasSubTransf_TEMP.idSubColumn] = value;
                }
            }

            // Token: 0x1700085E RID: 2142
            // (get) Token: 0x06002077 RID: 8311 RVA: 0x000AA24B File Offset: 0x000A844B
            // (set) Token: 0x06002078 RID: 8312 RVA: 0x000AA263 File Offset: 0x000A8463
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_MeasSubTransf_TEMP.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_MeasSubTransf_TEMP.idTransfColumn] = value;
                }
            }

            // Token: 0x1700085F RID: 2143
            // (get) Token: 0x06002079 RID: 8313 RVA: 0x000AA27C File Offset: 0x000A847C
            // (set) Token: 0x0600207A RID: 8314 RVA: 0x000AA2C0 File Offset: 0x000A84C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasSubTransf_TEMP.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_MeasSubTransf_TEMP' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasSubTransf_TEMP.NameTransfColumn] = value;
                }
            }

            // Token: 0x0600207B RID: 8315 RVA: 0x000AA2D4 File Offset: 0x000A84D4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablevJ_MeasSubTransf_TEMP.NameTransfColumn);
            }

            // Token: 0x0600207C RID: 8316 RVA: 0x000AA2E7 File Offset: 0x000A84E7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tablevJ_MeasSubTransf_TEMP.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x04000BCF RID: 3023
            private DataSetGES.vJ_MeasSubTransf_TEMPDataTable tablevJ_MeasSubTransf_TEMP;
        }

        // Token: 0x02000170 RID: 368
        public class fn_J_GetTransfByBusLVRow : DataRow
        {
            // Token: 0x0600207D RID: 8317 RVA: 0x000AA2FF File Offset: 0x000A84FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal fn_J_GetTransfByBusLVRow(DataRowBuilder rb) : base(rb)
            {
                this.tablefn_J_GetTransfByBusLV = (DataSetGES.fn_J_GetTransfByBusLVDataTable)base.Table;
            }

            // Token: 0x17000860 RID: 2144
            // (get) Token: 0x0600207E RID: 8318 RVA: 0x000AA31C File Offset: 0x000A851C
            // (set) Token: 0x0600207F RID: 8319 RVA: 0x000AA360 File Offset: 0x000A8560
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetTransfByBusLV.IdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Id' in table 'fn_J_GetTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetTransfByBusLV.IdColumn] = value;
                }
            }

            // Token: 0x17000861 RID: 2145
            // (get) Token: 0x06002080 RID: 8320 RVA: 0x000AA37C File Offset: 0x000A857C
            // (set) Token: 0x06002081 RID: 8321 RVA: 0x000AA3C0 File Offset: 0x000A85C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablefn_J_GetTransfByBusLV.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'fn_J_GetTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetTransfByBusLV.NameColumn] = value;
                }
            }

            // Token: 0x17000862 RID: 2146
            // (get) Token: 0x06002082 RID: 8322 RVA: 0x000AA3D4 File Offset: 0x000A85D4
            // (set) Token: 0x06002083 RID: 8323 RVA: 0x000AA418 File Offset: 0x000A8618
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablefn_J_GetTransfByBusLV.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'fn_J_GetTransfByBusLV' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablefn_J_GetTransfByBusLV.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x06002084 RID: 8324 RVA: 0x000AA431 File Offset: 0x000A8631
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdNull()
            {
                return base.IsNull(this.tablefn_J_GetTransfByBusLV.IdColumn);
            }

            // Token: 0x06002085 RID: 8325 RVA: 0x000AA444 File Offset: 0x000A8644
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdNull()
            {
                base[this.tablefn_J_GetTransfByBusLV.IdColumn] = Convert.DBNull;
            }

            // Token: 0x06002086 RID: 8326 RVA: 0x000AA45C File Offset: 0x000A865C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablefn_J_GetTransfByBusLV.NameColumn);
            }

            // Token: 0x06002087 RID: 8327 RVA: 0x000AA46F File Offset: 0x000A866F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablefn_J_GetTransfByBusLV.NameColumn] = Convert.DBNull;
            }

            // Token: 0x06002088 RID: 8328 RVA: 0x000AA487 File Offset: 0x000A8687
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tablefn_J_GetTransfByBusLV.TypeCodeIdColumn);
            }

            // Token: 0x06002089 RID: 8329 RVA: 0x000AA49A File Offset: 0x000A869A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdNull()
            {
                base[this.tablefn_J_GetTransfByBusLV.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD0 RID: 3024
            private DataSetGES.fn_J_GetTransfByBusLVDataTable tablefn_J_GetTransfByBusLV;
        }

        // Token: 0x02000171 RID: 369
        public class vP_SubstationBusRow : DataRow
        {
            // Token: 0x0600208A RID: 8330 RVA: 0x000AA4B2 File Offset: 0x000A86B2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vP_SubstationBusRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevP_SubstationBus = (DataSetGES.vP_SubstationBusDataTable)base.Table;
            }

            // Token: 0x17000863 RID: 2147
            // (get) Token: 0x0600208B RID: 8331 RVA: 0x000AA4CC File Offset: 0x000A86CC
            // (set) Token: 0x0600208C RID: 8332 RVA: 0x000AA4E4 File Offset: 0x000A86E4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id
            {
                get
                {
                    return (int)base[this.tablevP_SubstationBus.IdColumn];
                }
                set
                {
                    base[this.tablevP_SubstationBus.IdColumn] = value;
                }
            }

            // Token: 0x17000864 RID: 2148
            // (get) Token: 0x0600208D RID: 8333 RVA: 0x000AA500 File Offset: 0x000A8700
            // (set) Token: 0x0600208E RID: 8334 RVA: 0x000AA544 File Offset: 0x000A8744
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int IdParent
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevP_SubstationBus.IdParentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'IdParent' in table 'vP_SubstationBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationBus.IdParentColumn] = value;
                }
            }

            // Token: 0x17000865 RID: 2149
            // (get) Token: 0x0600208F RID: 8335 RVA: 0x000AA560 File Offset: 0x000A8760
            // (set) Token: 0x06002090 RID: 8336 RVA: 0x000AA5A4 File Offset: 0x000A87A4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevP_SubstationBus.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vP_SubstationBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationBus.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x17000866 RID: 2150
            // (get) Token: 0x06002091 RID: 8337 RVA: 0x000AA5BD File Offset: 0x000A87BD
            // (set) Token: 0x06002092 RID: 8338 RVA: 0x000AA5D5 File Offset: 0x000A87D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string TypeName
            {
                get
                {
                    return (string)base[this.tablevP_SubstationBus.TypeNameColumn];
                }
                set
                {
                    base[this.tablevP_SubstationBus.TypeNameColumn] = value;
                }
            }

            // Token: 0x17000867 RID: 2151
            // (get) Token: 0x06002093 RID: 8339 RVA: 0x000AA5EC File Offset: 0x000A87EC
            // (set) Token: 0x06002094 RID: 8340 RVA: 0x000AA630 File Offset: 0x000A8830
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevP_SubstationBus.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vP_SubstationBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevP_SubstationBus.NameColumn] = value;
                }
            }

            // Token: 0x06002095 RID: 8341 RVA: 0x000AA644 File Offset: 0x000A8844
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIdParentNull()
            {
                return base.IsNull(this.tablevP_SubstationBus.IdParentColumn);
            }

            // Token: 0x06002096 RID: 8342 RVA: 0x000AA657 File Offset: 0x000A8857
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdParentNull()
            {
                base[this.tablevP_SubstationBus.IdParentColumn] = Convert.DBNull;
            }

            // Token: 0x06002097 RID: 8343 RVA: 0x000AA66F File Offset: 0x000A886F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tablevP_SubstationBus.TypeCodeIdColumn);
            }

            // Token: 0x06002098 RID: 8344 RVA: 0x000AA682 File Offset: 0x000A8882
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTypeCodeIdNull()
            {
                base[this.tablevP_SubstationBus.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x06002099 RID: 8345 RVA: 0x000AA69A File Offset: 0x000A889A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevP_SubstationBus.NameColumn);
            }

            // Token: 0x0600209A RID: 8346 RVA: 0x000AA6AD File Offset: 0x000A88AD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablevP_SubstationBus.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD1 RID: 3025
            private DataSetGES.vP_SubstationBusDataTable tablevP_SubstationBus;
        }

        // Token: 0x02000172 RID: 370
        public class vJ_CellByBusRow : DataRow
        {
            // Token: 0x0600209B RID: 8347 RVA: 0x000AA6C5 File Offset: 0x000A88C5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CellByBusRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_CellByBus = (DataSetGES.vJ_CellByBusDataTable)base.Table;
            }

            // Token: 0x17000868 RID: 2152
            // (get) Token: 0x0600209C RID: 8348 RVA: 0x000AA6DF File Offset: 0x000A88DF
            // (set) Token: 0x0600209D RID: 8349 RVA: 0x000AA6F7 File Offset: 0x000A88F7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int)base[this.tablevJ_CellByBus.idBusColumn];
                }
                set
                {
                    base[this.tablevJ_CellByBus.idBusColumn] = value;
                }
            }

            // Token: 0x17000869 RID: 2153
            // (get) Token: 0x0600209E RID: 8350 RVA: 0x000AA710 File Offset: 0x000A8910
            // (set) Token: 0x0600209F RID: 8351 RVA: 0x000AA754 File Offset: 0x000A8954
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CellByBus.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'vJ_CellByBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CellByBus.NameBusColumn] = value;
                }
            }

            // Token: 0x1700086A RID: 2154
            // (get) Token: 0x060020A0 RID: 8352 RVA: 0x000AA768 File Offset: 0x000A8968
            // (set) Token: 0x060020A1 RID: 8353 RVA: 0x000AA780 File Offset: 0x000A8980
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_CellByBus.idColumn];
                }
                set
                {
                    base[this.tablevJ_CellByBus.idColumn] = value;
                }
            }

            // Token: 0x1700086B RID: 2155
            // (get) Token: 0x060020A2 RID: 8354 RVA: 0x000AA79C File Offset: 0x000A899C
            // (set) Token: 0x060020A3 RID: 8355 RVA: 0x000AA7E0 File Offset: 0x000A89E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CellByBus.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_CellByBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CellByBus.NameColumn] = value;
                }
            }

            // Token: 0x1700086C RID: 2156
            // (get) Token: 0x060020A4 RID: 8356 RVA: 0x000AA7F4 File Offset: 0x000A89F4
            // (set) Token: 0x060020A5 RID: 8357 RVA: 0x000AA838 File Offset: 0x000A8A38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeId
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CellByBus.TypeCodeIdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeId' in table 'vJ_CellByBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CellByBus.TypeCodeIdColumn] = value;
                }
            }

            // Token: 0x1700086D RID: 2157
            // (get) Token: 0x060020A6 RID: 8358 RVA: 0x000AA854 File Offset: 0x000A8A54
            // (set) Token: 0x060020A7 RID: 8359 RVA: 0x000AA898 File Offset: 0x000A8A98
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idParent
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CellByBus.idParentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idParent' in table 'vJ_CellByBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CellByBus.idParentColumn] = value;
                }
            }

            // Token: 0x060020A8 RID: 8360 RVA: 0x000AA8B1 File Offset: 0x000A8AB1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tablevJ_CellByBus.NameBusColumn);
            }

            // Token: 0x060020A9 RID: 8361 RVA: 0x000AA8C4 File Offset: 0x000A8AC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tablevJ_CellByBus.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x060020AA RID: 8362 RVA: 0x000AA8DC File Offset: 0x000A8ADC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevJ_CellByBus.NameColumn);
            }

            // Token: 0x060020AB RID: 8363 RVA: 0x000AA8EF File Offset: 0x000A8AEF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablevJ_CellByBus.NameColumn] = Convert.DBNull;
            }

            // Token: 0x060020AC RID: 8364 RVA: 0x000AA907 File Offset: 0x000A8B07
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeIdNull()
            {
                return base.IsNull(this.tablevJ_CellByBus.TypeCodeIdColumn);
            }

            // Token: 0x060020AD RID: 8365 RVA: 0x000AA91A File Offset: 0x000A8B1A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetTypeCodeIdNull()
            {
                base[this.tablevJ_CellByBus.TypeCodeIdColumn] = Convert.DBNull;
            }

            // Token: 0x060020AE RID: 8366 RVA: 0x000AA932 File Offset: 0x000A8B32
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidParentNull()
            {
                return base.IsNull(this.tablevJ_CellByBus.idParentColumn);
            }

            // Token: 0x060020AF RID: 8367 RVA: 0x000AA945 File Offset: 0x000A8B45
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidParentNull()
            {
                base[this.tablevJ_CellByBus.idParentColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD2 RID: 3026
            private DataSetGES.vJ_CellByBusDataTable tablevJ_CellByBus;
        }

        // Token: 0x02000173 RID: 371
        public class vJ_PowerISR_SSBusRow : DataRow
        {
            // Token: 0x060020B0 RID: 8368 RVA: 0x000AA95D File Offset: 0x000A8B5D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_PowerISR_SSBusRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_PowerISR_SSBus = (DataSetGES.vJ_PowerISR_SSBusDataTable)base.Table;
            }

            // Token: 0x1700086E RID: 2158
            // (get) Token: 0x060020B1 RID: 8369 RVA: 0x000AA977 File Offset: 0x000A8B77
            // (set) Token: 0x060020B2 RID: 8370 RVA: 0x000AA98F File Offset: 0x000A8B8F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSub
            {
                get
                {
                    return (int)base[this.tablevJ_PowerISR_SSBus.idSubColumn];
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.idSubColumn] = value;
                }
            }

            // Token: 0x1700086F RID: 2159
            // (get) Token: 0x060020B3 RID: 8371 RVA: 0x000AA9A8 File Offset: 0x000A8BA8
            // (set) Token: 0x060020B4 RID: 8372 RVA: 0x000AA9EC File Offset: 0x000A8BEC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameSub
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_PowerISR_SSBus.NameSubColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameSub' in table 'vJ_PowerISR_SSBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.NameSubColumn] = value;
                }
            }

            // Token: 0x17000870 RID: 2160
            // (get) Token: 0x060020B5 RID: 8373 RVA: 0x000AAA00 File Offset: 0x000A8C00
            // (set) Token: 0x060020B6 RID: 8374 RVA: 0x000AAA18 File Offset: 0x000A8C18
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int)base[this.tablevJ_PowerISR_SSBus.idBusColumn];
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.idBusColumn] = value;
                }
            }

            // Token: 0x17000871 RID: 2161
            // (get) Token: 0x060020B7 RID: 8375 RVA: 0x000AAA34 File Offset: 0x000A8C34
            // (set) Token: 0x060020B8 RID: 8376 RVA: 0x000AAA78 File Offset: 0x000A8C78
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string nameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_PowerISR_SSBus.nameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameBus' in table 'vJ_PowerISR_SSBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.nameBusColumn] = value;
                }
            }

            // Token: 0x17000872 RID: 2162
            // (get) Token: 0x060020B9 RID: 8377 RVA: 0x000AAA8C File Offset: 0x000A8C8C
            // (set) Token: 0x060020BA RID: 8378 RVA: 0x000AAAD0 File Offset: 0x000A8CD0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_PowerISR_SSBus.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_PowerISR_SSBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.idTransfColumn] = value;
                }
            }

            // Token: 0x17000873 RID: 2163
            // (get) Token: 0x060020BB RID: 8379 RVA: 0x000AAAEC File Offset: 0x000A8CEC
            // (set) Token: 0x060020BC RID: 8380 RVA: 0x000AAB30 File Offset: 0x000A8D30
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_PowerISR_SSBus.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_PowerISR_SSBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.NameTransfColumn] = value;
                }
            }

            // Token: 0x17000874 RID: 2164
            // (get) Token: 0x060020BD RID: 8381 RVA: 0x000AAB44 File Offset: 0x000A8D44
            // (set) Token: 0x060020BE RID: 8382 RVA: 0x000AAB88 File Offset: 0x000A8D88
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_PowerISR_SSBus.PowerColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Power' in table 'vJ_PowerISR_SSBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.PowerColumn] = value;
                }
            }

            // Token: 0x17000875 RID: 2165
            // (get) Token: 0x060020BF RID: 8383 RVA: 0x000AAB9C File Offset: 0x000A8D9C
            // (set) Token: 0x060020C0 RID: 8384 RVA: 0x000AABE0 File Offset: 0x000A8DE0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Isr
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_PowerISR_SSBus.IsrColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Isr' in table 'vJ_PowerISR_SSBus' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_PowerISR_SSBus.IsrColumn] = value;
                }
            }

            // Token: 0x060020C1 RID: 8385 RVA: 0x000AABF9 File Offset: 0x000A8DF9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameSubNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSBus.NameSubColumn);
            }

            // Token: 0x060020C2 RID: 8386 RVA: 0x000AAC0C File Offset: 0x000A8E0C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameSubNull()
            {
                base[this.tablevJ_PowerISR_SSBus.NameSubColumn] = Convert.DBNull;
            }

            // Token: 0x060020C3 RID: 8387 RVA: 0x000AAC24 File Offset: 0x000A8E24
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameBusNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSBus.nameBusColumn);
            }

            // Token: 0x060020C4 RID: 8388 RVA: 0x000AAC37 File Offset: 0x000A8E37
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetnameBusNull()
            {
                base[this.tablevJ_PowerISR_SSBus.nameBusColumn] = Convert.DBNull;
            }

            // Token: 0x060020C5 RID: 8389 RVA: 0x000AAC4F File Offset: 0x000A8E4F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSBus.idTransfColumn);
            }

            // Token: 0x060020C6 RID: 8390 RVA: 0x000AAC62 File Offset: 0x000A8E62
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidTransfNull()
            {
                base[this.tablevJ_PowerISR_SSBus.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060020C7 RID: 8391 RVA: 0x000AAC7A File Offset: 0x000A8E7A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSBus.NameTransfColumn);
            }

            // Token: 0x060020C8 RID: 8392 RVA: 0x000AAC8D File Offset: 0x000A8E8D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameTransfNull()
            {
                base[this.tablevJ_PowerISR_SSBus.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060020C9 RID: 8393 RVA: 0x000AACA5 File Offset: 0x000A8EA5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPowerNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSBus.PowerColumn);
            }

            // Token: 0x060020CA RID: 8394 RVA: 0x000AACB8 File Offset: 0x000A8EB8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPowerNull()
            {
                base[this.tablevJ_PowerISR_SSBus.PowerColumn] = Convert.DBNull;
            }

            // Token: 0x060020CB RID: 8395 RVA: 0x000AACD0 File Offset: 0x000A8ED0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsrNull()
            {
                return base.IsNull(this.tablevJ_PowerISR_SSBus.IsrColumn);
            }

            // Token: 0x060020CC RID: 8396 RVA: 0x000AACE3 File Offset: 0x000A8EE3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsrNull()
            {
                base[this.tablevJ_PowerISR_SSBus.IsrColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD3 RID: 3027
            private DataSetGES.vJ_PowerISR_SSBusDataTable tablevJ_PowerISR_SSBus;
        }

        // Token: 0x02000174 RID: 372
        public class dtBusesTransfRow : DataRow
        {
            // Token: 0x060020CD RID: 8397 RVA: 0x000AACFB File Offset: 0x000A8EFB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal dtBusesTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tabledtBusesTransf = (DataSetGES.dtBusesTransfDataTable)base.Table;
            }

            // Token: 0x17000876 RID: 2166
            // (get) Token: 0x060020CE RID: 8398 RVA: 0x000AAD18 File Offset: 0x000A8F18
            // (set) Token: 0x060020CF RID: 8399 RVA: 0x000AAD5C File Offset: 0x000A8F5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtBusesTransf.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'dtBusesTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtBusesTransf.idBusColumn] = value;
                }
            }

            // Token: 0x17000877 RID: 2167
            // (get) Token: 0x060020D0 RID: 8400 RVA: 0x000AAD78 File Offset: 0x000A8F78
            // (set) Token: 0x060020D1 RID: 8401 RVA: 0x000AADBC File Offset: 0x000A8FBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtBusesTransf.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'dtBusesTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtBusesTransf.NameBusColumn] = value;
                }
            }

            // Token: 0x17000878 RID: 2168
            // (get) Token: 0x060020D2 RID: 8402 RVA: 0x000AADD0 File Offset: 0x000A8FD0
            // (set) Token: 0x060020D3 RID: 8403 RVA: 0x000AAE14 File Offset: 0x000A9014
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabledtBusesTransf.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'dtBusesTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtBusesTransf.idTransfColumn] = value;
                }
            }

            // Token: 0x17000879 RID: 2169
            // (get) Token: 0x060020D4 RID: 8404 RVA: 0x000AAE30 File Offset: 0x000A9030
            // (set) Token: 0x060020D5 RID: 8405 RVA: 0x000AAE74 File Offset: 0x000A9074
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtBusesTransf.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'dtBusesTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtBusesTransf.NameTransfColumn] = value;
                }
            }

            // Token: 0x1700087A RID: 2170
            // (get) Token: 0x060020D6 RID: 8406 RVA: 0x000AAE88 File Offset: 0x000A9088
            // (set) Token: 0x060020D7 RID: 8407 RVA: 0x000AAECC File Offset: 0x000A90CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameBusTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabledtBusesTransf.NameBusTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBusTransf' in table 'dtBusesTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabledtBusesTransf.NameBusTransfColumn] = value;
                }
            }

            // Token: 0x060020D8 RID: 8408 RVA: 0x000AAEE0 File Offset: 0x000A90E0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tabledtBusesTransf.idBusColumn);
            }

            // Token: 0x060020D9 RID: 8409 RVA: 0x000AAEF3 File Offset: 0x000A90F3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidBusNull()
            {
                base[this.tabledtBusesTransf.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x060020DA RID: 8410 RVA: 0x000AAF0B File Offset: 0x000A910B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tabledtBusesTransf.NameBusColumn);
            }

            // Token: 0x060020DB RID: 8411 RVA: 0x000AAF1E File Offset: 0x000A911E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tabledtBusesTransf.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x060020DC RID: 8412 RVA: 0x000AAF36 File Offset: 0x000A9136
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tabledtBusesTransf.idTransfColumn);
            }

            // Token: 0x060020DD RID: 8413 RVA: 0x000AAF49 File Offset: 0x000A9149
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidTransfNull()
            {
                base[this.tabledtBusesTransf.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060020DE RID: 8414 RVA: 0x000AAF61 File Offset: 0x000A9161
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tabledtBusesTransf.NameTransfColumn);
            }

            // Token: 0x060020DF RID: 8415 RVA: 0x000AAF74 File Offset: 0x000A9174
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameTransfNull()
            {
                base[this.tabledtBusesTransf.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060020E0 RID: 8416 RVA: 0x000AAF8C File Offset: 0x000A918C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameBusTransfNull()
            {
                return base.IsNull(this.tabledtBusesTransf.NameBusTransfColumn);
            }

            // Token: 0x060020E1 RID: 8417 RVA: 0x000AAF9F File Offset: 0x000A919F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameBusTransfNull()
            {
                base[this.tabledtBusesTransf.NameBusTransfColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD4 RID: 3028
            private DataSetGES.dtBusesTransfDataTable tabledtBusesTransf;
        }

        // Token: 0x02000175 RID: 373
        public class vJ_BusesTransfSchemaRow : DataRow
        {
            // Token: 0x060020E2 RID: 8418 RVA: 0x000AAFB7 File Offset: 0x000A91B7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_BusesTransfSchemaRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_BusesTransfSchema = (DataSetGES.vJ_BusesTransfSchemaDataTable)base.Table;
            }

            // Token: 0x1700087B RID: 2171
            // (get) Token: 0x060020E3 RID: 8419 RVA: 0x000AAFD1 File Offset: 0x000A91D1
            // (set) Token: 0x060020E4 RID: 8420 RVA: 0x000AAFE9 File Offset: 0x000A91E9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSub
            {
                get
                {
                    return (int)base[this.tablevJ_BusesTransfSchema.idSubColumn];
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.idSubColumn] = value;
                }
            }

            // Token: 0x1700087C RID: 2172
            // (get) Token: 0x060020E5 RID: 8421 RVA: 0x000AB002 File Offset: 0x000A9202
            // (set) Token: 0x060020E6 RID: 8422 RVA: 0x000AB01A File Offset: 0x000A921A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    return (int)base[this.tablevJ_BusesTransfSchema.idBusColumn];
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.idBusColumn] = value;
                }
            }

            // Token: 0x1700087D RID: 2173
            // (get) Token: 0x060020E7 RID: 8423 RVA: 0x000AB034 File Offset: 0x000A9234
            // (set) Token: 0x060020E8 RID: 8424 RVA: 0x000AB078 File Offset: 0x000A9278
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_BusesTransfSchema.nameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameBus' in table 'vJ_BusesTransfSchema' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.nameBusColumn] = value;
                }
            }

            // Token: 0x1700087E RID: 2174
            // (get) Token: 0x060020E9 RID: 8425 RVA: 0x000AB08C File Offset: 0x000A928C
            // (set) Token: 0x060020EA RID: 8426 RVA: 0x000AB0D0 File Offset: 0x000A92D0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int tagBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_BusesTransfSchema.tagBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'tagBus' in table 'vJ_BusesTransfSchema' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.tagBusColumn] = value;
                }
            }

            // Token: 0x1700087F RID: 2175
            // (get) Token: 0x060020EB RID: 8427 RVA: 0x000AB0EC File Offset: 0x000A92EC
            // (set) Token: 0x060020EC RID: 8428 RVA: 0x000AB130 File Offset: 0x000A9330
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string parentKeyBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_BusesTransfSchema.parentKeyBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'parentKeyBus' in table 'vJ_BusesTransfSchema' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.parentKeyBusColumn] = value;
                }
            }

            // Token: 0x17000880 RID: 2176
            // (get) Token: 0x060020ED RID: 8429 RVA: 0x000AB144 File Offset: 0x000A9344
            // (set) Token: 0x060020EE RID: 8430 RVA: 0x000AB188 File Offset: 0x000A9388
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_BusesTransfSchema.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_BusesTransfSchema' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.idTransfColumn] = value;
                }
            }

            // Token: 0x17000881 RID: 2177
            // (get) Token: 0x060020EF RID: 8431 RVA: 0x000AB1A4 File Offset: 0x000A93A4
            // (set) Token: 0x060020F0 RID: 8432 RVA: 0x000AB1E8 File Offset: 0x000A93E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_BusesTransfSchema.NameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameTransf' in table 'vJ_BusesTransfSchema' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.NameTransfColumn] = value;
                }
            }

            // Token: 0x17000882 RID: 2178
            // (get) Token: 0x060020F1 RID: 8433 RVA: 0x000AB1FC File Offset: 0x000A93FC
            // (set) Token: 0x060020F2 RID: 8434 RVA: 0x000AB240 File Offset: 0x000A9440
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string nameBusTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_BusesTransfSchema.nameBusTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameBusTransf' in table 'vJ_BusesTransfSchema' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfSchema.nameBusTransfColumn] = value;
                }
            }

            // Token: 0x060020F3 RID: 8435 RVA: 0x000AB254 File Offset: 0x000A9454
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsnameBusNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfSchema.nameBusColumn);
            }

            // Token: 0x060020F4 RID: 8436 RVA: 0x000AB267 File Offset: 0x000A9467
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetnameBusNull()
            {
                base[this.tablevJ_BusesTransfSchema.nameBusColumn] = Convert.DBNull;
            }

            // Token: 0x060020F5 RID: 8437 RVA: 0x000AB27F File Offset: 0x000A947F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IstagBusNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfSchema.tagBusColumn);
            }

            // Token: 0x060020F6 RID: 8438 RVA: 0x000AB292 File Offset: 0x000A9492
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettagBusNull()
            {
                base[this.tablevJ_BusesTransfSchema.tagBusColumn] = Convert.DBNull;
            }

            // Token: 0x060020F7 RID: 8439 RVA: 0x000AB2AA File Offset: 0x000A94AA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsparentKeyBusNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfSchema.parentKeyBusColumn);
            }

            // Token: 0x060020F8 RID: 8440 RVA: 0x000AB2BD File Offset: 0x000A94BD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetparentKeyBusNull()
            {
                base[this.tablevJ_BusesTransfSchema.parentKeyBusColumn] = Convert.DBNull;
            }

            // Token: 0x060020F9 RID: 8441 RVA: 0x000AB2D5 File Offset: 0x000A94D5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfSchema.idTransfColumn);
            }

            // Token: 0x060020FA RID: 8442 RVA: 0x000AB2E8 File Offset: 0x000A94E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidTransfNull()
            {
                base[this.tablevJ_BusesTransfSchema.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060020FB RID: 8443 RVA: 0x000AB300 File Offset: 0x000A9500
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameTransfNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfSchema.NameTransfColumn);
            }

            // Token: 0x060020FC RID: 8444 RVA: 0x000AB313 File Offset: 0x000A9513
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameTransfNull()
            {
                base[this.tablevJ_BusesTransfSchema.NameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060020FD RID: 8445 RVA: 0x000AB32B File Offset: 0x000A952B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsnameBusTransfNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfSchema.nameBusTransfColumn);
            }

            // Token: 0x060020FE RID: 8446 RVA: 0x000AB33E File Offset: 0x000A953E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetnameBusTransfNull()
            {
                base[this.tablevJ_BusesTransfSchema.nameBusTransfColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD5 RID: 3029
            private DataSetGES.vJ_BusesTransfSchemaDataTable tablevJ_BusesTransfSchema;
        }

        // Token: 0x02000176 RID: 374
        public class vJ_BusesTransfsRow : DataRow
        {
            // Token: 0x060020FF RID: 8447 RVA: 0x000AB356 File Offset: 0x000A9556
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_BusesTransfsRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_BusesTransfs = (DataSetGES.vJ_BusesTransfsDataTable)base.Table;
            }

            // Token: 0x17000883 RID: 2179
            // (get) Token: 0x06002100 RID: 8448 RVA: 0x000AB370 File Offset: 0x000A9570
            // (set) Token: 0x06002101 RID: 8449 RVA: 0x000AB388 File Offset: 0x000A9588
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idmeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_BusesTransfs.idmeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.idmeasurementColumn] = value;
                }
            }

            // Token: 0x17000884 RID: 2180
            // (get) Token: 0x06002102 RID: 8450 RVA: 0x000AB3A1 File Offset: 0x000A95A1
            // (set) Token: 0x06002103 RID: 8451 RVA: 0x000AB3B9 File Offset: 0x000A95B9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSubstation
            {
                get
                {
                    return (int)base[this.tablevJ_BusesTransfs.idSubstationColumn];
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.idSubstationColumn] = value;
                }
            }

            // Token: 0x17000885 RID: 2181
            // (get) Token: 0x06002104 RID: 8452 RVA: 0x000AB3D2 File Offset: 0x000A95D2
            // (set) Token: 0x06002105 RID: 8453 RVA: 0x000AB3EA File Offset: 0x000A95EA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeDoc
            {
                get
                {
                    return (int)base[this.tablevJ_BusesTransfs.TypeDocColumn];
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.TypeDocColumn] = value;
                }
            }

            // Token: 0x17000886 RID: 2182
            // (get) Token: 0x06002106 RID: 8454 RVA: 0x000AB404 File Offset: 0x000A9604
            // (set) Token: 0x06002107 RID: 8455 RVA: 0x000AB448 File Offset: 0x000A9648
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_BusesTransfs.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_BusesTransfs' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.idBusColumn] = value;
                }
            }

            // Token: 0x17000887 RID: 2183
            // (get) Token: 0x06002108 RID: 8456 RVA: 0x000AB464 File Offset: 0x000A9664
            // (set) Token: 0x06002109 RID: 8457 RVA: 0x000AB4A8 File Offset: 0x000A96A8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string nameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_BusesTransfs.nameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameBus' in table 'vJ_BusesTransfs' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.nameBusColumn] = value;
                }
            }

            // Token: 0x17000888 RID: 2184
            // (get) Token: 0x0600210A RID: 8458 RVA: 0x000AB4BC File Offset: 0x000A96BC
            // (set) Token: 0x0600210B RID: 8459 RVA: 0x000AB500 File Offset: 0x000A9700
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_BusesTransfs.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_BusesTransfs' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.idTransfColumn] = value;
                }
            }

            // Token: 0x17000889 RID: 2185
            // (get) Token: 0x0600210C RID: 8460 RVA: 0x000AB51C File Offset: 0x000A971C
            // (set) Token: 0x0600210D RID: 8461 RVA: 0x000AB560 File Offset: 0x000A9760
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string nameTransf
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_BusesTransfs.nameTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'nameTransf' in table 'vJ_BusesTransfs' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.nameTransfColumn] = value;
                }
            }

            // Token: 0x1700088A RID: 2186
            // (get) Token: 0x0600210E RID: 8462 RVA: 0x000AB574 File Offset: 0x000A9774
            // (set) Token: 0x0600210F RID: 8463 RVA: 0x000AB5B8 File Offset: 0x000A97B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_BusesTransfs.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_BusesTransfs' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_BusesTransfs.NameColumn] = value;
                }
            }

            // Token: 0x06002110 RID: 8464 RVA: 0x000AB5CC File Offset: 0x000A97CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfs.idBusColumn);
            }

            // Token: 0x06002111 RID: 8465 RVA: 0x000AB5DF File Offset: 0x000A97DF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidBusNull()
            {
                base[this.tablevJ_BusesTransfs.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x06002112 RID: 8466 RVA: 0x000AB5F7 File Offset: 0x000A97F7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameBusNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfs.nameBusColumn);
            }

            // Token: 0x06002113 RID: 8467 RVA: 0x000AB60A File Offset: 0x000A980A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameBusNull()
            {
                base[this.tablevJ_BusesTransfs.nameBusColumn] = Convert.DBNull;
            }

            // Token: 0x06002114 RID: 8468 RVA: 0x000AB622 File Offset: 0x000A9822
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfs.idTransfColumn);
            }

            // Token: 0x06002115 RID: 8469 RVA: 0x000AB635 File Offset: 0x000A9835
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidTransfNull()
            {
                base[this.tablevJ_BusesTransfs.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06002116 RID: 8470 RVA: 0x000AB64D File Offset: 0x000A984D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsnameTransfNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfs.nameTransfColumn);
            }

            // Token: 0x06002117 RID: 8471 RVA: 0x000AB660 File Offset: 0x000A9860
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetnameTransfNull()
            {
                base[this.tablevJ_BusesTransfs.nameTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06002118 RID: 8472 RVA: 0x000AB678 File Offset: 0x000A9878
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevJ_BusesTransfs.NameColumn);
            }

            // Token: 0x06002119 RID: 8473 RVA: 0x000AB68B File Offset: 0x000A988B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull()
            {
                base[this.tablevJ_BusesTransfs.NameColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD6 RID: 3030
            private DataSetGES.vJ_BusesTransfsDataTable tablevJ_BusesTransfs;
        }

        // Token: 0x02000177 RID: 375
        public class vJ_MeasCableReportRow : DataRow
        {
            // Token: 0x0600211A RID: 8474 RVA: 0x000AB6A3 File Offset: 0x000A98A3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasCableReportRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasCableReport = (DataSetGES.vJ_MeasCableReportDataTable)base.Table;
            }

            // Token: 0x1700088B RID: 2187
            // (get) Token: 0x0600211B RID: 8475 RVA: 0x000AB6BD File Offset: 0x000A98BD
            // (set) Token: 0x0600211C RID: 8476 RVA: 0x000AB6D5 File Offset: 0x000A98D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCableReport.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.idColumn] = value;
                }
            }

            // Token: 0x1700088C RID: 2188
            // (get) Token: 0x0600211D RID: 8477 RVA: 0x000AB6EE File Offset: 0x000A98EE
            // (set) Token: 0x0600211E RID: 8478 RVA: 0x000AB706 File Offset: 0x000A9906
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCableReport.idMeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.idMeasurementColumn] = value;
                }
            }

            // Token: 0x1700088D RID: 2189
            // (get) Token: 0x0600211F RID: 8479 RVA: 0x000AB720 File Offset: 0x000A9920
            // (set) Token: 0x06002120 RID: 8480 RVA: 0x000AB764 File Offset: 0x000A9964
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.idBusColumn] = value;
                }
            }

            // Token: 0x1700088E RID: 2190
            // (get) Token: 0x06002121 RID: 8481 RVA: 0x000AB77D File Offset: 0x000A997D
            // (set) Token: 0x06002122 RID: 8482 RVA: 0x000AB795 File Offset: 0x000A9995
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCableReport.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.idTransfColumn] = value;
                }
            }

            // Token: 0x1700088F RID: 2191
            // (get) Token: 0x06002123 RID: 8483 RVA: 0x000AB7B0 File Offset: 0x000A99B0
            // (set) Token: 0x06002124 RID: 8484 RVA: 0x000AB7F4 File Offset: 0x000A99F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.idCellColumn] = value;
                }
            }

            // Token: 0x17000890 RID: 2192
            // (get) Token: 0x06002125 RID: 8485 RVA: 0x000AB810 File Offset: 0x000A9A10
            // (set) Token: 0x06002126 RID: 8486 RVA: 0x000AB854 File Offset: 0x000A9A54
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CellName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport.CellNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CellName' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.CellNameColumn] = value;
                }
            }

            // Token: 0x17000891 RID: 2193
            // (get) Token: 0x06002127 RID: 8487 RVA: 0x000AB868 File Offset: 0x000A9A68
            // (set) Token: 0x06002128 RID: 8488 RVA: 0x000AB8AC File Offset: 0x000A9AAC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.idCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.idCableColumn] = value;
                }
            }

            // Token: 0x17000892 RID: 2194
            // (get) Token: 0x06002129 RID: 8489 RVA: 0x000AB8C8 File Offset: 0x000A9AC8
            // (set) Token: 0x0600212A RID: 8490 RVA: 0x000AB90C File Offset: 0x000A9B0C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Address
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport.AddressColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Address' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.AddressColumn] = value;
                }
            }

            // Token: 0x17000893 RID: 2195
            // (get) Token: 0x0600212B RID: 8491 RVA: 0x000AB920 File Offset: 0x000A9B20
            // (set) Token: 0x0600212C RID: 8492 RVA: 0x000AB964 File Offset: 0x000A9B64
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSchmAbn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.idSchmAbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idSchmAbn' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.idSchmAbnColumn] = value;
                }
            }

            // Token: 0x17000894 RID: 2196
            // (get) Token: 0x0600212D RID: 8493 RVA: 0x000AB980 File Offset: 0x000A9B80
            // (set) Token: 0x0600212E RID: 8494 RVA: 0x000AB9C4 File Offset: 0x000A9BC4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Makeup
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport.MakeupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.MakeupColumn] = value;
                }
            }

            // Token: 0x17000895 RID: 2197
            // (get) Token: 0x0600212F RID: 8495 RVA: 0x000AB9D8 File Offset: 0x000A9BD8
            // (set) Token: 0x06002130 RID: 8496 RVA: 0x000ABA1C File Offset: 0x000A9C1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Voltage
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.VoltageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.VoltageColumn] = value;
                }
            }

            // Token: 0x17000896 RID: 2198
            // (get) Token: 0x06002131 RID: 8497 RVA: 0x000ABA38 File Offset: 0x000A9C38
            // (set) Token: 0x06002132 RID: 8498 RVA: 0x000ABA7C File Offset: 0x000A9C7C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Wires
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.WiresColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.WiresColumn] = value;
                }
            }

            // Token: 0x17000897 RID: 2199
            // (get) Token: 0x06002133 RID: 8499 RVA: 0x000ABA98 File Offset: 0x000A9C98
            // (set) Token: 0x06002134 RID: 8500 RVA: 0x000ABADC File Offset: 0x000A9CDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSection
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_MeasCableReport.CrossSectionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.CrossSectionColumn] = value;
                }
            }

            // Token: 0x17000898 RID: 2200
            // (get) Token: 0x06002135 RID: 8501 RVA: 0x000ABAF8 File Offset: 0x000A9CF8
            // (set) Token: 0x06002136 RID: 8502 RVA: 0x000ABB3C File Offset: 0x000A9D3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_MeasCableReport.PermisAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.PermisAmperageColumn] = value;
                }
            }

            // Token: 0x17000899 RID: 2201
            // (get) Token: 0x06002137 RID: 8503 RVA: 0x000ABB58 File Offset: 0x000A9D58
            // (set) Token: 0x06002138 RID: 8504 RVA: 0x000ABB9C File Offset: 0x000A9D9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IadColumn] = value;
                }
            }

            // Token: 0x1700089A RID: 2202
            // (get) Token: 0x06002139 RID: 8505 RVA: 0x000ABBB8 File Offset: 0x000A9DB8
            // (set) Token: 0x0600213A RID: 8506 RVA: 0x000ABBFC File Offset: 0x000A9DFC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ian
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IanColumn] = value;
                }
            }

            // Token: 0x1700089B RID: 2203
            // (get) Token: 0x0600213B RID: 8507 RVA: 0x000ABC18 File Offset: 0x000A9E18
            // (set) Token: 0x0600213C RID: 8508 RVA: 0x000ABC5C File Offset: 0x000A9E5C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IbdColumn] = value;
                }
            }

            // Token: 0x1700089C RID: 2204
            // (get) Token: 0x0600213D RID: 8509 RVA: 0x000ABC78 File Offset: 0x000A9E78
            // (set) Token: 0x0600213E RID: 8510 RVA: 0x000ABCBC File Offset: 0x000A9EBC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IbnColumn] = value;
                }
            }

            // Token: 0x1700089D RID: 2205
            // (get) Token: 0x0600213F RID: 8511 RVA: 0x000ABCD8 File Offset: 0x000A9ED8
            // (set) Token: 0x06002140 RID: 8512 RVA: 0x000ABD1C File Offset: 0x000A9F1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IcdColumn] = value;
                }
            }

            // Token: 0x1700089E RID: 2206
            // (get) Token: 0x06002141 RID: 8513 RVA: 0x000ABD38 File Offset: 0x000A9F38
            // (set) Token: 0x06002142 RID: 8514 RVA: 0x000ABD7C File Offset: 0x000A9F7C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Icn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IcnColumn] = value;
                }
            }

            // Token: 0x1700089F RID: 2207
            // (get) Token: 0x06002143 RID: 8515 RVA: 0x000ABD98 File Offset: 0x000A9F98
            // (set) Token: 0x06002144 RID: 8516 RVA: 0x000ABDDC File Offset: 0x000A9FDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Iod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iod' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IodColumn] = value;
                }
            }

            // Token: 0x170008A0 RID: 2208
            // (get) Token: 0x06002145 RID: 8517 RVA: 0x000ABDF8 File Offset: 0x000A9FF8
            // (set) Token: 0x06002146 RID: 8518 RVA: 0x000ABE3C File Offset: 0x000AA03C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport.IonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ion' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.IonColumn] = value;
                }
            }

            // Token: 0x170008A1 RID: 2209
            // (get) Token: 0x06002147 RID: 8519 RVA: 0x000ABE58 File Offset: 0x000AA058
            // (set) Token: 0x06002148 RID: 8520 RVA: 0x000ABE9C File Offset: 0x000AA09C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCableReport' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport.CommentColumn] = value;
                }
            }

            // Token: 0x06002149 RID: 8521 RVA: 0x000ABEB0 File Offset: 0x000AA0B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.idBusColumn);
            }

            // Token: 0x0600214A RID: 8522 RVA: 0x000ABEC3 File Offset: 0x000AA0C3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidBusNull()
            {
                base[this.tablevJ_MeasCableReport.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x0600214B RID: 8523 RVA: 0x000ABEDB File Offset: 0x000AA0DB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.idCellColumn);
            }

            // Token: 0x0600214C RID: 8524 RVA: 0x000ABEEE File Offset: 0x000AA0EE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidCellNull()
            {
                base[this.tablevJ_MeasCableReport.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x0600214D RID: 8525 RVA: 0x000ABF06 File Offset: 0x000AA106
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCellNameNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.CellNameColumn);
            }

            // Token: 0x0600214E RID: 8526 RVA: 0x000ABF19 File Offset: 0x000AA119
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCellNameNull()
            {
                base[this.tablevJ_MeasCableReport.CellNameColumn] = Convert.DBNull;
            }

            // Token: 0x0600214F RID: 8527 RVA: 0x000ABF31 File Offset: 0x000AA131
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCableNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.idCableColumn);
            }

            // Token: 0x06002150 RID: 8528 RVA: 0x000ABF44 File Offset: 0x000AA144
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidCableNull()
            {
                base[this.tablevJ_MeasCableReport.idCableColumn] = Convert.DBNull;
            }

            // Token: 0x06002151 RID: 8529 RVA: 0x000ABF5C File Offset: 0x000AA15C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsAddressNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.AddressColumn);
            }

            // Token: 0x06002152 RID: 8530 RVA: 0x000ABF6F File Offset: 0x000AA16F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull()
            {
                base[this.tablevJ_MeasCableReport.AddressColumn] = Convert.DBNull;
            }

            // Token: 0x06002153 RID: 8531 RVA: 0x000ABF87 File Offset: 0x000AA187
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidSchmAbnNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.idSchmAbnColumn);
            }

            // Token: 0x06002154 RID: 8532 RVA: 0x000ABF9A File Offset: 0x000AA19A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidSchmAbnNull()
            {
                base[this.tablevJ_MeasCableReport.idSchmAbnColumn] = Convert.DBNull;
            }

            // Token: 0x06002155 RID: 8533 RVA: 0x000ABFB2 File Offset: 0x000AA1B2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsMakeupNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.MakeupColumn);
            }

            // Token: 0x06002156 RID: 8534 RVA: 0x000ABFC5 File Offset: 0x000AA1C5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMakeupNull()
            {
                base[this.tablevJ_MeasCableReport.MakeupColumn] = Convert.DBNull;
            }

            // Token: 0x06002157 RID: 8535 RVA: 0x000ABFDD File Offset: 0x000AA1DD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsVoltageNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.VoltageColumn);
            }

            // Token: 0x06002158 RID: 8536 RVA: 0x000ABFF0 File Offset: 0x000AA1F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetVoltageNull()
            {
                base[this.tablevJ_MeasCableReport.VoltageColumn] = Convert.DBNull;
            }

            // Token: 0x06002159 RID: 8537 RVA: 0x000AC008 File Offset: 0x000AA208
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWiresNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.WiresColumn);
            }

            // Token: 0x0600215A RID: 8538 RVA: 0x000AC01B File Offset: 0x000AA21B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetWiresNull()
            {
                base[this.tablevJ_MeasCableReport.WiresColumn] = Convert.DBNull;
            }

            // Token: 0x0600215B RID: 8539 RVA: 0x000AC033 File Offset: 0x000AA233
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCrossSectionNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.CrossSectionColumn);
            }

            // Token: 0x0600215C RID: 8540 RVA: 0x000AC046 File Offset: 0x000AA246
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCrossSectionNull()
            {
                base[this.tablevJ_MeasCableReport.CrossSectionColumn] = Convert.DBNull;
            }

            // Token: 0x0600215D RID: 8541 RVA: 0x000AC05E File Offset: 0x000AA25E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPermisAmperageNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.PermisAmperageColumn);
            }

            // Token: 0x0600215E RID: 8542 RVA: 0x000AC071 File Offset: 0x000AA271
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPermisAmperageNull()
            {
                base[this.tablevJ_MeasCableReport.PermisAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x0600215F RID: 8543 RVA: 0x000AC089 File Offset: 0x000AA289
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIadNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IadColumn);
            }

            // Token: 0x06002160 RID: 8544 RVA: 0x000AC09C File Offset: 0x000AA29C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIadNull()
            {
                base[this.tablevJ_MeasCableReport.IadColumn] = Convert.DBNull;
            }

            // Token: 0x06002161 RID: 8545 RVA: 0x000AC0B4 File Offset: 0x000AA2B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIanNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IanColumn);
            }

            // Token: 0x06002162 RID: 8546 RVA: 0x000AC0C7 File Offset: 0x000AA2C7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIanNull()
            {
                base[this.tablevJ_MeasCableReport.IanColumn] = Convert.DBNull;
            }

            // Token: 0x06002163 RID: 8547 RVA: 0x000AC0DF File Offset: 0x000AA2DF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbdNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IbdColumn);
            }

            // Token: 0x06002164 RID: 8548 RVA: 0x000AC0F2 File Offset: 0x000AA2F2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbdNull()
            {
                base[this.tablevJ_MeasCableReport.IbdColumn] = Convert.DBNull;
            }

            // Token: 0x06002165 RID: 8549 RVA: 0x000AC10A File Offset: 0x000AA30A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbnNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IbnColumn);
            }

            // Token: 0x06002166 RID: 8550 RVA: 0x000AC11D File Offset: 0x000AA31D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbnNull()
            {
                base[this.tablevJ_MeasCableReport.IbnColumn] = Convert.DBNull;
            }

            // Token: 0x06002167 RID: 8551 RVA: 0x000AC135 File Offset: 0x000AA335
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcdNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IcdColumn);
            }

            // Token: 0x06002168 RID: 8552 RVA: 0x000AC148 File Offset: 0x000AA348
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcdNull()
            {
                base[this.tablevJ_MeasCableReport.IcdColumn] = Convert.DBNull;
            }

            // Token: 0x06002169 RID: 8553 RVA: 0x000AC160 File Offset: 0x000AA360
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIcnNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IcnColumn);
            }

            // Token: 0x0600216A RID: 8554 RVA: 0x000AC173 File Offset: 0x000AA373
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcnNull()
            {
                base[this.tablevJ_MeasCableReport.IcnColumn] = Convert.DBNull;
            }

            // Token: 0x0600216B RID: 8555 RVA: 0x000AC18B File Offset: 0x000AA38B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIodNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IodColumn);
            }

            // Token: 0x0600216C RID: 8556 RVA: 0x000AC19E File Offset: 0x000AA39E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIodNull()
            {
                base[this.tablevJ_MeasCableReport.IodColumn] = Convert.DBNull;
            }

            // Token: 0x0600216D RID: 8557 RVA: 0x000AC1B6 File Offset: 0x000AA3B6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIonNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.IonColumn);
            }

            // Token: 0x0600216E RID: 8558 RVA: 0x000AC1C9 File Offset: 0x000AA3C9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIonNull()
            {
                base[this.tablevJ_MeasCableReport.IonColumn] = Convert.DBNull;
            }

            // Token: 0x0600216F RID: 8559 RVA: 0x000AC1E1 File Offset: 0x000AA3E1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport.CommentColumn);
            }

            // Token: 0x06002170 RID: 8560 RVA: 0x000AC1F4 File Offset: 0x000AA3F4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tablevJ_MeasCableReport.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD7 RID: 3031
            private DataSetGES.vJ_MeasCableReportDataTable tablevJ_MeasCableReport;
        }

        // Token: 0x02000178 RID: 376
        public class tJ_MeasVoltageTransfRow : DataRow
        {
            // Token: 0x06002171 RID: 8561 RVA: 0x000AC20C File Offset: 0x000AA40C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal tJ_MeasVoltageTransfRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_MeasVoltageTransf = (DataSetGES.tJ_MeasVoltageTransfDataTable)base.Table;
            }

            // Token: 0x170008A2 RID: 2210
            // (get) Token: 0x06002172 RID: 8562 RVA: 0x000AC226 File Offset: 0x000AA426
            // (set) Token: 0x06002173 RID: 8563 RVA: 0x000AC23E File Offset: 0x000AA43E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_MeasVoltageTransf.idColumn];
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.idColumn] = value;
                }
            }

            // Token: 0x170008A3 RID: 2211
            // (get) Token: 0x06002174 RID: 8564 RVA: 0x000AC257 File Offset: 0x000AA457
            // (set) Token: 0x06002175 RID: 8565 RVA: 0x000AC26F File Offset: 0x000AA46F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tabletJ_MeasVoltageTransf.idMeasurementColumn];
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.idMeasurementColumn] = value;
                }
            }

            // Token: 0x170008A4 RID: 2212
            // (get) Token: 0x06002176 RID: 8566 RVA: 0x000AC288 File Offset: 0x000AA488
            // (set) Token: 0x06002177 RID: 8567 RVA: 0x000AC2CC File Offset: 0x000AA4CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.idBusColumn] = value;
                }
            }

            // Token: 0x170008A5 RID: 2213
            // (get) Token: 0x06002178 RID: 8568 RVA: 0x000AC2E5 File Offset: 0x000AA4E5
            // (set) Token: 0x06002179 RID: 8569 RVA: 0x000AC2FD File Offset: 0x000AA4FD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idObjList
            {
                get
                {
                    return (int)base[this.tabletJ_MeasVoltageTransf.idObjListColumn];
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.idObjListColumn] = value;
                }
            }

            // Token: 0x170008A6 RID: 2214
            // (get) Token: 0x0600217A RID: 8570 RVA: 0x000AC318 File Offset: 0x000AA518
            // (set) Token: 0x0600217B RID: 8571 RVA: 0x000AC35C File Offset: 0x000AA55C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSwitchPosition
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.idSwitchPositionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idSwitchPosition' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.idSwitchPositionColumn] = value;
                }
            }

            // Token: 0x170008A7 RID: 2215
            // (get) Token: 0x0600217C RID: 8572 RVA: 0x000AC378 File Offset: 0x000AA578
            // (set) Token: 0x0600217D RID: 8573 RVA: 0x000AC3BC File Offset: 0x000AA5BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uabd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UabdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uabd' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UabdColumn] = value;
                }
            }

            // Token: 0x170008A8 RID: 2216
            // (get) Token: 0x0600217E RID: 8574 RVA: 0x000AC3D8 File Offset: 0x000AA5D8
            // (set) Token: 0x0600217F RID: 8575 RVA: 0x000AC41C File Offset: 0x000AA61C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uabn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UabnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uabn' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UabnColumn] = value;
                }
            }

            // Token: 0x170008A9 RID: 2217
            // (get) Token: 0x06002180 RID: 8576 RVA: 0x000AC438 File Offset: 0x000AA638
            // (set) Token: 0x06002181 RID: 8577 RVA: 0x000AC47C File Offset: 0x000AA67C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubcd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UbcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubcd' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UbcdColumn] = value;
                }
            }

            // Token: 0x170008AA RID: 2218
            // (get) Token: 0x06002182 RID: 8578 RVA: 0x000AC498 File Offset: 0x000AA698
            // (set) Token: 0x06002183 RID: 8579 RVA: 0x000AC4DC File Offset: 0x000AA6DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ubcn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UbcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubcn' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UbcnColumn] = value;
                }
            }

            // Token: 0x170008AB RID: 2219
            // (get) Token: 0x06002184 RID: 8580 RVA: 0x000AC4F8 File Offset: 0x000AA6F8
            // (set) Token: 0x06002185 RID: 8581 RVA: 0x000AC53C File Offset: 0x000AA73C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ucad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UcadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucad' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UcadColumn] = value;
                }
            }

            // Token: 0x170008AC RID: 2220
            // (get) Token: 0x06002186 RID: 8582 RVA: 0x000AC558 File Offset: 0x000AA758
            // (set) Token: 0x06002187 RID: 8583 RVA: 0x000AC59C File Offset: 0x000AA79C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucan
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UcanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucan' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UcanColumn] = value;
                }
            }

            // Token: 0x170008AD RID: 2221
            // (get) Token: 0x06002188 RID: 8584 RVA: 0x000AC5B8 File Offset: 0x000AA7B8
            // (set) Token: 0x06002189 RID: 8585 RVA: 0x000AC5FC File Offset: 0x000AA7FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uaod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UaodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uaod' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UaodColumn] = value;
                }
            }

            // Token: 0x170008AE RID: 2222
            // (get) Token: 0x0600218A RID: 8586 RVA: 0x000AC618 File Offset: 0x000AA818
            // (set) Token: 0x0600218B RID: 8587 RVA: 0x000AC65C File Offset: 0x000AA85C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uaon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UaonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uaon' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UaonColumn] = value;
                }
            }

            // Token: 0x170008AF RID: 2223
            // (get) Token: 0x0600218C RID: 8588 RVA: 0x000AC678 File Offset: 0x000AA878
            // (set) Token: 0x0600218D RID: 8589 RVA: 0x000AC6BC File Offset: 0x000AA8BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UbodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubod' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UbodColumn] = value;
                }
            }

            // Token: 0x170008B0 RID: 2224
            // (get) Token: 0x0600218E RID: 8590 RVA: 0x000AC6D8 File Offset: 0x000AA8D8
            // (set) Token: 0x0600218F RID: 8591 RVA: 0x000AC71C File Offset: 0x000AA91C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UbonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubon' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UbonColumn] = value;
                }
            }

            // Token: 0x170008B1 RID: 2225
            // (get) Token: 0x06002190 RID: 8592 RVA: 0x000AC738 File Offset: 0x000AA938
            // (set) Token: 0x06002191 RID: 8593 RVA: 0x000AC77C File Offset: 0x000AA97C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UcodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucod' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UcodColumn] = value;
                }
            }

            // Token: 0x170008B2 RID: 2226
            // (get) Token: 0x06002192 RID: 8594 RVA: 0x000AC798 File Offset: 0x000AA998
            // (set) Token: 0x06002193 RID: 8595 RVA: 0x000AC7DC File Offset: 0x000AA9DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ucon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.UconColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucon' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.UconColumn] = value;
                }
            }

            // Token: 0x170008B3 RID: 2227
            // (get) Token: 0x06002194 RID: 8596 RVA: 0x000AC7F8 File Offset: 0x000AA9F8
            // (set) Token: 0x06002195 RID: 8597 RVA: 0x000AC83C File Offset: 0x000AAA3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIad' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIadColumn] = value;
                }
            }

            // Token: 0x170008B4 RID: 2228
            // (get) Token: 0x06002196 RID: 8598 RVA: 0x000AC858 File Offset: 0x000AAA58
            // (set) Token: 0x06002197 RID: 8599 RVA: 0x000AC89C File Offset: 0x000AAA9C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIan
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIan' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIanColumn] = value;
                }
            }

            // Token: 0x170008B5 RID: 2229
            // (get) Token: 0x06002198 RID: 8600 RVA: 0x000AC8B8 File Offset: 0x000AAAB8
            // (set) Token: 0x06002199 RID: 8601 RVA: 0x000AC8FC File Offset: 0x000AAAFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIbd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIbd' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIbdColumn] = value;
                }
            }

            // Token: 0x170008B6 RID: 2230
            // (get) Token: 0x0600219A RID: 8602 RVA: 0x000AC918 File Offset: 0x000AAB18
            // (set) Token: 0x0600219B RID: 8603 RVA: 0x000AC95C File Offset: 0x000AAB5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIbn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIbn' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIbnColumn] = value;
                }
            }

            // Token: 0x170008B7 RID: 2231
            // (get) Token: 0x0600219C RID: 8604 RVA: 0x000AC978 File Offset: 0x000AAB78
            // (set) Token: 0x0600219D RID: 8605 RVA: 0x000AC9BC File Offset: 0x000AABBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIcd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIcd' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIcdColumn] = value;
                }
            }

            // Token: 0x170008B8 RID: 2232
            // (get) Token: 0x0600219E RID: 8606 RVA: 0x000AC9D8 File Offset: 0x000AABD8
            // (set) Token: 0x0600219F RID: 8607 RVA: 0x000ACA1C File Offset: 0x000AAC1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SumIcn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIcn' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIcnColumn] = value;
                }
            }

            // Token: 0x170008B9 RID: 2233
            // (get) Token: 0x060021A0 RID: 8608 RVA: 0x000ACA38 File Offset: 0x000AAC38
            // (set) Token: 0x060021A1 RID: 8609 RVA: 0x000ACA7C File Offset: 0x000AAC7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIod' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIodColumn] = value;
                }
            }

            // Token: 0x170008BA RID: 2234
            // (get) Token: 0x060021A2 RID: 8610 RVA: 0x000ACA98 File Offset: 0x000AAC98
            // (set) Token: 0x060021A3 RID: 8611 RVA: 0x000ACADC File Offset: 0x000AACDC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int SumIon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.SumIonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SumIon' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.SumIonColumn] = value;
                }
            }

            // Token: 0x170008BB RID: 2235
            // (get) Token: 0x060021A4 RID: 8612 RVA: 0x000ACAF8 File Offset: 0x000AACF8
            // (set) Token: 0x060021A5 RID: 8613 RVA: 0x000ACB3C File Offset: 0x000AAD3C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Isrd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.IsrdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Isrd' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.IsrdColumn] = value;
                }
            }

            // Token: 0x170008BC RID: 2236
            // (get) Token: 0x060021A6 RID: 8614 RVA: 0x000ACB58 File Offset: 0x000AAD58
            // (set) Token: 0x060021A7 RID: 8615 RVA: 0x000ACB9C File Offset: 0x000AAD9C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Isrn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.IsrnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Isrn' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.IsrnColumn] = value;
                }
            }

            // Token: 0x170008BD RID: 2237
            // (get) Token: 0x060021A8 RID: 8616 RVA: 0x000ACBB8 File Offset: 0x000AADB8
            // (set) Token: 0x060021A9 RID: 8617 RVA: 0x000ACBFC File Offset: 0x000AADFC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kntd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.KntdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntd' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.KntdColumn] = value;
                }
            }

            // Token: 0x170008BE RID: 2238
            // (get) Token: 0x060021AA RID: 8618 RVA: 0x000ACC18 File Offset: 0x000AAE18
            // (set) Token: 0x060021AB RID: 8619 RVA: 0x000ACC5C File Offset: 0x000AAE5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Kntn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.KntnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kntn' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.KntnColumn] = value;
                }
            }

            // Token: 0x170008BF RID: 2239
            // (get) Token: 0x060021AC RID: 8620 RVA: 0x000ACC78 File Offset: 0x000AAE78
            // (set) Token: 0x060021AD RID: 8621 RVA: 0x000ACCBC File Offset: 0x000AAEBC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Kpfd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.KpfdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kpfd' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.KpfdColumn] = value;
                }
            }

            // Token: 0x170008C0 RID: 2240
            // (get) Token: 0x060021AE RID: 8622 RVA: 0x000ACCD8 File Offset: 0x000AAED8
            // (set) Token: 0x060021AF RID: 8623 RVA: 0x000ACD1C File Offset: 0x000AAF1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Kpfn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.KpfnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Kpfn' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.KpfnColumn] = value;
                }
            }

            // Token: 0x170008C1 RID: 2241
            // (get) Token: 0x060021B0 RID: 8624 RVA: 0x000ACD38 File Offset: 0x000AAF38
            // (set) Token: 0x060021B1 RID: 8625 RVA: 0x000ACD7C File Offset: 0x000AAF7C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idOldMeasurementTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasVoltageTransf.idOldMeasurementTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idOldMeasurementTransf' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.idOldMeasurementTransfColumn] = value;
                }
            }

            // Token: 0x170008C2 RID: 2242
            // (get) Token: 0x060021B2 RID: 8626 RVA: 0x000ACD98 File Offset: 0x000AAF98
            // (set) Token: 0x060021B3 RID: 8627 RVA: 0x000ACDDC File Offset: 0x000AAFDC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tabletJ_MeasVoltageTransf.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'tJ_MeasVoltageTransf' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasVoltageTransf.DeletedColumn] = value;
                }
            }

            // Token: 0x060021B4 RID: 8628 RVA: 0x000ACDF5 File Offset: 0x000AAFF5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.idBusColumn);
            }

            // Token: 0x060021B5 RID: 8629 RVA: 0x000ACE08 File Offset: 0x000AB008
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidBusNull()
            {
                base[this.tabletJ_MeasVoltageTransf.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x060021B6 RID: 8630 RVA: 0x000ACE20 File Offset: 0x000AB020
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidSwitchPositionNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.idSwitchPositionColumn);
            }

            // Token: 0x060021B7 RID: 8631 RVA: 0x000ACE33 File Offset: 0x000AB033
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidSwitchPositionNull()
            {
                base[this.tabletJ_MeasVoltageTransf.idSwitchPositionColumn] = Convert.DBNull;
            }

            // Token: 0x060021B8 RID: 8632 RVA: 0x000ACE4B File Offset: 0x000AB04B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUabdNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UabdColumn);
            }

            // Token: 0x060021B9 RID: 8633 RVA: 0x000ACE5E File Offset: 0x000AB05E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUabdNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UabdColumn] = Convert.DBNull;
            }

            // Token: 0x060021BA RID: 8634 RVA: 0x000ACE76 File Offset: 0x000AB076
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUabnNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UabnColumn);
            }

            // Token: 0x060021BB RID: 8635 RVA: 0x000ACE89 File Offset: 0x000AB089
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUabnNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UabnColumn] = Convert.DBNull;
            }

            // Token: 0x060021BC RID: 8636 RVA: 0x000ACEA1 File Offset: 0x000AB0A1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUbcdNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UbcdColumn);
            }

            // Token: 0x060021BD RID: 8637 RVA: 0x000ACEB4 File Offset: 0x000AB0B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUbcdNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UbcdColumn] = Convert.DBNull;
            }

            // Token: 0x060021BE RID: 8638 RVA: 0x000ACECC File Offset: 0x000AB0CC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUbcnNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UbcnColumn);
            }

            // Token: 0x060021BF RID: 8639 RVA: 0x000ACEDF File Offset: 0x000AB0DF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUbcnNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UbcnColumn] = Convert.DBNull;
            }

            // Token: 0x060021C0 RID: 8640 RVA: 0x000ACEF7 File Offset: 0x000AB0F7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUcadNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UcadColumn);
            }

            // Token: 0x060021C1 RID: 8641 RVA: 0x000ACF0A File Offset: 0x000AB10A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUcadNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UcadColumn] = Convert.DBNull;
            }

            // Token: 0x060021C2 RID: 8642 RVA: 0x000ACF22 File Offset: 0x000AB122
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUcanNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UcanColumn);
            }

            // Token: 0x060021C3 RID: 8643 RVA: 0x000ACF35 File Offset: 0x000AB135
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUcanNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UcanColumn] = Convert.DBNull;
            }

            // Token: 0x060021C4 RID: 8644 RVA: 0x000ACF4D File Offset: 0x000AB14D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUaodNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UaodColumn);
            }

            // Token: 0x060021C5 RID: 8645 RVA: 0x000ACF60 File Offset: 0x000AB160
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUaodNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UaodColumn] = Convert.DBNull;
            }

            // Token: 0x060021C6 RID: 8646 RVA: 0x000ACF78 File Offset: 0x000AB178
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUaonNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UaonColumn);
            }

            // Token: 0x060021C7 RID: 8647 RVA: 0x000ACF8B File Offset: 0x000AB18B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUaonNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UaonColumn] = Convert.DBNull;
            }

            // Token: 0x060021C8 RID: 8648 RVA: 0x000ACFA3 File Offset: 0x000AB1A3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUbodNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UbodColumn);
            }

            // Token: 0x060021C9 RID: 8649 RVA: 0x000ACFB6 File Offset: 0x000AB1B6
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUbodNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UbodColumn] = Convert.DBNull;
            }

            // Token: 0x060021CA RID: 8650 RVA: 0x000ACFCE File Offset: 0x000AB1CE
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUbonNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UbonColumn);
            }

            // Token: 0x060021CB RID: 8651 RVA: 0x000ACFE1 File Offset: 0x000AB1E1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUbonNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UbonColumn] = Convert.DBNull;
            }

            // Token: 0x060021CC RID: 8652 RVA: 0x000ACFF9 File Offset: 0x000AB1F9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUcodNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UcodColumn);
            }

            // Token: 0x060021CD RID: 8653 RVA: 0x000AD00C File Offset: 0x000AB20C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUcodNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UcodColumn] = Convert.DBNull;
            }

            // Token: 0x060021CE RID: 8654 RVA: 0x000AD024 File Offset: 0x000AB224
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUconNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.UconColumn);
            }

            // Token: 0x060021CF RID: 8655 RVA: 0x000AD037 File Offset: 0x000AB237
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUconNull()
            {
                base[this.tabletJ_MeasVoltageTransf.UconColumn] = Convert.DBNull;
            }

            // Token: 0x060021D0 RID: 8656 RVA: 0x000AD04F File Offset: 0x000AB24F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIadNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIadColumn);
            }

            // Token: 0x060021D1 RID: 8657 RVA: 0x000AD062 File Offset: 0x000AB262
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIadNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIadColumn] = Convert.DBNull;
            }

            // Token: 0x060021D2 RID: 8658 RVA: 0x000AD07A File Offset: 0x000AB27A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIanNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIanColumn);
            }

            // Token: 0x060021D3 RID: 8659 RVA: 0x000AD08D File Offset: 0x000AB28D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIanNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIanColumn] = Convert.DBNull;
            }

            // Token: 0x060021D4 RID: 8660 RVA: 0x000AD0A5 File Offset: 0x000AB2A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIbdNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIbdColumn);
            }

            // Token: 0x060021D5 RID: 8661 RVA: 0x000AD0B8 File Offset: 0x000AB2B8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIbdNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIbdColumn] = Convert.DBNull;
            }

            // Token: 0x060021D6 RID: 8662 RVA: 0x000AD0D0 File Offset: 0x000AB2D0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIbnNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIbnColumn);
            }

            // Token: 0x060021D7 RID: 8663 RVA: 0x000AD0E3 File Offset: 0x000AB2E3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIbnNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIbnColumn] = Convert.DBNull;
            }

            // Token: 0x060021D8 RID: 8664 RVA: 0x000AD0FB File Offset: 0x000AB2FB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumIcdNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIcdColumn);
            }

            // Token: 0x060021D9 RID: 8665 RVA: 0x000AD10E File Offset: 0x000AB30E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumIcdNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIcdColumn] = Convert.DBNull;
            }

            // Token: 0x060021DA RID: 8666 RVA: 0x000AD126 File Offset: 0x000AB326
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIcnNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIcnColumn);
            }

            // Token: 0x060021DB RID: 8667 RVA: 0x000AD139 File Offset: 0x000AB339
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumIcnNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIcnColumn] = Convert.DBNull;
            }

            // Token: 0x060021DC RID: 8668 RVA: 0x000AD151 File Offset: 0x000AB351
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIodNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIodColumn);
            }

            // Token: 0x060021DD RID: 8669 RVA: 0x000AD164 File Offset: 0x000AB364
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumIodNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIodColumn] = Convert.DBNull;
            }

            // Token: 0x060021DE RID: 8670 RVA: 0x000AD17C File Offset: 0x000AB37C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSumIonNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.SumIonColumn);
            }

            // Token: 0x060021DF RID: 8671 RVA: 0x000AD18F File Offset: 0x000AB38F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetSumIonNull()
            {
                base[this.tabletJ_MeasVoltageTransf.SumIonColumn] = Convert.DBNull;
            }

            // Token: 0x060021E0 RID: 8672 RVA: 0x000AD1A7 File Offset: 0x000AB3A7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsrdNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.IsrdColumn);
            }

            // Token: 0x060021E1 RID: 8673 RVA: 0x000AD1BA File Offset: 0x000AB3BA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIsrdNull()
            {
                base[this.tabletJ_MeasVoltageTransf.IsrdColumn] = Convert.DBNull;
            }

            // Token: 0x060021E2 RID: 8674 RVA: 0x000AD1D2 File Offset: 0x000AB3D2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsrnNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.IsrnColumn);
            }

            // Token: 0x060021E3 RID: 8675 RVA: 0x000AD1E5 File Offset: 0x000AB3E5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsrnNull()
            {
                base[this.tabletJ_MeasVoltageTransf.IsrnColumn] = Convert.DBNull;
            }

            // Token: 0x060021E4 RID: 8676 RVA: 0x000AD1FD File Offset: 0x000AB3FD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntdNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.KntdColumn);
            }

            // Token: 0x060021E5 RID: 8677 RVA: 0x000AD210 File Offset: 0x000AB410
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKntdNull()
            {
                base[this.tabletJ_MeasVoltageTransf.KntdColumn] = Convert.DBNull;
            }

            // Token: 0x060021E6 RID: 8678 RVA: 0x000AD228 File Offset: 0x000AB428
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKntnNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.KntnColumn);
            }

            // Token: 0x060021E7 RID: 8679 RVA: 0x000AD23B File Offset: 0x000AB43B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKntnNull()
            {
                base[this.tabletJ_MeasVoltageTransf.KntnColumn] = Convert.DBNull;
            }

            // Token: 0x060021E8 RID: 8680 RVA: 0x000AD253 File Offset: 0x000AB453
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKpfdNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.KpfdColumn);
            }

            // Token: 0x060021E9 RID: 8681 RVA: 0x000AD266 File Offset: 0x000AB466
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKpfdNull()
            {
                base[this.tabletJ_MeasVoltageTransf.KpfdColumn] = Convert.DBNull;
            }

            // Token: 0x060021EA RID: 8682 RVA: 0x000AD27E File Offset: 0x000AB47E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsKpfnNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.KpfnColumn);
            }

            // Token: 0x060021EB RID: 8683 RVA: 0x000AD291 File Offset: 0x000AB491
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetKpfnNull()
            {
                base[this.tabletJ_MeasVoltageTransf.KpfnColumn] = Convert.DBNull;
            }

            // Token: 0x060021EC RID: 8684 RVA: 0x000AD2A9 File Offset: 0x000AB4A9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidOldMeasurementTransfNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.idOldMeasurementTransfColumn);
            }

            // Token: 0x060021ED RID: 8685 RVA: 0x000AD2BC File Offset: 0x000AB4BC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidOldMeasurementTransfNull()
            {
                base[this.tabletJ_MeasVoltageTransf.idOldMeasurementTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060021EE RID: 8686 RVA: 0x000AD2D4 File Offset: 0x000AB4D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tabletJ_MeasVoltageTransf.DeletedColumn);
            }

            // Token: 0x060021EF RID: 8687 RVA: 0x000AD2E7 File Offset: 0x000AB4E7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedNull()
            {
                base[this.tabletJ_MeasVoltageTransf.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD8 RID: 3032
            private DataSetGES.tJ_MeasVoltageTransfDataTable tabletJ_MeasVoltageTransf;
        }

        // Token: 0x02000179 RID: 377
        public class vJ_MeasCableReport2Row : DataRow
        {
            // Token: 0x060021F0 RID: 8688 RVA: 0x000AD2FF File Offset: 0x000AB4FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasCableReport2Row(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasCableReport2 = (DataSetGES.vJ_MeasCableReport2DataTable)base.Table;
            }

            // Token: 0x170008C3 RID: 2243
            // (get) Token: 0x060021F1 RID: 8689 RVA: 0x000AD319 File Offset: 0x000AB519
            // (set) Token: 0x060021F2 RID: 8690 RVA: 0x000AD331 File Offset: 0x000AB531
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCableReport2.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.idColumn] = value;
                }
            }

            // Token: 0x170008C4 RID: 2244
            // (get) Token: 0x060021F3 RID: 8691 RVA: 0x000AD34A File Offset: 0x000AB54A
            // (set) Token: 0x060021F4 RID: 8692 RVA: 0x000AD362 File Offset: 0x000AB562
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCableReport2.idMeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.idMeasurementColumn] = value;
                }
            }

            // Token: 0x170008C5 RID: 2245
            // (get) Token: 0x060021F5 RID: 8693 RVA: 0x000AD37C File Offset: 0x000AB57C
            // (set) Token: 0x060021F6 RID: 8694 RVA: 0x000AD3C0 File Offset: 0x000AB5C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.idBusColumn] = value;
                }
            }

            // Token: 0x170008C6 RID: 2246
            // (get) Token: 0x060021F7 RID: 8695 RVA: 0x000AD3D9 File Offset: 0x000AB5D9
            // (set) Token: 0x060021F8 RID: 8696 RVA: 0x000AD3F1 File Offset: 0x000AB5F1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCableReport2.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.idTransfColumn] = value;
                }
            }

            // Token: 0x170008C7 RID: 2247
            // (get) Token: 0x060021F9 RID: 8697 RVA: 0x000AD40C File Offset: 0x000AB60C
            // (set) Token: 0x060021FA RID: 8698 RVA: 0x000AD450 File Offset: 0x000AB650
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.idCellColumn] = value;
                }
            }

            // Token: 0x170008C8 RID: 2248
            // (get) Token: 0x060021FB RID: 8699 RVA: 0x000AD46C File Offset: 0x000AB66C
            // (set) Token: 0x060021FC RID: 8700 RVA: 0x000AD4B0 File Offset: 0x000AB6B0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string CellName
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport2.CellNameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CellName' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.CellNameColumn] = value;
                }
            }

            // Token: 0x170008C9 RID: 2249
            // (get) Token: 0x060021FD RID: 8701 RVA: 0x000AD4C4 File Offset: 0x000AB6C4
            // (set) Token: 0x060021FE RID: 8702 RVA: 0x000AD508 File Offset: 0x000AB708
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.idCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.idCableColumn] = value;
                }
            }

            // Token: 0x170008CA RID: 2250
            // (get) Token: 0x060021FF RID: 8703 RVA: 0x000AD524 File Offset: 0x000AB724
            // (set) Token: 0x06002200 RID: 8704 RVA: 0x000AD568 File Offset: 0x000AB768
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Company
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport2.CompanyColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Company' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.CompanyColumn] = value;
                }
            }

            // Token: 0x170008CB RID: 2251
            // (get) Token: 0x06002201 RID: 8705 RVA: 0x000AD57C File Offset: 0x000AB77C
            // (set) Token: 0x06002202 RID: 8706 RVA: 0x000AD5C0 File Offset: 0x000AB7C0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Street
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport2.StreetColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Street' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.StreetColumn] = value;
                }
            }

            // Token: 0x170008CC RID: 2252
            // (get) Token: 0x06002203 RID: 8707 RVA: 0x000AD5D4 File Offset: 0x000AB7D4
            // (set) Token: 0x06002204 RID: 8708 RVA: 0x000AD618 File Offset: 0x000AB818
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int House
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.HouseColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'House' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.HouseColumn] = value;
                }
            }

            // Token: 0x170008CD RID: 2253
            // (get) Token: 0x06002205 RID: 8709 RVA: 0x000AD634 File Offset: 0x000AB834
            // (set) Token: 0x06002206 RID: 8710 RVA: 0x000AD678 File Offset: 0x000AB878
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string FullHouse
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport2.FullHouseColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'FullHouse' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.FullHouseColumn] = value;
                }
            }

            // Token: 0x170008CE RID: 2254
            // (get) Token: 0x06002207 RID: 8711 RVA: 0x000AD68C File Offset: 0x000AB88C
            // (set) Token: 0x06002208 RID: 8712 RVA: 0x000AD6D0 File Offset: 0x000AB8D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idSchmAbn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.idSchmAbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idSchmAbn' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.idSchmAbnColumn] = value;
                }
            }

            // Token: 0x170008CF RID: 2255
            // (get) Token: 0x06002209 RID: 8713 RVA: 0x000AD6EC File Offset: 0x000AB8EC
            // (set) Token: 0x0600220A RID: 8714 RVA: 0x000AD730 File Offset: 0x000AB930
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Makeup
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport2.MakeupColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Makeup' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.MakeupColumn] = value;
                }
            }

            // Token: 0x170008D0 RID: 2256
            // (get) Token: 0x0600220B RID: 8715 RVA: 0x000AD744 File Offset: 0x000AB944
            // (set) Token: 0x0600220C RID: 8716 RVA: 0x000AD788 File Offset: 0x000AB988
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Voltage
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.VoltageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Voltage' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.VoltageColumn] = value;
                }
            }

            // Token: 0x170008D1 RID: 2257
            // (get) Token: 0x0600220D RID: 8717 RVA: 0x000AD7A4 File Offset: 0x000AB9A4
            // (set) Token: 0x0600220E RID: 8718 RVA: 0x000AD7E8 File Offset: 0x000AB9E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Wires
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.WiresColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Wires' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.WiresColumn] = value;
                }
            }

            // Token: 0x170008D2 RID: 2258
            // (get) Token: 0x0600220F RID: 8719 RVA: 0x000AD804 File Offset: 0x000ABA04
            // (set) Token: 0x06002210 RID: 8720 RVA: 0x000AD848 File Offset: 0x000ABA48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double CrossSection
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_MeasCableReport2.CrossSectionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'CrossSection' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.CrossSectionColumn] = value;
                }
            }

            // Token: 0x170008D3 RID: 2259
            // (get) Token: 0x06002211 RID: 8721 RVA: 0x000AD864 File Offset: 0x000ABA64
            // (set) Token: 0x06002212 RID: 8722 RVA: 0x000AD8A8 File Offset: 0x000ABAA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermisAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_MeasCableReport2.PermisAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermisAmperage' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.PermisAmperageColumn] = value;
                }
            }

            // Token: 0x170008D4 RID: 2260
            // (get) Token: 0x06002213 RID: 8723 RVA: 0x000AD8C4 File Offset: 0x000ABAC4
            // (set) Token: 0x06002214 RID: 8724 RVA: 0x000AD908 File Offset: 0x000ABB08
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IadColumn] = value;
                }
            }

            // Token: 0x170008D5 RID: 2261
            // (get) Token: 0x06002215 RID: 8725 RVA: 0x000AD924 File Offset: 0x000ABB24
            // (set) Token: 0x06002216 RID: 8726 RVA: 0x000AD968 File Offset: 0x000ABB68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ian
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IanColumn] = value;
                }
            }

            // Token: 0x170008D6 RID: 2262
            // (get) Token: 0x06002217 RID: 8727 RVA: 0x000AD984 File Offset: 0x000ABB84
            // (set) Token: 0x06002218 RID: 8728 RVA: 0x000AD9C8 File Offset: 0x000ABBC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IbdColumn] = value;
                }
            }

            // Token: 0x170008D7 RID: 2263
            // (get) Token: 0x06002219 RID: 8729 RVA: 0x000AD9E4 File Offset: 0x000ABBE4
            // (set) Token: 0x0600221A RID: 8730 RVA: 0x000ADA28 File Offset: 0x000ABC28
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IbnColumn] = value;
                }
            }

            // Token: 0x170008D8 RID: 2264
            // (get) Token: 0x0600221B RID: 8731 RVA: 0x000ADA44 File Offset: 0x000ABC44
            // (set) Token: 0x0600221C RID: 8732 RVA: 0x000ADA88 File Offset: 0x000ABC88
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IcdColumn] = value;
                }
            }

            // Token: 0x170008D9 RID: 2265
            // (get) Token: 0x0600221D RID: 8733 RVA: 0x000ADAA4 File Offset: 0x000ABCA4
            // (set) Token: 0x0600221E RID: 8734 RVA: 0x000ADAE8 File Offset: 0x000ABCE8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IcnColumn] = value;
                }
            }

            // Token: 0x170008DA RID: 2266
            // (get) Token: 0x0600221F RID: 8735 RVA: 0x000ADB04 File Offset: 0x000ABD04
            // (set) Token: 0x06002220 RID: 8736 RVA: 0x000ADB48 File Offset: 0x000ABD48
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Iod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iod' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IodColumn] = value;
                }
            }

            // Token: 0x170008DB RID: 2267
            // (get) Token: 0x06002221 RID: 8737 RVA: 0x000ADB64 File Offset: 0x000ABD64
            // (set) Token: 0x06002222 RID: 8738 RVA: 0x000ADBA8 File Offset: 0x000ABDA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ion
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCableReport2.IonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ion' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.IonColumn] = value;
                }
            }

            // Token: 0x170008DC RID: 2268
            // (get) Token: 0x06002223 RID: 8739 RVA: 0x000ADBC4 File Offset: 0x000ABDC4
            // (set) Token: 0x06002224 RID: 8740 RVA: 0x000ADC08 File Offset: 0x000ABE08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCableReport2.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCableReport2' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCableReport2.CommentColumn] = value;
                }
            }

            // Token: 0x06002225 RID: 8741 RVA: 0x000ADC1C File Offset: 0x000ABE1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.idBusColumn);
            }

            // Token: 0x06002226 RID: 8742 RVA: 0x000ADC2F File Offset: 0x000ABE2F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidBusNull()
            {
                base[this.tablevJ_MeasCableReport2.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x06002227 RID: 8743 RVA: 0x000ADC47 File Offset: 0x000ABE47
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.idCellColumn);
            }

            // Token: 0x06002228 RID: 8744 RVA: 0x000ADC5A File Offset: 0x000ABE5A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidCellNull()
            {
                base[this.tablevJ_MeasCableReport2.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x06002229 RID: 8745 RVA: 0x000ADC72 File Offset: 0x000ABE72
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCellNameNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.CellNameColumn);
            }

            // Token: 0x0600222A RID: 8746 RVA: 0x000ADC85 File Offset: 0x000ABE85
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCellNameNull()
            {
                base[this.tablevJ_MeasCableReport2.CellNameColumn] = Convert.DBNull;
            }

            // Token: 0x0600222B RID: 8747 RVA: 0x000ADC9D File Offset: 0x000ABE9D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidCableNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.idCableColumn);
            }

            // Token: 0x0600222C RID: 8748 RVA: 0x000ADCB0 File Offset: 0x000ABEB0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidCableNull()
            {
                base[this.tablevJ_MeasCableReport2.idCableColumn] = Convert.DBNull;
            }

            // Token: 0x0600222D RID: 8749 RVA: 0x000ADCC8 File Offset: 0x000ABEC8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompanyNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.CompanyColumn);
            }

            // Token: 0x0600222E RID: 8750 RVA: 0x000ADCDB File Offset: 0x000ABEDB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompanyNull()
            {
                base[this.tablevJ_MeasCableReport2.CompanyColumn] = Convert.DBNull;
            }

            // Token: 0x0600222F RID: 8751 RVA: 0x000ADCF3 File Offset: 0x000ABEF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsStreetNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.StreetColumn);
            }

            // Token: 0x06002230 RID: 8752 RVA: 0x000ADD06 File Offset: 0x000ABF06
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetStreetNull()
            {
                base[this.tablevJ_MeasCableReport2.StreetColumn] = Convert.DBNull;
            }

            // Token: 0x06002231 RID: 8753 RVA: 0x000ADD1E File Offset: 0x000ABF1E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsHouseNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.HouseColumn);
            }

            // Token: 0x06002232 RID: 8754 RVA: 0x000ADD31 File Offset: 0x000ABF31
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetHouseNull()
            {
                base[this.tablevJ_MeasCableReport2.HouseColumn] = Convert.DBNull;
            }

            // Token: 0x06002233 RID: 8755 RVA: 0x000ADD49 File Offset: 0x000ABF49
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsFullHouseNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.FullHouseColumn);
            }

            // Token: 0x06002234 RID: 8756 RVA: 0x000ADD5C File Offset: 0x000ABF5C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetFullHouseNull()
            {
                base[this.tablevJ_MeasCableReport2.FullHouseColumn] = Convert.DBNull;
            }

            // Token: 0x06002235 RID: 8757 RVA: 0x000ADD74 File Offset: 0x000ABF74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidSchmAbnNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.idSchmAbnColumn);
            }

            // Token: 0x06002236 RID: 8758 RVA: 0x000ADD87 File Offset: 0x000ABF87
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidSchmAbnNull()
            {
                base[this.tablevJ_MeasCableReport2.idSchmAbnColumn] = Convert.DBNull;
            }

            // Token: 0x06002237 RID: 8759 RVA: 0x000ADD9F File Offset: 0x000ABF9F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsMakeupNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.MakeupColumn);
            }

            // Token: 0x06002238 RID: 8760 RVA: 0x000ADDB2 File Offset: 0x000ABFB2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMakeupNull()
            {
                base[this.tablevJ_MeasCableReport2.MakeupColumn] = Convert.DBNull;
            }

            // Token: 0x06002239 RID: 8761 RVA: 0x000ADDCA File Offset: 0x000ABFCA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsVoltageNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.VoltageColumn);
            }

            // Token: 0x0600223A RID: 8762 RVA: 0x000ADDDD File Offset: 0x000ABFDD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetVoltageNull()
            {
                base[this.tablevJ_MeasCableReport2.VoltageColumn] = Convert.DBNull;
            }

            // Token: 0x0600223B RID: 8763 RVA: 0x000ADDF5 File Offset: 0x000ABFF5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsWiresNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.WiresColumn);
            }

            // Token: 0x0600223C RID: 8764 RVA: 0x000ADE08 File Offset: 0x000AC008
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetWiresNull()
            {
                base[this.tablevJ_MeasCableReport2.WiresColumn] = Convert.DBNull;
            }

            // Token: 0x0600223D RID: 8765 RVA: 0x000ADE20 File Offset: 0x000AC020
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCrossSectionNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.CrossSectionColumn);
            }

            // Token: 0x0600223E RID: 8766 RVA: 0x000ADE33 File Offset: 0x000AC033
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCrossSectionNull()
            {
                base[this.tablevJ_MeasCableReport2.CrossSectionColumn] = Convert.DBNull;
            }

            // Token: 0x0600223F RID: 8767 RVA: 0x000ADE4B File Offset: 0x000AC04B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPermisAmperageNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.PermisAmperageColumn);
            }

            // Token: 0x06002240 RID: 8768 RVA: 0x000ADE5E File Offset: 0x000AC05E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPermisAmperageNull()
            {
                base[this.tablevJ_MeasCableReport2.PermisAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x06002241 RID: 8769 RVA: 0x000ADE76 File Offset: 0x000AC076
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIadNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IadColumn);
            }

            // Token: 0x06002242 RID: 8770 RVA: 0x000ADE89 File Offset: 0x000AC089
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIadNull()
            {
                base[this.tablevJ_MeasCableReport2.IadColumn] = Convert.DBNull;
            }

            // Token: 0x06002243 RID: 8771 RVA: 0x000ADEA1 File Offset: 0x000AC0A1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIanNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IanColumn);
            }

            // Token: 0x06002244 RID: 8772 RVA: 0x000ADEB4 File Offset: 0x000AC0B4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIanNull()
            {
                base[this.tablevJ_MeasCableReport2.IanColumn] = Convert.DBNull;
            }

            // Token: 0x06002245 RID: 8773 RVA: 0x000ADECC File Offset: 0x000AC0CC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbdNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IbdColumn);
            }

            // Token: 0x06002246 RID: 8774 RVA: 0x000ADEDF File Offset: 0x000AC0DF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbdNull()
            {
                base[this.tablevJ_MeasCableReport2.IbdColumn] = Convert.DBNull;
            }

            // Token: 0x06002247 RID: 8775 RVA: 0x000ADEF7 File Offset: 0x000AC0F7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbnNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IbnColumn);
            }

            // Token: 0x06002248 RID: 8776 RVA: 0x000ADF0A File Offset: 0x000AC10A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbnNull()
            {
                base[this.tablevJ_MeasCableReport2.IbnColumn] = Convert.DBNull;
            }

            // Token: 0x06002249 RID: 8777 RVA: 0x000ADF22 File Offset: 0x000AC122
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcdNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IcdColumn);
            }

            // Token: 0x0600224A RID: 8778 RVA: 0x000ADF35 File Offset: 0x000AC135
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcdNull()
            {
                base[this.tablevJ_MeasCableReport2.IcdColumn] = Convert.DBNull;
            }

            // Token: 0x0600224B RID: 8779 RVA: 0x000ADF4D File Offset: 0x000AC14D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIcnNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IcnColumn);
            }

            // Token: 0x0600224C RID: 8780 RVA: 0x000ADF60 File Offset: 0x000AC160
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcnNull()
            {
                base[this.tablevJ_MeasCableReport2.IcnColumn] = Convert.DBNull;
            }

            // Token: 0x0600224D RID: 8781 RVA: 0x000ADF78 File Offset: 0x000AC178
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIodNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IodColumn);
            }

            // Token: 0x0600224E RID: 8782 RVA: 0x000ADF8B File Offset: 0x000AC18B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIodNull()
            {
                base[this.tablevJ_MeasCableReport2.IodColumn] = Convert.DBNull;
            }

            // Token: 0x0600224F RID: 8783 RVA: 0x000ADFA3 File Offset: 0x000AC1A3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIonNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.IonColumn);
            }

            // Token: 0x06002250 RID: 8784 RVA: 0x000ADFB6 File Offset: 0x000AC1B6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIonNull()
            {
                base[this.tablevJ_MeasCableReport2.IonColumn] = Convert.DBNull;
            }

            // Token: 0x06002251 RID: 8785 RVA: 0x000ADFCE File Offset: 0x000AC1CE
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tablevJ_MeasCableReport2.CommentColumn);
            }

            // Token: 0x06002252 RID: 8786 RVA: 0x000ADFE1 File Offset: 0x000AC1E1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull()
            {
                base[this.tablevJ_MeasCableReport2.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x04000BD9 RID: 3033
            private DataSetGES.vJ_MeasCableReport2DataTable tablevJ_MeasCableReport2;
        }

        // Token: 0x0200017A RID: 378
        public class vJ_CableByCellMeasRow : DataRow
        {
            // Token: 0x06002253 RID: 8787 RVA: 0x000ADFF9 File Offset: 0x000AC1F9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_CableByCellMeasRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_CableByCellMeas = (DataSetGES.vJ_CableByCellMeasDataTable)base.Table;
            }

            // Token: 0x170008DD RID: 2269
            // (get) Token: 0x06002254 RID: 8788 RVA: 0x000AE013 File Offset: 0x000AC213
            // (set) Token: 0x06002255 RID: 8789 RVA: 0x000AE02B File Offset: 0x000AC22B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_CableByCellMeas.idMeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.idMeasurementColumn] = value;
                }
            }

            // Token: 0x170008DE RID: 2270
            // (get) Token: 0x06002256 RID: 8790 RVA: 0x000AE044 File Offset: 0x000AC244
            // (set) Token: 0x06002257 RID: 8791 RVA: 0x000AE088 File Offset: 0x000AC288
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableByCellMeas.idBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idBus' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.idBusColumn] = value;
                }
            }

            // Token: 0x170008DF RID: 2271
            // (get) Token: 0x06002258 RID: 8792 RVA: 0x000AE0A4 File Offset: 0x000AC2A4
            // (set) Token: 0x06002259 RID: 8793 RVA: 0x000AE0E8 File Offset: 0x000AC2E8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Name
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CableByCellMeas.NameColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Name' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.NameColumn] = value;
                }
            }

            // Token: 0x170008E0 RID: 2272
            // (get) Token: 0x0600225A RID: 8794 RVA: 0x000AE0FC File Offset: 0x000AC2FC
            // (set) Token: 0x0600225B RID: 8795 RVA: 0x000AE114 File Offset: 0x000AC314
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idTransf
            {
                get
                {
                    return (int)base[this.tablevJ_CableByCellMeas.idTransfColumn];
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.idTransfColumn] = value;
                }
            }

            // Token: 0x170008E1 RID: 2273
            // (get) Token: 0x0600225C RID: 8796 RVA: 0x000AE130 File Offset: 0x000AC330
            // (set) Token: 0x0600225D RID: 8797 RVA: 0x000AE174 File Offset: 0x000AC374
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableByCellMeas.idCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCell' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.idCellColumn] = value;
                }
            }

            // Token: 0x170008E2 RID: 2274
            // (get) Token: 0x0600225E RID: 8798 RVA: 0x000AE190 File Offset: 0x000AC390
            // (set) Token: 0x0600225F RID: 8799 RVA: 0x000AE1D4 File Offset: 0x000AC3D4
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CableByCellMeas.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.NameCellColumn] = value;
                }
            }

            // Token: 0x170008E3 RID: 2275
            // (get) Token: 0x06002260 RID: 8800 RVA: 0x000AE1E8 File Offset: 0x000AC3E8
            // (set) Token: 0x06002261 RID: 8801 RVA: 0x000AE22C File Offset: 0x000AC42C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int TypeCodeIdCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableByCellMeas.TypeCodeIdCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'TypeCodeIdCell' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.TypeCodeIdCellColumn] = value;
                }
            }

            // Token: 0x170008E4 RID: 2276
            // (get) Token: 0x06002262 RID: 8802 RVA: 0x000AE248 File Offset: 0x000AC448
            // (set) Token: 0x06002263 RID: 8803 RVA: 0x000AE28C File Offset: 0x000AC48C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idParentCell
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableByCellMeas.idParentCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idParentCell' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.idParentCellColumn] = value;
                }
            }

            // Token: 0x170008E5 RID: 2277
            // (get) Token: 0x06002264 RID: 8804 RVA: 0x000AE2A8 File Offset: 0x000AC4A8
            // (set) Token: 0x06002265 RID: 8805 RVA: 0x000AE2EC File Offset: 0x000AC4EC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCable
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_CableByCellMeas.idCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idCable' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.idCableColumn] = value;
                }
            }

            // Token: 0x170008E6 RID: 2278
            // (get) Token: 0x06002266 RID: 8806 RVA: 0x000AE308 File Offset: 0x000AC508
            // (set) Token: 0x06002267 RID: 8807 RVA: 0x000AE34C File Offset: 0x000AC54C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCable
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_CableByCellMeas.NameCableColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCable' in table 'vJ_CableByCellMeas' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_CableByCellMeas.NameCableColumn] = value;
                }
            }

            // Token: 0x06002268 RID: 8808 RVA: 0x000AE360 File Offset: 0x000AC560
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidBusNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.idBusColumn);
            }

            // Token: 0x06002269 RID: 8809 RVA: 0x000AE373 File Offset: 0x000AC573
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidBusNull()
            {
                base[this.tablevJ_CableByCellMeas.idBusColumn] = Convert.DBNull;
            }

            // Token: 0x0600226A RID: 8810 RVA: 0x000AE38B File Offset: 0x000AC58B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.NameColumn);
            }

            // Token: 0x0600226B RID: 8811 RVA: 0x000AE39E File Offset: 0x000AC59E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameNull()
            {
                base[this.tablevJ_CableByCellMeas.NameColumn] = Convert.DBNull;
            }

            // Token: 0x0600226C RID: 8812 RVA: 0x000AE3B6 File Offset: 0x000AC5B6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCellNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.idCellColumn);
            }

            // Token: 0x0600226D RID: 8813 RVA: 0x000AE3C9 File Offset: 0x000AC5C9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidCellNull()
            {
                base[this.tablevJ_CableByCellMeas.idCellColumn] = Convert.DBNull;
            }

            // Token: 0x0600226E RID: 8814 RVA: 0x000AE3E1 File Offset: 0x000AC5E1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.NameCellColumn);
            }

            // Token: 0x0600226F RID: 8815 RVA: 0x000AE3F4 File Offset: 0x000AC5F4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameCellNull()
            {
                base[this.tablevJ_CableByCellMeas.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x06002270 RID: 8816 RVA: 0x000AE40C File Offset: 0x000AC60C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsTypeCodeIdCellNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.TypeCodeIdCellColumn);
            }

            // Token: 0x06002271 RID: 8817 RVA: 0x000AE41F File Offset: 0x000AC61F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeIdCellNull()
            {
                base[this.tablevJ_CableByCellMeas.TypeCodeIdCellColumn] = Convert.DBNull;
            }

            // Token: 0x06002272 RID: 8818 RVA: 0x000AE437 File Offset: 0x000AC637
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidParentCellNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.idParentCellColumn);
            }

            // Token: 0x06002273 RID: 8819 RVA: 0x000AE44A File Offset: 0x000AC64A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidParentCellNull()
            {
                base[this.tablevJ_CableByCellMeas.idParentCellColumn] = Convert.DBNull;
            }

            // Token: 0x06002274 RID: 8820 RVA: 0x000AE462 File Offset: 0x000AC662
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidCableNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.idCableColumn);
            }

            // Token: 0x06002275 RID: 8821 RVA: 0x000AE475 File Offset: 0x000AC675
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidCableNull()
            {
                base[this.tablevJ_CableByCellMeas.idCableColumn] = Convert.DBNull;
            }

            // Token: 0x06002276 RID: 8822 RVA: 0x000AE48D File Offset: 0x000AC68D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameCableNull()
            {
                return base.IsNull(this.tablevJ_CableByCellMeas.NameCableColumn);
            }

            // Token: 0x06002277 RID: 8823 RVA: 0x000AE4A0 File Offset: 0x000AC6A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameCableNull()
            {
                base[this.tablevJ_CableByCellMeas.NameCableColumn] = Convert.DBNull;
            }

            // Token: 0x04000BDA RID: 3034
            private DataSetGES.vJ_CableByCellMeasDataTable tablevJ_CableByCellMeas;
        }

        // Token: 0x0200017B RID: 379
        public class tJ_MeasCellRow : DataRow
        {
            // Token: 0x06002278 RID: 8824 RVA: 0x000AE4B8 File Offset: 0x000AC6B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tJ_MeasCellRow(DataRowBuilder rb) : base(rb)
            {
                this.tabletJ_MeasCell = (DataSetGES.tJ_MeasCellDataTable)base.Table;
            }

            // Token: 0x170008E7 RID: 2279
            // (get) Token: 0x06002279 RID: 8825 RVA: 0x000AE4D2 File Offset: 0x000AC6D2
            // (set) Token: 0x0600227A RID: 8826 RVA: 0x000AE4EA File Offset: 0x000AC6EA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tabletJ_MeasCell.idColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCell.idColumn] = value;
                }
            }

            // Token: 0x170008E8 RID: 2280
            // (get) Token: 0x0600227B RID: 8827 RVA: 0x000AE503 File Offset: 0x000AC703
            // (set) Token: 0x0600227C RID: 8828 RVA: 0x000AE51B File Offset: 0x000AC71B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tabletJ_MeasCell.idMeasurementColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCell.idMeasurementColumn] = value;
                }
            }

            // Token: 0x170008E9 RID: 2281
            // (get) Token: 0x0600227D RID: 8829 RVA: 0x000AE534 File Offset: 0x000AC734
            // (set) Token: 0x0600227E RID: 8830 RVA: 0x000AE54C File Offset: 0x000AC74C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int)base[this.tabletJ_MeasCell.idBusColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCell.idBusColumn] = value;
                }
            }

            // Token: 0x170008EA RID: 2282
            // (get) Token: 0x0600227F RID: 8831 RVA: 0x000AE565 File Offset: 0x000AC765
            // (set) Token: 0x06002280 RID: 8832 RVA: 0x000AE57D File Offset: 0x000AC77D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idCell
            {
                get
                {
                    return (int)base[this.tabletJ_MeasCell.idCellColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCell.idCellColumn] = value;
                }
            }

            // Token: 0x170008EB RID: 2283
            // (get) Token: 0x06002281 RID: 8833 RVA: 0x000AE598 File Offset: 0x000AC798
            // (set) Token: 0x06002282 RID: 8834 RVA: 0x000AE5DC File Offset: 0x000AC7DC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCell.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.idTransfColumn] = value;
                }
            }

            // Token: 0x170008EC RID: 2284
            // (get) Token: 0x06002283 RID: 8835 RVA: 0x000AE5F8 File Offset: 0x000AC7F8
            // (set) Token: 0x06002284 RID: 8836 RVA: 0x000AE63C File Offset: 0x000AC83C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PermissAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tabletJ_MeasCell.PermissAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermissAmperage' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.PermissAmperageColumn] = value;
                }
            }

            // Token: 0x170008ED RID: 2285
            // (get) Token: 0x06002285 RID: 8837 RVA: 0x000AE658 File Offset: 0x000AC858
            // (set) Token: 0x06002286 RID: 8838 RVA: 0x000AE69C File Offset: 0x000AC89C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCell.IadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.IadColumn] = value;
                }
            }

            // Token: 0x170008EE RID: 2286
            // (get) Token: 0x06002287 RID: 8839 RVA: 0x000AE6B8 File Offset: 0x000AC8B8
            // (set) Token: 0x06002288 RID: 8840 RVA: 0x000AE6FC File Offset: 0x000AC8FC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ian
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCell.IanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.IanColumn] = value;
                }
            }

            // Token: 0x170008EF RID: 2287
            // (get) Token: 0x06002289 RID: 8841 RVA: 0x000AE718 File Offset: 0x000AC918
            // (set) Token: 0x0600228A RID: 8842 RVA: 0x000AE75C File Offset: 0x000AC95C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCell.IbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.IbdColumn] = value;
                }
            }

            // Token: 0x170008F0 RID: 2288
            // (get) Token: 0x0600228B RID: 8843 RVA: 0x000AE778 File Offset: 0x000AC978
            // (set) Token: 0x0600228C RID: 8844 RVA: 0x000AE7BC File Offset: 0x000AC9BC
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ibn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCell.IbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.IbnColumn] = value;
                }
            }

            // Token: 0x170008F1 RID: 2289
            // (get) Token: 0x0600228D RID: 8845 RVA: 0x000AE7D8 File Offset: 0x000AC9D8
            // (set) Token: 0x0600228E RID: 8846 RVA: 0x000AE81C File Offset: 0x000ACA1C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCell.IcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.IcdColumn] = value;
                }
            }

            // Token: 0x170008F2 RID: 2290
            // (get) Token: 0x0600228F RID: 8847 RVA: 0x000AE838 File Offset: 0x000ACA38
            // (set) Token: 0x06002290 RID: 8848 RVA: 0x000AE87C File Offset: 0x000ACA7C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tabletJ_MeasCell.IcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.IcnColumn] = value;
                }
            }

            // Token: 0x170008F3 RID: 2291
            // (get) Token: 0x06002291 RID: 8849 RVA: 0x000AE898 File Offset: 0x000ACA98
            // (set) Token: 0x06002292 RID: 8850 RVA: 0x000AE8DC File Offset: 0x000ACADC
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tabletJ_MeasCell.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'tJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tabletJ_MeasCell.CommentColumn] = value;
                }
            }

            // Token: 0x170008F4 RID: 2292
            // (get) Token: 0x06002293 RID: 8851 RVA: 0x000AE8F0 File Offset: 0x000ACAF0
            // (set) Token: 0x06002294 RID: 8852 RVA: 0x000AE908 File Offset: 0x000ACB08
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tabletJ_MeasCell.DeletedColumn];
                }
                set
                {
                    base[this.tabletJ_MeasCell.DeletedColumn] = value;
                }
            }

            // Token: 0x06002295 RID: 8853 RVA: 0x000AE921 File Offset: 0x000ACB21
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.idTransfColumn);
            }

            // Token: 0x06002296 RID: 8854 RVA: 0x000AE934 File Offset: 0x000ACB34
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidTransfNull()
            {
                base[this.tabletJ_MeasCell.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06002297 RID: 8855 RVA: 0x000AE94C File Offset: 0x000ACB4C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsPermissAmperageNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.PermissAmperageColumn);
            }

            // Token: 0x06002298 RID: 8856 RVA: 0x000AE95F File Offset: 0x000ACB5F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPermissAmperageNull()
            {
                base[this.tabletJ_MeasCell.PermissAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x06002299 RID: 8857 RVA: 0x000AE977 File Offset: 0x000ACB77
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIadNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.IadColumn);
            }

            // Token: 0x0600229A RID: 8858 RVA: 0x000AE98A File Offset: 0x000ACB8A
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIadNull()
            {
                base[this.tabletJ_MeasCell.IadColumn] = Convert.DBNull;
            }

            // Token: 0x0600229B RID: 8859 RVA: 0x000AE9A2 File Offset: 0x000ACBA2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIanNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.IanColumn);
            }

            // Token: 0x0600229C RID: 8860 RVA: 0x000AE9B5 File Offset: 0x000ACBB5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIanNull()
            {
                base[this.tabletJ_MeasCell.IanColumn] = Convert.DBNull;
            }

            // Token: 0x0600229D RID: 8861 RVA: 0x000AE9CD File Offset: 0x000ACBCD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbdNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.IbdColumn);
            }

            // Token: 0x0600229E RID: 8862 RVA: 0x000AE9E0 File Offset: 0x000ACBE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbdNull()
            {
                base[this.tabletJ_MeasCell.IbdColumn] = Convert.DBNull;
            }

            // Token: 0x0600229F RID: 8863 RVA: 0x000AE9F8 File Offset: 0x000ACBF8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIbnNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.IbnColumn);
            }

            // Token: 0x060022A0 RID: 8864 RVA: 0x000AEA0B File Offset: 0x000ACC0B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbnNull()
            {
                base[this.tabletJ_MeasCell.IbnColumn] = Convert.DBNull;
            }

            // Token: 0x060022A1 RID: 8865 RVA: 0x000AEA23 File Offset: 0x000ACC23
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcdNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.IcdColumn);
            }

            // Token: 0x060022A2 RID: 8866 RVA: 0x000AEA36 File Offset: 0x000ACC36
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcdNull()
            {
                base[this.tabletJ_MeasCell.IcdColumn] = Convert.DBNull;
            }

            // Token: 0x060022A3 RID: 8867 RVA: 0x000AEA4E File Offset: 0x000ACC4E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIcnNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.IcnColumn);
            }

            // Token: 0x060022A4 RID: 8868 RVA: 0x000AEA61 File Offset: 0x000ACC61
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcnNull()
            {
                base[this.tabletJ_MeasCell.IcnColumn] = Convert.DBNull;
            }

            // Token: 0x060022A5 RID: 8869 RVA: 0x000AEA79 File Offset: 0x000ACC79
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tabletJ_MeasCell.CommentColumn);
            }

            // Token: 0x060022A6 RID: 8870 RVA: 0x000AEA8C File Offset: 0x000ACC8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tabletJ_MeasCell.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x04000BDB RID: 3035
            private DataSetGES.tJ_MeasCellDataTable tabletJ_MeasCell;
        }

        // Token: 0x0200017C RID: 380
        public class vJ_MeasCellRow : DataRow
        {
            // Token: 0x060022A7 RID: 8871 RVA: 0x000AEAA4 File Offset: 0x000ACCA4
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vJ_MeasCellRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasCell = (DataSetGES.vJ_MeasCellDataTable)base.Table;
            }

            // Token: 0x170008F5 RID: 2293
            // (get) Token: 0x060022A8 RID: 8872 RVA: 0x000AEABE File Offset: 0x000ACCBE
            // (set) Token: 0x060022A9 RID: 8873 RVA: 0x000AEAD6 File Offset: 0x000ACCD6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCell.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCell.idColumn] = value;
                }
            }

            // Token: 0x170008F6 RID: 2294
            // (get) Token: 0x060022AA RID: 8874 RVA: 0x000AEAEF File Offset: 0x000ACCEF
            // (set) Token: 0x060022AB RID: 8875 RVA: 0x000AEB07 File Offset: 0x000ACD07
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCell.idMeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCell.idMeasurementColumn] = value;
                }
            }

            // Token: 0x170008F7 RID: 2295
            // (get) Token: 0x060022AC RID: 8876 RVA: 0x000AEB20 File Offset: 0x000ACD20
            // (set) Token: 0x060022AD RID: 8877 RVA: 0x000AEB38 File Offset: 0x000ACD38
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idBus
            {
                get
                {
                    return (int)base[this.tablevJ_MeasCell.idBusColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCell.idBusColumn] = value;
                }
            }

            // Token: 0x170008F8 RID: 2296
            // (get) Token: 0x060022AE RID: 8878 RVA: 0x000AEB54 File Offset: 0x000ACD54
            // (set) Token: 0x060022AF RID: 8879 RVA: 0x000AEB98 File Offset: 0x000ACD98
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCell.idTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idTransf' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.idTransfColumn] = value;
                }
            }

            // Token: 0x170008F9 RID: 2297
            // (get) Token: 0x060022B0 RID: 8880 RVA: 0x000AEBB4 File Offset: 0x000ACDB4
            // (set) Token: 0x060022B1 RID: 8881 RVA: 0x000AEBF8 File Offset: 0x000ACDF8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameBus
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCell.NameBusColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameBus' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.NameBusColumn] = value;
                }
            }

            // Token: 0x170008FA RID: 2298
            // (get) Token: 0x060022B2 RID: 8882 RVA: 0x000AEC0C File Offset: 0x000ACE0C
            // (set) Token: 0x060022B3 RID: 8883 RVA: 0x000AEC50 File Offset: 0x000ACE50
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string NameCell
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCell.NameCellColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'NameCell' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.NameCellColumn] = value;
                }
            }

            // Token: 0x170008FB RID: 2299
            // (get) Token: 0x060022B4 RID: 8884 RVA: 0x000AEC64 File Offset: 0x000ACE64
            // (set) Token: 0x060022B5 RID: 8885 RVA: 0x000AECA8 File Offset: 0x000ACEA8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public double PermissAmperage
            {
                get
                {
                    double result;
                    try
                    {
                        result = (double)base[this.tablevJ_MeasCell.PermissAmperageColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'PermissAmperage' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.PermissAmperageColumn] = value;
                }
            }

            // Token: 0x170008FC RID: 2300
            // (get) Token: 0x060022B6 RID: 8886 RVA: 0x000AECC4 File Offset: 0x000ACEC4
            // (set) Token: 0x060022B7 RID: 8887 RVA: 0x000AED08 File Offset: 0x000ACF08
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Iad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCell.IadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Iad' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.IadColumn] = value;
                }
            }

            // Token: 0x170008FD RID: 2301
            // (get) Token: 0x060022B8 RID: 8888 RVA: 0x000AED24 File Offset: 0x000ACF24
            // (set) Token: 0x060022B9 RID: 8889 RVA: 0x000AED68 File Offset: 0x000ACF68
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ian
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCell.IanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ian' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.IanColumn] = value;
                }
            }

            // Token: 0x170008FE RID: 2302
            // (get) Token: 0x060022BA RID: 8890 RVA: 0x000AED84 File Offset: 0x000ACF84
            // (set) Token: 0x060022BB RID: 8891 RVA: 0x000AEDC8 File Offset: 0x000ACFC8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCell.IbdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibd' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.IbdColumn] = value;
                }
            }

            // Token: 0x170008FF RID: 2303
            // (get) Token: 0x060022BC RID: 8892 RVA: 0x000AEDE4 File Offset: 0x000ACFE4
            // (set) Token: 0x060022BD RID: 8893 RVA: 0x000AEE28 File Offset: 0x000AD028
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ibn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCell.IbnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ibn' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.IbnColumn] = value;
                }
            }

            // Token: 0x17000900 RID: 2304
            // (get) Token: 0x060022BE RID: 8894 RVA: 0x000AEE44 File Offset: 0x000AD044
            // (set) Token: 0x060022BF RID: 8895 RVA: 0x000AEE88 File Offset: 0x000AD088
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Icd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCell.IcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icd' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.IcdColumn] = value;
                }
            }

            // Token: 0x17000901 RID: 2305
            // (get) Token: 0x060022C0 RID: 8896 RVA: 0x000AEEA4 File Offset: 0x000AD0A4
            // (set) Token: 0x060022C1 RID: 8897 RVA: 0x000AEEE8 File Offset: 0x000AD0E8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Icn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasCell.IcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Icn' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.IcnColumn] = value;
                }
            }

            // Token: 0x17000902 RID: 2306
            // (get) Token: 0x060022C2 RID: 8898 RVA: 0x000AEF04 File Offset: 0x000AD104
            // (set) Token: 0x060022C3 RID: 8899 RVA: 0x000AEF48 File Offset: 0x000AD148
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasCell.CommentColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Comment' in table 'vJ_MeasCell' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasCell.CommentColumn] = value;
                }
            }

            // Token: 0x17000903 RID: 2307
            // (get) Token: 0x060022C4 RID: 8900 RVA: 0x000AEF5C File Offset: 0x000AD15C
            // (set) Token: 0x060022C5 RID: 8901 RVA: 0x000AEF74 File Offset: 0x000AD174
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    return (bool)base[this.tablevJ_MeasCell.DeletedColumn];
                }
                set
                {
                    base[this.tablevJ_MeasCell.DeletedColumn] = value;
                }
            }

            // Token: 0x060022C6 RID: 8902 RVA: 0x000AEF8D File Offset: 0x000AD18D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidTransfNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.idTransfColumn);
            }

            // Token: 0x060022C7 RID: 8903 RVA: 0x000AEFA0 File Offset: 0x000AD1A0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidTransfNull()
            {
                base[this.tablevJ_MeasCell.idTransfColumn] = Convert.DBNull;
            }

            // Token: 0x060022C8 RID: 8904 RVA: 0x000AEFB8 File Offset: 0x000AD1B8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameBusNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.NameBusColumn);
            }

            // Token: 0x060022C9 RID: 8905 RVA: 0x000AEFCB File Offset: 0x000AD1CB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameBusNull()
            {
                base[this.tablevJ_MeasCell.NameBusColumn] = Convert.DBNull;
            }

            // Token: 0x060022CA RID: 8906 RVA: 0x000AEFE3 File Offset: 0x000AD1E3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameCellNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.NameCellColumn);
            }

            // Token: 0x060022CB RID: 8907 RVA: 0x000AEFF6 File Offset: 0x000AD1F6
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetNameCellNull()
            {
                base[this.tablevJ_MeasCell.NameCellColumn] = Convert.DBNull;
            }

            // Token: 0x060022CC RID: 8908 RVA: 0x000AF00E File Offset: 0x000AD20E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPermissAmperageNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.PermissAmperageColumn);
            }

            // Token: 0x060022CD RID: 8909 RVA: 0x000AF021 File Offset: 0x000AD221
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetPermissAmperageNull()
            {
                base[this.tablevJ_MeasCell.PermissAmperageColumn] = Convert.DBNull;
            }

            // Token: 0x060022CE RID: 8910 RVA: 0x000AF039 File Offset: 0x000AD239
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIadNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.IadColumn);
            }

            // Token: 0x060022CF RID: 8911 RVA: 0x000AF04C File Offset: 0x000AD24C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIadNull()
            {
                base[this.tablevJ_MeasCell.IadColumn] = Convert.DBNull;
            }

            // Token: 0x060022D0 RID: 8912 RVA: 0x000AF064 File Offset: 0x000AD264
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIanNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.IanColumn);
            }

            // Token: 0x060022D1 RID: 8913 RVA: 0x000AF077 File Offset: 0x000AD277
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIanNull()
            {
                base[this.tablevJ_MeasCell.IanColumn] = Convert.DBNull;
            }

            // Token: 0x060022D2 RID: 8914 RVA: 0x000AF08F File Offset: 0x000AD28F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbdNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.IbdColumn);
            }

            // Token: 0x060022D3 RID: 8915 RVA: 0x000AF0A2 File Offset: 0x000AD2A2
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIbdNull()
            {
                base[this.tablevJ_MeasCell.IbdColumn] = Convert.DBNull;
            }

            // Token: 0x060022D4 RID: 8916 RVA: 0x000AF0BA File Offset: 0x000AD2BA
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIbnNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.IbnColumn);
            }

            // Token: 0x060022D5 RID: 8917 RVA: 0x000AF0CD File Offset: 0x000AD2CD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIbnNull()
            {
                base[this.tablevJ_MeasCell.IbnColumn] = Convert.DBNull;
            }

            // Token: 0x060022D6 RID: 8918 RVA: 0x000AF0E5 File Offset: 0x000AD2E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsIcdNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.IcdColumn);
            }

            // Token: 0x060022D7 RID: 8919 RVA: 0x000AF0F8 File Offset: 0x000AD2F8
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetIcdNull()
            {
                base[this.tablevJ_MeasCell.IcdColumn] = Convert.DBNull;
            }

            // Token: 0x060022D8 RID: 8920 RVA: 0x000AF110 File Offset: 0x000AD310
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIcnNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.IcnColumn);
            }

            // Token: 0x060022D9 RID: 8921 RVA: 0x000AF123 File Offset: 0x000AD323
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIcnNull()
            {
                base[this.tablevJ_MeasCell.IcnColumn] = Convert.DBNull;
            }

            // Token: 0x060022DA RID: 8922 RVA: 0x000AF13B File Offset: 0x000AD33B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull()
            {
                return base.IsNull(this.tablevJ_MeasCell.CommentColumn);
            }

            // Token: 0x060022DB RID: 8923 RVA: 0x000AF14E File Offset: 0x000AD34E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetCommentNull()
            {
                base[this.tablevJ_MeasCell.CommentColumn] = Convert.DBNull;
            }

            // Token: 0x04000BDC RID: 3036
            private DataSetGES.vJ_MeasCellDataTable tablevJ_MeasCell;
        }

        // Token: 0x0200017D RID: 381
        public class vJ_MeasTransfVoltageRow : DataRow
        {
            // Token: 0x060022DC RID: 8924 RVA: 0x000AF166 File Offset: 0x000AD366
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal vJ_MeasTransfVoltageRow(DataRowBuilder rb) : base(rb)
            {
                this.tablevJ_MeasTransfVoltage = (DataSetGES.vJ_MeasTransfVoltageDataTable)base.Table;
            }

            // Token: 0x17000904 RID: 2308
            // (get) Token: 0x060022DD RID: 8925 RVA: 0x000AF180 File Offset: 0x000AD380
            // (set) Token: 0x060022DE RID: 8926 RVA: 0x000AF198 File Offset: 0x000AD398
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int id
            {
                get
                {
                    return (int)base[this.tablevJ_MeasTransfVoltage.idColumn];
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.idColumn] = value;
                }
            }

            // Token: 0x17000905 RID: 2309
            // (get) Token: 0x060022DF RID: 8927 RVA: 0x000AF1B1 File Offset: 0x000AD3B1
            // (set) Token: 0x060022E0 RID: 8928 RVA: 0x000AF1C9 File Offset: 0x000AD3C9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idMeasurement
            {
                get
                {
                    return (int)base[this.tablevJ_MeasTransfVoltage.idMeasurementColumn];
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.idMeasurementColumn] = value;
                }
            }

            // Token: 0x17000906 RID: 2310
            // (get) Token: 0x060022E1 RID: 8929 RVA: 0x000AF1E2 File Offset: 0x000AD3E2
            // (set) Token: 0x060022E2 RID: 8930 RVA: 0x000AF1FA File Offset: 0x000AD3FA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idObjList
            {
                get
                {
                    return (int)base[this.tablevJ_MeasTransfVoltage.idObjListColumn];
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.idObjListColumn] = value;
                }
            }

            // Token: 0x17000907 RID: 2311
            // (get) Token: 0x060022E3 RID: 8931 RVA: 0x000AF214 File Offset: 0x000AD414
            // (set) Token: 0x060022E4 RID: 8932 RVA: 0x000AF258 File Offset: 0x000AD458
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public string SwitchPosition
            {
                get
                {
                    string result;
                    try
                    {
                        result = (string)base[this.tablevJ_MeasTransfVoltage.SwitchPositionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'SwitchPosition' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.SwitchPositionColumn] = value;
                }
            }

            // Token: 0x17000908 RID: 2312
            // (get) Token: 0x060022E5 RID: 8933 RVA: 0x000AF26C File Offset: 0x000AD46C
            // (set) Token: 0x060022E6 RID: 8934 RVA: 0x000AF2B0 File Offset: 0x000AD4B0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int idSwitchPosition
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.idSwitchPositionColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idSwitchPosition' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.idSwitchPositionColumn] = value;
                }
            }

            // Token: 0x17000909 RID: 2313
            // (get) Token: 0x060022E7 RID: 8935 RVA: 0x000AF2CC File Offset: 0x000AD4CC
            // (set) Token: 0x060022E8 RID: 8936 RVA: 0x000AF310 File Offset: 0x000AD510
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uabd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UabdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uabd' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UabdColumn] = value;
                }
            }

            // Token: 0x1700090A RID: 2314
            // (get) Token: 0x060022E9 RID: 8937 RVA: 0x000AF32C File Offset: 0x000AD52C
            // (set) Token: 0x060022EA RID: 8938 RVA: 0x000AF370 File Offset: 0x000AD570
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uabn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UabnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uabn' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UabnColumn] = value;
                }
            }

            // Token: 0x1700090B RID: 2315
            // (get) Token: 0x060022EB RID: 8939 RVA: 0x000AF38C File Offset: 0x000AD58C
            // (set) Token: 0x060022EC RID: 8940 RVA: 0x000AF3D0 File Offset: 0x000AD5D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubcd
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UbcdColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubcd' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UbcdColumn] = value;
                }
            }

            // Token: 0x1700090C RID: 2316
            // (get) Token: 0x060022ED RID: 8941 RVA: 0x000AF3EC File Offset: 0x000AD5EC
            // (set) Token: 0x060022EE RID: 8942 RVA: 0x000AF430 File Offset: 0x000AD630
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubcn
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UbcnColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubcn' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UbcnColumn] = value;
                }
            }

            // Token: 0x1700090D RID: 2317
            // (get) Token: 0x060022EF RID: 8943 RVA: 0x000AF44C File Offset: 0x000AD64C
            // (set) Token: 0x060022F0 RID: 8944 RVA: 0x000AF490 File Offset: 0x000AD690
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ucad
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UcadColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucad' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UcadColumn] = value;
                }
            }

            // Token: 0x1700090E RID: 2318
            // (get) Token: 0x060022F1 RID: 8945 RVA: 0x000AF4AC File Offset: 0x000AD6AC
            // (set) Token: 0x060022F2 RID: 8946 RVA: 0x000AF4F0 File Offset: 0x000AD6F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucan
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UcanColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucan' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UcanColumn] = value;
                }
            }

            // Token: 0x1700090F RID: 2319
            // (get) Token: 0x060022F3 RID: 8947 RVA: 0x000AF50C File Offset: 0x000AD70C
            // (set) Token: 0x060022F4 RID: 8948 RVA: 0x000AF550 File Offset: 0x000AD750
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Uaod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UaodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uaod' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UaodColumn] = value;
                }
            }

            // Token: 0x17000910 RID: 2320
            // (get) Token: 0x060022F5 RID: 8949 RVA: 0x000AF56C File Offset: 0x000AD76C
            // (set) Token: 0x060022F6 RID: 8950 RVA: 0x000AF5B0 File Offset: 0x000AD7B0
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Uaon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UaonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Uaon' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UaonColumn] = value;
                }
            }

            // Token: 0x17000911 RID: 2321
            // (get) Token: 0x060022F7 RID: 8951 RVA: 0x000AF5CC File Offset: 0x000AD7CC
            // (set) Token: 0x060022F8 RID: 8952 RVA: 0x000AF610 File Offset: 0x000AD810
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ubod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UbodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubod' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UbodColumn] = value;
                }
            }

            // Token: 0x17000912 RID: 2322
            // (get) Token: 0x060022F9 RID: 8953 RVA: 0x000AF62C File Offset: 0x000AD82C
            // (set) Token: 0x060022FA RID: 8954 RVA: 0x000AF670 File Offset: 0x000AD870
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ubon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UbonColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ubon' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UbonColumn] = value;
                }
            }

            // Token: 0x17000913 RID: 2323
            // (get) Token: 0x060022FB RID: 8955 RVA: 0x000AF68C File Offset: 0x000AD88C
            // (set) Token: 0x060022FC RID: 8956 RVA: 0x000AF6D0 File Offset: 0x000AD8D0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucod
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UcodColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucod' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UcodColumn] = value;
                }
            }

            // Token: 0x17000914 RID: 2324
            // (get) Token: 0x060022FD RID: 8957 RVA: 0x000AF6EC File Offset: 0x000AD8EC
            // (set) Token: 0x060022FE RID: 8958 RVA: 0x000AF730 File Offset: 0x000AD930
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int Ucon
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.UconColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Ucon' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.UconColumn] = value;
                }
            }

            // Token: 0x17000915 RID: 2325
            // (get) Token: 0x060022FF RID: 8959 RVA: 0x000AF74C File Offset: 0x000AD94C
            // (set) Token: 0x06002300 RID: 8960 RVA: 0x000AF790 File Offset: 0x000AD990
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public int idOldMeasurementTransf
            {
                get
                {
                    int result;
                    try
                    {
                        result = (int)base[this.tablevJ_MeasTransfVoltage.idOldMeasurementTransfColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'idOldMeasurementTransf' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.idOldMeasurementTransfColumn] = value;
                }
            }

            // Token: 0x17000916 RID: 2326
            // (get) Token: 0x06002301 RID: 8961 RVA: 0x000AF7AC File Offset: 0x000AD9AC
            // (set) Token: 0x06002302 RID: 8962 RVA: 0x000AF7F0 File Offset: 0x000AD9F0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool Deleted
            {
                get
                {
                    bool result;
                    try
                    {
                        result = (bool)base[this.tablevJ_MeasTransfVoltage.DeletedColumn];
                    }
                    catch (InvalidCastException innerException)
                    {
                        throw new StrongTypingException("The value for column 'Deleted' in table 'vJ_MeasTransfVoltage' is DBNull.", innerException);
                    }
                    return result;
                }
                set
                {
                    base[this.tablevJ_MeasTransfVoltage.DeletedColumn] = value;
                }
            }

            // Token: 0x06002303 RID: 8963 RVA: 0x000AF809 File Offset: 0x000ADA09
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsSwitchPositionNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.SwitchPositionColumn);
            }

            // Token: 0x06002304 RID: 8964 RVA: 0x000AF81C File Offset: 0x000ADA1C
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSwitchPositionNull()
            {
                base[this.tablevJ_MeasTransfVoltage.SwitchPositionColumn] = Convert.DBNull;
            }

            // Token: 0x06002305 RID: 8965 RVA: 0x000AF834 File Offset: 0x000ADA34
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsidSwitchPositionNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.idSwitchPositionColumn);
            }

            // Token: 0x06002306 RID: 8966 RVA: 0x000AF847 File Offset: 0x000ADA47
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidSwitchPositionNull()
            {
                base[this.tablevJ_MeasTransfVoltage.idSwitchPositionColumn] = Convert.DBNull;
            }

            // Token: 0x06002307 RID: 8967 RVA: 0x000AF85F File Offset: 0x000ADA5F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUabdNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UabdColumn);
            }

            // Token: 0x06002308 RID: 8968 RVA: 0x000AF872 File Offset: 0x000ADA72
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUabdNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UabdColumn] = Convert.DBNull;
            }

            // Token: 0x06002309 RID: 8969 RVA: 0x000AF88A File Offset: 0x000ADA8A
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUabnNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UabnColumn);
            }

            // Token: 0x0600230A RID: 8970 RVA: 0x000AF89D File Offset: 0x000ADA9D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUabnNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UabnColumn] = Convert.DBNull;
            }

            // Token: 0x0600230B RID: 8971 RVA: 0x000AF8B5 File Offset: 0x000ADAB5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUbcdNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UbcdColumn);
            }

            // Token: 0x0600230C RID: 8972 RVA: 0x000AF8C8 File Offset: 0x000ADAC8
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUbcdNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UbcdColumn] = Convert.DBNull;
            }

            // Token: 0x0600230D RID: 8973 RVA: 0x000AF8E0 File Offset: 0x000ADAE0
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUbcnNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UbcnColumn);
            }

            // Token: 0x0600230E RID: 8974 RVA: 0x000AF8F3 File Offset: 0x000ADAF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUbcnNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UbcnColumn] = Convert.DBNull;
            }

            // Token: 0x0600230F RID: 8975 RVA: 0x000AF90B File Offset: 0x000ADB0B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUcadNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UcadColumn);
            }

            // Token: 0x06002310 RID: 8976 RVA: 0x000AF91E File Offset: 0x000ADB1E
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUcadNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UcadColumn] = Convert.DBNull;
            }

            // Token: 0x06002311 RID: 8977 RVA: 0x000AF936 File Offset: 0x000ADB36
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUcanNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UcanColumn);
            }

            // Token: 0x06002312 RID: 8978 RVA: 0x000AF949 File Offset: 0x000ADB49
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUcanNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UcanColumn] = Convert.DBNull;
            }

            // Token: 0x06002313 RID: 8979 RVA: 0x000AF961 File Offset: 0x000ADB61
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUaodNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UaodColumn);
            }

            // Token: 0x06002314 RID: 8980 RVA: 0x000AF974 File Offset: 0x000ADB74
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUaodNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UaodColumn] = Convert.DBNull;
            }

            // Token: 0x06002315 RID: 8981 RVA: 0x000AF98C File Offset: 0x000ADB8C
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUaonNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UaonColumn);
            }

            // Token: 0x06002316 RID: 8982 RVA: 0x000AF99F File Offset: 0x000ADB9F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUaonNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UaonColumn] = Convert.DBNull;
            }

            // Token: 0x06002317 RID: 8983 RVA: 0x000AF9B7 File Offset: 0x000ADBB7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUbodNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UbodColumn);
            }

            // Token: 0x06002318 RID: 8984 RVA: 0x000AF9CA File Offset: 0x000ADBCA
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUbodNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UbodColumn] = Convert.DBNull;
            }

            // Token: 0x06002319 RID: 8985 RVA: 0x000AF9E2 File Offset: 0x000ADBE2
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUbonNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UbonColumn);
            }

            // Token: 0x0600231A RID: 8986 RVA: 0x000AF9F5 File Offset: 0x000ADBF5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUbonNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UbonColumn] = Convert.DBNull;
            }

            // Token: 0x0600231B RID: 8987 RVA: 0x000AFA0D File Offset: 0x000ADC0D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public bool IsUcodNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UcodColumn);
            }

            // Token: 0x0600231C RID: 8988 RVA: 0x000AFA20 File Offset: 0x000ADC20
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUcodNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UcodColumn] = Convert.DBNull;
            }

            // Token: 0x0600231D RID: 8989 RVA: 0x000AFA38 File Offset: 0x000ADC38
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUconNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.UconColumn);
            }

            // Token: 0x0600231E RID: 8990 RVA: 0x000AFA4B File Offset: 0x000ADC4B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetUconNull()
            {
                base[this.tablevJ_MeasTransfVoltage.UconColumn] = Convert.DBNull;
            }

            // Token: 0x0600231F RID: 8991 RVA: 0x000AFA63 File Offset: 0x000ADC63
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidOldMeasurementTransfNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.idOldMeasurementTransfColumn);
            }

            // Token: 0x06002320 RID: 8992 RVA: 0x000AFA76 File Offset: 0x000ADC76
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetidOldMeasurementTransfNull()
            {
                base[this.tablevJ_MeasTransfVoltage.idOldMeasurementTransfColumn] = Convert.DBNull;
            }

            // Token: 0x06002321 RID: 8993 RVA: 0x000AFA8E File Offset: 0x000ADC8E
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull()
            {
                return base.IsNull(this.tablevJ_MeasTransfVoltage.DeletedColumn);
            }

            // Token: 0x06002322 RID: 8994 RVA: 0x000AFAA1 File Offset: 0x000ADCA1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public void SetDeletedNull()
            {
                base[this.tablevJ_MeasTransfVoltage.DeletedColumn] = Convert.DBNull;
            }

            // Token: 0x04000BDD RID: 3037
            private DataSetGES.vJ_MeasTransfVoltageDataTable tablevJ_MeasTransfVoltage;
        }

        // Token: 0x0200017E RID: 382
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tUserRowChangeEvent : EventArgs
        {
            // Token: 0x06002323 RID: 8995 RVA: 0x000AFAB9 File Offset: 0x000ADCB9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tUserRowChangeEvent(DataSetGES.tUserRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000917 RID: 2327
            // (get) Token: 0x06002324 RID: 8996 RVA: 0x000AFACF File Offset: 0x000ADCCF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tUserRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000918 RID: 2328
            // (get) Token: 0x06002325 RID: 8997 RVA: 0x000AFAD7 File Offset: 0x000ADCD7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BDE RID: 3038
            private DataSetGES.tUserRow eventRow;

            // Token: 0x04000BDF RID: 3039
            private DataRowAction eventAction;
        }

        // Token: 0x0200017F RID: 383
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_RequestDocRowChangeEvent : EventArgs
        {
            // Token: 0x06002326 RID: 8998 RVA: 0x000AFADF File Offset: 0x000ADCDF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RequestDocRowChangeEvent(DataSetGES.tJ_RequestDocRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000919 RID: 2329
            // (get) Token: 0x06002327 RID: 8999 RVA: 0x000AFAF5 File Offset: 0x000ADCF5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestDocRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700091A RID: 2330
            // (get) Token: 0x06002328 RID: 9000 RVA: 0x000AFAFD File Offset: 0x000ADCFD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BE0 RID: 3040
            private DataSetGES.tJ_RequestDocRow eventRow;

            // Token: 0x04000BE1 RID: 3041
            private DataRowAction eventAction;
        }

        // Token: 0x02000180 RID: 384
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_RequestRowChangeEvent : EventArgs
        {
            // Token: 0x06002329 RID: 9001 RVA: 0x000AFB05 File Offset: 0x000ADD05
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestRowChangeEvent(DataSetGES.tJ_RequestRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700091B RID: 2331
            // (get) Token: 0x0600232A RID: 9002 RVA: 0x000AFB1B File Offset: 0x000ADD1B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700091C RID: 2332
            // (get) Token: 0x0600232B RID: 9003 RVA: 0x000AFB23 File Offset: 0x000ADD23
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BE2 RID: 3042
            private DataSetGES.tJ_RequestRow eventRow;

            // Token: 0x04000BE3 RID: 3043
            private DataRowAction eventAction;
        }

        // Token: 0x02000181 RID: 385
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_RequestRowChangeEvent : EventArgs
        {
            // Token: 0x0600232C RID: 9004 RVA: 0x000AFB2B File Offset: 0x000ADD2B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RequestRowChangeEvent(DataSetGES.vJ_RequestRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700091D RID: 2333
            // (get) Token: 0x0600232D RID: 9005 RVA: 0x000AFB41 File Offset: 0x000ADD41
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700091E RID: 2334
            // (get) Token: 0x0600232E RID: 9006 RVA: 0x000AFB49 File Offset: 0x000ADD49
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BE4 RID: 3044
            private DataSetGES.vJ_RequestRow eventRow;

            // Token: 0x04000BE5 RID: 3045
            private DataRowAction eventAction;
        }

        // Token: 0x02000182 RID: 386
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_RequestForRepairRowChangeEvent : EventArgs
        {
            // Token: 0x0600232F RID: 9007 RVA: 0x000AFB51 File Offset: 0x000ADD51
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_RequestForRepairRowChangeEvent(DataSetGES.vJ_RequestForRepairRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700091F RID: 2335
            // (get) Token: 0x06002330 RID: 9008 RVA: 0x000AFB67 File Offset: 0x000ADD67
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestForRepairRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000920 RID: 2336
            // (get) Token: 0x06002331 RID: 9009 RVA: 0x000AFB6F File Offset: 0x000ADD6F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BE6 RID: 3046
            private DataSetGES.vJ_RequestForRepairRow eventRow;

            // Token: 0x04000BE7 RID: 3047
            private DataRowAction eventAction;
        }

        // Token: 0x02000183 RID: 387
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_RequestForRepairRowChangeEvent : EventArgs
        {
            // Token: 0x06002332 RID: 9010 RVA: 0x000AFB77 File Offset: 0x000ADD77
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestForRepairRowChangeEvent(DataSetGES.tJ_RequestForRepairRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000921 RID: 2337
            // (get) Token: 0x06002333 RID: 9011 RVA: 0x000AFB8D File Offset: 0x000ADD8D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestForRepairRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000922 RID: 2338
            // (get) Token: 0x06002334 RID: 9012 RVA: 0x000AFB95 File Offset: 0x000ADD95
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BE8 RID: 3048
            private DataSetGES.tJ_RequestForRepairRow eventRow;

            // Token: 0x04000BE9 RID: 3049
            private DataRowAction eventAction;
        }

        // Token: 0x02000184 RID: 388
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tR_ClassifierRowChangeEvent : EventArgs
        {
            // Token: 0x06002335 RID: 9013 RVA: 0x000AFB9D File Offset: 0x000ADD9D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_ClassifierRowChangeEvent(DataSetGES.tR_ClassifierRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000923 RID: 2339
            // (get) Token: 0x06002336 RID: 9014 RVA: 0x000AFBB3 File Offset: 0x000ADDB3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_ClassifierRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000924 RID: 2340
            // (get) Token: 0x06002337 RID: 9015 RVA: 0x000AFBBB File Offset: 0x000ADDBB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BEA RID: 3050
            private DataSetGES.tR_ClassifierRow eventRow;

            // Token: 0x04000BEB RID: 3051
            private DataRowAction eventAction;
        }

        // Token: 0x02000185 RID: 389
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_RequestForRepairDailyRowChangeEvent : EventArgs
        {
            // Token: 0x06002338 RID: 9016 RVA: 0x000AFBC3 File Offset: 0x000ADDC3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestForRepairDailyRowChangeEvent(DataSetGES.tJ_RequestForRepairDailyRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000925 RID: 2341
            // (get) Token: 0x06002339 RID: 9017 RVA: 0x000AFBD9 File Offset: 0x000ADDD9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RequestForRepairDailyRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000926 RID: 2342
            // (get) Token: 0x0600233A RID: 9018 RVA: 0x000AFBE1 File Offset: 0x000ADDE1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BEC RID: 3052
            private DataSetGES.tJ_RequestForRepairDailyRow eventRow;

            // Token: 0x04000BED RID: 3053
            private DataRowAction eventAction;
        }

        // Token: 0x02000186 RID: 390
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_RequestForRepairDailyRowChangeEvent : EventArgs
        {
            // Token: 0x0600233B RID: 9019 RVA: 0x000AFBE9 File Offset: 0x000ADDE9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_RequestForRepairDailyRowChangeEvent(DataSetGES.vJ_RequestForRepairDailyRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000927 RID: 2343
            // (get) Token: 0x0600233C RID: 9020 RVA: 0x000AFBFF File Offset: 0x000ADDFF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_RequestForRepairDailyRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000928 RID: 2344
            // (get) Token: 0x0600233D RID: 9021 RVA: 0x000AFC07 File Offset: 0x000ADE07
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BEE RID: 3054
            private DataSetGES.vJ_RequestForRepairDailyRow eventRow;

            // Token: 0x04000BEF RID: 3055
            private DataRowAction eventAction;
        }

        // Token: 0x02000187 RID: 391
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tL_RequestForRepairSchmObjListRowChangeEvent : EventArgs
        {
            // Token: 0x0600233E RID: 9022 RVA: 0x000AFC0F File Offset: 0x000ADE0F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tL_RequestForRepairSchmObjListRowChangeEvent(DataSetGES.tL_RequestForRepairSchmObjListRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000929 RID: 2345
            // (get) Token: 0x0600233F RID: 9023 RVA: 0x000AFC25 File Offset: 0x000ADE25
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tL_RequestForRepairSchmObjListRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700092A RID: 2346
            // (get) Token: 0x06002340 RID: 9024 RVA: 0x000AFC2D File Offset: 0x000ADE2D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BF0 RID: 3056
            private DataSetGES.tL_RequestForRepairSchmObjListRow eventRow;

            // Token: 0x04000BF1 RID: 3057
            private DataRowAction eventAction;
        }

        // Token: 0x02000188 RID: 392
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_RequestForRepairDocRowChangeEvent : EventArgs
        {
            // Token: 0x06002341 RID: 9025 RVA: 0x000AFC35 File Offset: 0x000ADE35
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RequestForRepairDocRowChangeEvent(DataSetGES.tJ_RequestForRepairDocRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700092B RID: 2347
            // (get) Token: 0x06002342 RID: 9026 RVA: 0x000AFC4B File Offset: 0x000ADE4B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_RequestForRepairDocRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700092C RID: 2348
            // (get) Token: 0x06002343 RID: 9027 RVA: 0x000AFC53 File Offset: 0x000ADE53
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BF2 RID: 3058
            private DataSetGES.tJ_RequestForRepairDocRow eventRow;

            // Token: 0x04000BF3 RID: 3059
            private DataRowAction eventAction;
        }

        // Token: 0x02000189 RID: 393
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_RelayProtectionAutomationRowChangeEvent : EventArgs
        {
            // Token: 0x06002344 RID: 9028 RVA: 0x000AFC5B File Offset: 0x000ADE5B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_RelayProtectionAutomationRowChangeEvent(DataSetGES.tJ_RelayProtectionAutomationRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700092D RID: 2349
            // (get) Token: 0x06002345 RID: 9029 RVA: 0x000AFC71 File Offset: 0x000ADE71
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RelayProtectionAutomationRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700092E RID: 2350
            // (get) Token: 0x06002346 RID: 9030 RVA: 0x000AFC79 File Offset: 0x000ADE79
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BF4 RID: 3060
            private DataSetGES.tJ_RelayProtectionAutomationRow eventRow;

            // Token: 0x04000BF5 RID: 3061
            private DataRowAction eventAction;
        }

        // Token: 0x0200018A RID: 394
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_RelayProtectionAutomationValueRowChangeEvent : EventArgs
        {
            // Token: 0x06002347 RID: 9031 RVA: 0x000AFC81 File Offset: 0x000ADE81
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_RelayProtectionAutomationValueRowChangeEvent(DataSetGES.tJ_RelayProtectionAutomationValueRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700092F RID: 2351
            // (get) Token: 0x06002348 RID: 9032 RVA: 0x000AFC97 File Offset: 0x000ADE97
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_RelayProtectionAutomationValueRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000930 RID: 2352
            // (get) Token: 0x06002349 RID: 9033 RVA: 0x000AFC9F File Offset: 0x000ADE9F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BF6 RID: 3062
            private DataSetGES.tJ_RelayProtectionAutomationValueRow eventRow;

            // Token: 0x04000BF7 RID: 3063
            private DataRowAction eventAction;
        }

        // Token: 0x0200018B RID: 395
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_RelayProtectionAutomationRowChangeEvent : EventArgs
        {
            // Token: 0x0600234A RID: 9034 RVA: 0x000AFCA7 File Offset: 0x000ADEA7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_RelayProtectionAutomationRowChangeEvent(DataSetGES.vJ_RelayProtectionAutomationRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000931 RID: 2353
            // (get) Token: 0x0600234B RID: 9035 RVA: 0x000AFCBD File Offset: 0x000ADEBD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_RelayProtectionAutomationRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000932 RID: 2354
            // (get) Token: 0x0600234C RID: 9036 RVA: 0x000AFCC5 File Offset: 0x000ADEC5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BF8 RID: 3064
            private DataSetGES.vJ_RelayProtectionAutomationRow eventRow;

            // Token: 0x04000BF9 RID: 3065
            private DataRowAction eventAction;
        }

        // Token: 0x0200018C RID: 396
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_UpdateProgramRowChangeEvent : EventArgs
        {
            // Token: 0x0600234D RID: 9037 RVA: 0x000AFCCD File Offset: 0x000ADECD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_UpdateProgramRowChangeEvent(DataSetGES.tJ_UpdateProgramRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000933 RID: 2355
            // (get) Token: 0x0600234E RID: 9038 RVA: 0x000AFCE3 File Offset: 0x000ADEE3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_UpdateProgramRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000934 RID: 2356
            // (get) Token: 0x0600234F RID: 9039 RVA: 0x000AFCEB File Offset: 0x000ADEEB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BFA RID: 3066
            private DataSetGES.tJ_UpdateProgramRow eventRow;

            // Token: 0x04000BFB RID: 3067
            private DataRowAction eventAction;
        }

        // Token: 0x0200018D RID: 397
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_UpdateProgramDocRowChangeEvent : EventArgs
        {
            // Token: 0x06002350 RID: 9040 RVA: 0x000AFCF3 File Offset: 0x000ADEF3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_UpdateProgramDocRowChangeEvent(DataSetGES.tJ_UpdateProgramDocRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000935 RID: 2357
            // (get) Token: 0x06002351 RID: 9041 RVA: 0x000AFD09 File Offset: 0x000ADF09
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramDocRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000936 RID: 2358
            // (get) Token: 0x06002352 RID: 9042 RVA: 0x000AFD11 File Offset: 0x000ADF11
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BFC RID: 3068
            private DataSetGES.tJ_UpdateProgramDocRow eventRow;

            // Token: 0x04000BFD RID: 3069
            private DataRowAction eventAction;
        }

        // Token: 0x0200018E RID: 398
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_UpdateProgramRowChangeEvent : EventArgs
        {
            // Token: 0x06002353 RID: 9043 RVA: 0x000AFD19 File Offset: 0x000ADF19
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_UpdateProgramRowChangeEvent(DataSetGES.vJ_UpdateProgramRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000937 RID: 2359
            // (get) Token: 0x06002354 RID: 9044 RVA: 0x000AFD2F File Offset: 0x000ADF2F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_UpdateProgramRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000938 RID: 2360
            // (get) Token: 0x06002355 RID: 9045 RVA: 0x000AFD37 File Offset: 0x000ADF37
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000BFE RID: 3070
            private DataSetGES.vJ_UpdateProgramRow eventRow;

            // Token: 0x04000BFF RID: 3071
            private DataRowAction eventAction;
        }

        // Token: 0x0200018F RID: 399
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_UpdateProgramUserCheckRowChangeEvent : EventArgs
        {
            // Token: 0x06002356 RID: 9046 RVA: 0x000AFD3F File Offset: 0x000ADF3F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_UpdateProgramUserCheckRowChangeEvent(DataSetGES.tJ_UpdateProgramUserCheckRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000939 RID: 2361
            // (get) Token: 0x06002357 RID: 9047 RVA: 0x000AFD55 File Offset: 0x000ADF55
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_UpdateProgramUserCheckRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700093A RID: 2362
            // (get) Token: 0x06002358 RID: 9048 RVA: 0x000AFD5D File Offset: 0x000ADF5D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C00 RID: 3072
            private DataSetGES.tJ_UpdateProgramUserCheckRow eventRow;

            // Token: 0x04000C01 RID: 3073
            private DataRowAction eventAction;
        }

        // Token: 0x02000190 RID: 400
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tMeas_MeasurementRowChangeEvent : EventArgs
        {
            // Token: 0x06002359 RID: 9049 RVA: 0x000AFD65 File Offset: 0x000ADF65
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tMeas_MeasurementRowChangeEvent(DataSetGES.tMeas_MeasurementRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700093B RID: 2363
            // (get) Token: 0x0600235A RID: 9050 RVA: 0x000AFD7B File Offset: 0x000ADF7B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_MeasurementRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700093C RID: 2364
            // (get) Token: 0x0600235B RID: 9051 RVA: 0x000AFD83 File Offset: 0x000ADF83
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C02 RID: 3074
            private DataSetGES.tMeas_MeasurementRow eventRow;

            // Token: 0x04000C03 RID: 3075
            private DataRowAction eventAction;
        }

        // Token: 0x02000191 RID: 401
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tMeas_TransRowChangeEvent : EventArgs
        {
            // Token: 0x0600235C RID: 9052 RVA: 0x000AFD8B File Offset: 0x000ADF8B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tMeas_TransRowChangeEvent(DataSetGES.tMeas_TransRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700093D RID: 2365
            // (get) Token: 0x0600235D RID: 9053 RVA: 0x000AFDA1 File Offset: 0x000ADFA1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tMeas_TransRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700093E RID: 2366
            // (get) Token: 0x0600235E RID: 9054 RVA: 0x000AFDA9 File Offset: 0x000ADFA9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C04 RID: 3076
            private DataSetGES.tMeas_TransRow eventRow;

            // Token: 0x04000C05 RID: 3077
            private DataRowAction eventAction;
        }

        // Token: 0x02000192 RID: 402
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tMeas_CabRowChangeEvent : EventArgs
        {
            // Token: 0x0600235F RID: 9055 RVA: 0x000AFDB1 File Offset: 0x000ADFB1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tMeas_CabRowChangeEvent(DataSetGES.tMeas_CabRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700093F RID: 2367
            // (get) Token: 0x06002360 RID: 9056 RVA: 0x000AFDC7 File Offset: 0x000ADFC7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tMeas_CabRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000940 RID: 2368
            // (get) Token: 0x06002361 RID: 9057 RVA: 0x000AFDCF File Offset: 0x000ADFCF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C06 RID: 3078
            private DataSetGES.tMeas_CabRow eventRow;

            // Token: 0x04000C07 RID: 3079
            private DataRowAction eventAction;
        }

        // Token: 0x02000193 RID: 403
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tSchm_ObjListRowChangeEvent : EventArgs
        {
            // Token: 0x06002362 RID: 9058 RVA: 0x000AFDD7 File Offset: 0x000ADFD7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tSchm_ObjListRowChangeEvent(DataSetGES.tSchm_ObjListRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000941 RID: 2369
            // (get) Token: 0x06002363 RID: 9059 RVA: 0x000AFDED File Offset: 0x000ADFED
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjListRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000942 RID: 2370
            // (get) Token: 0x06002364 RID: 9060 RVA: 0x000AFDF5 File Offset: 0x000ADFF5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C08 RID: 3080
            private DataSetGES.tSchm_ObjListRow eventRow;

            // Token: 0x04000C09 RID: 3081
            private DataRowAction eventAction;
        }

        // Token: 0x02000194 RID: 404
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vP_WorkerRowChangeEvent : EventArgs
        {
            // Token: 0x06002365 RID: 9061 RVA: 0x000AFDFD File Offset: 0x000ADFFD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_WorkerRowChangeEvent(DataSetGES.vP_WorkerRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000943 RID: 2371
            // (get) Token: 0x06002366 RID: 9062 RVA: 0x000AFE13 File Offset: 0x000AE013
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vP_WorkerRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000944 RID: 2372
            // (get) Token: 0x06002367 RID: 9063 RVA: 0x000AFE1B File Offset: 0x000AE01B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C0A RID: 3082
            private DataSetGES.vP_WorkerRow eventRow;

            // Token: 0x04000C0B RID: 3083
            private DataRowAction eventAction;
        }

        // Token: 0x02000195 RID: 405
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tP_ValueListsRowChangeEvent : EventArgs
        {
            // Token: 0x06002368 RID: 9064 RVA: 0x000AFE23 File Offset: 0x000AE023
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tP_ValueListsRowChangeEvent(DataSetGES.tP_ValueListsRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000945 RID: 2373
            // (get) Token: 0x06002369 RID: 9065 RVA: 0x000AFE39 File Offset: 0x000AE039
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tP_ValueListsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000946 RID: 2374
            // (get) Token: 0x0600236A RID: 9066 RVA: 0x000AFE41 File Offset: 0x000AE041
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C0C RID: 3084
            private DataSetGES.tP_ValueListsRow eventRow;

            // Token: 0x04000C0D RID: 3085
            private DataRowAction eventAction;
        }

        // Token: 0x02000196 RID: 406
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_CableMakeupRowChangeEvent : EventArgs
        {
            // Token: 0x0600236B RID: 9067 RVA: 0x000AFE49 File Offset: 0x000AE049
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CableMakeupRowChangeEvent(DataSetGES.vJ_CableMakeupRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000947 RID: 2375
            // (get) Token: 0x0600236C RID: 9068 RVA: 0x000AFE5F File Offset: 0x000AE05F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CableMakeupRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000948 RID: 2376
            // (get) Token: 0x0600236D RID: 9069 RVA: 0x000AFE67 File Offset: 0x000AE067
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C0E RID: 3086
            private DataSetGES.vJ_CableMakeupRow eventRow;

            // Token: 0x04000C0F RID: 3087
            private DataRowAction eventAction;
        }

        // Token: 0x02000197 RID: 407
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasPeriodBySubstationRowChangeEvent : EventArgs
        {
            // Token: 0x0600236E RID: 9070 RVA: 0x000AFE6F File Offset: 0x000AE06F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasPeriodBySubstationRowChangeEvent(DataSetGES.vJ_MeasPeriodBySubstationRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000949 RID: 2377
            // (get) Token: 0x0600236F RID: 9071 RVA: 0x000AFE85 File Offset: 0x000AE085
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasPeriodBySubstationRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700094A RID: 2378
            // (get) Token: 0x06002370 RID: 9072 RVA: 0x000AFE8D File Offset: 0x000AE08D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C10 RID: 3088
            private DataSetGES.vJ_MeasPeriodBySubstationRow eventRow;

            // Token: 0x04000C11 RID: 3089
            private DataRowAction eventAction;
        }

        // Token: 0x02000198 RID: 408
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_GetCellCableLVByTransfRowChangeEvent : EventArgs
        {
            // Token: 0x06002371 RID: 9073 RVA: 0x000AFE95 File Offset: 0x000AE095
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetCellCableLVByTransfRowChangeEvent(DataSetGES.fn_J_GetCellCableLVByTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700094B RID: 2379
            // (get) Token: 0x06002372 RID: 9074 RVA: 0x000AFEAB File Offset: 0x000AE0AB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellCableLVByTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700094C RID: 2380
            // (get) Token: 0x06002373 RID: 9075 RVA: 0x000AFEB3 File Offset: 0x000AE0B3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C12 RID: 3090
            private DataSetGES.fn_J_GetCellCableLVByTransfRow eventRow;

            // Token: 0x04000C13 RID: 3091
            private DataRowAction eventAction;
        }

        // Token: 0x02000199 RID: 409
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tL_SchmAbnRowChangeEvent : EventArgs
        {
            // Token: 0x06002374 RID: 9076 RVA: 0x000AFEBB File Offset: 0x000AE0BB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tL_SchmAbnRowChangeEvent(DataSetGES.tL_SchmAbnRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700094D RID: 2381
            // (get) Token: 0x06002375 RID: 9077 RVA: 0x000AFED1 File Offset: 0x000AE0D1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tL_SchmAbnRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700094E RID: 2382
            // (get) Token: 0x06002376 RID: 9078 RVA: 0x000AFED9 File Offset: 0x000AE0D9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C14 RID: 3092
            private DataSetGES.tL_SchmAbnRow eventRow;

            // Token: 0x04000C15 RID: 3093
            private DataRowAction eventAction;
        }

        // Token: 0x0200019A RID: 410
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasAbnObjRowChangeEvent : EventArgs
        {
            // Token: 0x06002377 RID: 9079 RVA: 0x000AFEE1 File Offset: 0x000AE0E1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasAbnObjRowChangeEvent(DataSetGES.vJ_MeasAbnObjRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700094F RID: 2383
            // (get) Token: 0x06002378 RID: 9080 RVA: 0x000AFEF7 File Offset: 0x000AE0F7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasAbnObjRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000950 RID: 2384
            // (get) Token: 0x06002379 RID: 9081 RVA: 0x000AFEFF File Offset: 0x000AE0FF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C16 RID: 3094
            private DataSetGES.vJ_MeasAbnObjRow eventRow;

            // Token: 0x04000C17 RID: 3095
            private DataRowAction eventAction;
        }

        // Token: 0x0200019B RID: 411
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_GetMeasYearsRowChangeEvent : EventArgs
        {
            // Token: 0x0600237A RID: 9082 RVA: 0x000AFF07 File Offset: 0x000AE107
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_GetMeasYearsRowChangeEvent(DataSetGES.vJ_GetMeasYearsRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000951 RID: 2385
            // (get) Token: 0x0600237B RID: 9083 RVA: 0x000AFF1D File Offset: 0x000AE11D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_GetMeasYearsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000952 RID: 2386
            // (get) Token: 0x0600237C RID: 9084 RVA: 0x000AFF25 File Offset: 0x000AE125
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C18 RID: 3096
            private DataSetGES.vJ_GetMeasYearsRow eventRow;

            // Token: 0x04000C19 RID: 3097
            private DataRowAction eventAction;
        }

        // Token: 0x0200019C RID: 412
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_GetCellLVByTransfRowChangeEvent : EventArgs
        {
            // Token: 0x0600237D RID: 9085 RVA: 0x000AFF2D File Offset: 0x000AE12D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetCellLVByTransfRowChangeEvent(DataSetGES.fn_J_GetCellLVByTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000953 RID: 2387
            // (get) Token: 0x0600237E RID: 9086 RVA: 0x000AFF43 File Offset: 0x000AE143
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellLVByTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000954 RID: 2388
            // (get) Token: 0x0600237F RID: 9087 RVA: 0x000AFF4B File Offset: 0x000AE14B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C1A RID: 3098
            private DataSetGES.fn_J_GetCellLVByTransfRow eventRow;

            // Token: 0x04000C1B RID: 3099
            private DataRowAction eventAction;
        }

        // Token: 0x0200019D RID: 413
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_MeasCableCalcResultsRowChangeEvent : EventArgs
        {
            // Token: 0x06002380 RID: 9088 RVA: 0x000AFF53 File Offset: 0x000AE153
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_MeasCableCalcResultsRowChangeEvent(DataSetGES.fn_J_MeasCableCalcResultsRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000955 RID: 2389
            // (get) Token: 0x06002381 RID: 9089 RVA: 0x000AFF69 File Offset: 0x000AE169
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_MeasCableCalcResultsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000956 RID: 2390
            // (get) Token: 0x06002382 RID: 9090 RVA: 0x000AFF71 File Offset: 0x000AE171
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C1C RID: 3100
            private DataSetGES.fn_J_MeasCableCalcResultsRow eventRow;

            // Token: 0x04000C1D RID: 3101
            private DataRowAction eventAction;
        }

        // Token: 0x0200019E RID: 414
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tR_CableMakeupRowChangeEvent : EventArgs
        {
            // Token: 0x06002383 RID: 9091 RVA: 0x000AFF79 File Offset: 0x000AE179
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableMakeupRowChangeEvent(DataSetGES.tR_CableMakeupRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000957 RID: 2391
            // (get) Token: 0x06002384 RID: 9092 RVA: 0x000AFF8F File Offset: 0x000AE18F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_CableMakeupRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000958 RID: 2392
            // (get) Token: 0x06002385 RID: 9093 RVA: 0x000AFF97 File Offset: 0x000AE197
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C1E RID: 3102
            private DataSetGES.tR_CableMakeupRow eventRow;

            // Token: 0x04000C1F RID: 3103
            private DataRowAction eventAction;
        }

        // Token: 0x0200019F RID: 415
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tR_CrossSectionRowChangeEvent : EventArgs
        {
            // Token: 0x06002386 RID: 9094 RVA: 0x000AFF9F File Offset: 0x000AE19F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_CrossSectionRowChangeEvent(DataSetGES.tR_CrossSectionRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000959 RID: 2393
            // (get) Token: 0x06002387 RID: 9095 RVA: 0x000AFFB5 File Offset: 0x000AE1B5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CrossSectionRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700095A RID: 2394
            // (get) Token: 0x06002388 RID: 9096 RVA: 0x000AFFBD File Offset: 0x000AE1BD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C20 RID: 3104
            private DataSetGES.tR_CrossSectionRow eventRow;

            // Token: 0x04000C21 RID: 3105
            private DataRowAction eventAction;
        }

        // Token: 0x020001A0 RID: 416
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tR_CableVoltageRowChangeEvent : EventArgs
        {
            // Token: 0x06002389 RID: 9097 RVA: 0x000AFFC5 File Offset: 0x000AE1C5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableVoltageRowChangeEvent(DataSetGES.tR_CableVoltageRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700095B RID: 2395
            // (get) Token: 0x0600238A RID: 9098 RVA: 0x000AFFDB File Offset: 0x000AE1DB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CableVoltageRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700095C RID: 2396
            // (get) Token: 0x0600238B RID: 9099 RVA: 0x000AFFE3 File Offset: 0x000AE1E3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C22 RID: 3106
            private DataSetGES.tR_CableVoltageRow eventRow;

            // Token: 0x04000C23 RID: 3107
            private DataRowAction eventAction;
        }

        // Token: 0x020001A1 RID: 417
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tR_CableAmperageRowChangeEvent : EventArgs
        {
            // Token: 0x0600238C RID: 9100 RVA: 0x000AFFEB File Offset: 0x000AE1EB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tR_CableAmperageRowChangeEvent(DataSetGES.tR_CableAmperageRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700095D RID: 2397
            // (get) Token: 0x0600238D RID: 9101 RVA: 0x000B0001 File Offset: 0x000AE201
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CableAmperageRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700095E RID: 2398
            // (get) Token: 0x0600238E RID: 9102 RVA: 0x000B0009 File Offset: 0x000AE209
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C24 RID: 3108
            private DataSetGES.tR_CableAmperageRow eventRow;

            // Token: 0x04000C25 RID: 3109
            private DataRowAction eventAction;
        }

        // Token: 0x020001A2 RID: 418
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tR_CableWiresRowChangeEvent : EventArgs
        {
            // Token: 0x0600238F RID: 9103 RVA: 0x000B0011 File Offset: 0x000AE211
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_CableWiresRowChangeEvent(DataSetGES.tR_CableWiresRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700095F RID: 2399
            // (get) Token: 0x06002390 RID: 9104 RVA: 0x000B0027 File Offset: 0x000AE227
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tR_CableWiresRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000960 RID: 2400
            // (get) Token: 0x06002391 RID: 9105 RVA: 0x000B002F File Offset: 0x000AE22F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C26 RID: 3110
            private DataSetGES.tR_CableWiresRow eventRow;

            // Token: 0x04000C27 RID: 3111
            private DataRowAction eventAction;
        }

        // Token: 0x020001A3 RID: 419
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_CableReferenceRowChangeEvent : EventArgs
        {
            // Token: 0x06002392 RID: 9106 RVA: 0x000B0037 File Offset: 0x000AE237
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CableReferenceRowChangeEvent(DataSetGES.vJ_CableReferenceRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000961 RID: 2401
            // (get) Token: 0x06002393 RID: 9107 RVA: 0x000B004D File Offset: 0x000AE24D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableReferenceRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000962 RID: 2402
            // (get) Token: 0x06002394 RID: 9108 RVA: 0x000B0055 File Offset: 0x000AE255
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C28 RID: 3112
            private DataSetGES.vJ_CableReferenceRow eventRow;

            // Token: 0x04000C29 RID: 3113
            private DataRowAction eventAction;
        }

        // Token: 0x020001A4 RID: 420
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_TransfsRowChangeEvent : EventArgs
        {
            // Token: 0x06002395 RID: 9109 RVA: 0x000B005D File Offset: 0x000AE25D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_TransfsRowChangeEvent(DataSetGES.vJ_TransfsRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000963 RID: 2403
            // (get) Token: 0x06002396 RID: 9110 RVA: 0x000B0073 File Offset: 0x000AE273
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_TransfsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000964 RID: 2404
            // (get) Token: 0x06002397 RID: 9111 RVA: 0x000B007B File Offset: 0x000AE27B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C2A RID: 3114
            private DataSetGES.vJ_TransfsRow eventRow;

            // Token: 0x04000C2B RID: 3115
            private DataRowAction eventAction;
        }

        // Token: 0x020001A5 RID: 421
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtMeasCableRatioRowChangeEvent : EventArgs
        {
            // Token: 0x06002398 RID: 9112 RVA: 0x000B0083 File Offset: 0x000AE283
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtMeasCableRatioRowChangeEvent(DataSetGES.dtMeasCableRatioRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000965 RID: 2405
            // (get) Token: 0x06002399 RID: 9113 RVA: 0x000B0099 File Offset: 0x000AE299
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtMeasCableRatioRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000966 RID: 2406
            // (get) Token: 0x0600239A RID: 9114 RVA: 0x000B00A1 File Offset: 0x000AE2A1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C2C RID: 3116
            private DataSetGES.dtMeasCableRatioRow eventRow;

            // Token: 0x04000C2D RID: 3117
            private DataRowAction eventAction;
        }

        // Token: 0x020001A6 RID: 422
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_GetBusLVByTransfRowChangeEvent : EventArgs
        {
            // Token: 0x0600239B RID: 9115 RVA: 0x000B00A9 File Offset: 0x000AE2A9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetBusLVByTransfRowChangeEvent(DataSetGES.fn_J_GetBusLVByTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000967 RID: 2407
            // (get) Token: 0x0600239C RID: 9116 RVA: 0x000B00BF File Offset: 0x000AE2BF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetBusLVByTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000968 RID: 2408
            // (get) Token: 0x0600239D RID: 9117 RVA: 0x000B00C7 File Offset: 0x000AE2C7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C2E RID: 3118
            private DataSetGES.fn_J_GetBusLVByTransfRow eventRow;

            // Token: 0x04000C2F RID: 3119
            private DataRowAction eventAction;
        }

        // Token: 0x020001A7 RID: 423
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasurementReportRowChangeEvent : EventArgs
        {
            // Token: 0x0600239E RID: 9118 RVA: 0x000B00CF File Offset: 0x000AE2CF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasurementReportRowChangeEvent(DataSetGES.vJ_MeasurementReportRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000969 RID: 2409
            // (get) Token: 0x0600239F RID: 9119 RVA: 0x000B00E5 File Offset: 0x000AE2E5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasurementReportRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700096A RID: 2410
            // (get) Token: 0x060023A0 RID: 9120 RVA: 0x000B00ED File Offset: 0x000AE2ED
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C30 RID: 3120
            private DataSetGES.vJ_MeasurementReportRow eventRow;

            // Token: 0x04000C31 RID: 3121
            private DataRowAction eventAction;
        }

        // Token: 0x020001A8 RID: 424
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtMeasTransfAmperageDopDataReportRowChangeEvent : EventArgs
        {
            // Token: 0x060023A1 RID: 9121 RVA: 0x000B00F5 File Offset: 0x000AE2F5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtMeasTransfAmperageDopDataReportRowChangeEvent(DataSetGES.dtMeasTransfAmperageDopDataReportRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700096B RID: 2411
            // (get) Token: 0x060023A2 RID: 9122 RVA: 0x000B010B File Offset: 0x000AE30B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtMeasTransfAmperageDopDataReportRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700096C RID: 2412
            // (get) Token: 0x060023A3 RID: 9123 RVA: 0x000B0113 File Offset: 0x000AE313
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C32 RID: 3122
            private DataSetGES.dtMeasTransfAmperageDopDataReportRow eventRow;

            // Token: 0x04000C33 RID: 3123
            private DataRowAction eventAction;
        }

        // Token: 0x020001A9 RID: 425
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_ExcelessLoadReportRowChangeEvent : EventArgs
        {
            // Token: 0x060023A4 RID: 9124 RVA: 0x000B011B File Offset: 0x000AE31B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_ExcelessLoadReportRowChangeEvent(DataSetGES.fn_J_ExcelessLoadReportRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700096D RID: 2413
            // (get) Token: 0x060023A5 RID: 9125 RVA: 0x000B0131 File Offset: 0x000AE331
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_ExcelessLoadReportRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700096E RID: 2414
            // (get) Token: 0x060023A6 RID: 9126 RVA: 0x000B0139 File Offset: 0x000AE339
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C34 RID: 3124
            private DataSetGES.fn_J_ExcelessLoadReportRow eventRow;

            // Token: 0x04000C35 RID: 3125
            private DataRowAction eventAction;
        }

        // Token: 0x020001AA RID: 426
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtExcelessLoadAddlReportRowChangeEvent : EventArgs
        {
            // Token: 0x060023A7 RID: 9127 RVA: 0x000B0141 File Offset: 0x000AE341
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtExcelessLoadAddlReportRowChangeEvent(DataSetGES.dtExcelessLoadAddlReportRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700096F RID: 2415
            // (get) Token: 0x060023A8 RID: 9128 RVA: 0x000B0157 File Offset: 0x000AE357
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtExcelessLoadAddlReportRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000970 RID: 2416
            // (get) Token: 0x060023A9 RID: 9129 RVA: 0x000B015F File Offset: 0x000AE35F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C36 RID: 3126
            private DataSetGES.dtExcelessLoadAddlReportRow eventRow;

            // Token: 0x04000C37 RID: 3127
            private DataRowAction eventAction;
        }

        // Token: 0x020001AB RID: 427
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_CoefficientLoadingRowChangeEvent : EventArgs
        {
            // Token: 0x060023AA RID: 9130 RVA: 0x000B0167 File Offset: 0x000AE367
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CoefficientLoadingRowChangeEvent(DataSetGES.vJ_CoefficientLoadingRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000971 RID: 2417
            // (get) Token: 0x060023AB RID: 9131 RVA: 0x000B017D File Offset: 0x000AE37D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CoefficientLoadingRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000972 RID: 2418
            // (get) Token: 0x060023AC RID: 9132 RVA: 0x000B0185 File Offset: 0x000AE385
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C38 RID: 3128
            private DataSetGES.vJ_CoefficientLoadingRow eventRow;

            // Token: 0x04000C39 RID: 3129
            private DataRowAction eventAction;
        }

        // Token: 0x020001AC RID: 428
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtCoefficientLoadingAddlRowChangeEvent : EventArgs
        {
            // Token: 0x060023AD RID: 9133 RVA: 0x000B018D File Offset: 0x000AE38D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public dtCoefficientLoadingAddlRowChangeEvent(DataSetGES.dtCoefficientLoadingAddlRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000973 RID: 2419
            // (get) Token: 0x060023AE RID: 9134 RVA: 0x000B01A3 File Offset: 0x000AE3A3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtCoefficientLoadingAddlRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000974 RID: 2420
            // (get) Token: 0x060023AF RID: 9135 RVA: 0x000B01AB File Offset: 0x000AE3AB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C3A RID: 3130
            private DataSetGES.dtCoefficientLoadingAddlRow eventRow;

            // Token: 0x04000C3B RID: 3131
            private DataRowAction eventAction;
        }

        // Token: 0x020001AD RID: 429
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_CoefficientIrregularityRowChangeEvent : EventArgs
        {
            // Token: 0x060023B0 RID: 9136 RVA: 0x000B01B3 File Offset: 0x000AE3B3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CoefficientIrregularityRowChangeEvent(DataSetGES.vJ_CoefficientIrregularityRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000975 RID: 2421
            // (get) Token: 0x060023B1 RID: 9137 RVA: 0x000B01C9 File Offset: 0x000AE3C9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CoefficientIrregularityRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000976 RID: 2422
            // (get) Token: 0x060023B2 RID: 9138 RVA: 0x000B01D1 File Offset: 0x000AE3D1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C3C RID: 3132
            private DataSetGES.vJ_CoefficientIrregularityRow eventRow;

            // Token: 0x04000C3D RID: 3133
            private DataRowAction eventAction;
        }

        // Token: 0x020001AE RID: 430
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vP_SubstationTransfRowChangeEvent : EventArgs
        {
            // Token: 0x060023B3 RID: 9139 RVA: 0x000B01D9 File Offset: 0x000AE3D9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vP_SubstationTransfRowChangeEvent(DataSetGES.vP_SubstationTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000977 RID: 2423
            // (get) Token: 0x060023B4 RID: 9140 RVA: 0x000B01EF File Offset: 0x000AE3EF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_SubstationTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000978 RID: 2424
            // (get) Token: 0x060023B5 RID: 9141 RVA: 0x000B01F7 File Offset: 0x000AE3F7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C3E RID: 3134
            private DataSetGES.vP_SubstationTransfRow eventRow;

            // Token: 0x04000C3F RID: 3135
            private DataRowAction eventAction;
        }

        // Token: 0x020001AF RID: 431
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tR_DocTemplateRowChangeEvent : EventArgs
        {
            // Token: 0x060023B6 RID: 9142 RVA: 0x000B01FF File Offset: 0x000AE3FF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tR_DocTemplateRowChangeEvent(DataSetGES.tR_DocTemplateRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000979 RID: 2425
            // (get) Token: 0x060023B7 RID: 9143 RVA: 0x000B0215 File Offset: 0x000AE415
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tR_DocTemplateRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700097A RID: 2426
            // (get) Token: 0x060023B8 RID: 9144 RVA: 0x000B021D File Offset: 0x000AE41D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C40 RID: 3136
            private DataSetGES.tR_DocTemplateRow eventRow;

            // Token: 0x04000C41 RID: 3137
            private DataRowAction eventAction;
        }

        // Token: 0x020001B0 RID: 432
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_GetCellTransfByBusLVRowChangeEvent : EventArgs
        {
            // Token: 0x060023B9 RID: 9145 RVA: 0x000B0225 File Offset: 0x000AE425
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetCellTransfByBusLVRowChangeEvent(DataSetGES.fn_J_GetCellTransfByBusLVRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700097B RID: 2427
            // (get) Token: 0x060023BA RID: 9146 RVA: 0x000B023B File Offset: 0x000AE43B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetCellTransfByBusLVRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700097C RID: 2428
            // (get) Token: 0x060023BB RID: 9147 RVA: 0x000B0243 File Offset: 0x000AE443
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C42 RID: 3138
            private DataSetGES.fn_J_GetCellTransfByBusLVRow eventRow;

            // Token: 0x04000C43 RID: 3139
            private DataRowAction eventAction;
        }

        // Token: 0x020001B1 RID: 433
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtBusesRowChangeEvent : EventArgs
        {
            // Token: 0x060023BC RID: 9148 RVA: 0x000B024B File Offset: 0x000AE44B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBusesRowChangeEvent(DataSetGES.dtBusesRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700097D RID: 2429
            // (get) Token: 0x060023BD RID: 9149 RVA: 0x000B0261 File Offset: 0x000AE461
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtBusesRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700097E RID: 2430
            // (get) Token: 0x060023BE RID: 9150 RVA: 0x000B0269 File Offset: 0x000AE469
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C44 RID: 3140
            private DataSetGES.dtBusesRow eventRow;

            // Token: 0x04000C45 RID: 3141
            private DataRowAction eventAction;
        }

        // Token: 0x020001B2 RID: 434
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtCellsRowChangeEvent : EventArgs
        {
            // Token: 0x060023BF RID: 9151 RVA: 0x000B0271 File Offset: 0x000AE471
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCellsRowChangeEvent(DataSetGES.dtCellsRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700097F RID: 2431
            // (get) Token: 0x060023C0 RID: 9152 RVA: 0x000B0287 File Offset: 0x000AE487
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.dtCellsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000980 RID: 2432
            // (get) Token: 0x060023C1 RID: 9153 RVA: 0x000B028F File Offset: 0x000AE48F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C46 RID: 3142
            private DataSetGES.dtCellsRow eventRow;

            // Token: 0x04000C47 RID: 3143
            private DataRowAction eventAction;
        }

        // Token: 0x020001B3 RID: 435
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_MeasurementRowChangeEvent : EventArgs
        {
            // Token: 0x060023C2 RID: 9154 RVA: 0x000B0297 File Offset: 0x000AE497
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MeasurementRowChangeEvent(DataSetGES.tJ_MeasurementRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000981 RID: 2433
            // (get) Token: 0x060023C3 RID: 9155 RVA: 0x000B02AD File Offset: 0x000AE4AD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasurementRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000982 RID: 2434
            // (get) Token: 0x060023C4 RID: 9156 RVA: 0x000B02B5 File Offset: 0x000AE4B5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C48 RID: 3144
            private DataSetGES.tJ_MeasurementRow eventRow;

            // Token: 0x04000C49 RID: 3145
            private DataRowAction eventAction;
        }

        // Token: 0x020001B4 RID: 436
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasTransfPassportRowChangeEvent : EventArgs
        {
            // Token: 0x060023C5 RID: 9157 RVA: 0x000B02BD File Offset: 0x000AE4BD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasTransfPassportRowChangeEvent(DataSetGES.vJ_MeasTransfPassportRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000983 RID: 2435
            // (get) Token: 0x060023C6 RID: 9158 RVA: 0x000B02D3 File Offset: 0x000AE4D3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasTransfPassportRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000984 RID: 2436
            // (get) Token: 0x060023C7 RID: 9159 RVA: 0x000B02DB File Offset: 0x000AE4DB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C4A RID: 3146
            private DataSetGES.vJ_MeasTransfPassportRow eventRow;

            // Token: 0x04000C4B RID: 3147
            private DataRowAction eventAction;
        }

        // Token: 0x020001B5 RID: 437
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_MeasTransfPassportRowChangeEvent : EventArgs
        {
            // Token: 0x060023C8 RID: 9160 RVA: 0x000B02E3 File Offset: 0x000AE4E3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_MeasTransfPassportRowChangeEvent(DataSetGES.fn_J_MeasTransfPassportRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000985 RID: 2437
            // (get) Token: 0x060023C9 RID: 9161 RVA: 0x000B02F9 File Offset: 0x000AE4F9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_MeasTransfPassportRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000986 RID: 2438
            // (get) Token: 0x060023CA RID: 9162 RVA: 0x000B0301 File Offset: 0x000AE501
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C4C RID: 3148
            private DataSetGES.fn_J_MeasTransfPassportRow eventRow;

            // Token: 0x04000C4D RID: 3149
            private DataRowAction eventAction;
        }

        // Token: 0x020001B6 RID: 438
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasCableRowChangeEvent : EventArgs
        {
            // Token: 0x060023CB RID: 9163 RVA: 0x000B0309 File Offset: 0x000AE509
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasCableRowChangeEvent(DataSetGES.vJ_MeasCableRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000987 RID: 2439
            // (get) Token: 0x060023CC RID: 9164 RVA: 0x000B031F File Offset: 0x000AE51F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000988 RID: 2440
            // (get) Token: 0x060023CD RID: 9165 RVA: 0x000B0327 File Offset: 0x000AE527
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C4E RID: 3150
            private DataSetGES.vJ_MeasCableRow eventRow;

            // Token: 0x04000C4F RID: 3151
            private DataRowAction eventAction;
        }

        // Token: 0x020001B7 RID: 439
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtMeasCellRatioRowChangeEvent : EventArgs
        {
            // Token: 0x060023CE RID: 9166 RVA: 0x000B032F File Offset: 0x000AE52F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtMeasCellRatioRowChangeEvent(DataSetGES.dtMeasCellRatioRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000989 RID: 2441
            // (get) Token: 0x060023CF RID: 9167 RVA: 0x000B0345 File Offset: 0x000AE545
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtMeasCellRatioRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700098A RID: 2442
            // (get) Token: 0x060023D0 RID: 9168 RVA: 0x000B034D File Offset: 0x000AE54D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C50 RID: 3152
            private DataSetGES.dtMeasCellRatioRow eventRow;

            // Token: 0x04000C51 RID: 3153
            private DataRowAction eventAction;
        }

        // Token: 0x020001B8 RID: 440
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tSchm_ObjList1RowChangeEvent : EventArgs
        {
            // Token: 0x060023D1 RID: 9169 RVA: 0x000B0355 File Offset: 0x000AE555
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tSchm_ObjList1RowChangeEvent(DataSetGES.tSchm_ObjList1Row row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700098B RID: 2443
            // (get) Token: 0x060023D2 RID: 9170 RVA: 0x000B036B File Offset: 0x000AE56B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tSchm_ObjList1Row Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700098C RID: 2444
            // (get) Token: 0x060023D3 RID: 9171 RVA: 0x000B0373 File Offset: 0x000AE573
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C52 RID: 3154
            private DataSetGES.tSchm_ObjList1Row eventRow;

            // Token: 0x04000C53 RID: 3155
            private DataRowAction eventAction;
        }

        // Token: 0x020001B9 RID: 441
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_TransfBySubstationRowChangeEvent : EventArgs
        {
            // Token: 0x060023D4 RID: 9172 RVA: 0x000B037B File Offset: 0x000AE57B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_TransfBySubstationRowChangeEvent(DataSetGES.vJ_TransfBySubstationRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700098D RID: 2445
            // (get) Token: 0x060023D5 RID: 9173 RVA: 0x000B0391 File Offset: 0x000AE591
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_TransfBySubstationRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700098E RID: 2446
            // (get) Token: 0x060023D6 RID: 9174 RVA: 0x000B0399 File Offset: 0x000AE599
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C54 RID: 3156
            private DataSetGES.vJ_TransfBySubstationRow eventRow;

            // Token: 0x04000C55 RID: 3157
            private DataRowAction eventAction;
        }

        // Token: 0x020001BA RID: 442
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_PowerISR_TransfRowChangeEvent : EventArgs
        {
            // Token: 0x060023D7 RID: 9175 RVA: 0x000B03A1 File Offset: 0x000AE5A1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_PowerISR_TransfRowChangeEvent(DataSetGES.vJ_PowerISR_TransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700098F RID: 2447
            // (get) Token: 0x060023D8 RID: 9176 RVA: 0x000B03B7 File Offset: 0x000AE5B7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_PowerISR_TransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000990 RID: 2448
            // (get) Token: 0x060023D9 RID: 9177 RVA: 0x000B03BF File Offset: 0x000AE5BF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C56 RID: 3158
            private DataSetGES.vJ_PowerISR_TransfRow eventRow;

            // Token: 0x04000C57 RID: 3159
            private DataRowAction eventAction;
        }

        // Token: 0x020001BB RID: 443
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_PowerISR_SSTransfRowChangeEvent : EventArgs
        {
            // Token: 0x060023DA RID: 9178 RVA: 0x000B03C7 File Offset: 0x000AE5C7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_PowerISR_SSTransfRowChangeEvent(DataSetGES.vJ_PowerISR_SSTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000991 RID: 2449
            // (get) Token: 0x060023DB RID: 9179 RVA: 0x000B03DD File Offset: 0x000AE5DD
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_PowerISR_SSTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000992 RID: 2450
            // (get) Token: 0x060023DC RID: 9180 RVA: 0x000B03E5 File Offset: 0x000AE5E5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C58 RID: 3160
            private DataSetGES.vJ_PowerISR_SSTransfRow eventRow;

            // Token: 0x04000C59 RID: 3161
            private DataRowAction eventAction;
        }

        // Token: 0x020001BC RID: 444
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtAmountFreeCapasityRowChangeEvent : EventArgs
        {
            // Token: 0x060023DD RID: 9181 RVA: 0x000B03ED File Offset: 0x000AE5ED
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAmountFreeCapasityRowChangeEvent(DataSetGES.dtAmountFreeCapasityRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000993 RID: 2451
            // (get) Token: 0x060023DE RID: 9182 RVA: 0x000B0403 File Offset: 0x000AE603
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtAmountFreeCapasityRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000994 RID: 2452
            // (get) Token: 0x060023DF RID: 9183 RVA: 0x000B040B File Offset: 0x000AE60B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C5A RID: 3162
            private DataSetGES.dtAmountFreeCapasityRow eventRow;

            // Token: 0x04000C5B RID: 3163
            private DataRowAction eventAction;
        }

        // Token: 0x020001BD RID: 445
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_GetCellTransfByBusHVRowChangeEvent : EventArgs
        {
            // Token: 0x060023E0 RID: 9184 RVA: 0x000B0413 File Offset: 0x000AE613
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public fn_J_GetCellTransfByBusHVRowChangeEvent(DataSetGES.fn_J_GetCellTransfByBusHVRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000995 RID: 2453
            // (get) Token: 0x060023E1 RID: 9185 RVA: 0x000B0429 File Offset: 0x000AE629
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.fn_J_GetCellTransfByBusHVRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000996 RID: 2454
            // (get) Token: 0x060023E2 RID: 9186 RVA: 0x000B0431 File Offset: 0x000AE631
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C5C RID: 3164
            private DataSetGES.fn_J_GetCellTransfByBusHVRow eventRow;

            // Token: 0x04000C5D RID: 3165
            private DataRowAction eventAction;
        }

        // Token: 0x020001BE RID: 446
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_MeasCableRowChangeEvent : EventArgs
        {
            // Token: 0x060023E3 RID: 9187 RVA: 0x000B0439 File Offset: 0x000AE639
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MeasCableRowChangeEvent(DataSetGES.tJ_MeasCableRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000997 RID: 2455
            // (get) Token: 0x060023E4 RID: 9188 RVA: 0x000B044F File Offset: 0x000AE64F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasCableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x17000998 RID: 2456
            // (get) Token: 0x060023E5 RID: 9189 RVA: 0x000B0457 File Offset: 0x000AE657
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C5E RID: 3166
            private DataSetGES.tJ_MeasCableRow eventRow;

            // Token: 0x04000C5F RID: 3167
            private DataRowAction eventAction;
        }

        // Token: 0x020001BF RID: 447
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_LastCableInfoRowChangeEvent : EventArgs
        {
            // Token: 0x060023E6 RID: 9190 RVA: 0x000B045F File Offset: 0x000AE65F
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_LastCableInfoRowChangeEvent(DataSetGES.vJ_LastCableInfoRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x17000999 RID: 2457
            // (get) Token: 0x060023E7 RID: 9191 RVA: 0x000B0475 File Offset: 0x000AE675
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_LastCableInfoRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700099A RID: 2458
            // (get) Token: 0x060023E8 RID: 9192 RVA: 0x000B047D File Offset: 0x000AE67D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C60 RID: 3168
            private DataSetGES.vJ_LastCableInfoRow eventRow;

            // Token: 0x04000C61 RID: 3169
            private DataRowAction eventAction;
        }

        // Token: 0x020001C0 RID: 448
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_TransfByCellRowChangeEvent : EventArgs
        {
            // Token: 0x060023E9 RID: 9193 RVA: 0x000B0485 File Offset: 0x000AE685
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_TransfByCellRowChangeEvent(DataSetGES.vJ_TransfByCellRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700099B RID: 2459
            // (get) Token: 0x060023EA RID: 9194 RVA: 0x000B049B File Offset: 0x000AE69B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_TransfByCellRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700099C RID: 2460
            // (get) Token: 0x060023EB RID: 9195 RVA: 0x000B04A3 File Offset: 0x000AE6A3
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C62 RID: 3170
            private DataSetGES.vJ_TransfByCellRow eventRow;

            // Token: 0x04000C63 RID: 3171
            private DataRowAction eventAction;
        }

        // Token: 0x020001C1 RID: 449
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_CableByCellRowChangeEvent : EventArgs
        {
            // Token: 0x060023EC RID: 9196 RVA: 0x000B04AB File Offset: 0x000AE6AB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CableByCellRowChangeEvent(DataSetGES.vJ_CableByCellRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700099D RID: 2461
            // (get) Token: 0x060023ED RID: 9197 RVA: 0x000B04C1 File Offset: 0x000AE6C1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CableByCellRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x1700099E RID: 2462
            // (get) Token: 0x060023EE RID: 9198 RVA: 0x000B04C9 File Offset: 0x000AE6C9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C64 RID: 3172
            private DataSetGES.vJ_CableByCellRow eventRow;

            // Token: 0x04000C65 RID: 3173
            private DataRowAction eventAction;
        }

        // Token: 0x020001C2 RID: 450
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_GetBusMVByTransfRowChangeEvent : EventArgs
        {
            // Token: 0x060023EF RID: 9199 RVA: 0x000B04D1 File Offset: 0x000AE6D1
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetBusMVByTransfRowChangeEvent(DataSetGES.fn_J_GetBusMVByTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x1700099F RID: 2463
            // (get) Token: 0x060023F0 RID: 9200 RVA: 0x000B04E7 File Offset: 0x000AE6E7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetBusMVByTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009A0 RID: 2464
            // (get) Token: 0x060023F1 RID: 9201 RVA: 0x000B04EF File Offset: 0x000AE6EF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C66 RID: 3174
            private DataSetGES.fn_J_GetBusMVByTransfRow eventRow;

            // Token: 0x04000C67 RID: 3175
            private DataRowAction eventAction;
        }

        // Token: 0x020001C3 RID: 451
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_MeasAmperageTransfRowChangeEvent : EventArgs
        {
            // Token: 0x060023F2 RID: 9202 RVA: 0x000B04F7 File Offset: 0x000AE6F7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tJ_MeasAmperageTransfRowChangeEvent(DataSetGES.tJ_MeasAmperageTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009A1 RID: 2465
            // (get) Token: 0x060023F3 RID: 9203 RVA: 0x000B050D File Offset: 0x000AE70D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasAmperageTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009A2 RID: 2466
            // (get) Token: 0x060023F4 RID: 9204 RVA: 0x000B0515 File Offset: 0x000AE715
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C68 RID: 3176
            private DataSetGES.tJ_MeasAmperageTransfRow eventRow;

            // Token: 0x04000C69 RID: 3177
            private DataRowAction eventAction;
        }

        // Token: 0x020001C4 RID: 452
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tSchm_ObjList2RowChangeEvent : EventArgs
        {
            // Token: 0x060023F5 RID: 9205 RVA: 0x000B051D File Offset: 0x000AE71D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tSchm_ObjList2RowChangeEvent(DataSetGES.tSchm_ObjList2Row row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009A3 RID: 2467
            // (get) Token: 0x060023F6 RID: 9206 RVA: 0x000B0533 File Offset: 0x000AE733
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList2Row Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009A4 RID: 2468
            // (get) Token: 0x060023F7 RID: 9207 RVA: 0x000B053B File Offset: 0x000AE73B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C6A RID: 3178
            private DataSetGES.tSchm_ObjList2Row eventRow;

            // Token: 0x04000C6B RID: 3179
            private DataRowAction eventAction;
        }

        // Token: 0x020001C5 RID: 453
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tSchm_ObjList3RowChangeEvent : EventArgs
        {
            // Token: 0x060023F8 RID: 9208 RVA: 0x000B0543 File Offset: 0x000AE743
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public tSchm_ObjList3RowChangeEvent(DataSetGES.tSchm_ObjList3Row row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009A5 RID: 2469
            // (get) Token: 0x060023F9 RID: 9209 RVA: 0x000B0559 File Offset: 0x000AE759
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tSchm_ObjList3Row Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009A6 RID: 2470
            // (get) Token: 0x060023FA RID: 9210 RVA: 0x000B0561 File Offset: 0x000AE761
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C6C RID: 3180
            private DataSetGES.tSchm_ObjList3Row eventRow;

            // Token: 0x04000C6D RID: 3181
            private DataRowAction eventAction;
        }

        // Token: 0x020001C6 RID: 454
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vP_TransfBySubstationRowChangeEvent : EventArgs
        {
            // Token: 0x060023FB RID: 9211 RVA: 0x000B0569 File Offset: 0x000AE769
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vP_TransfBySubstationRowChangeEvent(DataSetGES.vP_TransfBySubstationRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009A7 RID: 2471
            // (get) Token: 0x060023FC RID: 9212 RVA: 0x000B057F File Offset: 0x000AE77F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_TransfBySubstationRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009A8 RID: 2472
            // (get) Token: 0x060023FD RID: 9213 RVA: 0x000B0587 File Offset: 0x000AE787
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C6E RID: 3182
            private DataSetGES.vP_TransfBySubstationRow eventRow;

            // Token: 0x04000C6F RID: 3183
            private DataRowAction eventAction;
        }

        // Token: 0x020001C7 RID: 455
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasAmpSubTransf_TEMPRowChangeEvent : EventArgs
        {
            // Token: 0x060023FE RID: 9214 RVA: 0x000B058F File Offset: 0x000AE78F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasAmpSubTransf_TEMPRowChangeEvent(DataSetGES.vJ_MeasAmpSubTransf_TEMPRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009A9 RID: 2473
            // (get) Token: 0x060023FF RID: 9215 RVA: 0x000B05A5 File Offset: 0x000AE7A5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasAmpSubTransf_TEMPRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009AA RID: 2474
            // (get) Token: 0x06002400 RID: 9216 RVA: 0x000B05AD File Offset: 0x000AE7AD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C70 RID: 3184
            private DataSetGES.vJ_MeasAmpSubTransf_TEMPRow eventRow;

            // Token: 0x04000C71 RID: 3185
            private DataRowAction eventAction;
        }

        // Token: 0x020001C8 RID: 456
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasSubTransf_TEMPRowChangeEvent : EventArgs
        {
            // Token: 0x06002401 RID: 9217 RVA: 0x000B05B5 File Offset: 0x000AE7B5
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasSubTransf_TEMPRowChangeEvent(DataSetGES.vJ_MeasSubTransf_TEMPRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009AB RID: 2475
            // (get) Token: 0x06002402 RID: 9218 RVA: 0x000B05CB File Offset: 0x000AE7CB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_MeasSubTransf_TEMPRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009AC RID: 2476
            // (get) Token: 0x06002403 RID: 9219 RVA: 0x000B05D3 File Offset: 0x000AE7D3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C72 RID: 3186
            private DataSetGES.vJ_MeasSubTransf_TEMPRow eventRow;

            // Token: 0x04000C73 RID: 3187
            private DataRowAction eventAction;
        }

        // Token: 0x020001C9 RID: 457
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class fn_J_GetTransfByBusLVRowChangeEvent : EventArgs
        {
            // Token: 0x06002404 RID: 9220 RVA: 0x000B05DB File Offset: 0x000AE7DB
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public fn_J_GetTransfByBusLVRowChangeEvent(DataSetGES.fn_J_GetTransfByBusLVRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009AD RID: 2477
            // (get) Token: 0x06002405 RID: 9221 RVA: 0x000B05F1 File Offset: 0x000AE7F1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.fn_J_GetTransfByBusLVRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009AE RID: 2478
            // (get) Token: 0x06002406 RID: 9222 RVA: 0x000B05F9 File Offset: 0x000AE7F9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C74 RID: 3188
            private DataSetGES.fn_J_GetTransfByBusLVRow eventRow;

            // Token: 0x04000C75 RID: 3189
            private DataRowAction eventAction;
        }

        // Token: 0x020001CA RID: 458
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vP_SubstationBusRowChangeEvent : EventArgs
        {
            // Token: 0x06002407 RID: 9223 RVA: 0x000B0601 File Offset: 0x000AE801
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vP_SubstationBusRowChangeEvent(DataSetGES.vP_SubstationBusRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009AF RID: 2479
            // (get) Token: 0x06002408 RID: 9224 RVA: 0x000B0617 File Offset: 0x000AE817
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vP_SubstationBusRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009B0 RID: 2480
            // (get) Token: 0x06002409 RID: 9225 RVA: 0x000B061F File Offset: 0x000AE81F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C76 RID: 3190
            private DataSetGES.vP_SubstationBusRow eventRow;

            // Token: 0x04000C77 RID: 3191
            private DataRowAction eventAction;
        }

        // Token: 0x020001CB RID: 459
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_CellByBusRowChangeEvent : EventArgs
        {
            // Token: 0x0600240A RID: 9226 RVA: 0x000B0627 File Offset: 0x000AE827
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_CellByBusRowChangeEvent(DataSetGES.vJ_CellByBusRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009B1 RID: 2481
            // (get) Token: 0x0600240B RID: 9227 RVA: 0x000B063D File Offset: 0x000AE83D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_CellByBusRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009B2 RID: 2482
            // (get) Token: 0x0600240C RID: 9228 RVA: 0x000B0645 File Offset: 0x000AE845
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C78 RID: 3192
            private DataSetGES.vJ_CellByBusRow eventRow;

            // Token: 0x04000C79 RID: 3193
            private DataRowAction eventAction;
        }

        // Token: 0x020001CC RID: 460
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_PowerISR_SSBusRowChangeEvent : EventArgs
        {
            // Token: 0x0600240D RID: 9229 RVA: 0x000B064D File Offset: 0x000AE84D
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_PowerISR_SSBusRowChangeEvent(DataSetGES.vJ_PowerISR_SSBusRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009B3 RID: 2483
            // (get) Token: 0x0600240E RID: 9230 RVA: 0x000B0663 File Offset: 0x000AE863
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_PowerISR_SSBusRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009B4 RID: 2484
            // (get) Token: 0x0600240F RID: 9231 RVA: 0x000B066B File Offset: 0x000AE86B
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C7A RID: 3194
            private DataSetGES.vJ_PowerISR_SSBusRow eventRow;

            // Token: 0x04000C7B RID: 3195
            private DataRowAction eventAction;
        }

        // Token: 0x020001CD RID: 461
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtBusesTransfRowChangeEvent : EventArgs
        {
            // Token: 0x06002410 RID: 9232 RVA: 0x000B0673 File Offset: 0x000AE873
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBusesTransfRowChangeEvent(DataSetGES.dtBusesTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009B5 RID: 2485
            // (get) Token: 0x06002411 RID: 9233 RVA: 0x000B0689 File Offset: 0x000AE889
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.dtBusesTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009B6 RID: 2486
            // (get) Token: 0x06002412 RID: 9234 RVA: 0x000B0691 File Offset: 0x000AE891
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C7C RID: 3196
            private DataSetGES.dtBusesTransfRow eventRow;

            // Token: 0x04000C7D RID: 3197
            private DataRowAction eventAction;
        }

        // Token: 0x020001CE RID: 462
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_BusesTransfSchemaRowChangeEvent : EventArgs
        {
            // Token: 0x06002413 RID: 9235 RVA: 0x000B0699 File Offset: 0x000AE899
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_BusesTransfSchemaRowChangeEvent(DataSetGES.vJ_BusesTransfSchemaRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009B7 RID: 2487
            // (get) Token: 0x06002414 RID: 9236 RVA: 0x000B06AF File Offset: 0x000AE8AF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_BusesTransfSchemaRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009B8 RID: 2488
            // (get) Token: 0x06002415 RID: 9237 RVA: 0x000B06B7 File Offset: 0x000AE8B7
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C7E RID: 3198
            private DataSetGES.vJ_BusesTransfSchemaRow eventRow;

            // Token: 0x04000C7F RID: 3199
            private DataRowAction eventAction;
        }

        // Token: 0x020001CF RID: 463
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_BusesTransfsRowChangeEvent : EventArgs
        {
            // Token: 0x06002416 RID: 9238 RVA: 0x000B06BF File Offset: 0x000AE8BF
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_BusesTransfsRowChangeEvent(DataSetGES.vJ_BusesTransfsRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009B9 RID: 2489
            // (get) Token: 0x06002417 RID: 9239 RVA: 0x000B06D5 File Offset: 0x000AE8D5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_BusesTransfsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009BA RID: 2490
            // (get) Token: 0x06002418 RID: 9240 RVA: 0x000B06DD File Offset: 0x000AE8DD
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C80 RID: 3200
            private DataSetGES.vJ_BusesTransfsRow eventRow;

            // Token: 0x04000C81 RID: 3201
            private DataRowAction eventAction;
        }

        // Token: 0x020001D0 RID: 464
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasCableReportRowChangeEvent : EventArgs
        {
            // Token: 0x06002419 RID: 9241 RVA: 0x000B06E5 File Offset: 0x000AE8E5
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasCableReportRowChangeEvent(DataSetGES.vJ_MeasCableReportRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009BB RID: 2491
            // (get) Token: 0x0600241A RID: 9242 RVA: 0x000B06FB File Offset: 0x000AE8FB
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCableReportRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009BC RID: 2492
            // (get) Token: 0x0600241B RID: 9243 RVA: 0x000B0703 File Offset: 0x000AE903
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C82 RID: 3202
            private DataSetGES.vJ_MeasCableReportRow eventRow;

            // Token: 0x04000C83 RID: 3203
            private DataRowAction eventAction;
        }

        // Token: 0x020001D1 RID: 465
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_MeasVoltageTransfRowChangeEvent : EventArgs
        {
            // Token: 0x0600241C RID: 9244 RVA: 0x000B070B File Offset: 0x000AE90B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MeasVoltageTransfRowChangeEvent(DataSetGES.tJ_MeasVoltageTransfRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009BD RID: 2493
            // (get) Token: 0x0600241D RID: 9245 RVA: 0x000B0721 File Offset: 0x000AE921
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.tJ_MeasVoltageTransfRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009BE RID: 2494
            // (get) Token: 0x0600241E RID: 9246 RVA: 0x000B0729 File Offset: 0x000AE929
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C84 RID: 3204
            private DataSetGES.tJ_MeasVoltageTransfRow eventRow;

            // Token: 0x04000C85 RID: 3205
            private DataRowAction eventAction;
        }

        // Token: 0x020001D2 RID: 466
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasCableReport2RowChangeEvent : EventArgs
        {
            // Token: 0x0600241F RID: 9247 RVA: 0x000B0731 File Offset: 0x000AE931
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasCableReport2RowChangeEvent(DataSetGES.vJ_MeasCableReport2Row row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009BF RID: 2495
            // (get) Token: 0x06002420 RID: 9248 RVA: 0x000B0747 File Offset: 0x000AE947
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCableReport2Row Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009C0 RID: 2496
            // (get) Token: 0x06002421 RID: 9249 RVA: 0x000B074F File Offset: 0x000AE94F
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C86 RID: 3206
            private DataSetGES.vJ_MeasCableReport2Row eventRow;

            // Token: 0x04000C87 RID: 3207
            private DataRowAction eventAction;
        }

        // Token: 0x020001D3 RID: 467
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_CableByCellMeasRowChangeEvent : EventArgs
        {
            // Token: 0x06002422 RID: 9250 RVA: 0x000B0757 File Offset: 0x000AE957
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_CableByCellMeasRowChangeEvent(DataSetGES.vJ_CableByCellMeasRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009C1 RID: 2497
            // (get) Token: 0x06002423 RID: 9251 RVA: 0x000B076D File Offset: 0x000AE96D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataSetGES.vJ_CableByCellMeasRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009C2 RID: 2498
            // (get) Token: 0x06002424 RID: 9252 RVA: 0x000B0775 File Offset: 0x000AE975
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C88 RID: 3208
            private DataSetGES.vJ_CableByCellMeasRow eventRow;

            // Token: 0x04000C89 RID: 3209
            private DataRowAction eventAction;
        }

        // Token: 0x020001D4 RID: 468
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tJ_MeasCellRowChangeEvent : EventArgs
        {
            // Token: 0x06002425 RID: 9253 RVA: 0x000B077D File Offset: 0x000AE97D
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tJ_MeasCellRowChangeEvent(DataSetGES.tJ_MeasCellRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009C3 RID: 2499
            // (get) Token: 0x06002426 RID: 9254 RVA: 0x000B0793 File Offset: 0x000AE993
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.tJ_MeasCellRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009C4 RID: 2500
            // (get) Token: 0x06002427 RID: 9255 RVA: 0x000B079B File Offset: 0x000AE99B
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C8A RID: 3210
            private DataSetGES.tJ_MeasCellRow eventRow;

            // Token: 0x04000C8B RID: 3211
            private DataRowAction eventAction;
        }

        // Token: 0x020001D5 RID: 469
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasCellRowChangeEvent : EventArgs
        {
            // Token: 0x06002428 RID: 9256 RVA: 0x000B07A3 File Offset: 0x000AE9A3
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public vJ_MeasCellRowChangeEvent(DataSetGES.vJ_MeasCellRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009C5 RID: 2501
            // (get) Token: 0x06002429 RID: 9257 RVA: 0x000B07B9 File Offset: 0x000AE9B9
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasCellRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009C6 RID: 2502
            // (get) Token: 0x0600242A RID: 9258 RVA: 0x000B07C1 File Offset: 0x000AE9C1
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C8C RID: 3212
            private DataSetGES.vJ_MeasCellRow eventRow;

            // Token: 0x04000C8D RID: 3213
            private DataRowAction eventAction;
        }

        // Token: 0x020001D6 RID: 470
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vJ_MeasTransfVoltageRowChangeEvent : EventArgs
        {
            // Token: 0x0600242B RID: 9259 RVA: 0x000B07C9 File Offset: 0x000AE9C9
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vJ_MeasTransfVoltageRowChangeEvent(DataSetGES.vJ_MeasTransfVoltageRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            // Token: 0x170009C7 RID: 2503
            // (get) Token: 0x0600242C RID: 9260 RVA: 0x000B07DF File Offset: 0x000AE9DF
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            public DataSetGES.vJ_MeasTransfVoltageRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            // Token: 0x170009C8 RID: 2504
            // (get) Token: 0x0600242D RID: 9261 RVA: 0x000B07E7 File Offset: 0x000AE9E7
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }

            // Token: 0x04000C8E RID: 3214
            private DataSetGES.vJ_MeasTransfVoltageRow eventRow;

            // Token: 0x04000C8F RID: 3215
            private DataRowAction eventAction;
        }
    }
}
