SqlDataReader reader = sqlCommand.ExecuteReader();

                        for (int i = 1; i <= reader.FieldCount; i++)
                        {
                            excelcells = (Excel.Range)excelworksheet.Cells[1, i];
                            excelcells.Value2 = reader.GetName(i - 1);
                        }
                        int RowCounts = 1;   while (reader.Read()) { RowCounts++; }
                        progressBar.Maximum = RowCounts;
                        int c = 1;
                        
                        while (reader.Read())
                        {
                            c++;
                            for (int i = 1; i <= reader.FieldCount; i++)
                            {
                                excelcells = (Excel.Range)excelworksheet.Cells[c, i];
                                excelcells.Value2 = reader.GetValue(i - 1);
                                progressBar.Value = c;
                            }
                        }
                        reader.Close();
                        
                        -------------------------
                        http://netcode.ru
                        ---------------------------
namespace ExcelDataTest
{
        class Class1
        {
                [STAThread]
                static void Main(string[] args)
                {
                        // Имя файла
                        string filename = @"book1.xls";
 
                        // Строка подключения
                        string ConnectionString= String.Format(
                                "Provider=Microsoft.Jet.OLEDB.4.0;Extended Properties=\"Excel 8.0;HDR=No\";Data Source={0}", filename);
 
                        // Открываем соединение
                        DataSet          ds=new DataSet("EXCEL");
                        OleDbConnection  cn=new OleDbConnection(ConnectionString);
                        cn.Open();
 
                        // Получаем списко листов в файле
                        DataTable schemaTable =
                                cn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, 
                                                new object[] {null, null, null, "TABLE"});
 
                        // Показать список листов в файле
                        for (int i=0; i< schemaTable.Rows.Count; i++)
                        {
                                // Имена листов
                                Console.WriteLine(schemaTable.Rows[i].ItemArray[2]);
                                
                                // Дата модификации
                                Console.WriteLine(schemaTable.Rows[i].ItemArray[7]);
                        }
 
                        // Береме название первого листа
                        string sheet1 = (string) schemaTable.Rows[0].ItemArray[2];
                        // Выбираем все данные с листа
                        string select = String.Format("SELECT * FROM [{0}]", sheet1);
                        OleDbDataAdapter ad = new OleDbDataAdapter(select, cn);
                        ad.Fill(ds);
                        DataTable tb=ds.Tables[0];
 
                        // Показать данные с листа
                        foreach (DataRow row in tb.Rows)
                        {
                                foreach(object col in row.ItemArray)
                                {
                                        Console.Write(col+"\t");
                                }
                                Console.WriteLine();
                        }
 
                        Console.ReadLine();
                }
        }
----------------------------------
using System;
using System.Windows.Forms;
using System.Data;
using System.Data.SqlClient;
using Excel = Microsoft.Office.Interop.Excel; 
 
namespace WindowsApplication1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
 
        private void button1_Click(object sender, EventArgs e)
        {
            SqlConnection cnn ;
            string connectionString = null;
            string sql = null;
 
            connectionString = "data source=servername;initial catalog=databasename;user id=username;password=password;";
            cnn = new SqlConnection(connectionString);
            cnn.Open();
            sql = "SELECT * FROM Product";
            SqlDataAdapter dscmd = new SqlDataAdapter(sql, cnn);
            DataSet ds = new DataSet();
            dscmd.Fill(ds);
 
            dataGridView1.DataSource = ds.Tables[0];
        }
 
        private void button2_Click(object sender, EventArgs e)
        {
            Excel.Application xlApp ;
            Excel.Workbook xlWorkBook ;
            Excel.Worksheet xlWorkSheet ;
            object misValue = System.Reflection.Missing.Value;
 
            xlApp = new Excel.ApplicationClass();
            xlWorkBook = xlApp.Workbooks.Add(misValue);
            xlWorkSheet = (Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);
            int i = 0;
            int j = 0; 
 
            for (i = 0; i <= dataGridView1.RowCount  - 1; i++)
            {
                for (j = 0; j <= dataGridView1.ColumnCount  - 1; j++)
                {
                    DataGridViewCell cell = dataGridView1[j, i];
                    xlWorkSheet.Cells[i + 1, j + 1] = cell.Value;
                }
            }
 
            xlWorkBook.SaveAs("csharp.net-informations.xls", Excel.XlFileFormat.xlWorkbookNormal, misValue, misValue, misValue, misValue, Excel.XlSaveAsAccessMode.xlExclusive, misValue, misValue, misValue, misValue, misValue);
            xlWorkBook.Close(true, misValue, misValue);
            xlApp.Quit();
 
            releaseObject(xlWorkSheet);
            releaseObject(xlWorkBook);
            releaseObject(xlApp);
 
            MessageBox.Show("Excel file created , you can find the file c:\\csharp.net-informations.xls");
        }
 
        private void releaseObject(object obj)
        {
            try
            {
                System.Runtime.InteropServices.Marshal.ReleaseComObject(obj);
                obj = null;
            }
            catch (Exception ex)
            {
                obj = null;
                MessageBox.Show("Exception Occured while releasing object " + ex.ToString());
            }
            finally
            {
                GC.Collect();
            }
        }
 
    }
}                        